/**
 * CTS Data Dictionary API
 * An API for interacting with CTS Data Dictionary.
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import ApiEndpoint from './model/ApiEndpoint';
import BasicSearchRequest from './model/BasicSearchRequest';
import BasicSearchResponse from './model/BasicSearchResponse';
import BasicSearchResponseResults from './model/BasicSearchResponseResults';
import DataItem from './model/DataItem';
import NavigatorSourcesResponse from './model/NavigatorSourcesResponse';
import Product from './model/Product';
import ReferenceGroup from './model/ReferenceGroup';
import Table from './model/Table';
import TableCodeFieldInfoResponse from './model/TableCodeFieldInfoResponse';
import TableCodeInfo from './model/TableCodeInfo';
import TableField from './model/TableField';

import NavigatorApi from './api/NavigatorApi';


/**
* Content Feeds Data Dictionary client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var contentfeedsdatadictionary = require('index'); // See note below*.
* var xxxSvc = new contentfeedsdatadictionary.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new contentfeedsdatadictionary.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new contentfeedsdatadictionary.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new contentfeedsdatadictionary.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiEndpoint model constructor.
     * @property {module:model/ApiEndpoint}
     */
    ApiEndpoint,

    /**
     * The BasicSearchRequest model constructor.
     * @property {module:model/BasicSearchRequest}
     */
    BasicSearchRequest,

    /**
     * The BasicSearchResponse model constructor.
     * @property {module:model/BasicSearchResponse}
     */
    BasicSearchResponse,

    /**
     * The BasicSearchResponseResults model constructor.
     * @property {module:model/BasicSearchResponseResults}
     */
    BasicSearchResponseResults,

    /**
     * The DataItem model constructor.
     * @property {module:model/DataItem}
     */
    DataItem,

    /**
     * The NavigatorSourcesResponse model constructor.
     * @property {module:model/NavigatorSourcesResponse}
     */
    NavigatorSourcesResponse,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ReferenceGroup model constructor.
     * @property {module:model/ReferenceGroup}
     */
    ReferenceGroup,

    /**
     * The Table model constructor.
     * @property {module:model/Table}
     */
    Table,

    /**
     * The TableCodeFieldInfoResponse model constructor.
     * @property {module:model/TableCodeFieldInfoResponse}
     */
    TableCodeFieldInfoResponse,

    /**
     * The TableCodeInfo model constructor.
     * @property {module:model/TableCodeInfo}
     */
    TableCodeInfo,

    /**
     * The TableField model constructor.
     * @property {module:model/TableField}
     */
    TableField,

    /**
    * The NavigatorApi service constructor.
    * @property {module:api/NavigatorApi}
    */
    NavigatorApi,

};
