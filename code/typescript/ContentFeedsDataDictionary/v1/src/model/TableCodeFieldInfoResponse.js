/**
 * CTS Data Dictionary API
 * An API for interacting with CTS Data Dictionary.
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TableCodeInfo from './TableCodeInfo';
import TableField from './TableField';

/**
 * The TableCodeFieldInfoResponse model module.
 * @module model/TableCodeFieldInfoResponse
 */
class TableCodeFieldInfoResponse {
    /**
     * Constructs a new <code>TableCodeFieldInfoResponse</code>.
     * @alias module:model/TableCodeFieldInfoResponse
     * @param codeInfo {module:model/TableCodeInfo} 
     * @param fields {Array.<module:model/TableField>} 
     */
    constructor(codeInfo, fields) { 
        
        TableCodeFieldInfoResponse.initialize(this, codeInfo, fields);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, codeInfo, fields) { 
        obj['codeInfo'] = codeInfo;
        obj['fields'] = fields;
    }

    /**
     * Constructs a <code>TableCodeFieldInfoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableCodeFieldInfoResponse} obj Optional instance to populate.
     * @return {module:model/TableCodeFieldInfoResponse} The populated <code>TableCodeFieldInfoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableCodeFieldInfoResponse();

            if (data.hasOwnProperty('codeInfo')) {
                obj['codeInfo'] = TableCodeInfo.constructFromObject(data['codeInfo']);
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], [TableField]);
            }
            if (data.hasOwnProperty('entitled')) {
                obj['entitled'] = ApiClient.convertToType(data['entitled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/TableCodeInfo} codeInfo
 */
TableCodeFieldInfoResponse.prototype['codeInfo'] = undefined;

/**
 * @member {Array.<module:model/TableField>} fields
 */
TableCodeFieldInfoResponse.prototype['fields'] = undefined;

/**
 * @member {Boolean} entitled
 */
TableCodeFieldInfoResponse.prototype['entitled'] = undefined;






export default TableCodeFieldInfoResponse;

