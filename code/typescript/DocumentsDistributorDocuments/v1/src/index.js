/**
 * Documents Distributor - Documents API
 * Documents APIs that provide filings such as Global Filings and XML files such as StreetAccount    Global Filings API provides the capability to search and download filings documents from various exchanges around the world. The API also provides relevant metadata such as document source, company identifiers and form type around each filings document. Filings providers currently include EDGAR and SYMEX WebDisclosure.      StreetAccount XML API provides access to historical StreetAccount (SA) news. SA provides a summary for various corporate and market news written by journalist with background in financial markets.    The API delivers SA stories in XML format based on user-specified date input parameters. When the API request is completed, output files will be made available back to the users through a secure URL. This API has three endpoints (1) Request Files (2) Check Status (3) Get Files.   Files delivered contain both metadata and content body in each file. This eliminates the need to make multiple requests through multiple services to get all the information.  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckstatusResponse from './model/CheckstatusResponse';
import ErrorDetail from './model/ErrorDetail';
import Filings from './model/Filings';
import GetResponse from './model/GetResponse';
import GetfilesResponse from './model/GetfilesResponse';
import IsPartialitems from './model/IsPartialitems';
import Meta from './model/Meta';
import PaginationItems from './model/PaginationItems';
import RequestfilesResponse from './model/RequestfilesResponse';
import Response from './model/Response';
import Status from './model/Status';
import StreetAccountStatus from './model/StreetAccountStatus';
import ValidParameterDetails from './model/ValidParameterDetails';
import GlobalFilingsAPIApi from './api/GlobalFilingsAPIApi';
import StreetAccountXMLAPIApi from './api/StreetAccountXMLAPIApi';


/**
* Documents_APIs_that_provide_filings_such_as_Global_Filings_and_XML_files_such_as_StreetAccount__Global_Filings_API_provides_the_capability_to_search_and_download_filings_documents_from_various_exchanges_around_the_world__The_API_also_provides_relevant_metadata_such_as_document_source_company_identifiers_and_form_type_around_each_filings_document__Filings_providers_currently_include_EDGAR_and_SYMEX_WebDisclosure_____StreetAccount_XML_API_provides_access_to_historical_StreetAccount__SA_news__SA_provides_a_summary_for_various_corporate_and_market_news_written_by_journalist_with_background_in_financial_markets___The_API_delivers_SA_stories_in_XML_format_based_on_user_specified_date_input_parameters__When_the_API_request_is_completed_output_files_will_be_made_available_back_to_the_users_through_a_secure_URL__This_API_has_three_endpoints__1_Request_Files__2_Check_Status__3_Get_Files__Files_delivered_contain_both_metadata_and_content_body_in_each_file__This_eliminates_the_need_to_make_multiple_requests_through_multiple_services_to_get_all_the_information__.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var documentsdistributordocuments = require('index'); // See note below*.
* var xxxSvc = new documentsdistributordocuments.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new documentsdistributordocuments.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new documentsdistributordocuments.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new documentsdistributordocuments.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.9.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckstatusResponse model constructor.
     * @property {module:model/CheckstatusResponse}
     */
    CheckstatusResponse,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The Filings model constructor.
     * @property {module:model/Filings}
     */
    Filings,

    /**
     * The GetResponse model constructor.
     * @property {module:model/GetResponse}
     */
    GetResponse,

    /**
     * The GetfilesResponse model constructor.
     * @property {module:model/GetfilesResponse}
     */
    GetfilesResponse,

    /**
     * The IsPartialitems model constructor.
     * @property {module:model/IsPartialitems}
     */
    IsPartialitems,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
     * The PaginationItems model constructor.
     * @property {module:model/PaginationItems}
     */
    PaginationItems,

    /**
     * The RequestfilesResponse model constructor.
     * @property {module:model/RequestfilesResponse}
     */
    RequestfilesResponse,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StreetAccountStatus model constructor.
     * @property {module:model/StreetAccountStatus}
     */
    StreetAccountStatus,

    /**
     * The ValidParameterDetails model constructor.
     * @property {module:model/ValidParameterDetails}
     */
    ValidParameterDetails,

    /**
    * The GlobalFilingsAPIApi service constructor.
    * @property {module:api/GlobalFilingsAPIApi}
    */
    GlobalFilingsAPIApi,

    /**
    * The StreetAccountXMLAPIApi service constructor.
    * @property {module:api/StreetAccountXMLAPIApi}
    */
    StreetAccountXMLAPIApi
};
