/**
 * FactSet Ownership API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Response from '../model/Response';

/**
* Ownership service.
* @module api/OwnershipApi
* @version 0.20.0
*/
export default class OwnershipApi {

    /**
    * Constructs a new OwnershipApi. 
    * @alias module:api/OwnershipApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Holders of a company or fund
     * Holders of a company or fund
     * @param {String} id Company or Fund Identifier
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.assetType Controls the Asset Type of the data returned (default to 'EQUITY')
     * @param {module:model/String} opts.holderType Controls the Holder Type of the data returned (default to 'INSTITUTIONS')
     * @param {String} opts.topn Limits the number of holders returned based on their Market Value position in the security.   Default is ALL, otherwise use a valid number above 0. 
     * @param {String} opts.date Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Response} and HTTP response
     */
    getOwnershipHoldersWithHttpInfo(id, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOwnershipHolders");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id,
        'asset_type': opts['assetType'],
        'holder_type': opts['holderType'],
        'topn': opts['topn'],
        'date': opts['date']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = Response;

      return this.apiClient.callApi(
        '/holders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Holders of a company or fund
     * Holders of a company or fund
     * @param {String} id Company or Fund Identifier
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.assetType Controls the Asset Type of the data returned (default to 'EQUITY')
     * @param {module:model/String} opts.holderType Controls the Holder Type of the data returned (default to 'INSTITUTIONS')
     * @param {String} opts.topn Limits the number of holders returned based on their Market Value position in the security.   Default is ALL, otherwise use a valid number above 0. 
     * @param {String} opts.date Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.
     * @return { Promise.< module:model/Response > } a Promise, with data of type {@link module:model/Response }
     */
    getOwnershipHolders(id, opts) {
      return this.getOwnershipHoldersWithHttpInfo(id, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





