/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse20021DataDividend model module.
 * @module model/InlineResponse20021DataDividend
 */
class InlineResponse20021DataDividend {
    /**
     * Constructs a new <code>InlineResponse20021DataDividend</code>.
     * Dividend information for the next dividend.
     * @alias module:model/InlineResponse20021DataDividend
     */
    constructor() { 
        
        InlineResponse20021DataDividend.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20021DataDividend</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20021DataDividend} obj Optional instance to populate.
     * @return {module:model/InlineResponse20021DataDividend} The populated <code>InlineResponse20021DataDividend</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20021DataDividend();

            if (data.hasOwnProperty('isReported')) {
                obj['isReported'] = ApiClient.convertToType(data['isReported'], 'Boolean');
            }
            if (data.hasOwnProperty('exDividendDate')) {
                obj['exDividendDate'] = ApiClient.convertToType(data['exDividendDate'], 'Date');
            }
            if (data.hasOwnProperty('qualified')) {
                obj['qualified'] = ApiClient.convertToType(data['qualified'], 'Number');
            }
            if (data.hasOwnProperty('nonQualified')) {
                obj['nonQualified'] = ApiClient.convertToType(data['nonQualified'], 'Number');
            }
            if (data.hasOwnProperty('returnOfCapital')) {
                obj['returnOfCapital'] = ApiClient.convertToType(data['returnOfCapital'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * States whether the ETP's next ex-dividend date is posted on the issuer's website. This data is available for all the regions.
 * @member {Boolean} isReported
 */
InlineResponse20021DataDividend.prototype['isReported'] = undefined;

/**
 * The ex-dividend date of the ETP's next distribution. This data is available for all the regions.
 * @member {Date} exDividendDate
 */
InlineResponse20021DataDividend.prototype['exDividendDate'] = undefined;

/**
 * Qualified dividend payment on ex-dividend-date indicates the amount of distribution considered to have a more favorable tax treatment. This data is available for all regions.
 * @member {Number} qualified
 */
InlineResponse20021DataDividend.prototype['qualified'] = undefined;

/**
 * Non-Qualified dividend payment on ex-dividend-date indicates the amount of distribution that is taxed as ordinary income. This data is available for all regions.
 * @member {Number} nonQualified
 */
InlineResponse20021DataDividend.prototype['nonQualified'] = undefined;

/**
 * Return of Capital available on ex-dividend-date. This data is available for all regions.
 * @member {Number} returnOfCapital
 */
InlineResponse20021DataDividend.prototype['returnOfCapital'] = undefined;






export default InlineResponse20021DataDividend;

