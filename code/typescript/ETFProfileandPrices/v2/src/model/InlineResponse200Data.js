/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse200DataBrand from './InlineResponse200DataBrand';
import InlineResponse200DataCreateRedeem from './InlineResponse200DataCreateRedeem';
import InlineResponse200DataCurrency from './InlineResponse200DataCurrency';
import InlineResponse200DataDocumentation from './InlineResponse200DataDocumentation';
import InlineResponse200DataExchange from './InlineResponse200DataExchange';
import InlineResponse200DataFinancialReport from './InlineResponse200DataFinancialReport';
import InlineResponse200DataIndex from './InlineResponse200DataIndex';
import InlineResponse200DataInsight from './InlineResponse200DataInsight';
import InlineResponse200DataIssuer from './InlineResponse200DataIssuer';
import InlineResponse200DataTrading from './InlineResponse200DataTrading';

/**
 * The InlineResponse200Data model module.
 * @module model/InlineResponse200Data
 */
class InlineResponse200Data {
    /**
     * Constructs a new <code>InlineResponse200Data</code>.
     * Profile.
     * @alias module:model/InlineResponse200Data
     */
    constructor() { 
        
        InlineResponse200Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200Data} obj Optional instance to populate.
     * @return {module:model/InlineResponse200Data} The populated <code>InlineResponse200Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200Data();

            if (data.hasOwnProperty('asOfDate')) {
                obj['asOfDate'] = ApiClient.convertToType(data['asOfDate'], 'Date');
            }
            if (data.hasOwnProperty('holdingsDate')) {
                obj['holdingsDate'] = ApiClient.convertToType(data['holdingsDate'], 'Date');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('exchange')) {
                obj['exchange'] = InlineResponse200DataExchange.constructFromObject(data['exchange']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = InlineResponse200DataIssuer.constructFromObject(data['issuer']);
            }
            if (data.hasOwnProperty('brand')) {
                obj['brand'] = InlineResponse200DataBrand.constructFromObject(data['brand']);
            }
            if (data.hasOwnProperty('launchDate')) {
                obj['launchDate'] = ApiClient.convertToType(data['launchDate'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('domicile')) {
                obj['domicile'] = ApiClient.convertToType(data['domicile'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = InlineResponse200DataCurrency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = InlineResponse200DataIndex.constructFromObject(data['index']);
            }
            if (data.hasOwnProperty('financialReport')) {
                obj['financialReport'] = InlineResponse200DataFinancialReport.constructFromObject(data['financialReport']);
            }
            if (data.hasOwnProperty('createRedeem')) {
                obj['createRedeem'] = InlineResponse200DataCreateRedeem.constructFromObject(data['createRedeem']);
            }
            if (data.hasOwnProperty('aum')) {
                obj['aum'] = ApiClient.convertToType(data['aum'], 'Number');
            }
            if (data.hasOwnProperty('trading')) {
                obj['trading'] = InlineResponse200DataTrading.constructFromObject(data['trading']);
            }
            if (data.hasOwnProperty('documentation')) {
                obj['documentation'] = InlineResponse200DataDocumentation.constructFromObject(data['documentation']);
            }
            if (data.hasOwnProperty('insight')) {
                obj['insight'] = InlineResponse200DataInsight.constructFromObject(data['insight']);
            }
        }
        return obj;
    }


}

/**
 * Date data was published. This data is available only for US region.
 * @member {Date} asOfDate
 */
InlineResponse200Data.prototype['asOfDate'] = undefined;

/**
 * The as of data for holdings statistics. This data available only for US region
 * @member {Date} holdingsDate
 */
InlineResponse200Data.prototype['holdingsDate'] = undefined;

/**
 * Ticker of the ETP. This data is available for all region.
 * @member {String} symbol
 */
InlineResponse200Data.prototype['symbol'] = undefined;

/**
 * @member {module:model/InlineResponse200DataExchange} exchange
 */
InlineResponse200Data.prototype['exchange'] = undefined;

/**
 * Name of the ETP. This data is available for all the regions.
 * @member {String} name
 */
InlineResponse200Data.prototype['name'] = undefined;

/**
 * @member {module:model/InlineResponse200DataIssuer} issuer
 */
InlineResponse200Data.prototype['issuer'] = undefined;

/**
 * @member {module:model/InlineResponse200DataBrand} brand
 */
InlineResponse200Data.prototype['brand'] = undefined;

/**
 * Launch date of the ETP. This data is available for all the regions.
 * @member {Date} launchDate
 */
InlineResponse200Data.prototype['launchDate'] = undefined;

/**
 * A brief description of the ETP. This data is available for all the regions.
 * @member {String} description
 */
InlineResponse200Data.prototype['description'] = undefined;

/**
 * Link to the ETP's homepage. This data is available for the US and Canada region.
 * @member {String} website
 */
InlineResponse200Data.prototype['website'] = undefined;

/**
 * ETP country of domicile. This data is available for all the regions and country code is in format ISO 3166-1 alpha-2.
 * @member {String} domicile
 */
InlineResponse200Data.prototype['domicile'] = undefined;

/**
 * Staus of the ETP. This data is available for all the regions.
 * @member {module:model/InlineResponse200Data.StatusEnum} status
 */
InlineResponse200Data.prototype['status'] = undefined;

/**
 * @member {module:model/InlineResponse200DataCurrency} currency
 */
InlineResponse200Data.prototype['currency'] = undefined;

/**
 * @member {module:model/InlineResponse200DataIndex} index
 */
InlineResponse200Data.prototype['index'] = undefined;

/**
 * @member {module:model/InlineResponse200DataFinancialReport} financialReport
 */
InlineResponse200Data.prototype['financialReport'] = undefined;

/**
 * @member {module:model/InlineResponse200DataCreateRedeem} createRedeem
 */
InlineResponse200Data.prototype['createRedeem'] = undefined;

/**
 * The market value of the total assets that a individual ETP manages on behalf of it's investors. This data is available for all the regions.
 * @member {Number} aum
 */
InlineResponse200Data.prototype['aum'] = undefined;

/**
 * @member {module:model/InlineResponse200DataTrading} trading
 */
InlineResponse200Data.prototype['trading'] = undefined;

/**
 * @member {module:model/InlineResponse200DataDocumentation} documentation
 */
InlineResponse200Data.prototype['documentation'] = undefined;

/**
 * @member {module:model/InlineResponse200DataInsight} insight
 */
InlineResponse200Data.prototype['insight'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse200Data['StatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Delisted"
     * @const
     */
    "Delisted": "Delisted",

    /**
     * value: "Not trading yet"
     * @const
     */
    "Not trading yet": "Not trading yet"
};



export default InlineResponse200Data;

