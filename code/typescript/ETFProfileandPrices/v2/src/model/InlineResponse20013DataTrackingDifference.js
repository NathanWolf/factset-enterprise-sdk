/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse20013DataTrackingDifference model module.
 * @module model/InlineResponse20013DataTrackingDifference
 * @version 0.10.0
 */
class InlineResponse20013DataTrackingDifference {
    /**
     * Constructs a new <code>InlineResponse20013DataTrackingDifference</code>.
     * Tracking difference.
     * @alias module:model/InlineResponse20013DataTrackingDifference
     */
    constructor() { 
        
        InlineResponse20013DataTrackingDifference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20013DataTrackingDifference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20013DataTrackingDifference} obj Optional instance to populate.
     * @return {module:model/InlineResponse20013DataTrackingDifference} The populated <code>InlineResponse20013DataTrackingDifference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20013DataTrackingDifference();

            if (data.hasOwnProperty('median')) {
                obj['median'] = ApiClient.convertToType(data['median'], 'Number');
            }
            if (data.hasOwnProperty('maxUpside')) {
                obj['maxUpside'] = ApiClient.convertToType(data['maxUpside'], 'Number');
            }
            if (data.hasOwnProperty('maxDownside')) {
                obj['maxDownside'] = ApiClient.convertToType(data['maxDownside'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The median difference between NAV and fund index returns over a one-year set of rolling 12 month holding periods. This statistic captures all inputs to tracking difference: expense ratio, optimization, securities lending income, and tax recapture. Available for the regions: US.
 * @member {Number} median
 */
InlineResponse20013DataTrackingDifference.prototype['median'] = undefined;

/**
 * Greatest, or least negative 12-month difference between NAV and index returns over a rolling 12 month period. Available for the regions: US.
 * @member {Number} maxUpside
 */
InlineResponse20013DataTrackingDifference.prototype['maxUpside'] = undefined;

/**
 * Most negative or least positive 12-month difference between NAV and index returns over a rolling 12 month period. Available for the regions: US.
 * @member {Number} maxDownside
 */
InlineResponse20013DataTrackingDifference.prototype['maxDownside'] = undefined;






export default InlineResponse20013DataTrackingDifference;

