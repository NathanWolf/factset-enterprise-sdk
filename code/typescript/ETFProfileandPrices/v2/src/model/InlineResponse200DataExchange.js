/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse200DataExchange model module.
 * @module model/InlineResponse200DataExchange
 * @version 0.9.0
 */
class InlineResponse200DataExchange {
    /**
     * Constructs a new <code>InlineResponse200DataExchange</code>.
     * Exchange.
     * @alias module:model/InlineResponse200DataExchange
     */
    constructor() { 
        
        InlineResponse200DataExchange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200DataExchange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200DataExchange} obj Optional instance to populate.
     * @return {module:model/InlineResponse200DataExchange} The populated <code>InlineResponse200DataExchange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200DataExchange();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Short Code of the exchange. This data is available for all the regions.
 * @member {String} code
 */
InlineResponse200DataExchange.prototype['code'] = undefined;

/**
 * Name of the exchance where ETP is listed. This data is available for all the regions.
 * @member {String} name
 */
InlineResponse200DataExchange.prototype['name'] = undefined;

/**
 * Short country code where ETP exchange is located. This data is available for all the regions and country code is in format ISO 3166-1 alpha-2.
 * @member {String} country
 */
InlineResponse200DataExchange.prototype['country'] = undefined;

/**
 * short region code where ETP exchange is located. This data is available for all the regions.
 * @member {module:model/InlineResponse200DataExchange.RegionEnum} region
 */
InlineResponse200DataExchange.prototype['region'] = undefined;





/**
 * Allowed values for the <code>region</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse200DataExchange['RegionEnum'] = {

    /**
     * value: "Europe"
     * @const
     */
    "Europe": "Europe",

    /**
     * value: "North America"
     * @const
     */
    "North America": "North America",

    /**
     * value: "Asia-Pacific"
     * @const
     */
    "Asia-Pacific": "Asia-Pacific",

    /**
     * value: "Middle East & Africa"
     * @const
     */
    "Middle East &amp; Africa": "Middle East & Africa"
};



export default InlineResponse200DataExchange;

