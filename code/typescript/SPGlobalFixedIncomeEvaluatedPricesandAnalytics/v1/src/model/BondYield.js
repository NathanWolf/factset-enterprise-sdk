/**
 * S&P Global Fixed Income Evaluated Prices & Analytics API
 * Gain access to evaluated pricing and analytics data for Corporate Bonds, Municipal Bonds and Asset Backed Securities provided by S&P Global (formerly IHS Markit) .  Data returned through multiple endpoints like prices, spread, yield, yield curve, sensitivity, coupon information, securities metadata and details specific to the Asset Backed Securities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BondYield model module.
 * @module model/BondYield
 */
class BondYield {
    /**
     * Constructs a new <code>BondYield</code>.
     * @alias module:model/BondYield
     */
    constructor() { 
        
        BondYield.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BondYield</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BondYield} obj Optional instance to populate.
     * @return {module:model/BondYield} The populated <code>BondYield</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BondYield();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('bidYieldToMaturity')) {
                obj['bidYieldToMaturity'] = ApiClient.convertToType(data['bidYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('midYieldToMaturity')) {
                obj['midYieldToMaturity'] = ApiClient.convertToType(data['midYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('askYieldToMaturity')) {
                obj['askYieldToMaturity'] = ApiClient.convertToType(data['askYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('bidYieldToWorst')) {
                obj['bidYieldToWorst'] = ApiClient.convertToType(data['bidYieldToWorst'], 'Number');
            }
            if (data.hasOwnProperty('midYieldToWorst')) {
                obj['midYieldToWorst'] = ApiClient.convertToType(data['midYieldToWorst'], 'Number');
            }
            if (data.hasOwnProperty('askYieldToWorst')) {
                obj['askYieldToWorst'] = ApiClient.convertToType(data['askYieldToWorst'], 'Number');
            }
            if (data.hasOwnProperty('benchmarkBidYieldToMaturity')) {
                obj['benchmarkBidYieldToMaturity'] = ApiClient.convertToType(data['benchmarkBidYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('benchmarkMidYieldToMaturity')) {
                obj['benchmarkMidYieldToMaturity'] = ApiClient.convertToType(data['benchmarkMidYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('benchmarkAskYieldToMaturity')) {
                obj['benchmarkAskYieldToMaturity'] = ApiClient.convertToType(data['benchmarkAskYieldToMaturity'], 'Number');
            }
            if (data.hasOwnProperty('bidYieldToCall')) {
                obj['bidYieldToCall'] = ApiClient.convertToType(data['bidYieldToCall'], 'Number');
            }
            if (data.hasOwnProperty('midYieldToCall')) {
                obj['midYieldToCall'] = ApiClient.convertToType(data['midYieldToCall'], 'Number');
            }
            if (data.hasOwnProperty('yieldTWDate')) {
                obj['yieldTWDate'] = ApiClient.convertToType(data['yieldTWDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
BondYield.prototype['requestId'] = undefined;

/**
 * FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
 * @member {String} fsymId
 */
BondYield.prototype['fsymId'] = undefined;

/**
 * The date on which the price is calculated.
 * @member {Date} date
 */
BondYield.prototype['date'] = undefined;

/**
 * The yield to maturity of the bid price of the instrument. Available only for `corporate bonds` and `asset-backed security bonds`.
 * @member {Number} bidYieldToMaturity
 */
BondYield.prototype['bidYieldToMaturity'] = undefined;

/**
 * The yield to maturity of the mid price of the instrument. Available only for `corporate bonds` and `asset-backed security bonds`.
 * @member {Number} midYieldToMaturity
 */
BondYield.prototype['midYieldToMaturity'] = undefined;

/**
 * The yield to maturity of the ask price of the instrument. Available only for `corporate bonds`.
 * @member {Number} askYieldToMaturity
 */
BondYield.prototype['askYieldToMaturity'] = undefined;

/**
 * The lowest yield, under all possible scenarios, of the bid price of the instrument. Available only for `corporate bonds` and `municipal bonds`.
 * @member {Number} bidYieldToWorst
 */
BondYield.prototype['bidYieldToWorst'] = undefined;

/**
 * The lowest yield, under all possible scenarios, of the mid price of the instrument. Available only for `corporate bonds` and `municipal bonds`.
 * @member {Number} midYieldToWorst
 */
BondYield.prototype['midYieldToWorst'] = undefined;

/**
 * The lowest yield, under all possible scenarios, of the ask price of the instrument. Available only for `corporate bonds` and `municipal bonds`.
 * @member {Number} askYieldToWorst
 */
BondYield.prototype['askYieldToWorst'] = undefined;

/**
 * The bid yield to maturity of the benchmark instrument. Available only for `corporate bonds`.
 * @member {Number} benchmarkBidYieldToMaturity
 */
BondYield.prototype['benchmarkBidYieldToMaturity'] = undefined;

/**
 * The mid yield to maturity of the benchmark instrument. Available only for `corporate bonds`.
 * @member {Number} benchmarkMidYieldToMaturity
 */
BondYield.prototype['benchmarkMidYieldToMaturity'] = undefined;

/**
 * The ask yield to maturity of the benchmark instrument. Available only for `corporate bonds`.
 * @member {Number} benchmarkAskYieldToMaturity
 */
BondYield.prototype['benchmarkAskYieldToMaturity'] = undefined;

/**
 * The yield to call of the bid price of the instrument. Available only for `asset-backed security bonds`.
 * @member {Number} bidYieldToCall
 */
BondYield.prototype['bidYieldToCall'] = undefined;

/**
 * The yield to call of the mid price of the instrument. Available only for `asset-backed security bonds`.
 * @member {Number} midYieldToCall
 */
BondYield.prototype['midYieldToCall'] = undefined;

/**
 * The date used in the yield to worst calculation. Available only for 'corporate bonds'.
 * @member {Date} yieldTWDate
 */
BondYield.prototype['yieldTWDate'] = undefined;






export default BondYield;

