/**
 * Security-Modeling API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import OneOfSMFields from './model/OneOfSMFields';
import SMBondFields from './model/SMBondFields';
import SMCreateParameters from './model/SMCreateParameters';
import SMCreateParametersRoot from './model/SMCreateParametersRoot';
import SMCreateResponse from './model/SMCreateResponse';
import SMCreateResponseRoot from './model/SMCreateResponseRoot';
import SMError from './model/SMError';
import SMFields from './model/SMFields';
import SMWarning from './model/SMWarning';

import SecurityModelingApi from './api/SecurityModelingApi';


/**
* Security Modeling client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var securitymodeling = require('index'); // See note below*.
* var xxxSvc = new securitymodeling.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new securitymodeling.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new securitymodeling.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new securitymodeling.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The OneOfSMFields model constructor.
     * @property {module:model/OneOfSMFields}
     */
    OneOfSMFields,

    /**
     * The SMBondFields model constructor.
     * @property {module:model/SMBondFields}
     */
    SMBondFields,

    /**
     * The SMCreateParameters model constructor.
     * @property {module:model/SMCreateParameters}
     */
    SMCreateParameters,

    /**
     * The SMCreateParametersRoot model constructor.
     * @property {module:model/SMCreateParametersRoot}
     */
    SMCreateParametersRoot,

    /**
     * The SMCreateResponse model constructor.
     * @property {module:model/SMCreateResponse}
     */
    SMCreateResponse,

    /**
     * The SMCreateResponseRoot model constructor.
     * @property {module:model/SMCreateResponseRoot}
     */
    SMCreateResponseRoot,

    /**
     * The SMError model constructor.
     * @property {module:model/SMError}
     */
    SMError,

    /**
     * The SMFields model constructor.
     * @property {module:model/SMFields}
     */
    SMFields,

    /**
     * The SMWarning model constructor.
     * @property {module:model/SMWarning}
     */
    SMWarning,

    /**
    * The SecurityModelingApi service constructor.
    * @property {module:api/SecurityModelingApi}
    */
    SecurityModelingApi,

};
