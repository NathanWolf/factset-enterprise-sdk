/**
 * FactSet Global Prices API
 * The FactSet Global Prices API provides end of day market pricing content using cloud and microservices technology, encompassing both pricing as well as corporate actions and events data.</p> 
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnnualizedDividendsObject from './AnnualizedDividendsObject';
import CorporateAction from './CorporateAction';
import Price from './Price';
import Returns from './Returns';

/**
 * The BatchResult model module.
 * @module model/BatchResult
 */
class BatchResult {
    /**
     * Constructs a new <code>BatchResult</code>.
     * @alias module:model/BatchResult
     * @implements module:model/Price
     * @implements module:model/Returns
     * @implements module:model/CorporateAction
     * @implements module:model/AnnualizedDividendsObject
     */
    constructor() { 
        Price.initialize(this);Returns.initialize(this);CorporateAction.initialize(this);AnnualizedDividendsObject.initialize(this);
        BatchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchResult} obj Optional instance to populate.
     * @return {module:model/BatchResult} The populated <code>BatchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchResult();
            Price.constructFromObject(data, obj);
            Returns.constructFromObject(data, obj);
            CorporateAction.constructFromObject(data, obj);
            AnnualizedDividendsObject.constructFromObject(data, obj);

            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('totalReturn')) {
                obj['totalReturn'] = ApiClient.convertToType(data['totalReturn'], 'Number');
            }
            if (data.hasOwnProperty('eventId')) {
                obj['eventId'] = ApiClient.convertToType(data['eventId'], 'String');
            }
            if (data.hasOwnProperty('eventTypeCode')) {
                obj['eventTypeCode'] = ApiClient.convertToType(data['eventTypeCode'], 'String');
            }
            if (data.hasOwnProperty('eventTypeDesc')) {
                obj['eventTypeDesc'] = ApiClient.convertToType(data['eventTypeDesc'], 'String');
            }
            if (data.hasOwnProperty('divTypeCode')) {
                obj['divTypeCode'] = ApiClient.convertToType(data['divTypeCode'], 'String');
            }
            if (data.hasOwnProperty('announcementDate')) {
                obj['announcementDate'] = ApiClient.convertToType(data['announcementDate'], 'String');
            }
            if (data.hasOwnProperty('recordDate')) {
                obj['recordDate'] = ApiClient.convertToType(data['recordDate'], 'String');
            }
            if (data.hasOwnProperty('payDate')) {
                obj['payDate'] = ApiClient.convertToType(data['payDate'], 'String');
            }
            if (data.hasOwnProperty('effectiveDate')) {
                obj['effectiveDate'] = ApiClient.convertToType(data['effectiveDate'], 'String');
            }
            if (data.hasOwnProperty('iadDefTradingAdj')) {
                obj['iadDefTradingAdj'] = ApiClient.convertToType(data['iadDefTradingAdj'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
 * @member {String} fsymId
 */
BatchResult.prototype['fsymId'] = undefined;

/**
 * End date of the return. Date in YYYY-MM-DD format. Depending on Frequency and Calendar settings, this could represent the entire return period requested.
 * @member {Date} date
 */
BatchResult.prototype['date'] = undefined;

/**
 * Currency ISO code associated with the annualized dividends.For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
 * @member {String} currency
 */
BatchResult.prototype['currency'] = undefined;

/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
BatchResult.prototype['requestId'] = undefined;

/**
 * Returns the data for the given input parameters.
 * @member {Number} totalReturn
 */
BatchResult.prototype['totalReturn'] = undefined;

/**
 * FactSet identifier that uniquely identifies the Event.
 * @member {String} eventId
 */
BatchResult.prototype['eventId'] = undefined;

/**
 * Corporate Actions Event type code, possible values: [ DVC, DVCD, DRP, DVS, DVSS, BNS, BNSS, SPO, DSR, FSP, RSP, SPL ]
 * @member {String} eventTypeCode
 */
BatchResult.prototype['eventTypeCode'] = undefined;

/**
 * Corporate Actions Event type description.
 * @member {String} eventTypeDesc
 */
BatchResult.prototype['eventTypeDesc'] = undefined;

/**
 * Dividend Type Code. For code descriptions, visit [Online Assistant Page #8764] (https://oa.apps.factset.com/pages/8764). 
 * @member {String} divTypeCode
 */
BatchResult.prototype['divTypeCode'] = undefined;

/**
 * Date Event was announced in YYYY-MM-DD format.
 * @member {String} announcementDate
 */
BatchResult.prototype['announcementDate'] = undefined;

/**
 * Date of Record for distribution in YYYY-MM-DD format.
 * @member {String} recordDate
 */
BatchResult.prototype['recordDate'] = undefined;

/**
 * Date of Payment for distribution in YYYY-MM-DD format.
 * @member {String} payDate
 */
BatchResult.prototype['payDate'] = undefined;

/**
 * Effective Date or Ex-Date of Annualized Dividend in YYYY-MM-DD format.
 * @member {String} effectiveDate
 */
BatchResult.prototype['effectiveDate'] = undefined;

/**
 * Annualized Dividend value in the trading currency. The value is adjusted for splits
 * @member {Number} iadDefTradingAdj
 */
BatchResult.prototype['iadDefTradingAdj'] = undefined;


// Implement Price interface:
/**
 * FactSet Permanent Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R) or a -L Suffix (XXXXXX-L).
 * @member {String} fsymId
 */
Price.prototype['fsymId'] = undefined;
/**
 * Ending date for the period expressed in YYYY-MM-DD format.
 * @member {Date} date
 */
Price.prototype['date'] = undefined;
/**
 * Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
 * @member {String} currency
 */
Price.prototype['currency'] = undefined;
/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
Price.prototype['requestId'] = undefined;
// Implement Returns interface:
/**
 * FactSet Permanent Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R) or a -L Suffix (XXXXXX-L).
 * @member {String} fsymId
 */
Returns.prototype['fsymId'] = undefined;
/**
 * Returns the data for the given input parameters.
 * @member {Number} totalReturn
 */
Returns.prototype['totalReturn'] = undefined;
/**
 * End date of the return. Date in YYYY-MM-DD format. Depending on Frequency and Calendar settings, this could represent the entire return period requested.
 * @member {Date} date
 */
Returns.prototype['date'] = undefined;
/**
 * Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
 * @member {String} currency
 */
Returns.prototype['currency'] = undefined;
/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
Returns.prototype['requestId'] = undefined;
// Implement CorporateAction interface:
/**
 * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
 * @member {String} fsymId
 */
CorporateAction.prototype['fsymId'] = undefined;
/**
 * FactSet identifier that uniquely identifies the Event.
 * @member {String} eventId
 */
CorporateAction.prototype['eventId'] = undefined;
/**
 * Corporate Actions Event type code, possible values: [ DVC, DVCD, DRP, DVS, DVSS, BNS, BNSS, SPO, DSR, FSP, RSP, SPL ]
 * @member {String} eventTypeCode
 */
CorporateAction.prototype['eventTypeCode'] = undefined;
/**
 * Corporate Actions Event type description.
 * @member {String} eventTypeDesc
 */
CorporateAction.prototype['eventTypeDesc'] = undefined;
/**
 * Dividend Type Code. For code descriptions, visit [Online Assistant Page #8764] (https://oa.apps.factset.com/pages/8764). 
 * @member {String} divTypeCode
 */
CorporateAction.prototype['divTypeCode'] = undefined;
/**
 * Date Event was announced in YYYY-MM-DD format.
 * @member {String} announcementDate
 */
CorporateAction.prototype['announcementDate'] = undefined;
/**
 * Date of Record for distribution in YYYY-MM-DD format.
 * @member {String} recordDate
 */
CorporateAction.prototype['recordDate'] = undefined;
/**
 * Date of Payment for distribution in YYYY-MM-DD format.
 * @member {String} payDate
 */
CorporateAction.prototype['payDate'] = undefined;
/**
 * Effective Date or Ex-Date of distribution in YYYY-MM-DD format.
 * @member {String} effectiveDate
 */
CorporateAction.prototype['effectiveDate'] = undefined;
/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
CorporateAction.prototype['requestId'] = undefined;
// Implement AnnualizedDividendsObject interface:
/**
 * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
 * @member {String} fsymId
 */
AnnualizedDividendsObject.prototype['fsymId'] = undefined;
/**
 * FactSet identifier that uniquely identifies the Event.
 * @member {String} eventId
 */
AnnualizedDividendsObject.prototype['eventId'] = undefined;
/**
 * Effective Date or Ex-Date of Annualized Dividend in YYYY-MM-DD format.
 * @member {String} effectiveDate
 */
AnnualizedDividendsObject.prototype['effectiveDate'] = undefined;
/**
 * Annualized Dividend value in the trading currency. The value is adjusted for splits
 * @member {Number} iadDefTradingAdj
 */
AnnualizedDividendsObject.prototype['iadDefTradingAdj'] = undefined;
/**
 * Currency ISO code associated with the annualized dividends.For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
 * @member {String} currency
 */
AnnualizedDividendsObject.prototype['currency'] = undefined;
/**
 * Identifier that was used for the request.
 * @member {String} requestId
 */
AnnualizedDividendsObject.prototype['requestId'] = undefined;




export default BatchResult;

