/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecuritizedDerivativeNotationRankingIntradayListDataIssuer from './SecuritizedDerivativeNotationRankingIntradayListDataIssuer';
import SecuritizedDerivativeNotationRankingIntradayListDataRegistrationCountry from './SecuritizedDerivativeNotationRankingIntradayListDataRegistrationCountry';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataCapitalProtection from './SecuritizedDerivativeNotationScreenerValueRangesGetDataCapitalProtection';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataCashFlowCurrency from './SecuritizedDerivativeNotationScreenerValueRangesGetDataCashFlowCurrency';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataCategory from './SecuritizedDerivativeNotationScreenerValueRangesGetDataCategory';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate from './SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataExercise from './SecuritizedDerivativeNotationScreenerValueRangesGetDataExercise';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates from './SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataKeyFigures from './SecuritizedDerivativeNotationScreenerValueRangesGetDataKeyFigures';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataLifeCycle from './SecuritizedDerivativeNotationScreenerValueRangesGetDataLifeCycle';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataNominalCurrency from './SecuritizedDerivativeNotationScreenerValueRangesGetDataNominalCurrency';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataPerformance from './SecuritizedDerivativeNotationScreenerValueRangesGetDataPerformance';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataRangeBarriers from './SecuritizedDerivativeNotationScreenerValueRangesGetDataRangeBarriers';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataSingleBarriers from './SecuritizedDerivativeNotationScreenerValueRangesGetDataSingleBarriers';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataUnderlying from './SecuritizedDerivativeNotationScreenerValueRangesGetDataUnderlying';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataValidation from './SecuritizedDerivativeNotationScreenerValueRangesGetDataValidation';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataVolatility from './SecuritizedDerivativeNotationScreenerValueRangesGetDataVolatility';

/**
 * The SecuritizedDerivativeNotationScreenerValueRangesGetData model module.
 * @module model/SecuritizedDerivativeNotationScreenerValueRangesGetData
 * @version 0.9.0
 */
class SecuritizedDerivativeNotationScreenerValueRangesGetData {
    /**
     * Constructs a new <code>SecuritizedDerivativeNotationScreenerValueRangesGetData</code>.
     * The data member contains the request&#39;s primary data.
     * @alias module:model/SecuritizedDerivativeNotationScreenerValueRangesGetData
     */
    constructor() { 
        
        SecuritizedDerivativeNotationScreenerValueRangesGetData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecuritizedDerivativeNotationScreenerValueRangesGetData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetData} obj Optional instance to populate.
     * @return {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetData} The populated <code>SecuritizedDerivativeNotationScreenerValueRangesGetData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecuritizedDerivativeNotationScreenerValueRangesGetData();

            if (data.hasOwnProperty('validation')) {
                obj['validation'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataValidation.constructFromObject(data['validation']);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('registrationCountry')) {
                obj['registrationCountry'] = SecuritizedDerivativeNotationRankingIntradayListDataRegistrationCountry.constructFromObject(data['registrationCountry']);
            }
            if (data.hasOwnProperty('lifeCycle')) {
                obj['lifeCycle'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataLifeCycle.constructFromObject(data['lifeCycle']);
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = SecuritizedDerivativeNotationRankingIntradayListDataIssuer.constructFromObject(data['issuer']);
            }
            if (data.hasOwnProperty('exercise')) {
                obj['exercise'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataExercise.constructFromObject(data['exercise']);
            }
            if (data.hasOwnProperty('settlement')) {
                obj['settlement'] = ApiClient.convertToType(data['settlement'], 'String');
            }
            if (data.hasOwnProperty('collateralized')) {
                obj['collateralized'] = ApiClient.convertToType(data['collateralized'], 'Boolean');
            }
            if (data.hasOwnProperty('quanto')) {
                obj['quanto'] = ApiClient.convertToType(data['quanto'], 'Boolean');
            }
            if (data.hasOwnProperty('capitalProtection')) {
                obj['capitalProtection'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataCapitalProtection.constructFromObject(data['capitalProtection']);
            }
            if (data.hasOwnProperty('underlying')) {
                obj['underlying'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataUnderlying.constructFromObject(data['underlying']);
            }
            if (data.hasOwnProperty('cashFlowCurrency')) {
                obj['cashFlowCurrency'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataCashFlowCurrency.constructFromObject(data['cashFlowCurrency']);
            }
            if (data.hasOwnProperty('singleBarriers')) {
                obj['singleBarriers'] = ApiClient.convertToType(data['singleBarriers'], [SecuritizedDerivativeNotationScreenerValueRangesGetDataSingleBarriers]);
            }
            if (data.hasOwnProperty('rangeBarriers')) {
                obj['rangeBarriers'] = ApiClient.convertToType(data['rangeBarriers'], [SecuritizedDerivativeNotationScreenerValueRangesGetDataRangeBarriers]);
            }
            if (data.hasOwnProperty('factorCertificates')) {
                obj['factorCertificates'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.constructFromObject(data['factorCertificates']);
            }
            if (data.hasOwnProperty('nominalCurrency')) {
                obj['nominalCurrency'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataNominalCurrency.constructFromObject(data['nominalCurrency']);
            }
            if (data.hasOwnProperty('currentInterestRate')) {
                obj['currentInterestRate'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate.constructFromObject(data['currentInterestRate']);
            }
            if (data.hasOwnProperty('keyFigures')) {
                obj['keyFigures'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataKeyFigures.constructFromObject(data['keyFigures']);
            }
            if (data.hasOwnProperty('performance')) {
                obj['performance'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataPerformance.constructFromObject(data['performance']);
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataVolatility.constructFromObject(data['volatility']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataValidation} validation
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['validation'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataCategory} category
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['category'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationRankingIntradayListDataRegistrationCountry} registrationCountry
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['registrationCountry'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataLifeCycle} lifeCycle
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['lifeCycle'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationRankingIntradayListDataIssuer} issuer
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['issuer'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataExercise} exercise
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['exercise'] = undefined;

/**
 * Settlement of the securitized derivative. It concerns the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out.
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetData.SettlementEnum} settlement
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['settlement'] = undefined;

/**
 * Restricts the result to securitized derivatives that are collateralized (`true`) or are  not collateralized (`false`). A collateralized securitized derivative is protected against an  issuer default by collateral.
 * @member {Boolean} collateralized
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['collateralized'] = undefined;

/**
 * Restricts the result to securitized derivatives that are hedged (`true`) or are not hedged (`false`) against fluctuations of the foreign exchange rate between the value unit of the underlying and the value unit of the cash flows.
 * @member {Boolean} quanto
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['quanto'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataCapitalProtection} capitalProtection
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['capitalProtection'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataUnderlying} underlying
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['underlying'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataCashFlowCurrency} cashFlowCurrency
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['cashFlowCurrency'] = undefined;

/**
 * Single barriers. Barriers of this kind represent either a lower or an upper bound derived from the exercise right of the securitized derivative. Multiple barrier types may be used in one request.
 * @member {Array.<module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataSingleBarriers>} singleBarriers
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['singleBarriers'] = undefined;

/**
 * Range barriers. Barriers of this kind represent a range with a lower and an upper bound.
 * @member {Array.<module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataRangeBarriers>} rangeBarriers
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['rangeBarriers'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates} factorCertificates
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['factorCertificates'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataNominalCurrency} nominalCurrency
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['nominalCurrency'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate} currentInterestRate
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['currentInterestRate'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataKeyFigures} keyFigures
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['keyFigures'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataPerformance} performance
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['performance'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataVolatility} volatility
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData.prototype['volatility'] = undefined;





/**
 * Allowed values for the <code>settlement</code> property.
 * @enum {String}
 * @readonly
 */
SecuritizedDerivativeNotationScreenerValueRangesGetData['SettlementEnum'] = {

    /**
     * value: "cash"
     * @const
     */
    "cash": "cash",

    /**
     * value: "physical"
     * @const
     */
    "physical": "physical",

    /**
     * value: "either"
     * @const
     */
    "either": "either"
};



export default SecuritizedDerivativeNotationScreenerValueRangesGetData;

