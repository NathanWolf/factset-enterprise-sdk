/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlyingInstrument from './SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlyingInstrument';

/**
 * The SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying model module.
 * @module model/SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying
 * @version 0.9.0
 */
class SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying {
    /**
     * Constructs a new <code>SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying</code>.
     * Selection of the effective underlying. The underlying of a factor certificate is usually a factor index which is an artificial index used to calculate the leveraged daily performance of another financial instrument called its effective underlying. Only issuers that have issued at least one factor certificate on an effective underlying in the provided list are returned.
     * @alias module:model/SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying
     */
    constructor() { 
        
        SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying} obj Optional instance to populate.
     * @return {module:model/SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying} The populated <code>SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying();

            if (data.hasOwnProperty('instrument')) {
                obj['instrument'] = SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlyingInstrument.constructFromObject(data['instrument']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlyingInstrument} instrument
 */
SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying.prototype['instrument'] = undefined;






export default SecuritizedDerivativeIssuerSearchDataFactorCertificatesEffectiveUnderlying;

