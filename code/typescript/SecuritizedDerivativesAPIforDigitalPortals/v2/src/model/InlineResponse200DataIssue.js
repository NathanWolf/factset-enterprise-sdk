/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse200DataIssueValueUnit from './InlineResponse200DataIssueValueUnit';

/**
 * The InlineResponse200DataIssue model module.
 * @module model/InlineResponse200DataIssue
 * @version 0.9.0
 */
class InlineResponse200DataIssue {
    /**
     * Constructs a new <code>InlineResponse200DataIssue</code>.
     * Issue data of the instrument.
     * @alias module:model/InlineResponse200DataIssue
     */
    constructor() { 
        
        InlineResponse200DataIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200DataIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200DataIssue} obj Optional instance to populate.
     * @return {module:model/InlineResponse200DataIssue} The populated <code>InlineResponse200DataIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200DataIssue();

            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('admittedVolume')) {
                obj['admittedVolume'] = ApiClient.convertToType(data['admittedVolume'], 'Number');
            }
            if (data.hasOwnProperty('valueUnit')) {
                obj['valueUnit'] = InlineResponse200DataIssueValueUnit.constructFromObject(data['valueUnit']);
            }
            if (data.hasOwnProperty('surcharge')) {
                obj['surcharge'] = ApiClient.convertToType(data['surcharge'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The price at which the instrument was issued.
 * @member {Number} price
 */
InlineResponse200DataIssue.prototype['price'] = undefined;

/**
 * Number of pieces of the instrument admitted to trading by the regulating authority.
 * @member {Number} admittedVolume
 */
InlineResponse200DataIssue.prototype['admittedVolume'] = undefined;

/**
 * @member {module:model/InlineResponse200DataIssueValueUnit} valueUnit
 */
InlineResponse200DataIssue.prototype['valueUnit'] = undefined;

/**
 * Issue surcharge. An additional charge paid to the issuer when purchasing the product during the subscription period (see attribute `lifeCycle.subscriptionPeriod`).
 * @member {Number} surcharge
 */
InlineResponse200DataIssue.prototype['surcharge'] = undefined;






export default InlineResponse200DataIssue;

