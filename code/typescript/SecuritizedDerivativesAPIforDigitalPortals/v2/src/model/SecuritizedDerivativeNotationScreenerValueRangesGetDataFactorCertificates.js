/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecuritizedDerivativeNotationRankingIntradayListDataFactorCertificatesEffectiveUnderlying from './SecuritizedDerivativeNotationRankingIntradayListDataFactorCertificatesEffectiveUnderlying';
import SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificatesConstantLeverage from './SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificatesConstantLeverage';

/**
 * The SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates model module.
 * @module model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates
 * @version 0.9.0
 */
class SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates {
    /**
     * Constructs a new <code>SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates</code>.
     * Parameters for factor certificates.
     * @alias module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates
     */
    constructor() { 
        
        SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates} obj Optional instance to populate.
     * @return {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates} The populated <code>SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates();

            if (data.hasOwnProperty('effectiveUnderlying')) {
                obj['effectiveUnderlying'] = SecuritizedDerivativeNotationRankingIntradayListDataFactorCertificatesEffectiveUnderlying.constructFromObject(data['effectiveUnderlying']);
            }
            if (data.hasOwnProperty('participation')) {
                obj['participation'] = ApiClient.convertToType(data['participation'], 'String');
            }
            if (data.hasOwnProperty('constantLeverage')) {
                obj['constantLeverage'] = SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificatesConstantLeverage.constructFromObject(data['constantLeverage']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SecuritizedDerivativeNotationRankingIntradayListDataFactorCertificatesEffectiveUnderlying} effectiveUnderlying
 */
SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.prototype['effectiveUnderlying'] = undefined;

/**
 * Participation direction of the factor certificate at the level movement of its effective underlying.
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.ParticipationEnum} participation
 */
SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.prototype['participation'] = undefined;

/**
 * @member {module:model/SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificatesConstantLeverage} constantLeverage
 */
SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates.prototype['constantLeverage'] = undefined;





/**
 * Allowed values for the <code>participation</code> property.
 * @enum {String}
 * @readonly
 */
SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates['ParticipationEnum'] = {

    /**
     * value: "long"
     * @const
     */
    "long": "long",

    /**
     * value: "short"
     * @const
     */
    "short": "short"
};



export default SecuritizedDerivativeNotationScreenerValueRangesGetDataFactorCertificates;

