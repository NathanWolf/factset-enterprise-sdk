/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2005DataUnderlyingEffectiveUnderlying from './InlineResponse2005DataUnderlyingEffectiveUnderlying';
import InlineResponse2005DataUnderlyingInstrument from './InlineResponse2005DataUnderlyingInstrument';
import InlineResponse2005DataUnderlyingNotation from './InlineResponse2005DataUnderlyingNotation';

/**
 * The InlineResponse2005DataUnderlying model module.
 * @module model/InlineResponse2005DataUnderlying
 * @version 0.10.0
 */
class InlineResponse2005DataUnderlying {
    /**
     * Constructs a new <code>InlineResponse2005DataUnderlying</code>.
     * Lists of underlyings.
     * @alias module:model/InlineResponse2005DataUnderlying
     */
    constructor() { 
        
        InlineResponse2005DataUnderlying.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2005DataUnderlying</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2005DataUnderlying} obj Optional instance to populate.
     * @return {module:model/InlineResponse2005DataUnderlying} The populated <code>InlineResponse2005DataUnderlying</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2005DataUnderlying();

            if (data.hasOwnProperty('instrument')) {
                obj['instrument'] = ApiClient.convertToType(data['instrument'], [InlineResponse2005DataUnderlyingInstrument]);
            }
            if (data.hasOwnProperty('notation')) {
                obj['notation'] = ApiClient.convertToType(data['notation'], [InlineResponse2005DataUnderlyingNotation]);
            }
            if (data.hasOwnProperty('effectiveUnderlying')) {
                obj['effectiveUnderlying'] = InlineResponse2005DataUnderlyingEffectiveUnderlying.constructFromObject(data['effectiveUnderlying']);
            }
        }
        return obj;
    }


}

/**
 * Underlying instruments.
 * @member {Array.<module:model/InlineResponse2005DataUnderlyingInstrument>} instrument
 */
InlineResponse2005DataUnderlying.prototype['instrument'] = undefined;

/**
 * Underlying notations.
 * @member {Array.<module:model/InlineResponse2005DataUnderlyingNotation>} notation
 */
InlineResponse2005DataUnderlying.prototype['notation'] = undefined;

/**
 * @member {module:model/InlineResponse2005DataUnderlyingEffectiveUnderlying} effectiveUnderlying
 */
InlineResponse2005DataUnderlying.prototype['effectiveUnderlying'] = undefined;






export default InlineResponse2005DataUnderlying;

