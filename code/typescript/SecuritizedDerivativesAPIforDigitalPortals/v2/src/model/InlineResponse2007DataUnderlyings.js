/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2003DataValueUnit from './InlineResponse2003DataValueUnit';
import InlineResponse2007DataCalculationLevel from './InlineResponse2007DataCalculationLevel';
import InlineResponse2007DataNotation from './InlineResponse2007DataNotation';
import InlineResponse2007DataOperatingMIC from './InlineResponse2007DataOperatingMIC';

/**
 * The InlineResponse2007DataUnderlyings model module.
 * @module model/InlineResponse2007DataUnderlyings
 * @version 0.9.0
 */
class InlineResponse2007DataUnderlyings {
    /**
     * Constructs a new <code>InlineResponse2007DataUnderlyings</code>.
     * @alias module:model/InlineResponse2007DataUnderlyings
     */
    constructor() { 
        
        InlineResponse2007DataUnderlyings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2007DataUnderlyings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2007DataUnderlyings} obj Optional instance to populate.
     * @return {module:model/InlineResponse2007DataUnderlyings} The populated <code>InlineResponse2007DataUnderlyings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2007DataUnderlyings();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('valueUnit')) {
                obj['valueUnit'] = InlineResponse2003DataValueUnit.constructFromObject(data['valueUnit']);
            }
            if (data.hasOwnProperty('operatingMIC')) {
                obj['operatingMIC'] = InlineResponse2007DataOperatingMIC.constructFromObject(data['operatingMIC']);
            }
            if (data.hasOwnProperty('notation')) {
                obj['notation'] = InlineResponse2007DataNotation.constructFromObject(data['notation']);
            }
            if (data.hasOwnProperty('coverRatio')) {
                obj['coverRatio'] = ApiClient.convertToType(data['coverRatio'], 'Number');
            }
            if (data.hasOwnProperty('referenceLevel')) {
                obj['referenceLevel'] = ApiClient.convertToType(data['referenceLevel'], 'Number');
            }
            if (data.hasOwnProperty('constantLeverage')) {
                obj['constantLeverage'] = ApiClient.convertToType(data['constantLeverage'], 'Number');
            }
            if (data.hasOwnProperty('calculationLevel')) {
                obj['calculationLevel'] = InlineResponse2007DataCalculationLevel.constructFromObject(data['calculationLevel']);
            }
        }
        return obj;
    }


}

/**
 * Name of the underlying, provided also if there is no notation for the underlying.
 * @member {String} name
 */
InlineResponse2007DataUnderlyings.prototype['name'] = undefined;

/**
 * @member {module:model/InlineResponse2003DataValueUnit} valueUnit
 */
InlineResponse2007DataUnderlyings.prototype['valueUnit'] = undefined;

/**
 * @member {module:model/InlineResponse2007DataOperatingMIC} operatingMIC
 */
InlineResponse2007DataUnderlyings.prototype['operatingMIC'] = undefined;

/**
 * @member {module:model/InlineResponse2007DataNotation} notation
 */
InlineResponse2007DataUnderlyings.prototype['notation'] = undefined;

/**
 * Cover ratio. It indicates the number of units of the underlying to which the securitized derivative refers. If the underlying is a bond the cover ratio represents the value of one percentage point. 
 * @member {Number} coverRatio
 */
InlineResponse2007DataUnderlyings.prototype['coverRatio'] = undefined;

/**
 * Level of the underlying on the issue date of the securitized derivative.
 * @member {Number} referenceLevel
 */
InlineResponse2007DataUnderlyings.prototype['referenceLevel'] = undefined;

/**
 * Constant leverage of the underlying for securitized derivatives with constant leverage that do not have a factor index as underlying (i.e. the attribute `typeComposite` of the underlying instrument is not set or is different from 4).
 * @member {Number} constantLeverage
 */
InlineResponse2007DataUnderlyings.prototype['constantLeverage'] = undefined;

/**
 * @member {module:model/InlineResponse2007DataCalculationLevel} calculationLevel
 */
InlineResponse2007DataUnderlyings.prototype['calculationLevel'] = undefined;






export default InlineResponse2007DataUnderlyings;

