/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2006InstrumentLifeCycleMaturity model module.
 * @module model/InlineResponse2006InstrumentLifeCycleMaturity
 * @version 0.9.0
 */
class InlineResponse2006InstrumentLifeCycleMaturity {
    /**
     * Constructs a new <code>InlineResponse2006InstrumentLifeCycleMaturity</code>.
     * Maturity data.
     * @alias module:model/InlineResponse2006InstrumentLifeCycleMaturity
     */
    constructor() { 
        
        InlineResponse2006InstrumentLifeCycleMaturity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2006InstrumentLifeCycleMaturity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2006InstrumentLifeCycleMaturity} obj Optional instance to populate.
     * @return {module:model/InlineResponse2006InstrumentLifeCycleMaturity} The populated <code>InlineResponse2006InstrumentLifeCycleMaturity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2006InstrumentLifeCycleMaturity();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('remainingTermDays')) {
                obj['remainingTermDays'] = ApiClient.convertToType(data['remainingTermDays'], 'Number');
            }
            if (data.hasOwnProperty('perpetual')) {
                obj['perpetual'] = ApiClient.convertToType(data['perpetual'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Date of the securitized derivative's maturity. The value is empty if the instrument is perpetual.
 * @member {Date} date
 */
InlineResponse2006InstrumentLifeCycleMaturity.prototype['date'] = undefined;

/**
 * Remaining term to maturity expressed in days. The value is empty if the instrument is perpetual.
 * @member {Number} remainingTermDays
 */
InlineResponse2006InstrumentLifeCycleMaturity.prototype['remainingTermDays'] = undefined;

/**
 * If `true`, the securitized derivative is perpetual, i.e. it does not mature, therefore the attributes `date` and `remainingTermDays` are `null`.
 * @member {Boolean} perpetual
 */
InlineResponse2006InstrumentLifeCycleMaturity.prototype['perpetual'] = undefined;






export default InlineResponse2006InstrumentLifeCycleMaturity;

