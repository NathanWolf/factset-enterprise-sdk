/**
 * ID Lookup API
 * The Factset Identifier Lookup API provides the ability to search for various identifier types based on keyword. The API returns tickers, entity names and other identifiers that Factset supports. In addition, the API offers filters that allows users to refine the results. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import LookupRequest from '../model/LookupRequest';
import LookupResponse from '../model/LookupResponse';

/**
* FactSetIDLookup service.
* @module api/FactSetIDLookupApi
* @version 0.9.0
*/
export default class FactSetIDLookupApi {

    /**
    * Constructs a new FactSetIDLookupApi. 
    * @alias module:api/FactSetIDLookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Search funtionality to return tickers, company names and unique identifiers for FactSet data
     * Service will accept request in JSON formatted request body. The request is sent by passing a query which is an array conitaining search query objects with parameters. The parameters contain search term and filters defined by the end user. This would display a specific set of identifiers based on the request. 
     * @param {module:model/LookupRequest} lookupRequest Post body to lookup any FactSet identifiers
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LookupResponse} and HTTP response
     */
    searchCompanynameWithHttpInfo(lookupRequest) {
      let postBody = lookupRequest;
      // verify the required parameter 'lookupRequest' is set
      if (lookupRequest === undefined || lookupRequest === null) {
        throw new Error("Missing the required parameter 'lookupRequest' when calling searchCompanyname");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LookupResponse;
      return this.apiClient.callApi(
        '/v1/idsearch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Search funtionality to return tickers, company names and unique identifiers for FactSet data
     * Service will accept request in JSON formatted request body. The request is sent by passing a query which is an array conitaining search query objects with parameters. The parameters contain search term and filters defined by the end user. This would display a specific set of identifiers based on the request. 
     * @param {module:model/LookupRequest} lookupRequest Post body to lookup any FactSet identifiers
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LookupResponse}
     */
    searchCompanyname(lookupRequest) {
      return this.searchCompanynameWithHttpInfo(lookupRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
