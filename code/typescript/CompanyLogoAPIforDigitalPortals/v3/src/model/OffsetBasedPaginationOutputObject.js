/**
 * Company Logo API For Digital Portals
 * Consume FactSet-collected company logos through an API that seamlessly integrates with company fundamentals and estimates data (listed equities data available via the stocks API), quotes, time series, and other Functional APIs.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OffsetBasedPaginationOutputObject model module.
 * @module model/OffsetBasedPaginationOutputObject
 * @version 0.10.0
 */
class OffsetBasedPaginationOutputObject {
    /**
     * Constructs a new <code>OffsetBasedPaginationOutputObject</code>.
     * Pagination attributes for the offset-based pagination strategy.
     * @alias module:model/OffsetBasedPaginationOutputObject
     * @param total {Number} Total number of entries in the result set.
     * @param isEstimatedTotal {Boolean} Flag indicating that the value of \"total\" is estimated.
     */
    constructor(total, isEstimatedTotal) { 
        
        OffsetBasedPaginationOutputObject.initialize(this, total, isEstimatedTotal);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, total, isEstimatedTotal) { 
        obj['total'] = total;
        obj['isEstimatedTotal'] = isEstimatedTotal;
    }

    /**
     * Constructs a <code>OffsetBasedPaginationOutputObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OffsetBasedPaginationOutputObject} obj Optional instance to populate.
     * @return {module:model/OffsetBasedPaginationOutputObject} The populated <code>OffsetBasedPaginationOutputObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OffsetBasedPaginationOutputObject();

            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('isEstimatedTotal')) {
                obj['isEstimatedTotal'] = ApiClient.convertToType(data['isEstimatedTotal'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Total number of entries in the result set.
 * @member {Number} total
 */
OffsetBasedPaginationOutputObject.prototype['total'] = undefined;

/**
 * Flag indicating that the value of \"total\" is estimated.
 * @member {Boolean} isEstimatedTotal
 */
OffsetBasedPaginationOutputObject.prototype['isEstimatedTotal'] = undefined;






export default OffsetBasedPaginationOutputObject;

