/**
 * Tick History
 * Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRangeOne from './DateRangeOne';
import ResponseFileType from './ResponseFileType';

/**
 * The Level2RequestBody model module.
 * @module model/Level2RequestBody
 */
class Level2RequestBody {
    /**
     * Constructs a new <code>Level2RequestBody</code>.
     * Level2 request body elements
     * @alias module:model/Level2RequestBody
     * @param tickers {Array.<String>} The requested list of one or more tickers. <p> NOTE: Maximum 500 tickers per request.</p>.   
     * @param mic {String} A four-character code used to identify exchanges in which securities are traded. <p>**NOTE**:Does not support multiple mic codes</p> 
     * @param dateRange {module:model/DateRangeOne} 
     */
    constructor(tickers, mic, dateRange) { 
        
        Level2RequestBody.initialize(this, tickers, mic, dateRange);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tickers, mic, dateRange) { 
        obj['tickers'] = tickers;
        obj['mic'] = mic;
        obj['dateRange'] = dateRange;
    }

    /**
     * Constructs a <code>Level2RequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Level2RequestBody} obj Optional instance to populate.
     * @return {module:model/Level2RequestBody} The populated <code>Level2RequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Level2RequestBody();

            if (data.hasOwnProperty('tickers')) {
                obj['tickers'] = ApiClient.convertToType(data['tickers'], ['String']);
            }
            if (data.hasOwnProperty('mic')) {
                obj['mic'] = ApiClient.convertToType(data['mic'], 'String');
            }
            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRangeOne.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('responseFileType')) {
                obj['responseFileType'] = ResponseFileType.constructFromObject(data['responseFileType']);
            }
        }
        return obj;
    }


}

/**
 * The requested list of one or more tickers. <p> NOTE: Maximum 500 tickers per request.</p>.   
 * @member {Array.<String>} tickers
 */
Level2RequestBody.prototype['tickers'] = undefined;

/**
 * A four-character code used to identify exchanges in which securities are traded. <p>**NOTE**:Does not support multiple mic codes</p> 
 * @member {String} mic
 */
Level2RequestBody.prototype['mic'] = undefined;

/**
 * @member {module:model/DateRangeOne} dateRange
 */
Level2RequestBody.prototype['dateRange'] = undefined;

/**
 * @member {module:model/ResponseFileType} responseFileType
 */
Level2RequestBody.prototype['responseFileType'] = undefined;






export default Level2RequestBody;

