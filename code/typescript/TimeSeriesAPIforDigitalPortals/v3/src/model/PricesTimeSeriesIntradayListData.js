/**
 * Time Series API For Digital Portals
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricesTimeSeriesIntradayListDataRange from './PricesTimeSeriesIntradayListDataRange';
import VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments from './VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments';

/**
 * The PricesTimeSeriesIntradayListData model module.
 * @module model/PricesTimeSeriesIntradayListData
 * @version 0.10.0
 */
class PricesTimeSeriesIntradayListData {
    /**
     * Constructs a new <code>PricesTimeSeriesIntradayListData</code>.
     * The data member contains the request&#39;s primary data.
     * @alias module:model/PricesTimeSeriesIntradayListData
     * @param id {String} Identifier of the notation.
     * @param range {module:model/PricesTimeSeriesIntradayListDataRange} 
     */
    constructor(id, range) { 
        
        PricesTimeSeriesIntradayListData.initialize(this, id, range);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, range) { 
        obj['id'] = id;
        obj['range'] = range;
    }

    /**
     * Constructs a <code>PricesTimeSeriesIntradayListData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricesTimeSeriesIntradayListData} obj Optional instance to populate.
     * @return {module:model/PricesTimeSeriesIntradayListData} The populated <code>PricesTimeSeriesIntradayListData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricesTimeSeriesIntradayListData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('quality')) {
                obj['quality'] = ApiClient.convertToType(data['quality'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = PricesTimeSeriesIntradayListDataRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('applyTickCorrections')) {
                obj['applyTickCorrections'] = ApiClient.convertToType(data['applyTickCorrections'], 'String');
            }
            if (data.hasOwnProperty('includeVolumeOnlyTicks')) {
                obj['includeVolumeOnlyTicks'] = ApiClient.convertToType(data['includeVolumeOnlyTicks'], 'Boolean');
            }
            if (data.hasOwnProperty('adjustments')) {
                obj['adjustments'] = VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments.constructFromObject(data['adjustments']);
            }
        }
        return obj;
    }


}

/**
 * Identifier of the notation.
 * @member {String} id
 */
PricesTimeSeriesIntradayListData.prototype['id'] = undefined;

/**
 * Type of the price as configured for the customer.
 * @member {module:model/PricesTimeSeriesIntradayListData.TypeEnum} type
 * @default 'trade'
 */
PricesTimeSeriesIntradayListData.prototype['type'] = 'trade';

/**
 * Quality of the price.
 * @member {module:model/PricesTimeSeriesIntradayListData.QualityEnum} quality
 * @default 'DLY'
 */
PricesTimeSeriesIntradayListData.prototype['quality'] = 'DLY';

/**
 * @member {module:model/PricesTimeSeriesIntradayListDataRange} range
 */
PricesTimeSeriesIntradayListData.prototype['range'] = undefined;

/**
 * This attribute represents the choice whether to apply insert, update, and delete corrections for individual ticks sent by the exchange or devised by FactSet Digital Solutions GmbH.   If the exchange or FactSet Digital Solutions GmbH decides to correct data, a correction instruction tick is sent shortly (usually on the same trading day) after dissemination of the corresponding original tick (if any). The correction instruction is then applied, yielding a corrected view. For \"insert\" corrections, there is no original tick, and the corrected view contains the inserted tick. For \"update\" corrections, the corrected view contains the updated original tick. For \"delete\" corrections, the original tick is removed from the corrected view.
 * @member {module:model/PricesTimeSeriesIntradayListData.ApplyTickCorrectionsEnum} applyTickCorrections
 * @default 'none'
 */
PricesTimeSeriesIntradayListData.prototype['applyTickCorrections'] = 'none';

/**
 * Include ticks that contain a volume without a price.
 * @member {Boolean} includeVolumeOnlyTicks
 * @default false
 */
PricesTimeSeriesIntradayListData.prototype['includeVolumeOnlyTicks'] = false;

/**
 * @member {module:model/VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments} adjustments
 */
PricesTimeSeriesIntradayListData.prototype['adjustments'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PricesTimeSeriesIntradayListData['TypeEnum'] = {

    /**
     * value: "trade"
     * @const
     */
    "trade": "trade",

    /**
     * value: "bid"
     * @const
     */
    "bid": "bid",

    /**
     * value: "ask"
     * @const
     */
    "ask": "ask",

    /**
     * value: "yield"
     * @const
     */
    "yield": "yield"
};


/**
 * Allowed values for the <code>quality</code> property.
 * @enum {String}
 * @readonly
 */
PricesTimeSeriesIntradayListData['QualityEnum'] = {

    /**
     * value: "RLT"
     * @const
     */
    "RLT": "RLT",

    /**
     * value: "DLY"
     * @const
     */
    "DLY": "DLY",

    /**
     * value: "BST"
     * @const
     */
    "BST": "BST"
};


/**
 * Allowed values for the <code>applyTickCorrections</code> property.
 * @enum {String}
 * @readonly
 */
PricesTimeSeriesIntradayListData['ApplyTickCorrectionsEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "all"
     * @const
     */
    "all": "all"
};



export default PricesTimeSeriesIntradayListData;

