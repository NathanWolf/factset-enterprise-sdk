/**
 * Time Series API For Digital Portals
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject from '../model/InlineObject';
import InlineObject1 from '../model/InlineObject1';
import InlineObject2 from '../model/InlineObject2';
import InlineObject3 from '../model/InlineObject3';
import InlineObject4 from '../model/InlineObject4';
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2001 from '../model/InlineResponse2001';
import InlineResponse2002 from '../model/InlineResponse2002';
import InlineResponse2003 from '../model/InlineResponse2003';
import InlineResponse2004 from '../model/InlineResponse2004';

/**
* Vendor service.
* @module api/VendorApi
*/
export default class VendorApi {

    /**
    * Constructs a new VendorApi. 
    * @alias module:api/VendorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject} inlineObject 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse200} and HTTP response
     */
    postVendorChartIQTimeSeriesEodListWithHttpInfo(inlineObject) {
      let postBody = inlineObject;
      // verify the required parameter 'inlineObject' is set
      if (inlineObject === undefined || inlineObject === null) {
        throw new Error("Missing the required parameter 'inlineObject' when calling postVendorChartIQTimeSeriesEodList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/vendor/chartIQ/timeSeries/eod/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject} inlineObject 
     * @return { Promise.< module:model/InlineResponse200 > } a Promise, with data of type {@link module:model/InlineResponse200 }
     */
    postVendorChartIQTimeSeriesEodList(inlineObject) {
      return this.postVendorChartIQTimeSeriesEodListWithHttpInfo(inlineObject)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/InlineObject1} inlineObject1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2001} and HTTP response
     */
    postVendorChartIQTimeSeriesEodSubsampleGetWithHttpInfo(inlineObject1) {
      let postBody = inlineObject1;
      // verify the required parameter 'inlineObject1' is set
      if (inlineObject1 === undefined || inlineObject1 === null) {
        throw new Error("Missing the required parameter 'inlineObject1' when calling postVendorChartIQTimeSeriesEodSubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/vendor/chartIQ/timeSeries/eod/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/InlineObject1} inlineObject1 
     * @return { Promise.< module:model/InlineResponse2001 > } a Promise, with data of type {@link module:model/InlineResponse2001 }
     */
    postVendorChartIQTimeSeriesEodSubsampleGet(inlineObject1) {
      return this.postVendorChartIQTimeSeriesEodSubsampleGetWithHttpInfo(inlineObject1)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject2} inlineObject2 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2002} and HTTP response
     */
    postVendorChartIQTimeSeriesEodSubsampleListWithHttpInfo(inlineObject2) {
      let postBody = inlineObject2;
      // verify the required parameter 'inlineObject2' is set
      if (inlineObject2 === undefined || inlineObject2 === null) {
        throw new Error("Missing the required parameter 'inlineObject2' when calling postVendorChartIQTimeSeriesEodSubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/vendor/chartIQ/timeSeries/eod/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject2} inlineObject2 
     * @return { Promise.< module:model/InlineResponse2002 > } a Promise, with data of type {@link module:model/InlineResponse2002 }
     */
    postVendorChartIQTimeSeriesEodSubsampleList(inlineObject2) {
      return this.postVendorChartIQTimeSeriesEodSubsampleListWithHttpInfo(inlineObject2)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/InlineObject3} inlineObject3 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2003} and HTTP response
     */
    postVendorChartIQTimeSeriesIntradaySubsampleGetWithHttpInfo(inlineObject3) {
      let postBody = inlineObject3;
      // verify the required parameter 'inlineObject3' is set
      if (inlineObject3 === undefined || inlineObject3 === null) {
        throw new Error("Missing the required parameter 'inlineObject3' when calling postVendorChartIQTimeSeriesIntradaySubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2003;

      return this.apiClient.callApi(
        '/vendor/chartIQ/timeSeries/intraday/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/InlineObject3} inlineObject3 
     * @return { Promise.< module:model/InlineResponse2003 > } a Promise, with data of type {@link module:model/InlineResponse2003 }
     */
    postVendorChartIQTimeSeriesIntradaySubsampleGet(inlineObject3) {
      return this.postVendorChartIQTimeSeriesIntradaySubsampleGetWithHttpInfo(inlineObject3)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject4} inlineObject4 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2004} and HTTP response
     */
    postVendorChartIQTimeSeriesIntradaySubsampleListWithHttpInfo(inlineObject4) {
      let postBody = inlineObject4;
      // verify the required parameter 'inlineObject4' is set
      if (inlineObject4 === undefined || inlineObject4 === null) {
        throw new Error("Missing the required parameter 'inlineObject4' when calling postVendorChartIQTimeSeriesIntradaySubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/vendor/chartIQ/timeSeries/intraday/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject4} inlineObject4 
     * @return { Promise.< module:model/InlineResponse2004 > } a Promise, with data of type {@link module:model/InlineResponse2004 }
     */
    postVendorChartIQTimeSeriesIntradaySubsampleList(inlineObject4) {
      return this.postVendorChartIQTimeSeriesIntradaySubsampleListWithHttpInfo(inlineObject4)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





