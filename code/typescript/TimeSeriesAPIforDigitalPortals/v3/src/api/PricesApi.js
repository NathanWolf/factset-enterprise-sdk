/**
 * Time Series API For Digital Portals
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject10 from '../model/InlineObject10';
import InlineObject5 from '../model/InlineObject5';
import InlineObject6 from '../model/InlineObject6';
import InlineObject7 from '../model/InlineObject7';
import InlineObject8 from '../model/InlineObject8';
import InlineObject9 from '../model/InlineObject9';
import InlineResponse20010 from '../model/InlineResponse20010';
import InlineResponse2005 from '../model/InlineResponse2005';
import InlineResponse2006 from '../model/InlineResponse2006';
import InlineResponse2007 from '../model/InlineResponse2007';
import InlineResponse2008 from '../model/InlineResponse2008';
import InlineResponse2009 from '../model/InlineResponse2009';

/**
* Prices service.
* @module api/PricesApi
*/
export default class PricesApi {

    /**
    * Constructs a new PricesApi. 
    * @alias module:api/PricesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject5} inlineObject5 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2005} and HTTP response
     */
    postPricesTimeSeriesEodListWithHttpInfo(inlineObject5) {
      let postBody = inlineObject5;
      // verify the required parameter 'inlineObject5' is set
      if (inlineObject5 === undefined || inlineObject5 === null) {
        throw new Error("Missing the required parameter 'inlineObject5' when calling postPricesTimeSeriesEodList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2005;

      return this.apiClient.callApi(
        '/prices/timeSeries/eod/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject5} inlineObject5 
     * @return { Promise.< module:model/InlineResponse2005 > } a Promise, with data of type {@link module:model/InlineResponse2005 }
     */
    postPricesTimeSeriesEodList(inlineObject5) {
      return this.postPricesTimeSeriesEodListWithHttpInfo(inlineObject5)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/InlineObject6} inlineObject6 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2006} and HTTP response
     */
    postPricesTimeSeriesEodSubsampleGetWithHttpInfo(inlineObject6) {
      let postBody = inlineObject6;
      // verify the required parameter 'inlineObject6' is set
      if (inlineObject6 === undefined || inlineObject6 === null) {
        throw new Error("Missing the required parameter 'inlineObject6' when calling postPricesTimeSeriesEodSubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2006;

      return this.apiClient.callApi(
        '/prices/timeSeries/eod/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/InlineObject6} inlineObject6 
     * @return { Promise.< module:model/InlineResponse2006 > } a Promise, with data of type {@link module:model/InlineResponse2006 }
     */
    postPricesTimeSeriesEodSubsampleGet(inlineObject6) {
      return this.postPricesTimeSeriesEodSubsampleGetWithHttpInfo(inlineObject6)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject7} inlineObject7 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2007} and HTTP response
     */
    postPricesTimeSeriesEodSubsampleListWithHttpInfo(inlineObject7) {
      let postBody = inlineObject7;
      // verify the required parameter 'inlineObject7' is set
      if (inlineObject7 === undefined || inlineObject7 === null) {
        throw new Error("Missing the required parameter 'inlineObject7' when calling postPricesTimeSeriesEodSubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2007;

      return this.apiClient.callApi(
        '/prices/timeSeries/eod/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject7} inlineObject7 
     * @return { Promise.< module:model/InlineResponse2007 > } a Promise, with data of type {@link module:model/InlineResponse2007 }
     */
    postPricesTimeSeriesEodSubsampleList(inlineObject7) {
      return this.postPricesTimeSeriesEodSubsampleListWithHttpInfo(inlineObject7)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Intraday time series data for a notation.
     * Intraday time series data for a notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject8} inlineObject8 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2008} and HTTP response
     */
    postPricesTimeSeriesIntradayListWithHttpInfo(inlineObject8) {
      let postBody = inlineObject8;
      // verify the required parameter 'inlineObject8' is set
      if (inlineObject8 === undefined || inlineObject8 === null) {
        throw new Error("Missing the required parameter 'inlineObject8' when calling postPricesTimeSeriesIntradayList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2008;

      return this.apiClient.callApi(
        '/prices/timeSeries/intraday/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Intraday time series data for a notation.
     * Intraday time series data for a notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject8} inlineObject8 
     * @return { Promise.< module:model/InlineResponse2008 > } a Promise, with data of type {@link module:model/InlineResponse2008 }
     */
    postPricesTimeSeriesIntradayList(inlineObject8) {
      return this.postPricesTimeSeriesIntradayListWithHttpInfo(inlineObject8)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/InlineObject9} inlineObject9 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2009} and HTTP response
     */
    postPricesTimeSeriesIntradaySubsampleGetWithHttpInfo(inlineObject9) {
      let postBody = inlineObject9;
      // verify the required parameter 'inlineObject9' is set
      if (inlineObject9 === undefined || inlineObject9 === null) {
        throw new Error("Missing the required parameter 'inlineObject9' when calling postPricesTimeSeriesIntradaySubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2009;

      return this.apiClient.callApi(
        '/prices/timeSeries/intraday/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/InlineObject9} inlineObject9 
     * @return { Promise.< module:model/InlineResponse2009 > } a Promise, with data of type {@link module:model/InlineResponse2009 }
     */
    postPricesTimeSeriesIntradaySubsampleGet(inlineObject9) {
      return this.postPricesTimeSeriesIntradaySubsampleGetWithHttpInfo(inlineObject9)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject10} inlineObject10 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse20010} and HTTP response
     */
    postPricesTimeSeriesIntradaySubsampleListWithHttpInfo(inlineObject10) {
      let postBody = inlineObject10;
      // verify the required parameter 'inlineObject10' is set
      if (inlineObject10 === undefined || inlineObject10 === null) {
        throw new Error("Missing the required parameter 'inlineObject10' when calling postPricesTimeSeriesIntradaySubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse20010;

      return this.apiClient.callApi(
        '/prices/timeSeries/intraday/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/InlineObject10} inlineObject10 
     * @return { Promise.< module:model/InlineResponse20010 > } a Promise, with data of type {@link module:model/InlineResponse20010 }
     */
    postPricesTimeSeriesIntradaySubsampleList(inlineObject10) {
      return this.postPricesTimeSeriesIntradaySubsampleListWithHttpInfo(inlineObject10)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





