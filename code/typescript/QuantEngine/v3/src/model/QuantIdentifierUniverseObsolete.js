/**
 * Quant API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuantIdentifierUniverseObsolete model module.
 * @module model/QuantIdentifierUniverseObsolete
 */
class QuantIdentifierUniverseObsolete {
    /**
     * Constructs a new <code>QuantIdentifierUniverseObsolete</code>.
     * @alias module:model/QuantIdentifierUniverseObsolete
     * @param universeType {module:model/QuantIdentifierUniverseObsolete.UniverseTypeEnum} 
     * @param identifiers {Array.<String>} 
     */
    constructor(universeType, identifiers) { 
        
        QuantIdentifierUniverseObsolete.initialize(this, universeType, identifiers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, universeType, identifiers) { 
        obj['universeType'] = universeType;
        obj['identifiers'] = identifiers;
    }

    /**
     * Constructs a <code>QuantIdentifierUniverseObsolete</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuantIdentifierUniverseObsolete} obj Optional instance to populate.
     * @return {module:model/QuantIdentifierUniverseObsolete} The populated <code>QuantIdentifierUniverseObsolete</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuantIdentifierUniverseObsolete();

            if (data.hasOwnProperty('universeType')) {
                obj['universeType'] = ApiClient.convertToType(data['universeType'], 'String');
            }
            if (data.hasOwnProperty('identifiers')) {
                obj['identifiers'] = ApiClient.convertToType(data['identifiers'], ['String']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/QuantIdentifierUniverseObsolete.UniverseTypeEnum} universeType
 */
QuantIdentifierUniverseObsolete.prototype['universeType'] = undefined;

/**
 * @member {Array.<String>} identifiers
 */
QuantIdentifierUniverseObsolete.prototype['identifiers'] = undefined;

/**
 * @member {module:model/QuantIdentifierUniverseObsolete.SourceEnum} source
 */
QuantIdentifierUniverseObsolete.prototype['source'] = undefined;





/**
 * Allowed values for the <code>universeType</code> property.
 * @enum {String}
 * @readonly
 */
QuantIdentifierUniverseObsolete['UniverseTypeEnum'] = {

    /**
     * value: "Equity"
     * @const
     */
    "Equity": "Equity",

    /**
     * value: "Debt"
     * @const
     */
    "Debt": "Debt"
};


/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
QuantIdentifierUniverseObsolete['SourceEnum'] = {

    /**
     * value: "ScreeningExpressionUniverse"
     * @const
     */
    "ScreeningExpressionUniverse": "ScreeningExpressionUniverse",

    /**
     * value: "UniversalScreenUniverse"
     * @const
     */
    "UniversalScreenUniverse": "UniversalScreenUniverse",

    /**
     * value: "IdentifierUniverse"
     * @const
     */
    "IdentifierUniverse": "IdentifierUniverse"
};



export default QuantIdentifierUniverseObsolete;

