/**
 * Quant API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuantScreeningExpressionUniverseObsolete model module.
 * @module model/QuantScreeningExpressionUniverseObsolete
 */
class QuantScreeningExpressionUniverseObsolete {
    /**
     * Constructs a new <code>QuantScreeningExpressionUniverseObsolete</code>.
     * @alias module:model/QuantScreeningExpressionUniverseObsolete
     * @param universeExpr {String} 
     * @param universeType {module:model/QuantScreeningExpressionUniverseObsolete.UniverseTypeEnum} 
     */
    constructor(universeExpr, universeType) { 
        
        QuantScreeningExpressionUniverseObsolete.initialize(this, universeExpr, universeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, universeExpr, universeType) { 
        obj['universeExpr'] = universeExpr;
        obj['universeType'] = universeType;
    }

    /**
     * Constructs a <code>QuantScreeningExpressionUniverseObsolete</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuantScreeningExpressionUniverseObsolete} obj Optional instance to populate.
     * @return {module:model/QuantScreeningExpressionUniverseObsolete} The populated <code>QuantScreeningExpressionUniverseObsolete</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuantScreeningExpressionUniverseObsolete();

            if (data.hasOwnProperty('universeExpr')) {
                obj['universeExpr'] = ApiClient.convertToType(data['universeExpr'], 'String');
            }
            if (data.hasOwnProperty('universeType')) {
                obj['universeType'] = ApiClient.convertToType(data['universeType'], 'String');
            }
            if (data.hasOwnProperty('securityExpr')) {
                obj['securityExpr'] = ApiClient.convertToType(data['securityExpr'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} universeExpr
 */
QuantScreeningExpressionUniverseObsolete.prototype['universeExpr'] = undefined;

/**
 * @member {module:model/QuantScreeningExpressionUniverseObsolete.UniverseTypeEnum} universeType
 */
QuantScreeningExpressionUniverseObsolete.prototype['universeType'] = undefined;

/**
 * @member {String} securityExpr
 */
QuantScreeningExpressionUniverseObsolete.prototype['securityExpr'] = undefined;

/**
 * @member {module:model/QuantScreeningExpressionUniverseObsolete.SourceEnum} source
 */
QuantScreeningExpressionUniverseObsolete.prototype['source'] = undefined;





/**
 * Allowed values for the <code>universeType</code> property.
 * @enum {String}
 * @readonly
 */
QuantScreeningExpressionUniverseObsolete['UniverseTypeEnum'] = {

    /**
     * value: "Equity"
     * @const
     */
    "Equity": "Equity",

    /**
     * value: "Debt"
     * @const
     */
    "Debt": "Debt"
};


/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
QuantScreeningExpressionUniverseObsolete['SourceEnum'] = {

    /**
     * value: "ScreeningExpressionUniverse"
     * @const
     */
    "ScreeningExpressionUniverse": "ScreeningExpressionUniverse",

    /**
     * value: "UniversalScreenUniverse"
     * @const
     */
    "UniversalScreenUniverse": "UniversalScreenUniverse",

    /**
     * value: "IdentifierUniverse"
     * @const
     */
    "IdentifierUniverse": "IdentifierUniverse"
};



export default QuantScreeningExpressionUniverseObsolete;

