/**
 * Natural Language Processing API
 * APIs that leverage Natural Language Processing to help extract meaningful data from unstructured text
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ai@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Error from './model/Error';
import ErrorsRoot from './model/ErrorsRoot';
import Theme from './model/Theme';
import ThemeParameters from './model/ThemeParameters';
import ThemeParametersRoot from './model/ThemeParametersRoot';
import ThemesRoot from './model/ThemesRoot';

import ThemesApi from './api/ThemesApi';


/**
* Natural Language Processing client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var naturallanguageprocessing = require('index'); // See note below*.
* var xxxSvc = new naturallanguageprocessing.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new naturallanguageprocessing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new naturallanguageprocessing.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new naturallanguageprocessing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorsRoot model constructor.
     * @property {module:model/ErrorsRoot}
     */
    ErrorsRoot,

    /**
     * The Theme model constructor.
     * @property {module:model/Theme}
     */
    Theme,

    /**
     * The ThemeParameters model constructor.
     * @property {module:model/ThemeParameters}
     */
    ThemeParameters,

    /**
     * The ThemeParametersRoot model constructor.
     * @property {module:model/ThemeParametersRoot}
     */
    ThemeParametersRoot,

    /**
     * The ThemesRoot model constructor.
     * @property {module:model/ThemesRoot}
     */
    ThemesRoot,

    /**
    * The ThemesApi service constructor.
    * @property {module:api/ThemesApi}
    */
    ThemesApi,

};
