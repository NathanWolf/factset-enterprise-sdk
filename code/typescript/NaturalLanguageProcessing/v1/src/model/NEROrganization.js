/**
 * Natural Language Processing API
 * APIs that leverage Natural Language Processing to help extract meaningful data from unstructured text
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NEROrganization model module.
 * @module model/NEROrganization
 */
class NEROrganization {
    /**
     * Constructs a new <code>NEROrganization</code>.
     * @alias module:model/NEROrganization
     */
    constructor() { 
        
        NEROrganization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NEROrganization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NEROrganization} obj Optional instance to populate.
     * @return {module:model/NEROrganization} The populated <code>NEROrganization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NEROrganization();

            if (data.hasOwnProperty('entityId')) {
                obj['entityId'] = ApiClient.convertToType(data['entityId'], 'String');
            }
            if (data.hasOwnProperty('lookupUrl')) {
                obj['lookupUrl'] = ApiClient.convertToType(data['lookupUrl'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The FactSet Entity ID that is linked to this organization.
 * @member {String} entityId
 */
NEROrganization.prototype['entityId'] = undefined;

/**
 * A link to the information page for the given organization
 * @member {String} lookupUrl
 */
NEROrganization.prototype['lookupUrl'] = undefined;

/**
 * The name this organization.
 * @member {String} name
 */
NEROrganization.prototype['name'] = undefined;






export default NEROrganization;

