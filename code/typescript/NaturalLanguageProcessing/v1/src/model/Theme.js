/**
 * Natural Language Processing API
 * APIs that leverage Natural Language Processing to help extract meaningful data from unstructured text
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ai@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Theme model module.
 * @module model/Theme
 */
class Theme {
    /**
     * Constructs a new <code>Theme</code>.
     * @alias module:model/Theme
     * @param themeText {String} Extracted theme text
     * @param themeScore {Number} Extracted theme score
     */
    constructor(themeText, themeScore) { 
        
        Theme.initialize(this, themeText, themeScore);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, themeText, themeScore) { 
        obj['themeText'] = themeText;
        obj['themeScore'] = themeScore;
    }

    /**
     * Constructs a <code>Theme</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Theme} obj Optional instance to populate.
     * @return {module:model/Theme} The populated <code>Theme</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Theme();

            if (data.hasOwnProperty('themeText')) {
                obj['themeText'] = ApiClient.convertToType(data['themeText'], 'String');
            }
            if (data.hasOwnProperty('themeScore')) {
                obj['themeScore'] = ApiClient.convertToType(data['themeScore'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Extracted theme text
 * @member {String} themeText
 */
Theme.prototype['themeText'] = undefined;

/**
 * Extracted theme score
 * @member {Number} themeScore
 */
Theme.prototype['themeScore'] = undefined;






export default Theme;

