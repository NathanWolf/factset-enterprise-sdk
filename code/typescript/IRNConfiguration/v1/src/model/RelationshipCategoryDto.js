/**
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RelationshipDto from './RelationshipDto';

/**
 * The RelationshipCategoryDto model module.
 * @module model/RelationshipCategoryDto
 */
class RelationshipCategoryDto {
    /**
     * Constructs a new <code>RelationshipCategoryDto</code>.
     * @alias module:model/RelationshipCategoryDto
     */
    constructor() { 
        
        RelationshipCategoryDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RelationshipCategoryDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelationshipCategoryDto} obj Optional instance to populate.
     * @return {module:model/RelationshipCategoryDto} The populated <code>RelationshipCategoryDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelationshipCategoryDto();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('IsStandard')) {
                obj['IsStandard'] = ApiClient.convertToType(data['IsStandard'], 'Boolean');
            }
            if (data.hasOwnProperty('IsContactToContact')) {
                obj['IsContactToContact'] = ApiClient.convertToType(data['IsContactToContact'], 'Boolean');
            }
            if (data.hasOwnProperty('IsContactToSymbol')) {
                obj['IsContactToSymbol'] = ApiClient.convertToType(data['IsContactToSymbol'], 'Boolean');
            }
            if (data.hasOwnProperty('Relationships')) {
                obj['Relationships'] = ApiClient.convertToType(data['Relationships'], [RelationshipDto]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} Id
 */
RelationshipCategoryDto.prototype['Id'] = undefined;

/**
 * @member {String} Name
 */
RelationshipCategoryDto.prototype['Name'] = undefined;

/**
 * @member {Boolean} IsStandard
 */
RelationshipCategoryDto.prototype['IsStandard'] = undefined;

/**
 * @member {Boolean} IsContactToContact
 */
RelationshipCategoryDto.prototype['IsContactToContact'] = undefined;

/**
 * @member {Boolean} IsContactToSymbol
 */
RelationshipCategoryDto.prototype['IsContactToSymbol'] = undefined;

/**
 * @member {Array.<module:model/RelationshipDto>} Relationships
 */
RelationshipCategoryDto.prototype['Relationships'] = undefined;






export default RelationshipCategoryDto;

