/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresCurrency from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresCurrency';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbit from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbit';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbitda from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbitda';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresMarketCapitalization from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresMarketCapitalization';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare';

/**
 * The StockNotationScreenerSearchDataCurrencyDependentKeyFigures model module.
 * @module model/StockNotationScreenerSearchDataCurrencyDependentKeyFigures
 * @version 0.9.2
 */
class StockNotationScreenerSearchDataCurrencyDependentKeyFigures {
    /**
     * Constructs a new <code>StockNotationScreenerSearchDataCurrencyDependentKeyFigures</code>.
     * Currency-dependent parameters. Selection of a currency is required to use these parameters.
     * @alias module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFigures
     * @param currency {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresCurrency} 
     */
    constructor(currency) { 
        
        StockNotationScreenerSearchDataCurrencyDependentKeyFigures.initialize(this, currency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currency) { 
        obj['currency'] = currency;
    }

    /**
     * Constructs a <code>StockNotationScreenerSearchDataCurrencyDependentKeyFigures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFigures} obj Optional instance to populate.
     * @return {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFigures} The populated <code>StockNotationScreenerSearchDataCurrencyDependentKeyFigures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StockNotationScreenerSearchDataCurrencyDependentKeyFigures();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresCurrency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('marketCapitalization')) {
                obj['marketCapitalization'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresMarketCapitalization.constructFromObject(data['marketCapitalization']);
            }
            if (data.hasOwnProperty('ebit')) {
                obj['ebit'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbit.constructFromObject(data['ebit']);
            }
            if (data.hasOwnProperty('ebitda')) {
                obj['ebitda'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbitda.constructFromObject(data['ebitda']);
            }
            if (data.hasOwnProperty('perShare')) {
                obj['perShare'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.constructFromObject(data['perShare']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresCurrency} currency
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFigures.prototype['currency'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresMarketCapitalization} marketCapitalization
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFigures.prototype['marketCapitalization'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbit} ebit
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFigures.prototype['ebit'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresEbitda} ebitda
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFigures.prototype['ebitda'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare} perShare
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFigures.prototype['perShare'] = undefined;






export default StockNotationScreenerSearchDataCurrencyDependentKeyFigures;

