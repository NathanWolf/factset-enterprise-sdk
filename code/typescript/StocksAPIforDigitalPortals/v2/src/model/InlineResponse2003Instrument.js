/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2003InstrumentCompany from './InlineResponse2003InstrumentCompany';
import InlineResponse2003InstrumentFsym from './InlineResponse2003InstrumentFsym';
import InlineResponse2003InstrumentIndustryClassification from './InlineResponse2003InstrumentIndustryClassification';
import InlineResponse2003InstrumentNsin from './InlineResponse2003InstrumentNsin';

/**
 * The InlineResponse2003Instrument model module.
 * @module model/InlineResponse2003Instrument
 */
class InlineResponse2003Instrument {
    /**
     * Constructs a new <code>InlineResponse2003Instrument</code>.
     * Instrument data of the notation.
     * @alias module:model/InlineResponse2003Instrument
     */
    constructor() { 
        
        InlineResponse2003Instrument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2003Instrument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2003Instrument} obj Optional instance to populate.
     * @return {module:model/InlineResponse2003Instrument} The populated <code>InlineResponse2003Instrument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2003Instrument();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shortName')) {
                obj['shortName'] = ApiClient.convertToType(data['shortName'], 'String');
            }
            if (data.hasOwnProperty('isin')) {
                obj['isin'] = ApiClient.convertToType(data['isin'], 'String');
            }
            if (data.hasOwnProperty('nsin')) {
                obj['nsin'] = InlineResponse2003InstrumentNsin.constructFromObject(data['nsin']);
            }
            if (data.hasOwnProperty('fsym')) {
                obj['fsym'] = InlineResponse2003InstrumentFsym.constructFromObject(data['fsym']);
            }
            if (data.hasOwnProperty('industryClassification')) {
                obj['industryClassification'] = InlineResponse2003InstrumentIndustryClassification.constructFromObject(data['industryClassification']);
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = InlineResponse2003InstrumentCompany.constructFromObject(data['company']);
            }
        }
        return obj;
    }


}

/**
 * Identifier of the instrument.
 * @member {String} id
 */
InlineResponse2003Instrument.prototype['id'] = undefined;

/**
 * Name of the instrument.
 * @member {String} name
 */
InlineResponse2003Instrument.prototype['name'] = undefined;

/**
 * Short name of the instrument.
 * @member {String} shortName
 */
InlineResponse2003Instrument.prototype['shortName'] = undefined;

/**
 * The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument.
 * @member {String} isin
 */
InlineResponse2003Instrument.prototype['isin'] = undefined;

/**
 * @member {module:model/InlineResponse2003InstrumentNsin} nsin
 */
InlineResponse2003Instrument.prototype['nsin'] = undefined;

/**
 * @member {module:model/InlineResponse2003InstrumentFsym} fsym
 */
InlineResponse2003Instrument.prototype['fsym'] = undefined;

/**
 * @member {module:model/InlineResponse2003InstrumentIndustryClassification} industryClassification
 */
InlineResponse2003Instrument.prototype['industryClassification'] = undefined;

/**
 * @member {module:model/InlineResponse2003InstrumentCompany} company
 */
InlineResponse2003Instrument.prototype['company'] = undefined;






export default InlineResponse2003Instrument;

