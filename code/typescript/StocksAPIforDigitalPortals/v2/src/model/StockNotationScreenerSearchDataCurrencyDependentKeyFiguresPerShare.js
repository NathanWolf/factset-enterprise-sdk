/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareBookValue from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareBookValue';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareCashFlow from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareCashFlow';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareDividends from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareDividends';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareRecurringDilutedEarnings from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareRecurringDilutedEarnings';
import StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareSales from './StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareSales';

/**
 * The StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare model module.
 * @module model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare
 * @version 0.9.0
 */
class StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare {
    /**
     * Constructs a new <code>StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare</code>.
     * Per-share parameters.
     * @alias module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare
     */
    constructor() { 
        
        StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare} obj Optional instance to populate.
     * @return {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare} The populated <code>StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare();

            if (data.hasOwnProperty('sales')) {
                obj['sales'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareSales.constructFromObject(data['sales']);
            }
            if (data.hasOwnProperty('recurringDilutedEarnings')) {
                obj['recurringDilutedEarnings'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareRecurringDilutedEarnings.constructFromObject(data['recurringDilutedEarnings']);
            }
            if (data.hasOwnProperty('dividends')) {
                obj['dividends'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareDividends.constructFromObject(data['dividends']);
            }
            if (data.hasOwnProperty('bookValue')) {
                obj['bookValue'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareBookValue.constructFromObject(data['bookValue']);
            }
            if (data.hasOwnProperty('cashFlow')) {
                obj['cashFlow'] = StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareCashFlow.constructFromObject(data['cashFlow']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareSales} sales
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.prototype['sales'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareRecurringDilutedEarnings} recurringDilutedEarnings
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.prototype['recurringDilutedEarnings'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareDividends} dividends
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.prototype['dividends'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareBookValue} bookValue
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.prototype['bookValue'] = undefined;

/**
 * @member {module:model/StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShareCashFlow} cashFlow
 */
StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare.prototype['cashFlow'] = undefined;






export default StockNotationScreenerSearchDataCurrencyDependentKeyFiguresPerShare;

