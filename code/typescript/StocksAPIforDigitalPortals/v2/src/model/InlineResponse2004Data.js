/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2003Fsym from './InlineResponse2003Fsym';
import InlineResponse2004Compliance from './InlineResponse2004Compliance';
import InlineResponse2004Estimates from './InlineResponse2004Estimates';
import InlineResponse2004Instrument from './InlineResponse2004Instrument';
import InlineResponse2004Market from './InlineResponse2004Market';
import InlineResponse2004Nsin from './InlineResponse2004Nsin';
import InlineResponse2004Performance from './InlineResponse2004Performance';
import InlineResponse2004Recommendation from './InlineResponse2004Recommendation';
import InlineResponse2004ReportedKeyFigures from './InlineResponse2004ReportedKeyFigures';
import InlineResponse2004RsiWilder from './InlineResponse2004RsiWilder';
import InlineResponse2004SimpleMovingAverage from './InlineResponse2004SimpleMovingAverage';
import InlineResponse2004TradingValue from './InlineResponse2004TradingValue';
import InlineResponse2004ValueUnit from './InlineResponse2004ValueUnit';
import InlineResponse2004Volatility from './InlineResponse2004Volatility';

/**
 * The InlineResponse2004Data model module.
 * @module model/InlineResponse2004Data
 */
class InlineResponse2004Data {
    /**
     * Constructs a new <code>InlineResponse2004Data</code>.
     * @alias module:model/InlineResponse2004Data
     */
    constructor() { 
        
        InlineResponse2004Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2004Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2004Data} obj Optional instance to populate.
     * @return {module:model/InlineResponse2004Data} The populated <code>InlineResponse2004Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2004Data();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('valueUnit')) {
                obj['valueUnit'] = InlineResponse2004ValueUnit.constructFromObject(data['valueUnit']);
            }
            if (data.hasOwnProperty('market')) {
                obj['market'] = InlineResponse2004Market.constructFromObject(data['market']);
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('nsin')) {
                obj['nsin'] = InlineResponse2004Nsin.constructFromObject(data['nsin']);
            }
            if (data.hasOwnProperty('fsym')) {
                obj['fsym'] = InlineResponse2003Fsym.constructFromObject(data['fsym']);
            }
            if (data.hasOwnProperty('instrument')) {
                obj['instrument'] = InlineResponse2004Instrument.constructFromObject(data['instrument']);
            }
            if (data.hasOwnProperty('compliance')) {
                obj['compliance'] = InlineResponse2004Compliance.constructFromObject(data['compliance']);
            }
            if (data.hasOwnProperty('reportedKeyFigures')) {
                obj['reportedKeyFigures'] = InlineResponse2004ReportedKeyFigures.constructFromObject(data['reportedKeyFigures']);
            }
            if (data.hasOwnProperty('performance')) {
                obj['performance'] = InlineResponse2004Performance.constructFromObject(data['performance']);
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = InlineResponse2004Volatility.constructFromObject(data['volatility']);
            }
            if (data.hasOwnProperty('tradingValue')) {
                obj['tradingValue'] = InlineResponse2004TradingValue.constructFromObject(data['tradingValue']);
            }
            if (data.hasOwnProperty('simpleMovingAverage')) {
                obj['simpleMovingAverage'] = InlineResponse2004SimpleMovingAverage.constructFromObject(data['simpleMovingAverage']);
            }
            if (data.hasOwnProperty('rsiWilder')) {
                obj['rsiWilder'] = InlineResponse2004RsiWilder.constructFromObject(data['rsiWilder']);
            }
            if (data.hasOwnProperty('recommendation')) {
                obj['recommendation'] = InlineResponse2004Recommendation.constructFromObject(data['recommendation']);
            }
            if (data.hasOwnProperty('estimates')) {
                obj['estimates'] = InlineResponse2004Estimates.constructFromObject(data['estimates']);
            }
        }
        return obj;
    }


}

/**
 * Identifier of the notation.
 * @member {String} id
 */
InlineResponse2004Data.prototype['id'] = undefined;

/**
 * @member {module:model/InlineResponse2004ValueUnit} valueUnit
 */
InlineResponse2004Data.prototype['valueUnit'] = undefined;

/**
 * @member {module:model/InlineResponse2004Market} market
 */
InlineResponse2004Data.prototype['market'] = undefined;

/**
 * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.
 * @member {String} symbol
 */
InlineResponse2004Data.prototype['symbol'] = undefined;

/**
 * @member {module:model/InlineResponse2004Nsin} nsin
 */
InlineResponse2004Data.prototype['nsin'] = undefined;

/**
 * @member {module:model/InlineResponse2003Fsym} fsym
 */
InlineResponse2004Data.prototype['fsym'] = undefined;

/**
 * @member {module:model/InlineResponse2004Instrument} instrument
 */
InlineResponse2004Data.prototype['instrument'] = undefined;

/**
 * @member {module:model/InlineResponse2004Compliance} compliance
 */
InlineResponse2004Data.prototype['compliance'] = undefined;

/**
 * @member {module:model/InlineResponse2004ReportedKeyFigures} reportedKeyFigures
 */
InlineResponse2004Data.prototype['reportedKeyFigures'] = undefined;

/**
 * @member {module:model/InlineResponse2004Performance} performance
 */
InlineResponse2004Data.prototype['performance'] = undefined;

/**
 * @member {module:model/InlineResponse2004Volatility} volatility
 */
InlineResponse2004Data.prototype['volatility'] = undefined;

/**
 * @member {module:model/InlineResponse2004TradingValue} tradingValue
 */
InlineResponse2004Data.prototype['tradingValue'] = undefined;

/**
 * @member {module:model/InlineResponse2004SimpleMovingAverage} simpleMovingAverage
 */
InlineResponse2004Data.prototype['simpleMovingAverage'] = undefined;

/**
 * @member {module:model/InlineResponse2004RsiWilder} rsiWilder
 */
InlineResponse2004Data.prototype['rsiWilder'] = undefined;

/**
 * @member {module:model/InlineResponse2004Recommendation} recommendation
 */
InlineResponse2004Data.prototype['recommendation'] = undefined;

/**
 * @member {module:model/InlineResponse2004Estimates} estimates
 */
InlineResponse2004Data.prototype['estimates'] = undefined;






export default InlineResponse2004Data;

