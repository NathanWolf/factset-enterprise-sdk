/**
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2002RatiosDividendYield from './InlineResponse2002RatiosDividendYield';
import InlineResponse2002RatiosEnterpriseValueEbit from './InlineResponse2002RatiosEnterpriseValueEbit';
import InlineResponse2002RatiosEnterpriseValueEbita from './InlineResponse2002RatiosEnterpriseValueEbita';
import InlineResponse2002RatiosEnterpriseValueEbitda from './InlineResponse2002RatiosEnterpriseValueEbitda';
import InlineResponse2002RatiosEnterpriseValueFreeCashFlow from './InlineResponse2002RatiosEnterpriseValueFreeCashFlow';
import InlineResponse2002RatiosEnterpriseValueSales from './InlineResponse2002RatiosEnterpriseValueSales';
import InlineResponse2002RatiosPriceBookValue from './InlineResponse2002RatiosPriceBookValue';
import InlineResponse2002RatiosPriceCashFlow from './InlineResponse2002RatiosPriceCashFlow';
import InlineResponse2002RatiosPriceEarnings from './InlineResponse2002RatiosPriceEarnings';
import InlineResponse2002RatiosPriceEarningsGrowth from './InlineResponse2002RatiosPriceEarningsGrowth';
import InlineResponse2002RatiosPriceFreeCashFlow from './InlineResponse2002RatiosPriceFreeCashFlow';
import InlineResponse2002RatiosPriceSales from './InlineResponse2002RatiosPriceSales';

/**
 * The InlineResponse2002Ratios model module.
 * @module model/InlineResponse2002Ratios
 */
class InlineResponse2002Ratios {
    /**
     * Constructs a new <code>InlineResponse2002Ratios</code>.
     * Estimates for selected ratios.
     * @alias module:model/InlineResponse2002Ratios
     */
    constructor() { 
        
        InlineResponse2002Ratios.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2002Ratios</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2002Ratios} obj Optional instance to populate.
     * @return {module:model/InlineResponse2002Ratios} The populated <code>InlineResponse2002Ratios</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2002Ratios();

            if (data.hasOwnProperty('priceSales')) {
                obj['priceSales'] = InlineResponse2002RatiosPriceSales.constructFromObject(data['priceSales']);
            }
            if (data.hasOwnProperty('priceEarnings')) {
                obj['priceEarnings'] = InlineResponse2002RatiosPriceEarnings.constructFromObject(data['priceEarnings']);
            }
            if (data.hasOwnProperty('priceEarningsGrowth')) {
                obj['priceEarningsGrowth'] = InlineResponse2002RatiosPriceEarningsGrowth.constructFromObject(data['priceEarningsGrowth']);
            }
            if (data.hasOwnProperty('priceBookValue')) {
                obj['priceBookValue'] = InlineResponse2002RatiosPriceBookValue.constructFromObject(data['priceBookValue']);
            }
            if (data.hasOwnProperty('priceCashFlow')) {
                obj['priceCashFlow'] = InlineResponse2002RatiosPriceCashFlow.constructFromObject(data['priceCashFlow']);
            }
            if (data.hasOwnProperty('priceFreeCashFlow')) {
                obj['priceFreeCashFlow'] = InlineResponse2002RatiosPriceFreeCashFlow.constructFromObject(data['priceFreeCashFlow']);
            }
            if (data.hasOwnProperty('dividendYield')) {
                obj['dividendYield'] = InlineResponse2002RatiosDividendYield.constructFromObject(data['dividendYield']);
            }
            if (data.hasOwnProperty('enterpriseValueEbit')) {
                obj['enterpriseValueEbit'] = InlineResponse2002RatiosEnterpriseValueEbit.constructFromObject(data['enterpriseValueEbit']);
            }
            if (data.hasOwnProperty('enterpriseValueEbita')) {
                obj['enterpriseValueEbita'] = InlineResponse2002RatiosEnterpriseValueEbita.constructFromObject(data['enterpriseValueEbita']);
            }
            if (data.hasOwnProperty('enterpriseValueEbitda')) {
                obj['enterpriseValueEbitda'] = InlineResponse2002RatiosEnterpriseValueEbitda.constructFromObject(data['enterpriseValueEbitda']);
            }
            if (data.hasOwnProperty('enterpriseValueSales')) {
                obj['enterpriseValueSales'] = InlineResponse2002RatiosEnterpriseValueSales.constructFromObject(data['enterpriseValueSales']);
            }
            if (data.hasOwnProperty('enterpriseValueFreeCashFlow')) {
                obj['enterpriseValueFreeCashFlow'] = InlineResponse2002RatiosEnterpriseValueFreeCashFlow.constructFromObject(data['enterpriseValueFreeCashFlow']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/InlineResponse2002RatiosPriceSales} priceSales
 */
InlineResponse2002Ratios.prototype['priceSales'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosPriceEarnings} priceEarnings
 */
InlineResponse2002Ratios.prototype['priceEarnings'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosPriceEarningsGrowth} priceEarningsGrowth
 */
InlineResponse2002Ratios.prototype['priceEarningsGrowth'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosPriceBookValue} priceBookValue
 */
InlineResponse2002Ratios.prototype['priceBookValue'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosPriceCashFlow} priceCashFlow
 */
InlineResponse2002Ratios.prototype['priceCashFlow'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosPriceFreeCashFlow} priceFreeCashFlow
 */
InlineResponse2002Ratios.prototype['priceFreeCashFlow'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosDividendYield} dividendYield
 */
InlineResponse2002Ratios.prototype['dividendYield'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosEnterpriseValueEbit} enterpriseValueEbit
 */
InlineResponse2002Ratios.prototype['enterpriseValueEbit'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosEnterpriseValueEbita} enterpriseValueEbita
 */
InlineResponse2002Ratios.prototype['enterpriseValueEbita'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosEnterpriseValueEbitda} enterpriseValueEbitda
 */
InlineResponse2002Ratios.prototype['enterpriseValueEbitda'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosEnterpriseValueSales} enterpriseValueSales
 */
InlineResponse2002Ratios.prototype['enterpriseValueSales'] = undefined;

/**
 * @member {module:model/InlineResponse2002RatiosEnterpriseValueFreeCashFlow} enterpriseValueFreeCashFlow
 */
InlineResponse2002Ratios.prototype['enterpriseValueFreeCashFlow'] = undefined;






export default InlineResponse2002Ratios;

