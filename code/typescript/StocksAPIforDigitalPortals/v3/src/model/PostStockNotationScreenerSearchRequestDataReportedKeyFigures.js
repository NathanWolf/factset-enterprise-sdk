/**
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostStockNotationScreenerSearchRequestDataCurrencyDependentKeyFigures from './PostStockNotationScreenerSearchRequestDataCurrencyDependentKeyFigures';
import PostStockNotationScreenerSearchRequestDataEbitMargin from './PostStockNotationScreenerSearchRequestDataEbitMargin';
import PostStockNotationScreenerSearchRequestDataEbitdaMargin from './PostStockNotationScreenerSearchRequestDataEbitdaMargin';
import PostStockNotationScreenerSearchRequestDataFiscalYear from './PostStockNotationScreenerSearchRequestDataFiscalYear';
import PostStockNotationScreenerSearchRequestDataGrossIncomeMargin from './PostStockNotationScreenerSearchRequestDataGrossIncomeMargin';
import PostStockNotationScreenerSearchRequestDataNetIncomeMargin from './PostStockNotationScreenerSearchRequestDataNetIncomeMargin';
import PostStockNotationScreenerSearchRequestDataOperatingMargin from './PostStockNotationScreenerSearchRequestDataOperatingMargin';
import PostStockNotationScreenerSearchRequestDataRatios from './PostStockNotationScreenerSearchRequestDataRatios';
import PostStockNotationScreenerSearchRequestDataReturnOnAssets from './PostStockNotationScreenerSearchRequestDataReturnOnAssets';
import PostStockNotationScreenerSearchRequestDataReturnOnEquity from './PostStockNotationScreenerSearchRequestDataReturnOnEquity';

/**
 * The PostStockNotationScreenerSearchRequestDataReportedKeyFigures model module.
 * @module model/PostStockNotationScreenerSearchRequestDataReportedKeyFigures
 */
class PostStockNotationScreenerSearchRequestDataReportedKeyFigures {
    /**
     * Constructs a new <code>PostStockNotationScreenerSearchRequestDataReportedKeyFigures</code>.
     * @alias module:model/PostStockNotationScreenerSearchRequestDataReportedKeyFigures
     * @param fiscalYear {module:model/PostStockNotationScreenerSearchRequestDataFiscalYear} 
     */
    constructor(fiscalYear) { 
        
        PostStockNotationScreenerSearchRequestDataReportedKeyFigures.initialize(this, fiscalYear);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fiscalYear) { 
        obj['fiscalYear'] = fiscalYear;
    }

    /**
     * Constructs a <code>PostStockNotationScreenerSearchRequestDataReportedKeyFigures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostStockNotationScreenerSearchRequestDataReportedKeyFigures} obj Optional instance to populate.
     * @return {module:model/PostStockNotationScreenerSearchRequestDataReportedKeyFigures} The populated <code>PostStockNotationScreenerSearchRequestDataReportedKeyFigures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostStockNotationScreenerSearchRequestDataReportedKeyFigures();

            if (data.hasOwnProperty('fiscalYear')) {
                obj['fiscalYear'] = PostStockNotationScreenerSearchRequestDataFiscalYear.constructFromObject(data['fiscalYear']);
            }
            if (data.hasOwnProperty('currencyDependentKeyFigures')) {
                obj['currencyDependentKeyFigures'] = PostStockNotationScreenerSearchRequestDataCurrencyDependentKeyFigures.constructFromObject(data['currencyDependentKeyFigures']);
            }
            if (data.hasOwnProperty('ebitMargin')) {
                obj['ebitMargin'] = PostStockNotationScreenerSearchRequestDataEbitMargin.constructFromObject(data['ebitMargin']);
            }
            if (data.hasOwnProperty('ebitdaMargin')) {
                obj['ebitdaMargin'] = PostStockNotationScreenerSearchRequestDataEbitdaMargin.constructFromObject(data['ebitdaMargin']);
            }
            if (data.hasOwnProperty('netIncomeMargin')) {
                obj['netIncomeMargin'] = PostStockNotationScreenerSearchRequestDataNetIncomeMargin.constructFromObject(data['netIncomeMargin']);
            }
            if (data.hasOwnProperty('grossIncomeMargin')) {
                obj['grossIncomeMargin'] = PostStockNotationScreenerSearchRequestDataGrossIncomeMargin.constructFromObject(data['grossIncomeMargin']);
            }
            if (data.hasOwnProperty('operatingMargin')) {
                obj['operatingMargin'] = PostStockNotationScreenerSearchRequestDataOperatingMargin.constructFromObject(data['operatingMargin']);
            }
            if (data.hasOwnProperty('returnOnAssets')) {
                obj['returnOnAssets'] = PostStockNotationScreenerSearchRequestDataReturnOnAssets.constructFromObject(data['returnOnAssets']);
            }
            if (data.hasOwnProperty('returnOnEquity')) {
                obj['returnOnEquity'] = PostStockNotationScreenerSearchRequestDataReturnOnEquity.constructFromObject(data['returnOnEquity']);
            }
            if (data.hasOwnProperty('ratios')) {
                obj['ratios'] = PostStockNotationScreenerSearchRequestDataRatios.constructFromObject(data['ratios']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataFiscalYear} fiscalYear
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['fiscalYear'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataCurrencyDependentKeyFigures} currencyDependentKeyFigures
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['currencyDependentKeyFigures'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataEbitMargin} ebitMargin
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['ebitMargin'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataEbitdaMargin} ebitdaMargin
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['ebitdaMargin'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataNetIncomeMargin} netIncomeMargin
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['netIncomeMargin'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataGrossIncomeMargin} grossIncomeMargin
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['grossIncomeMargin'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataOperatingMargin} operatingMargin
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['operatingMargin'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataReturnOnAssets} returnOnAssets
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['returnOnAssets'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataReturnOnEquity} returnOnEquity
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['returnOnEquity'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataRatios} ratios
 */
PostStockNotationScreenerSearchRequestDataReportedKeyFigures.prototype['ratios'] = undefined;






export default PostStockNotationScreenerSearchRequestDataReportedKeyFigures;

