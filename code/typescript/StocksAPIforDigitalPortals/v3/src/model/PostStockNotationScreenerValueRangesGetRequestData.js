/**
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostStockNotationScreenerSearchRequestDataCompany from './PostStockNotationScreenerSearchRequestDataCompany';
import PostStockNotationScreenerSearchRequestDataCompliance from './PostStockNotationScreenerSearchRequestDataCompliance';
import PostStockNotationScreenerSearchRequestDataEstimates from './PostStockNotationScreenerSearchRequestDataEstimates';
import PostStockNotationScreenerSearchRequestDataIndexMembership from './PostStockNotationScreenerSearchRequestDataIndexMembership';
import PostStockNotationScreenerSearchRequestDataIndustryClassification from './PostStockNotationScreenerSearchRequestDataIndustryClassification';
import PostStockNotationScreenerSearchRequestDataPerformance from './PostStockNotationScreenerSearchRequestDataPerformance';
import PostStockNotationScreenerSearchRequestDataReportedKeyFigures from './PostStockNotationScreenerSearchRequestDataReportedKeyFigures';
import PostStockNotationScreenerSearchRequestDataRsiWilder from './PostStockNotationScreenerSearchRequestDataRsiWilder';
import PostStockNotationScreenerSearchRequestDataSimpleMovingAverage from './PostStockNotationScreenerSearchRequestDataSimpleMovingAverage';
import PostStockNotationScreenerSearchRequestDataTradingValue from './PostStockNotationScreenerSearchRequestDataTradingValue';
import PostStockNotationScreenerSearchRequestDataValidation from './PostStockNotationScreenerSearchRequestDataValidation';
import PostStockNotationScreenerSearchRequestDataVolatility from './PostStockNotationScreenerSearchRequestDataVolatility';
import PostStockNotationScreenerValueRangesGetRequestDataRecommendation from './PostStockNotationScreenerValueRangesGetRequestDataRecommendation';

/**
 * The PostStockNotationScreenerValueRangesGetRequestData model module.
 * @module model/PostStockNotationScreenerValueRangesGetRequestData
 */
class PostStockNotationScreenerValueRangesGetRequestData {
    /**
     * Constructs a new <code>PostStockNotationScreenerValueRangesGetRequestData</code>.
     * The data member contains the request&#39;s primary data.
     * @alias module:model/PostStockNotationScreenerValueRangesGetRequestData
     */
    constructor() { 
        
        PostStockNotationScreenerValueRangesGetRequestData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostStockNotationScreenerValueRangesGetRequestData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostStockNotationScreenerValueRangesGetRequestData} obj Optional instance to populate.
     * @return {module:model/PostStockNotationScreenerValueRangesGetRequestData} The populated <code>PostStockNotationScreenerValueRangesGetRequestData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostStockNotationScreenerValueRangesGetRequestData();

            if (data.hasOwnProperty('validation')) {
                obj['validation'] = PostStockNotationScreenerSearchRequestDataValidation.constructFromObject(data['validation']);
            }
            if (data.hasOwnProperty('stockType')) {
                obj['stockType'] = ApiClient.convertToType(data['stockType'], ['String']);
            }
            if (data.hasOwnProperty('industryClassification')) {
                obj['industryClassification'] = PostStockNotationScreenerSearchRequestDataIndustryClassification.constructFromObject(data['industryClassification']);
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = PostStockNotationScreenerSearchRequestDataCompany.constructFromObject(data['company']);
            }
            if (data.hasOwnProperty('indexMembership')) {
                obj['indexMembership'] = PostStockNotationScreenerSearchRequestDataIndexMembership.constructFromObject(data['indexMembership']);
            }
            if (data.hasOwnProperty('compliance')) {
                obj['compliance'] = PostStockNotationScreenerSearchRequestDataCompliance.constructFromObject(data['compliance']);
            }
            if (data.hasOwnProperty('reportedKeyFigures')) {
                obj['reportedKeyFigures'] = ApiClient.convertToType(data['reportedKeyFigures'], [PostStockNotationScreenerSearchRequestDataReportedKeyFigures]);
            }
            if (data.hasOwnProperty('performance')) {
                obj['performance'] = PostStockNotationScreenerSearchRequestDataPerformance.constructFromObject(data['performance']);
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = PostStockNotationScreenerSearchRequestDataVolatility.constructFromObject(data['volatility']);
            }
            if (data.hasOwnProperty('tradingValue')) {
                obj['tradingValue'] = PostStockNotationScreenerSearchRequestDataTradingValue.constructFromObject(data['tradingValue']);
            }
            if (data.hasOwnProperty('simpleMovingAverage')) {
                obj['simpleMovingAverage'] = PostStockNotationScreenerSearchRequestDataSimpleMovingAverage.constructFromObject(data['simpleMovingAverage']);
            }
            if (data.hasOwnProperty('rsiWilder')) {
                obj['rsiWilder'] = PostStockNotationScreenerSearchRequestDataRsiWilder.constructFromObject(data['rsiWilder']);
            }
            if (data.hasOwnProperty('recommendation')) {
                obj['recommendation'] = PostStockNotationScreenerValueRangesGetRequestDataRecommendation.constructFromObject(data['recommendation']);
            }
            if (data.hasOwnProperty('estimates')) {
                obj['estimates'] = ApiClient.convertToType(data['estimates'], [PostStockNotationScreenerSearchRequestDataEstimates]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataValidation} validation
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['validation'] = undefined;

/**
 * Type of stock.
 * @member {Array.<module:model/PostStockNotationScreenerValueRangesGetRequestData.StockTypeEnum>} stockType
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['stockType'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataIndustryClassification} industryClassification
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['industryClassification'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataCompany} company
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['company'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataIndexMembership} indexMembership
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['indexMembership'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataCompliance} compliance
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['compliance'] = undefined;

/**
 * Parameters for stock-specific key figures as reported for a fiscal year.
 * @member {Array.<module:model/PostStockNotationScreenerSearchRequestDataReportedKeyFigures>} reportedKeyFigures
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['reportedKeyFigures'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataPerformance} performance
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['performance'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataVolatility} volatility
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['volatility'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataTradingValue} tradingValue
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['tradingValue'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataSimpleMovingAverage} simpleMovingAverage
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['simpleMovingAverage'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerSearchRequestDataRsiWilder} rsiWilder
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['rsiWilder'] = undefined;

/**
 * @member {module:model/PostStockNotationScreenerValueRangesGetRequestDataRecommendation} recommendation
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['recommendation'] = undefined;

/**
 * Parameters for stock-specific consolidated estimates for a fiscal year.
 * @member {Array.<module:model/PostStockNotationScreenerSearchRequestDataEstimates>} estimates
 */
PostStockNotationScreenerValueRangesGetRequestData.prototype['estimates'] = undefined;





/**
 * Allowed values for the <code>stockType</code> property.
 * @enum {String}
 * @readonly
 */
PostStockNotationScreenerValueRangesGetRequestData['StockTypeEnum'] = {

    /**
     * value: "common"
     * @const
     */
    "common": "common",

    /**
     * value: "preferred"
     * @const
     */
    "preferred": "preferred",

    /**
     * value: "depositoryReceipt"
     * @const
     */
    "depositoryReceipt": "depositoryReceipt",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default PostStockNotationScreenerValueRangesGetRequestData;

