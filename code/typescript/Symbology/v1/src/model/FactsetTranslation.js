/**
 * FactSet Symbology API
 * The FactSet Symbology API provides symbol resolution services, allowing clients to translate market identifiers into various symbology types. various market symbology types such as, FactSet Permanent Identifiers, CUSIP, ISIN,  SEDOL, Tickers, and Bloomberg FIGIs.   Factset's Symbology API sits at the center of its hub-and-spoke data model, enabling you to quickly  harmonize the expanding catalog of Content APIs. Translate market IDs into CUSIP, SEDOL, ISIN, Tickers as a point in time or for the entire history of the requested id allowing Data Management workflows to normalize ids over time. Additionally, the Symbology API provides  translation of market ids into Bloomberg FIGI. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactsetTranslation model module.
 * @module model/FactsetTranslation
 */
class FactsetTranslation {
    /**
     * Constructs a new <code>FactsetTranslation</code>.
     * FactSet Translation data object.
     * @alias module:model/FactsetTranslation
     */
    constructor() { 
        
        FactsetTranslation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactsetTranslation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactsetTranslation} obj Optional instance to populate.
     * @return {module:model/FactsetTranslation} The populated <code>FactsetTranslation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactsetTranslation();

            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('fsymSecurityId')) {
                obj['fsymSecurityId'] = ApiClient.convertToType(data['fsymSecurityId'], 'String');
            }
            if (data.hasOwnProperty('fsymRegionalId')) {
                obj['fsymRegionalId'] = ApiClient.convertToType(data['fsymRegionalId'], 'String');
            }
            if (data.hasOwnProperty('fsymListingId')) {
                obj['fsymListingId'] = ApiClient.convertToType(data['fsymListingId'], 'String');
            }
            if (data.hasOwnProperty('fsymEntityId')) {
                obj['fsymEntityId'] = ApiClient.convertToType(data['fsymEntityId'], 'String');
            }
            if (data.hasOwnProperty('fsymTickerExchange')) {
                obj['fsymTickerExchange'] = ApiClient.convertToType(data['fsymTickerExchange'], 'String');
            }
            if (data.hasOwnProperty('fsymTickerRegion')) {
                obj['fsymTickerRegion'] = ApiClient.convertToType(data['fsymTickerRegion'], 'String');
            }
            if (data.hasOwnProperty('frefListingExchange')) {
                obj['frefListingExchange'] = ApiClient.convertToType(data['frefListingExchange'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('securityType')) {
                obj['securityType'] = ApiClient.convertToType(data['securityType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * FactSet Default Permanent Identifier. Regional and Composite (-USA) request `ids` will use a Regional ID '-R', Listing specific ids '-NYS' will use Listing ids '-L', Entities will use '-E', and FI will use security '-S' ids. [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
 * @member {String} fsymId
 */
FactsetTranslation.prototype['fsymId'] = undefined;

/**
 * FactSet Security Identifier. Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S). All equity and fixed income securities that exist on FactSet are allocated a security-level permanent identifier. [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
 * @member {String} fsymSecurityId
 */
FactsetTranslation.prototype['fsymSecurityId'] = undefined;

/**
 * FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the securityâ€™s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet. [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
 * @member {String} fsymRegionalId
 */
FactsetTranslation.prototype['fsymRegionalId'] = undefined;

/**
 * FactSet Listing Security Identifier. Six alpha-numeric characters, vowels excluded, with an -L suffix (XXXXXX-L). The listing-level permanent identifier will be available prior to the end of trading on the first day of trading. Does not populate for composite ids (i.e. '-USA') since these are not specified listing exchanges. [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
 * @member {String} fsymListingId
 */
FactsetTranslation.prototype['fsymListingId'] = undefined;

/**
 * FactSet Entity Identifier (-E). For more information on Entity Ids, visit [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
 * @member {String} fsymEntityId
 */
FactsetTranslation.prototype['fsymEntityId'] = undefined;

/**
 * FactSet exchange ticker symbol. For definitions of Exchange Codes, visit [Online Assistant Page #12544](https://oa.apps.factset.com/pages/12544).
 * @member {String} fsymTickerExchange
 */
FactsetTranslation.prototype['fsymTickerExchange'] = undefined;

/**
 * FactSet region ticker symbol. For details on Global Region Codes, visit [Online Assistant Page #13258](https://oa.apps.factset.com/pages/13258)
 * @member {String} fsymTickerRegion
 */
FactsetTranslation.prototype['fsymTickerRegion'] = undefined;

/**
 * Primary Listing Exchange Code. For details on Exchange Code Definitions, visit [Online Assistant Page #12544](https://oa.apps.factset.com/pages/12544) 
 * @member {String} frefListingExchange
 */
FactsetTranslation.prototype['frefListingExchange'] = undefined;

/**
 * Three character ISO Currency code. For details on ISO Currency Code definitions, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470)
 * @member {String} currency
 */
FactsetTranslation.prototype['currency'] = undefined;

/**
 * Returns security types for equities. For definitions of Security Types, visit [Online Assistant Page #15776](https://oa.apps.factset.com/pages/15776)
 * @member {String} securityType
 */
FactsetTranslation.prototype['securityType'] = undefined;

/**
 * Proper Name of company or issuer.
 * @member {String} name
 */
FactsetTranslation.prototype['name'] = undefined;

/**
 * Identifier specified in the `ids` parameter of the request.
 * @member {String} requestId
 */
FactsetTranslation.prototype['requestId'] = undefined;






export default FactsetTranslation;

