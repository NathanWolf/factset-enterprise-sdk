/**
 * Open:FactSet - Partners
 * This service provides the capability to search and download unstructured content provided by <a href=\"https://open.factset.com/catalog/en-us\">Open:FactSet Partners</a>.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BeamEndpointsFiles model module.
 * @module model/BeamEndpointsFiles
 */
class BeamEndpointsFiles {
    /**
     * Constructs a new <code>BeamEndpointsFiles</code>.
     * Returns Beam Endpoints Response
     * @alias module:model/BeamEndpointsFiles
     */
    constructor() { 
        
        BeamEndpointsFiles.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BeamEndpointsFiles</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BeamEndpointsFiles} obj Optional instance to populate.
     * @return {module:model/BeamEndpointsFiles} The populated <code>BeamEndpointsFiles</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BeamEndpointsFiles();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('clinicalTrialId')) {
                obj['clinicalTrialId'] = ApiClient.convertToType(data['clinicalTrialId'], 'String');
            }
            if (data.hasOwnProperty('fullForm')) {
                obj['fullForm'] = ApiClient.convertToType(data['fullForm'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Cleaned and standardized abbreviations of primary endpoints that are common or of key interest
 * @member {String} name
 */
BeamEndpointsFiles.prototype['name'] = undefined;

/**
 * The filename of the trial data
 * @member {String} fileName
 */
BeamEndpointsFiles.prototype['fileName'] = undefined;

/**
 * Specifies OZMOSI unique ID for each historical version of a trial
 * @member {String} clinicalTrialId
 */
BeamEndpointsFiles.prototype['clinicalTrialId'] = undefined;

/**
 * Cleaned and standardized full names of primary endpoints that are common or of key interest
 * @member {String} fullForm
 */
BeamEndpointsFiles.prototype['fullForm'] = undefined;

/**
 * Download link for the clinical trials provided by the Ozmosi feed
 * @member {String} url
 */
BeamEndpointsFiles.prototype['url'] = undefined;






export default BeamEndpointsFiles;

