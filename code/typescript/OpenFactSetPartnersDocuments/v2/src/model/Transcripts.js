/**
 * Open:FactSet - Partners
 * This service provides the capability to search and download unstructured content provided by <a href=\"https://open.factset.com/catalog/en-us\">Open:FactSet Partners</a>.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Transcripts model module.
 * @module model/Transcripts
 */
class Transcripts {
    /**
     * Constructs a new <code>Transcripts</code>.
     * Returns Transcripts Response
     * @alias module:model/Transcripts
     */
    constructor() { 
        
        Transcripts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Transcripts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Transcripts} obj Optional instance to populate.
     * @return {module:model/Transcripts} The populated <code>Transcripts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Transcripts();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('languageType')) {
                obj['languageType'] = ApiClient.convertToType(data['languageType'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('trackingId')) {
                obj['trackingId'] = ApiClient.convertToType(data['trackingId'], 'String');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], 'String');
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('saId')) {
                obj['saId'] = ApiClient.convertToType(data['saId'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Specifies the type of the record.
 * @member {String} type
 */
Transcripts.prototype['type'] = undefined;

/**
 *  Defines the language type(either local or english)of the XML file.
 * @member {String} languageType
 */
Transcripts.prototype['languageType'] = undefined;

/**
 * Specifies the date of the XML file.
 * @member {Date} date
 */
Transcripts.prototype['date'] = undefined;

/**
 * Defines the name of the record.
 * @member {String} fileName
 */
Transcripts.prototype['fileName'] = undefined;

/**
 * Defines an identifier assigned to an event.
 * @member {String} trackingId
 */
Transcripts.prototype['trackingId'] = undefined;

/**
 *  Defines Code of the event type.
 * @member {String} eventType
 */
Transcripts.prototype['eventType'] = undefined;

/**
 * Specifies the name of the company of the event.
 * @member {String} companyName
 */
Transcripts.prototype['companyName'] = undefined;

/**
 * Defines the language of the XML file.
 * @member {String} language
 */
Transcripts.prototype['language'] = undefined;

/**
 * Specifies the name of the company of the event.
 * @member {String} saId
 */
Transcripts.prototype['saId'] = undefined;

/**
 * Download link for the Scripts Asia API provided by the Scripts Asia.
 * @member {String} url
 */
Transcripts.prototype['url'] = undefined;






export default Transcripts;

