/**
 * Open:FactSet - Partners
 * This service provides the capability to search and download unstructured content provided by <a href=\"https://open.factset.com/catalog/en-us\">Open:FactSet Partners</a>.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthStatus from '../model/AuthStatus';
import OrbitResponse from '../model/OrbitResponse';
import OrbithistoryResponse from '../model/OrbithistoryResponse';

/**
* Orbit service.
* @module api/OrbitApi
*/
export default class OrbitApi {

    /**
    * Constructs a new OrbitApi. 
    * @alias module:api/OrbitApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns the daily files from Open:FactSet Partner - Orbit.
     * Returns the daily files from Open:FactSet Partner - Orbit.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sort Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used. (default to '-startDate')
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {Date} opts.startDate The earliest date of the Orbit file the API should fetching for based on fileTimestamp.
     * @param {Date} opts.endDate The latest date of the Orbit file the API should fetching for based on fileTimestamp.
     * @param {String} opts.stockCode The company/ticker which is associated with the transcript. Please submit a question via Issue Tracker under the Open:FactSet - Partner Communication to get the required list of tickers. 
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @param {String} opts.title This parameter is used to filter the results based on the headline of the transcript.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OrbitResponse} and HTTP response
     */
    getChineseTranscriptsDailyWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '_sort': opts['sort'],
        '_paginationLimit': opts['paginationLimit'],
        '_paginationOffset': opts['paginationOffset'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'stockCode': opts['stockCode'],
        'fileName': opts['fileName'],
        'title': opts['title']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = OrbitResponse;

      return this.apiClient.callApi(
        '/orbit/transcripts/daily', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns the daily files from Open:FactSet Partner - Orbit.
     * Returns the daily files from Open:FactSet Partner - Orbit.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sort Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used. (default to '-startDate')
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {Date} opts.startDate The earliest date of the Orbit file the API should fetching for based on fileTimestamp.
     * @param {Date} opts.endDate The latest date of the Orbit file the API should fetching for based on fileTimestamp.
     * @param {String} opts.stockCode The company/ticker which is associated with the transcript. Please submit a question via Issue Tracker under the Open:FactSet - Partner Communication to get the required list of tickers. 
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @param {String} opts.title This parameter is used to filter the results based on the headline of the transcript.
     * @return { Promise.< module:model/OrbitResponse > } a Promise, with data of type {@link module:model/OrbitResponse }
     */
    getChineseTranscriptsDaily(opts) {
      return this.getChineseTranscriptsDailyWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns the history files from Open:FactSet Partner - Orbit
     * Returns the historical files from February 28th, 2005 to current date. 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OrbithistoryResponse} and HTTP response
     */
    getChineseTranscriptsHistoryWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '_paginationLimit': opts['paginationLimit'],
        '_paginationOffset': opts['paginationOffset'],
        'fileName': opts['fileName']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = OrbithistoryResponse;

      return this.apiClient.callApi(
        '/orbit/transcripts/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns the history files from Open:FactSet Partner - Orbit
     * Returns the historical files from February 28th, 2005 to current date. 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @return { Promise.< module:model/OrbithistoryResponse > } a Promise, with data of type {@link module:model/OrbithistoryResponse }
     */
    getChineseTranscriptsHistory(opts) {
      return this.getChineseTranscriptsHistoryWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





