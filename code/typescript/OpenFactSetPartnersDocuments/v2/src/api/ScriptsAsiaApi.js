/**
 * Open:FactSet - Partners
 * This service provides the capability to search and download unstructured content provided by <a href=\"https://open.factset.com/catalog/en-us\">Open:FactSet Partners</a>.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthStatus from '../model/AuthStatus';
import ScriptsAsiaResponse from '../model/ScriptsAsiaResponse';

/**
* ScriptsAsia service.
* @module api/ScriptsAsiaApi
*/
export default class ScriptsAsiaApi {

    /**
    * Constructs a new ScriptsAsiaApi. 
    * @alias module:api/ScriptsAsiaApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns the daily files from Open:FactSet Partner - Scripts Asia.
     * Returns XML files and relevant metadata provided by Open: FactSet Partner – Scripts Asia. - type=delta Will get the latest 7 days files. Will run every two hours. - type=full Will get complete history except the latest 7 days. Will run weekly once on Friday.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sort Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used. (default to '-startDate')
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {String} opts.trackingId Unique Scripts Asia identifier assigned to an event. 
     * @param {String} opts.saId This parameter filters the results based on saId of the Transcript. 
     * @param {Date} opts.startDate The earliest date of the Scripts Asia file the API should return based on date. 
     * @param {Date} opts.endDate The latest date of the Scripts Asia file the API should return based on date.          
     * @param {String} opts.companyName This parameter filters the results based on Company Name of the Transcript. 
     * @param {module:model/String} opts.eventType This parameter filters the results based on eventType of the Transcript.  * 01 = Shareholders Meeting * 02 = Earnings Announcement * 03 = Medium-term Management Plan Announcement * 04 = Analyst Meeting * 05 = Special Announcement * 06 = Investor Conference 
     * @param {module:model/String} opts.languageType This parameter filters the results based on language type(either English or local) of the Transcript.  (default to 'local')
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @param {module:model/String} opts.type Specifies the type of the file. (default to 'delta')
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ScriptsAsiaResponse} and HTTP response
     */
    getScriptsAsiaFilesWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '_sort': opts['sort'],
        '_paginationLimit': opts['paginationLimit'],
        '_paginationOffset': opts['paginationOffset'],
        'trackingId': opts['trackingId'],
        'saId': opts['saId'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'companyName': opts['companyName'],
        'eventType': opts['eventType'],
        'languageType': opts['languageType'],
        'fileName': opts['fileName'],
        'type': opts['type']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = ScriptsAsiaResponse;

      return this.apiClient.callApi(
        '/scripts-asia/transcripts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns the daily files from Open:FactSet Partner - Scripts Asia.
     * Returns XML files and relevant metadata provided by Open: FactSet Partner – Scripts Asia. - type=delta Will get the latest 7 days files. Will run every two hours. - type=full Will get complete history except the latest 7 days. Will run weekly once on Friday.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sort Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used. (default to '-startDate')
     * @param {Number} opts.paginationLimit Specifies the maximum number of results to return per result. (default to 20)
     * @param {Number} opts.paginationOffset Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. Using this parameter can fetch maximum of first 10000 records. (default to 0)
     * @param {String} opts.trackingId Unique Scripts Asia identifier assigned to an event. 
     * @param {String} opts.saId This parameter filters the results based on saId of the Transcript. 
     * @param {Date} opts.startDate The earliest date of the Scripts Asia file the API should return based on date. 
     * @param {Date} opts.endDate The latest date of the Scripts Asia file the API should return based on date.          
     * @param {String} opts.companyName This parameter filters the results based on Company Name of the Transcript. 
     * @param {module:model/String} opts.eventType This parameter filters the results based on eventType of the Transcript.  * 01 = Shareholders Meeting * 02 = Earnings Announcement * 03 = Medium-term Management Plan Announcement * 04 = Analyst Meeting * 05 = Special Announcement * 06 = Investor Conference 
     * @param {module:model/String} opts.languageType This parameter filters the results based on language type(either English or local) of the Transcript.  (default to 'local')
     * @param {String} opts.fileName This parameter is used to filters the results based on file name.
     * @param {module:model/String} opts.type Specifies the type of the file. (default to 'delta')
     * @return { Promise.< module:model/ScriptsAsiaResponse > } a Promise, with data of type {@link module:model/ScriptsAsiaResponse }
     */
    getScriptsAsiaFiles(opts) {
      return this.getScriptsAsiaFilesWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





