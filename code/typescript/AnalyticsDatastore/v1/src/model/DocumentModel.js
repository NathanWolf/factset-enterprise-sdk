/**
 * Analytics Datastore API
 * Allow clients to fetch precalculated Analytics through predeterministic URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StringOrNumberTagValue from './StringOrNumberTagValue';

/**
 * The DocumentModel model module.
 * @module model/DocumentModel
 */
class DocumentModel {
    /**
     * Constructs a new <code>DocumentModel</code>.
     * Document model
     * @alias module:model/DocumentModel
     */
    constructor() { 
        
        DocumentModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentModel} obj Optional instance to populate.
     * @return {module:model/DocumentModel} The populated <code>DocumentModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentModel();

            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': StringOrNumberTagValue});
            }
        }
        return obj;
    }


}

/**
 * The resolved URL pointing to the location of the underlying report
 * @member {String} url
 */
DocumentModel.prototype['url'] = undefined;

/**
 * string property to denote what Product created this document.
 * @member {String} productType
 */
DocumentModel.prototype['productType'] = undefined;

/**
 * The documents tags, represented in a key value format with the tag name as the key; and the tag's value as the value
 * @member {Object.<String, module:model/StringOrNumberTagValue>} tags
 */
DocumentModel.prototype['tags'] = undefined;






export default DocumentModel;

