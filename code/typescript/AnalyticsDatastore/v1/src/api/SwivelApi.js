/**
 * Analytics Datastore  API
 * Allow clients to fetch precalculated Analytics through predeterministic URLs.
 *
 * The version of the OpenAPI document: 1
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Swivel service.
* @module api/SwivelApi
* @version 0.20.0
*/
export default class SwivelApi {

    /**
    * Constructs a new SwivelApi. 
    * @alias module:api/SwivelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Swivel endpoint, takes report parameter inputs and returns the Cargo location for the specified report via a 302 redirect.
     * Note: Due to Swagger UI functionality, the redirect is automatically followed when using 'Try it out', so instead of the 302 Header response, a 200 is returned with the Cargo response Body.
     * @param {String} pubDoc The publisher document containing the report
     * @param {String} assetName The PA/SPAR asset name and extension
     * @param {String} reportId The PA/SPAR report ID
     * @param {String} tileId The PA/SPAR tile ID
     * @param {String} accountId The account ID
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<String>} and HTTP response
     */
    getSwivelEndpointWithHttpInfo(pubDoc, assetName, reportId, tileId, accountId) {
      let postBody = null;
      // verify the required parameter 'pubDoc' is set
      if (pubDoc === undefined || pubDoc === null) {
        throw new Error("Missing the required parameter 'pubDoc' when calling getSwivelEndpoint");
      }
      // verify the required parameter 'assetName' is set
      if (assetName === undefined || assetName === null) {
        throw new Error("Missing the required parameter 'assetName' when calling getSwivelEndpoint");
      }
      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling getSwivelEndpoint");
      }
      // verify the required parameter 'tileId' is set
      if (tileId === undefined || tileId === null) {
        throw new Error("Missing the required parameter 'tileId' when calling getSwivelEndpoint");
      }
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getSwivelEndpoint");
      }

      let pathParams = {
        'pubDoc': pubDoc,
        'assetName': assetName,
        'reportId': reportId,
        'tileId': tileId,
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['headers'];


      let returnType = ['String'];

      return this.apiClient.callApi(
        '/analytics/pub-datastore/swivel/v1/{pubDoc}/{assetName}/{reportId}/{tileId}/{accountId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Swivel endpoint, takes report parameter inputs and returns the Cargo location for the specified report via a 302 redirect.
     * Note: Due to Swagger UI functionality, the redirect is automatically followed when using 'Try it out', so instead of the 302 Header response, a 200 is returned with the Cargo response Body.
     * @param {String} pubDoc The publisher document containing the report
     * @param {String} assetName The PA/SPAR asset name and extension
     * @param {String} reportId The PA/SPAR report ID
     * @param {String} tileId The PA/SPAR tile ID
     * @param {String} accountId The account ID
     * @return { Promise.< Array.<String> > } a Promise, with data of type {@link Array.<String> }
     */
    getSwivelEndpoint(pubDoc, assetName, reportId, tileId, accountId) {
      return this.getSwivelEndpointWithHttpInfo(pubDoc, assetName, reportId, tileId, accountId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





