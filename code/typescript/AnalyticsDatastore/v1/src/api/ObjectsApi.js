/**
 * Analytics Datastore API
 * Allow clients to fetch precalculated Analytics through predeterministic URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Objects service.
* @module api/ObjectsApi
*/
export default class ObjectsApi {

    /**
    * Constructs a new ObjectsApi. 
    * @alias module:api/ObjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Gets an object given an ID. In this case ID retrieved from mapping Location header, object data in response body.
     * Raw object data can be found in the response body. This can be either the mapped PDF/PPT or STACH json, depending on the mapping. https://pages.github.factset.com/analytics-reporting/stachschema/#/    Optional request header \"accept-encoding\", with allowed values of \"br\" and \"gzip\". If accept-encoding is passed, the response is compressed.
     * @param {String} groupId The ID of the group
     * @param {String} objectId The ID of the object
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    getCargoEndpointWithHttpInfo(groupId, objectId) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling getCargoEndpoint");
      }
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling getCargoEndpoint");
      }

      let pathParams = {
        'groupId': groupId,
        'objectId': objectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = [];


      let returnType = null;

      return this.apiClient.callApi(
        '/analytics/pub-datastore/cargo/v1/groups/{groupId}/objects/{objectId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Gets an object given an ID. In this case ID retrieved from mapping Location header, object data in response body.
     * Raw object data can be found in the response body. This can be either the mapped PDF/PPT or STACH json, depending on the mapping. https://pages.github.factset.com/analytics-reporting/stachschema/#/    Optional request header \"accept-encoding\", with allowed values of \"br\" and \"gzip\". If accept-encoding is passed, the response is compressed.
     * @param {String} groupId The ID of the group
     * @param {String} objectId The ID of the object
     * @return { Promise } a Promise
     */
    getCargoEndpoint(groupId, objectId) {
      return this.getCargoEndpointWithHttpInfo(groupId, objectId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





