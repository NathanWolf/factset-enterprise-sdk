/**
 * Foreign Exchange Rates API
 * Foreign Exchange Rates API in which retrieves Spots and Forwards for a given currency pair and date range. <p>*Spots and Forwards rates are sourced from W/M Reuters.The WM Company calculates daily standardized spot rates for global foreign exchange transactions, using rates provided by Reuters. These rates are recognized globally as the standard by banks, fund managers, and index compilers; increasingly these rates are also being used for benchmark currency trading. In 1994, WM Company began calculating closing spot rates. Closing spot rates provide a standard set of currency rates so that portfolio valuations can be compared to each other and their performances measured against benchmarks, without having discrepancies caused by exchange rates. Closing spot rates are recorded at 16:00 GMT.*</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Forward model module.
 * @module model/Forward
 * @version 0.9.1
 */
class Forward {
    /**
     * Constructs a new <code>Forward</code>.
     * @alias module:model/Forward
     */
    constructor() { 
        
        Forward.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Forward</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Forward} obj Optional instance to populate.
     * @return {module:model/Forward} The populated <code>Forward</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Forward();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('currencyName')) {
                obj['currencyName'] = ApiClient.convertToType(data['currencyName'], 'String');
            }
            if (data.hasOwnProperty('forwardBid')) {
                obj['forwardBid'] = ApiClient.convertToType(data['forwardBid'], 'Number');
            }
            if (data.hasOwnProperty('forwardMid')) {
                obj['forwardMid'] = ApiClient.convertToType(data['forwardMid'], 'Number');
            }
            if (data.hasOwnProperty('forwardAsk')) {
                obj['forwardAsk'] = ApiClient.convertToType(data['forwardAsk'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('forwardPeriod')) {
                obj['forwardPeriod'] = ApiClient.convertToType(data['forwardPeriod'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The FX Forward Rate currency pair requested in the 'ids' parameter. This represents the base and quote currency.
 * @member {String} requestId
 */
Forward.prototype['requestId'] = undefined;

/**
 * The full text currency pair name expressed in Proper Case.
 * @member {String} currencyName
 */
Forward.prototype['currencyName'] = undefined;

/**
 * The currency pair's Forward Rate Bid.
 * @member {Number} forwardBid
 */
Forward.prototype['forwardBid'] = undefined;

/**
 * The currency pair's Forward Rate Mid.
 * @member {Number} forwardMid
 */
Forward.prototype['forwardMid'] = undefined;

/**
 * The currency pair's Forward Rate Ask.
 * @member {Number} forwardAsk
 */
Forward.prototype['forwardAsk'] = undefined;

/**
 * Ending date for the period expressed in YYYY-MM-DD format.
 * @member {Date} date
 */
Forward.prototype['date'] = undefined;

/**
 * The Forward Time Period requested for the Currency Pair.
 * @member {String} forwardPeriod
 */
Forward.prototype['forwardPeriod'] = undefined;






export default Forward;

