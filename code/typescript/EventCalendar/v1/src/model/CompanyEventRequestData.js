/**
 * Event Calendar API
 * Retrieves events for companies
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyEventRequestDataDate from './CompanyEventRequestDataDate';
import CompanyEventRequestDataUniverse from './CompanyEventRequestDataUniverse';

/**
 * The CompanyEventRequestData model module.
 * @module model/CompanyEventRequestData
 */
class CompanyEventRequestData {
    /**
     * Constructs a new <code>CompanyEventRequestData</code>.
     * @alias module:model/CompanyEventRequestData
     */
    constructor() { 
        
        CompanyEventRequestData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyEventRequestData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyEventRequestData} obj Optional instance to populate.
     * @return {module:model/CompanyEventRequestData} The populated <code>CompanyEventRequestData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyEventRequestData();

            if (data.hasOwnProperty('date')) {
                obj['date'] = CompanyEventRequestDataDate.constructFromObject(data['date']);
            }
            if (data.hasOwnProperty('universe')) {
                obj['universe'] = CompanyEventRequestDataUniverse.constructFromObject(data['universe']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/CompanyEventRequestDataDate} date
 */
CompanyEventRequestData.prototype['date'] = undefined;

/**
 * @member {module:model/CompanyEventRequestDataUniverse} universe
 */
CompanyEventRequestData.prototype['universe'] = undefined;

/**
 * The type of events returned in the response
 * @member {Array.<module:model/CompanyEventRequestData.TypesEnum>} types
 */
CompanyEventRequestData.prototype['types'] = undefined;





/**
 * Allowed values for the <code>types</code> property.
 * @enum {String}
 * @readonly
 */
CompanyEventRequestData['TypesEnum'] = {

    /**
     * value: "E"
     * @const
     */
    "E": "E",

    /**
     * value: "SA"
     * @const
     */
    "SA": "SA",

    /**
     * value: "G"
     * @const
     */
    "G": "G",

    /**
     * value: "AM"
     * @const
     */
    "AM": "AM",

    /**
     * value: "SM"
     * @const
     */
    "SM": "SM",

    /**
     * value: "SS"
     * @const
     */
    "SS": "SS",

    /**
     * value: "CP"
     * @const
     */
    "CP": "CP",

    /**
     * value: "confirmedER"
     * @const
     */
    "confirmedER": "confirmedER",

    /**
     * value: "SR"
     * @const
     */
    "SR": "SR",

    /**
     * value: "projectedER"
     * @const
     */
    "projectedER": "projectedER",

    /**
     * value: "S"
     * @const
     */
    "S": "S",

    /**
     * value: "D"
     * @const
     */
    "D": "D"
};



export default CompanyEventRequestData;

