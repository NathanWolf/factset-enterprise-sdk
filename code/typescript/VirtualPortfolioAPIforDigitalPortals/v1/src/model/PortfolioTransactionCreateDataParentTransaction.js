/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PortfolioTransactionCreateDataParentTransaction model module.
 * @module model/PortfolioTransactionCreateDataParentTransaction
 * @version 0.9.2
 */
class PortfolioTransactionCreateDataParentTransaction {
    /**
     * Constructs a new <code>PortfolioTransactionCreateDataParentTransaction</code>.
     * Parent transactions can be used to link transactions together. Only sell or cover short sell can be have buy transaction as its parent. All other combinations will be ignored, but they will not affect the current create request.
     * @alias module:model/PortfolioTransactionCreateDataParentTransaction
     */
    constructor() { 
        
        PortfolioTransactionCreateDataParentTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PortfolioTransactionCreateDataParentTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PortfolioTransactionCreateDataParentTransaction} obj Optional instance to populate.
     * @return {module:model/PortfolioTransactionCreateDataParentTransaction} The populated <code>PortfolioTransactionCreateDataParentTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PortfolioTransactionCreateDataParentTransaction();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Identifier of the parent transaction.
 * @member {String} id
 */
PortfolioTransactionCreateDataParentTransaction.prototype['id'] = undefined;






export default PortfolioTransactionCreateDataParentTransaction;

