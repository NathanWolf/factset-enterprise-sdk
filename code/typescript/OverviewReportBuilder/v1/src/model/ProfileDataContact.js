/**
 * FactSet Overview Report Builder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProfileDataBusinessIndustry from './ProfileDataBusinessIndustry';
import ProfileDataContactPeople from './ProfileDataContactPeople';

/**
 * The ProfileDataContact model module.
 * @module model/ProfileDataContact
 * @version 0.20.0
 */
class ProfileDataContact {
    /**
     * Constructs a new <code>ProfileDataContact</code>.
     * @alias module:model/ProfileDataContact
     * @param address {module:model/ProfileDataBusinessIndustry} 
     * @param city {module:model/ProfileDataBusinessIndustry} 
     * @param phone {module:model/ProfileDataBusinessIndustry} 
     * @param stateProvince {module:model/ProfileDataBusinessIndustry} 
     * @param zip {module:model/ProfileDataBusinessIndustry} 
     * @param country {module:model/ProfileDataBusinessIndustry} 
     * @param website {module:model/ProfileDataBusinessIndustry} 
     * @param email {module:model/ProfileDataBusinessIndustry} 
     */
    constructor(address, city, phone, stateProvince, zip, country, website, email) { 
        
        ProfileDataContact.initialize(this, address, city, phone, stateProvince, zip, country, website, email);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, city, phone, stateProvince, zip, country, website, email) { 
        obj['address'] = address;
        obj['city'] = city;
        obj['phone'] = phone;
        obj['stateProvince'] = stateProvince;
        obj['zip'] = zip;
        obj['country'] = country;
        obj['website'] = website;
        obj['email'] = email;
    }

    /**
     * Constructs a <code>ProfileDataContact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileDataContact} obj Optional instance to populate.
     * @return {module:model/ProfileDataContact} The populated <code>ProfileDataContact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileDataContact();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ProfileDataBusinessIndustry.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ProfileDataBusinessIndustry.constructFromObject(data['city']);
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ProfileDataBusinessIndustry.constructFromObject(data['phone']);
            }
            if (data.hasOwnProperty('stateProvince')) {
                obj['stateProvince'] = ProfileDataBusinessIndustry.constructFromObject(data['stateProvince']);
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ProfileDataBusinessIndustry.constructFromObject(data['zip']);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ProfileDataBusinessIndustry.constructFromObject(data['country']);
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ProfileDataBusinessIndustry.constructFromObject(data['website']);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ProfileDataBusinessIndustry.constructFromObject(data['email']);
            }
            if (data.hasOwnProperty('people')) {
                obj['people'] = ApiClient.convertToType(data['people'], [ProfileDataContactPeople]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ProfileDataBusinessIndustry} address
 */
ProfileDataContact.prototype['address'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} city
 */
ProfileDataContact.prototype['city'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} phone
 */
ProfileDataContact.prototype['phone'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} stateProvince
 */
ProfileDataContact.prototype['stateProvince'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} zip
 */
ProfileDataContact.prototype['zip'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} country
 */
ProfileDataContact.prototype['country'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} website
 */
ProfileDataContact.prototype['website'] = undefined;

/**
 * @member {module:model/ProfileDataBusinessIndustry} email
 */
ProfileDataContact.prototype['email'] = undefined;

/**
 * @member {Array.<module:model/ProfileDataContactPeople>} people
 */
ProfileDataContact.prototype['people'] = undefined;






export default ProfileDataContact;

