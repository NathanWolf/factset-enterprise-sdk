/**
 * OFDB API
 * OFDB API
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SymbolAndFields from './SymbolAndFields';

/**
 * The DateAndContent model module.
 * @module model/DateAndContent
 */
class DateAndContent {
    /**
     * Constructs a new <code>DateAndContent</code>.
     * @alias module:model/DateAndContent
     */
    constructor() { 
        
        DateAndContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateAndContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateAndContent} obj Optional instance to populate.
     * @return {module:model/DateAndContent} The populated <code>DateAndContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateAndContent();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Number');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], [SymbolAndFields]);
            }
        }
        return obj;
    }


}

/**
 * Date unique to the database.
 * @member {Number} date
 */
DateAndContent.prototype['date'] = undefined;

/**
 * @member {Array.<module:model/SymbolAndFields>} content
 */
DateAndContent.prototype['content'] = undefined;






export default DateAndContent;

