/**
 * FactSet Batch API Service
 * FactSet Content APIs - Batching Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import BatchDataRequest from './model/BatchDataRequest';
import BatchDataResponse from './model/BatchDataResponse';
import BatchStatus from './model/BatchStatus';
import BatchStatusRequest from './model/BatchStatusRequest';
import BatchStatusResponse from './model/BatchStatusResponse';
import ErrorResponse from './model/ErrorResponse';
import ErrorResponseSubErrors from './model/ErrorResponseSubErrors';

import BatchProcessingApi from './api/BatchProcessingApi';
import GetBatchDataResponseWrapper from './api/BatchProcessingApi';
import GetBatchDataWithPostResponseWrapper from './api/BatchProcessingApi';


/**
* FactSet Content API Batch client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var factsetcontentapibatch = require('index'); // See note below*.
* var xxxSvc = new factsetcontentapibatch.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new factsetcontentapibatch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new factsetcontentapibatch.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new factsetcontentapibatch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.20.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BatchDataRequest model constructor.
     * @property {module:model/BatchDataRequest}
     */
    BatchDataRequest,

    /**
     * The BatchDataResponse model constructor.
     * @property {module:model/BatchDataResponse}
     */
    BatchDataResponse,

    /**
     * The BatchStatus model constructor.
     * @property {module:model/BatchStatus}
     */
    BatchStatus,

    /**
     * The BatchStatusRequest model constructor.
     * @property {module:model/BatchStatusRequest}
     */
    BatchStatusRequest,

    /**
     * The BatchStatusResponse model constructor.
     * @property {module:model/BatchStatusResponse}
     */
    BatchStatusResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ErrorResponseSubErrors model constructor.
     * @property {module:model/ErrorResponseSubErrors}
     */
    ErrorResponseSubErrors,

    /**
    * The BatchProcessingApi service constructor.
    * @property {module:api/BatchProcessingApi}
    */
    BatchProcessingApi,

    /**
    * The GetBatchData response wrapper.
    * @property {module:GetCalculationStatusByIdResponseWrapper}
    */
    GetBatchDataResponseWrapper,

    /**
    * The GetBatchDataWithPost response wrapper.
    * @property {module:GetCalculationStatusByIdResponseWrapper}
    */
    GetBatchDataWithPostResponseWrapper,

};
