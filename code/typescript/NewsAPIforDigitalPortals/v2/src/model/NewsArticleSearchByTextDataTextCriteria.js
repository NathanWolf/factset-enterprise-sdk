/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewsArticleSearchByTextDataTextCriteria model module.
 * @module model/NewsArticleSearchByTextDataTextCriteria
 * @version 0.9.1
 */
class NewsArticleSearchByTextDataTextCriteria {
    /**
     * Constructs a new <code>NewsArticleSearchByTextDataTextCriteria</code>.
     * 
     * @alias module:model/NewsArticleSearchByTextDataTextCriteria
     */
    constructor() { 
        
        NewsArticleSearchByTextDataTextCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewsArticleSearchByTextDataTextCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewsArticleSearchByTextDataTextCriteria} obj Optional instance to populate.
     * @return {module:model/NewsArticleSearchByTextDataTextCriteria} The populated <code>NewsArticleSearchByTextDataTextCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewsArticleSearchByTextDataTextCriteria();

            if (data.hasOwnProperty('selectionType')) {
                obj['selectionType'] = ApiClient.convertToType(data['selectionType'], 'String');
            }
            if (data.hasOwnProperty('phrases')) {
                obj['phrases'] = ApiClient.convertToType(data['phrases'], ['String']);
            }
            if (data.hasOwnProperty('minimumMatchScore')) {
                obj['minimumMatchScore'] = ApiClient.convertToType(data['minimumMatchScore'], 'Number');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Specify how the criteria should be applied to the search.
 * @member {module:model/NewsArticleSearchByTextDataTextCriteria.SelectionTypeEnum} selectionType
 * @default 'include'
 */
NewsArticleSearchByTextDataTextCriteria.prototype['selectionType'] = 'include';

/**
 * Phrases to be used in the criteria.
 * @member {Array.<String>} phrases
 */
NewsArticleSearchByTextDataTextCriteria.prototype['phrases'] = undefined;

/**
 * Minimum match score for words in the news article.
 * @member {Number} minimumMatchScore
 */
NewsArticleSearchByTextDataTextCriteria.prototype['minimumMatchScore'] = undefined;

/**
 * Restrict fulltext search to specific scope.
 * @member {module:model/NewsArticleSearchByTextDataTextCriteria.ScopeEnum} scope
 * @default 'all'
 */
NewsArticleSearchByTextDataTextCriteria.prototype['scope'] = 'all';





/**
 * Allowed values for the <code>selectionType</code> property.
 * @enum {String}
 * @readonly
 */
NewsArticleSearchByTextDataTextCriteria['SelectionTypeEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};


/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
NewsArticleSearchByTextDataTextCriteria['ScopeEnum'] = {

    /**
     * value: "headline"
     * @const
     */
    "headline": "headline",

    /**
     * value: "body"
     * @const
     */
    "body": "body",

    /**
     * value: "all"
     * @const
     */
    "all": "all"
};



export default NewsArticleSearchByTextDataTextCriteria;

