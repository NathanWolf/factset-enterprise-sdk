/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NewsArticleListDataFilterRange from './NewsArticleListDataFilterRange';
import NewsArticleSearchByTextDataCategories from './NewsArticleSearchByTextDataCategories';
import NewsArticleSearchByTextDataDistributor from './NewsArticleSearchByTextDataDistributor';
import NewsArticleSearchByTextDataIndices from './NewsArticleSearchByTextDataIndices';
import NewsArticleSearchByTextDataInstruments from './NewsArticleSearchByTextDataInstruments';
import NewsArticleSearchByTextDataLanguage from './NewsArticleSearchByTextDataLanguage';
import NewsArticleSearchByTextDataPublisher from './NewsArticleSearchByTextDataPublisher';
import NewsArticleSearchByTextDataRegions from './NewsArticleSearchByTextDataRegions';
import NewsArticleSearchByTextDataTypes from './NewsArticleSearchByTextDataTypes';

/**
 * The NewsArticleSearchByTextDataCriteria model module.
 * @module model/NewsArticleSearchByTextDataCriteria
 * @version 0.9.1
 */
class NewsArticleSearchByTextDataCriteria {
    /**
     * Constructs a new <code>NewsArticleSearchByTextDataCriteria</code>.
     * @alias module:model/NewsArticleSearchByTextDataCriteria
     */
    constructor() { 
        
        NewsArticleSearchByTextDataCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewsArticleSearchByTextDataCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewsArticleSearchByTextDataCriteria} obj Optional instance to populate.
     * @return {module:model/NewsArticleSearchByTextDataCriteria} The populated <code>NewsArticleSearchByTextDataCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewsArticleSearchByTextDataCriteria();

            if (data.hasOwnProperty('selectionType')) {
                obj['selectionType'] = ApiClient.convertToType(data['selectionType'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = NewsArticleListDataFilterRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('indices')) {
                obj['indices'] = NewsArticleSearchByTextDataIndices.constructFromObject(data['indices']);
            }
            if (data.hasOwnProperty('instruments')) {
                obj['instruments'] = NewsArticleSearchByTextDataInstruments.constructFromObject(data['instruments']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = NewsArticleSearchByTextDataTypes.constructFromObject(data['types']);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = NewsArticleSearchByTextDataCategories.constructFromObject(data['categories']);
            }
            if (data.hasOwnProperty('regions')) {
                obj['regions'] = NewsArticleSearchByTextDataRegions.constructFromObject(data['regions']);
            }
            if (data.hasOwnProperty('distributor')) {
                obj['distributor'] = NewsArticleSearchByTextDataDistributor.constructFromObject(data['distributor']);
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = NewsArticleSearchByTextDataPublisher.constructFromObject(data['publisher']);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = NewsArticleSearchByTextDataLanguage.constructFromObject(data['language']);
            }
        }
        return obj;
    }


}

/**
 * Specify how the criteria should be applied to the search.
 * @member {module:model/NewsArticleSearchByTextDataCriteria.SelectionTypeEnum} selectionType
 * @default 'include'
 */
NewsArticleSearchByTextDataCriteria.prototype['selectionType'] = 'include';

/**
 * @member {module:model/NewsArticleListDataFilterRange} range
 */
NewsArticleSearchByTextDataCriteria.prototype['range'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataIndices} indices
 */
NewsArticleSearchByTextDataCriteria.prototype['indices'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataInstruments} instruments
 */
NewsArticleSearchByTextDataCriteria.prototype['instruments'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataTypes} types
 */
NewsArticleSearchByTextDataCriteria.prototype['types'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataCategories} categories
 */
NewsArticleSearchByTextDataCriteria.prototype['categories'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataRegions} regions
 */
NewsArticleSearchByTextDataCriteria.prototype['regions'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataDistributor} distributor
 */
NewsArticleSearchByTextDataCriteria.prototype['distributor'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataPublisher} publisher
 */
NewsArticleSearchByTextDataCriteria.prototype['publisher'] = undefined;

/**
 * @member {module:model/NewsArticleSearchByTextDataLanguage} language
 */
NewsArticleSearchByTextDataCriteria.prototype['language'] = undefined;





/**
 * Allowed values for the <code>selectionType</code> property.
 * @enum {String}
 * @readonly
 */
NewsArticleSearchByTextDataCriteria['SelectionTypeEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};



export default NewsArticleSearchByTextDataCriteria;

