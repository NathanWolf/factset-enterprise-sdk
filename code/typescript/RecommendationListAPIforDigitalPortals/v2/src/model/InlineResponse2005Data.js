/**
 * Recommendation List API For Digital Portals
 * A recommendation list is revision-controlled, with up to 5,000 revisions per recommendation list.  A recommendation list as of a given revision may optionally point to an instrument (e.g. an index) and contains a list of up to 1,000 elements, each referring to a security traded on a market (e.g. a financial product recommended by the bank). For listings that are not available in the Wealth Management platform, no information beyond a customer-defined name is available. Each element may optionally have a portfolio weight. Identifiers for revisions are globally unique.  See the Quotes API for Digital Portals for access to detailed price information.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2005Description from './InlineResponse2005Description';
import InlineResponse2005Notation from './InlineResponse2005Notation';
import InlineResponse2005RecommendationClass from './InlineResponse2005RecommendationClass';

/**
 * The InlineResponse2005Data model module.
 * @module model/InlineResponse2005Data
 */
class InlineResponse2005Data {
    /**
     * Constructs a new <code>InlineResponse2005Data</code>.
     * @alias module:model/InlineResponse2005Data
     */
    constructor() { 
        
        InlineResponse2005Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2005Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2005Data} obj Optional instance to populate.
     * @return {module:model/InlineResponse2005Data} The populated <code>InlineResponse2005Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2005Data();

            if (data.hasOwnProperty('hasNotationData')) {
                obj['hasNotationData'] = ApiClient.convertToType(data['hasNotationData'], 'Boolean');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('notation')) {
                obj['notation'] = InlineResponse2005Notation.constructFromObject(data['notation']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = InlineResponse2005Description.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('recommendationClass')) {
                obj['recommendationClass'] = InlineResponse2005RecommendationClass.constructFromObject(data['recommendationClass']);
            }
        }
        return obj;
    }


}

/**
 * Attributes referred to by the notation identifier, beyond notation.instrument.customName, are available.  If this flag is false, it indicates that some notation data for this element is no longer available because the notation may have expired. For answers without notation data, the members position, instrument.customName, weight, description and recommendationClass are retained.
 * @member {Boolean} hasNotationData
 */
InlineResponse2005Data.prototype['hasNotationData'] = undefined;

/**
 * Position of the element.
 * @member {Number} position
 */
InlineResponse2005Data.prototype['position'] = undefined;

/**
 * @member {module:model/InlineResponse2005Notation} notation
 */
InlineResponse2005Data.prototype['notation'] = undefined;

/**
 * @member {module:model/InlineResponse2005Description} description
 */
InlineResponse2005Data.prototype['description'] = undefined;

/**
 * Weight of this list element. If set for at least one list element, the sum off all weights of an element list must be 1.
 * @member {Number} weight
 */
InlineResponse2005Data.prototype['weight'] = undefined;

/**
 * @member {module:model/InlineResponse2005RecommendationClass} recommendationClass
 */
InlineResponse2005Data.prototype['recommendationClass'] = undefined;






export default InlineResponse2005Data;

