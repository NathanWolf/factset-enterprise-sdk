/**
 * FactSet Estimates
 * Gain access to 20+ years of comprehensive estimates and statistics of over 250+ estimated metrics, including financial statement items, product segments, geosegments, and industry metrics. FactSet's consensus estimates are aggregated from a wide base of over 800+ contributors and cover over 19,000 active companies across 90+ countries. Data returned can be accessed on the data frequencies based on quarterly, fiscal years, and calendar years. FactSet Estimates updates on a real time basis intraday (every 5 minutes). Updating times vary based on earning season vs. non-earning season but the goal is to have the data available to the client within a few hours that FactSet receives updated information. Often times updates times can be much faster as FactSet has always been known as one of the fastest estimate providers in the market. 
 *
 * The version of the OpenAPI document: 2.3.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Surprise model module.
 * @module model/Surprise
 */
class Surprise {
    /**
     * Constructs a new <code>Surprise</code>.
     * @alias module:model/Surprise
     */
    constructor() { 
        
        Surprise.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Surprise</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Surprise} obj Optional instance to populate.
     * @return {module:model/Surprise} The populated <code>Surprise</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Surprise();

            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('statistic')) {
                obj['statistic'] = ApiClient.convertToType(data['statistic'], 'String');
            }
            if (data.hasOwnProperty('periodicity')) {
                obj['periodicity'] = ApiClient.convertToType(data['periodicity'], 'String');
            }
            if (data.hasOwnProperty('fiscalEndDate')) {
                obj['fiscalEndDate'] = ApiClient.convertToType(data['fiscalEndDate'], 'Date');
            }
            if (data.hasOwnProperty('fiscalYear')) {
                obj['fiscalYear'] = ApiClient.convertToType(data['fiscalYear'], 'Number');
            }
            if (data.hasOwnProperty('fiscalPeriod')) {
                obj['fiscalPeriod'] = ApiClient.convertToType(data['fiscalPeriod'], 'Number');
            }
            if (data.hasOwnProperty('surpriseDate')) {
                obj['surpriseDate'] = ApiClient.convertToType(data['surpriseDate'], 'Date');
            }
            if (data.hasOwnProperty('surpriseAmount')) {
                obj['surpriseAmount'] = ApiClient.convertToType(data['surpriseAmount'], 'Number');
            }
            if (data.hasOwnProperty('surprisePercent')) {
                obj['surprisePercent'] = ApiClient.convertToType(data['surprisePercent'], 'Number');
            }
            if (data.hasOwnProperty('surpriseBefore')) {
                obj['surpriseBefore'] = ApiClient.convertToType(data['surpriseBefore'], 'Number');
            }
            if (data.hasOwnProperty('surpriseAfter')) {
                obj['surpriseAfter'] = ApiClient.convertToType(data['surpriseAfter'], 'Number');
            }
            if (data.hasOwnProperty('eventDescription')) {
                obj['eventDescription'] = ApiClient.convertToType(data['eventDescription'], 'String');
            }
            if (data.hasOwnProperty('eventFlag')) {
                obj['eventFlag'] = ApiClient.convertToType(data['eventFlag'], 'Number');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} fsymId
 */
Surprise.prototype['fsymId'] = undefined;

/**
 * Date for data expressed in YYYY-MM-DD format.
 * @member {Date} date
 */
Surprise.prototype['date'] = undefined;

/**
 * Currency used estimates in consensus calculations. Currency used estimates in consensus calculations. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
 * @member {String} currency
 */
Surprise.prototype['currency'] = undefined;

/**
 * Company's Financial statement 'metric' that is estimated. Use the factset-estimates/v#/metrics endpoint for a complete list. For more details, visit [Online Assistant Page #15034](https://oa.apps.factset.com/pages/15034).
 * @member {String} metric
 */
Surprise.prototype['metric'] = undefined;

/**
 * Method of calculation for the consensus 'statistic'. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16114).
 * @member {String} statistic
 */
Surprise.prototype['statistic'] = undefined;

/**
 * Company's 'periodicity' for the estimate record, reflecting Annual, Quarterly, or Semi-Annual report periods. Next-twelve-months (NTMA) and Last-twelve-months (LTMA) also supported.
 * @member {String} periodicity
 */
Surprise.prototype['periodicity'] = undefined;

/**
 * Company's 'fiscal end date' for the estimate record expressed in YYYY-MM-DD format
 * @member {Date} fiscalEndDate
 */
Surprise.prototype['fiscalEndDate'] = undefined;

/**
 * Company's 'fiscal year' for the estimate record
 * @member {Number} fiscalYear
 */
Surprise.prototype['fiscalYear'] = undefined;

/**
 * Company's 'fiscal period' for the estimate record.  'Periodicity' defines context for period.
 * @member {Number} fiscalPeriod
 */
Surprise.prototype['fiscalPeriod'] = undefined;

/**
 * Date of the reported event expressed in YYYY-MM-DD format. For more details, visit [Online Assistant Page #16601](https://oa.apps.factset.com/pages/16601).
 * @member {Date} surpriseDate
 */
Surprise.prototype['surpriseDate'] = undefined;

/**
 * Amount of difference between last consensus and actual. For more details, visit [Online Assistant Page #16145](https://oa.apps.factset.com/pages/16145).
 * @member {Number} surpriseAmount
 */
Surprise.prototype['surpriseAmount'] = undefined;

/**
 * Percent difference between last consensus and actual. For more details, visit [Online Assistant Page #16145](https://oa.apps.factset.com/pages/16145).
 * @member {Number} surprisePercent
 */
Surprise.prototype['surprisePercent'] = undefined;

/**
 * Last consensus before event. For more details, visit [Online Assistant Page #16145](https://oa.apps.factset.com/pages/16145).
 * @member {Number} surpriseBefore
 */
Surprise.prototype['surpriseBefore'] = undefined;

/**
 * Actual value after event. For more details, visit [Online Assistant Page #16145](https://oa.apps.factset.com/pages/16145).
 * @member {Number} surpriseAfter
 */
Surprise.prototype['surpriseAfter'] = undefined;

/**
 * Description of event. For more details, visit [Online Assistant Page #16601](https://oa.apps.factset.com/pages/16601).
 * @member {String} eventDescription
 */
Surprise.prototype['eventDescription'] = undefined;

/**
 * Flag for event. Code of Event Flag, where 0 = results and 1 = profit warning. For more details, visit [Online Assistant Page #16601](https://oa.apps.factset.com/pages/16601).
 * @member {Number} eventFlag
 */
Surprise.prototype['eventFlag'] = undefined;

/**
 * @member {String} requestId
 */
Surprise.prototype['requestId'] = undefined;






export default Surprise;

