/**
 * Exchange Snapshot API
 * A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange. Clients that need access to the DFSnapshot product for a custom watchlist snapped at a client specified interval should use this API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: teammustang@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Data from './model/Data';
import ErrorMessages from './model/ErrorMessages';
import InlineResponse200 from './model/InlineResponse200';
import Meta from './model/Meta';

import SnapshotApi from './api/SnapshotApi';


/**
* Exchange DataFeed Snapshot API - Entire Exchange client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var exchangedatafeedsnapshotapientireexchange = require('index'); // See note below*.
* var xxxSvc = new exchangedatafeedsnapshotapientireexchange.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new exchangedatafeedsnapshotapientireexchange.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new exchangedatafeedsnapshotapientireexchange.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new exchangedatafeedsnapshotapientireexchange.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.20.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Data model constructor.
     * @property {module:model/Data}
     */
    Data,

    /**
     * The ErrorMessages model constructor.
     * @property {module:model/ErrorMessages}
     */
    ErrorMessages,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
    * The SnapshotApi service constructor.
    * @property {module:api/SnapshotApi}
    */
    SnapshotApi,

};
