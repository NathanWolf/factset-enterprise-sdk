/**
 * Exchange Snapshot API
 * A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange. Clients that need access to the DFSnapshot product for a custom watchlist snapped at a client specified interval should use this API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: teammustang@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Data model module.
 * @module model/Data
 */
class Data {
    /**
     * Constructs a new <code>Data</code>.
     * Array of data objects
     * @alias module:model/Data
     */
    constructor() { 
        
        Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Data} obj Optional instance to populate.
     * @return {module:model/Data} The populated <code>Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Data();

            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('responseType')) {
                obj['responseType'] = ApiClient.convertToType(data['responseType'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Product or Exchange code. Minimum value for prod code=9001
 * @member {Number} product
 */
Data.prototype['product'] = undefined;

/**
 * Date for which data is requested
 * @member {String} date
 */
Data.prototype['date'] = undefined;

/**
 * time for which data is requested
 * @member {String} time
 */
Data.prototype['time'] = undefined;

/**
 * Type of data (Delayed or Real Time)
 * @member {String} responseType
 */
Data.prototype['responseType'] = undefined;

/**
 * Name of the file(s) generated for the query requested. This is a combination of product code, date & time of request
 * @member {String} fileName
 */
Data.prototype['fileName'] = undefined;

/**
 * Download link for the snapshot file with requested parameters
 * @member {String} url
 */
Data.prototype['url'] = undefined;






export default Data;

