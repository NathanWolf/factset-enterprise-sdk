/**
 * StreetAccount News API
 * The StreetAccount News API provides access to FactSet's proprietary news provider, StreetAccount. StreetAccount, is a premium real-time market intelligence news service that delivers comprehensive U.S., Canadian, and European coverage (and expanding Asia coverage). All possible sources for corporate news are scanned and key story facts are highlighted and presented in an easy-to-read format.  **StreetAccount Filters, Headlines, and Views:**  These endpoints allow for the retrieval of news headlines using filters such as Watchlists/Indices/Tickers, Company Filters, Market Topics, Regions, and Sectors.  Headlines can also be retrieved based on saved views within the Workstation.  **StreetAccount Historical Stories:**  These endpoints provide access to historical StreetAccount (SA) news. The API delivers SA stories in XML format based on user-specified date input parameters. Output files are securely available to users through a URL. This API has three endpoints: Request Files, Check Status, and Get Files.  Please note that this API only supports adhoc requests for historical files and does not support real-time files. If real-time push is required, consider using other methods such as SFTP, QNT account, or Azure Storage. Both historical and real-time Street Account news can be delivered via SFTP, QNT account, or Azure Storage.  The files delivered contain both metadata and content body, eliminating the need for multiple requests through multiple services to retrieve all the information.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Checkstatus from './model/Checkstatus';
import CheckstatusResponse from './model/CheckstatusResponse';
import CreateEditDeleteViewResponse from './model/CreateEditDeleteViewResponse';
import CreateEditDeleteViewResponseData from './model/CreateEditDeleteViewResponseData';
import CreateEditDeleteViewResponseDataMessage from './model/CreateEditDeleteViewResponseDataMessage';
import CreateOrEditViewBody from './model/CreateOrEditViewBody';
import CreateOrEditViewBodyData from './model/CreateOrEditViewBodyData';
import CreateOrEditViewTickers from './model/CreateOrEditViewTickers';
import Error from './model/Error';
import ErrorObject from './model/ErrorObject';
import FilterResponse from './model/FilterResponse';
import FilterResponseData from './model/FilterResponseData';
import FlattenedFilters from './model/FlattenedFilters';
import FlattenedFiltersCategoriesObject from './model/FlattenedFiltersCategoriesObject';
import FlattenedFiltersRegionsObject from './model/FlattenedFiltersRegionsObject';
import FlattenedFiltersSectorsObject from './model/FlattenedFiltersSectorsObject';
import FlattenedFiltersTopicsObject from './model/FlattenedFiltersTopicsObject';
import FlattenedFiltersWatchlistsObject from './model/FlattenedFiltersWatchlistsObject';
import Getfiles from './model/Getfiles';
import GetfilesResponse from './model/GetfilesResponse';
import IsPartialOne from './model/IsPartialOne';
import MetaOne from './model/MetaOne';
import PaginationOne from './model/PaginationOne';
import RequestfilesResponse from './model/RequestfilesResponse';
import SaHeadlinesRequest from './model/SaHeadlinesRequest';
import SaHeadlinesRequestByView from './model/SaHeadlinesRequestByView';
import SaHeadlinesRequestByViewData from './model/SaHeadlinesRequestByViewData';
import SaHeadlinesRequestData from './model/SaHeadlinesRequestData';
import SaHeadlinesRequestDataSearchDate from './model/SaHeadlinesRequestDataSearchDate';
import SaHeadlinesRequestMeta from './model/SaHeadlinesRequestMeta';
import SaHeadlinesRequestMetaPagination from './model/SaHeadlinesRequestMetaPagination';
import SaHeadlinesRequestTickersObject from './model/SaHeadlinesRequestTickersObject';
import SearchResponse from './model/SearchResponse';
import SearchResponseArrayObject from './model/SearchResponseArrayObject';
import SearchResponseData from './model/SearchResponseData';
import SearchResponseMeta from './model/SearchResponseMeta';
import SearchResponseMetaPagination from './model/SearchResponseMetaPagination';
import StreetAccountStatus from './model/StreetAccountStatus';
import StructuredFilters from './model/StructuredFilters';
import StructuredFiltersCategoriesObject from './model/StructuredFiltersCategoriesObject';
import StructuredFiltersChildrenObject from './model/StructuredFiltersChildrenObject';
import StructuredFiltersRegionsObject from './model/StructuredFiltersRegionsObject';
import StructuredFiltersSectorsObject from './model/StructuredFiltersSectorsObject';
import StructuredFiltersTopicsObject from './model/StructuredFiltersTopicsObject';
import StructuredFiltersWatchlistsObject from './model/StructuredFiltersWatchlistsObject';
import Views from './model/Views';
import ViewsObject from './model/ViewsObject';

import FiltersApi from './api/FiltersApi';
import HeadlinesApi from './api/HeadlinesApi';
import StreetAccountHistoricalStoriesApi from './api/StreetAccountHistoricalStoriesApi';
import ViewsApi from './api/ViewsApi';


/**
* StreetAccount News client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var streetaccountnews = require('index'); // See note below*.
* var xxxSvc = new streetaccountnews.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new streetaccountnews.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new streetaccountnews.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new streetaccountnews.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Checkstatus model constructor.
     * @property {module:model/Checkstatus}
     */
    Checkstatus,

    /**
     * The CheckstatusResponse model constructor.
     * @property {module:model/CheckstatusResponse}
     */
    CheckstatusResponse,

    /**
     * The CreateEditDeleteViewResponse model constructor.
     * @property {module:model/CreateEditDeleteViewResponse}
     */
    CreateEditDeleteViewResponse,

    /**
     * The CreateEditDeleteViewResponseData model constructor.
     * @property {module:model/CreateEditDeleteViewResponseData}
     */
    CreateEditDeleteViewResponseData,

    /**
     * The CreateEditDeleteViewResponseDataMessage model constructor.
     * @property {module:model/CreateEditDeleteViewResponseDataMessage}
     */
    CreateEditDeleteViewResponseDataMessage,

    /**
     * The CreateOrEditViewBody model constructor.
     * @property {module:model/CreateOrEditViewBody}
     */
    CreateOrEditViewBody,

    /**
     * The CreateOrEditViewBodyData model constructor.
     * @property {module:model/CreateOrEditViewBodyData}
     */
    CreateOrEditViewBodyData,

    /**
     * The CreateOrEditViewTickers model constructor.
     * @property {module:model/CreateOrEditViewTickers}
     */
    CreateOrEditViewTickers,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorObject model constructor.
     * @property {module:model/ErrorObject}
     */
    ErrorObject,

    /**
     * The FilterResponse model constructor.
     * @property {module:model/FilterResponse}
     */
    FilterResponse,

    /**
     * The FilterResponseData model constructor.
     * @property {module:model/FilterResponseData}
     */
    FilterResponseData,

    /**
     * The FlattenedFilters model constructor.
     * @property {module:model/FlattenedFilters}
     */
    FlattenedFilters,

    /**
     * The FlattenedFiltersCategoriesObject model constructor.
     * @property {module:model/FlattenedFiltersCategoriesObject}
     */
    FlattenedFiltersCategoriesObject,

    /**
     * The FlattenedFiltersRegionsObject model constructor.
     * @property {module:model/FlattenedFiltersRegionsObject}
     */
    FlattenedFiltersRegionsObject,

    /**
     * The FlattenedFiltersSectorsObject model constructor.
     * @property {module:model/FlattenedFiltersSectorsObject}
     */
    FlattenedFiltersSectorsObject,

    /**
     * The FlattenedFiltersTopicsObject model constructor.
     * @property {module:model/FlattenedFiltersTopicsObject}
     */
    FlattenedFiltersTopicsObject,

    /**
     * The FlattenedFiltersWatchlistsObject model constructor.
     * @property {module:model/FlattenedFiltersWatchlistsObject}
     */
    FlattenedFiltersWatchlistsObject,

    /**
     * The Getfiles model constructor.
     * @property {module:model/Getfiles}
     */
    Getfiles,

    /**
     * The GetfilesResponse model constructor.
     * @property {module:model/GetfilesResponse}
     */
    GetfilesResponse,

    /**
     * The IsPartialOne model constructor.
     * @property {module:model/IsPartialOne}
     */
    IsPartialOne,

    /**
     * The MetaOne model constructor.
     * @property {module:model/MetaOne}
     */
    MetaOne,

    /**
     * The PaginationOne model constructor.
     * @property {module:model/PaginationOne}
     */
    PaginationOne,

    /**
     * The RequestfilesResponse model constructor.
     * @property {module:model/RequestfilesResponse}
     */
    RequestfilesResponse,

    /**
     * The SaHeadlinesRequest model constructor.
     * @property {module:model/SaHeadlinesRequest}
     */
    SaHeadlinesRequest,

    /**
     * The SaHeadlinesRequestByView model constructor.
     * @property {module:model/SaHeadlinesRequestByView}
     */
    SaHeadlinesRequestByView,

    /**
     * The SaHeadlinesRequestByViewData model constructor.
     * @property {module:model/SaHeadlinesRequestByViewData}
     */
    SaHeadlinesRequestByViewData,

    /**
     * The SaHeadlinesRequestData model constructor.
     * @property {module:model/SaHeadlinesRequestData}
     */
    SaHeadlinesRequestData,

    /**
     * The SaHeadlinesRequestDataSearchDate model constructor.
     * @property {module:model/SaHeadlinesRequestDataSearchDate}
     */
    SaHeadlinesRequestDataSearchDate,

    /**
     * The SaHeadlinesRequestMeta model constructor.
     * @property {module:model/SaHeadlinesRequestMeta}
     */
    SaHeadlinesRequestMeta,

    /**
     * The SaHeadlinesRequestMetaPagination model constructor.
     * @property {module:model/SaHeadlinesRequestMetaPagination}
     */
    SaHeadlinesRequestMetaPagination,

    /**
     * The SaHeadlinesRequestTickersObject model constructor.
     * @property {module:model/SaHeadlinesRequestTickersObject}
     */
    SaHeadlinesRequestTickersObject,

    /**
     * The SearchResponse model constructor.
     * @property {module:model/SearchResponse}
     */
    SearchResponse,

    /**
     * The SearchResponseArrayObject model constructor.
     * @property {module:model/SearchResponseArrayObject}
     */
    SearchResponseArrayObject,

    /**
     * The SearchResponseData model constructor.
     * @property {module:model/SearchResponseData}
     */
    SearchResponseData,

    /**
     * The SearchResponseMeta model constructor.
     * @property {module:model/SearchResponseMeta}
     */
    SearchResponseMeta,

    /**
     * The SearchResponseMetaPagination model constructor.
     * @property {module:model/SearchResponseMetaPagination}
     */
    SearchResponseMetaPagination,

    /**
     * The StreetAccountStatus model constructor.
     * @property {module:model/StreetAccountStatus}
     */
    StreetAccountStatus,

    /**
     * The StructuredFilters model constructor.
     * @property {module:model/StructuredFilters}
     */
    StructuredFilters,

    /**
     * The StructuredFiltersCategoriesObject model constructor.
     * @property {module:model/StructuredFiltersCategoriesObject}
     */
    StructuredFiltersCategoriesObject,

    /**
     * The StructuredFiltersChildrenObject model constructor.
     * @property {module:model/StructuredFiltersChildrenObject}
     */
    StructuredFiltersChildrenObject,

    /**
     * The StructuredFiltersRegionsObject model constructor.
     * @property {module:model/StructuredFiltersRegionsObject}
     */
    StructuredFiltersRegionsObject,

    /**
     * The StructuredFiltersSectorsObject model constructor.
     * @property {module:model/StructuredFiltersSectorsObject}
     */
    StructuredFiltersSectorsObject,

    /**
     * The StructuredFiltersTopicsObject model constructor.
     * @property {module:model/StructuredFiltersTopicsObject}
     */
    StructuredFiltersTopicsObject,

    /**
     * The StructuredFiltersWatchlistsObject model constructor.
     * @property {module:model/StructuredFiltersWatchlistsObject}
     */
    StructuredFiltersWatchlistsObject,

    /**
     * The Views model constructor.
     * @property {module:model/Views}
     */
    Views,

    /**
     * The ViewsObject model constructor.
     * @property {module:model/ViewsObject}
     */
    ViewsObject,

    /**
    * The FiltersApi service constructor.
    * @property {module:api/FiltersApi}
    */
    FiltersApi,

    /**
    * The HeadlinesApi service constructor.
    * @property {module:api/HeadlinesApi}
    */
    HeadlinesApi,

    /**
    * The StreetAccountHistoricalStoriesApi service constructor.
    * @property {module:api/StreetAccountHistoricalStoriesApi}
    */
    StreetAccountHistoricalStoriesApi,

    /**
    * The ViewsApi service constructor.
    * @property {module:api/ViewsApi}
    */
    ViewsApi,

};
