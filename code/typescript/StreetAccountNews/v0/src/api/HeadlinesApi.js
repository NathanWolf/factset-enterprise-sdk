/**
 * StreetAccount News API
 * The StreetAccount News API provides access to FactSet's proprietary news provider, StreetAccount. StreetAccount, is a premium real-time market intelligence news service that delivers comprehensive U.S., Canadian, and European coverage (and expanding Asia coverage). All possible sources for corporate news are scanned and key story facts are highlighted and presented in an easy-to-read format.  **StreetAccount Filters, Headlines, and Views:**  These endpoints allow for the retrieval of news headlines using filters such as Watchlists/Indices/Tickers, Company Filters, Market Topics, Regions, and Sectors.  Headlines can also be retrieved based on saved views within the Workstation.  **StreetAccount Historical Stories:**  These endpoints provide access to historical StreetAccount (SA) news. The API delivers SA stories in XML format based on user-specified date input parameters. Output files are securely available to users through a URL. This API has three endpoints: Request Files, Check Status, and Get Files.  Please note that this API only supports adhoc requests for historical files and does not support real-time files. If real-time push is required, consider using other methods such as SFTP, QNT account, or Azure Storage. Both historical and real-time Street Account news can be delivered via SFTP, QNT account, or Azure Storage.  The files delivered contain both metadata and content body, eliminating the need for multiple requests through multiple services to retrieve all the information.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import SaHeadlinesRequest from '../model/SaHeadlinesRequest';
import SaHeadlinesRequestByView from '../model/SaHeadlinesRequestByView';
import SearchResponse from '../model/SearchResponse';

/**
* Headlines service.
* @module api/HeadlinesApi
*/
export default class HeadlinesApi {

    /**
    * Constructs a new HeadlinesApi. 
    * @alias module:api/HeadlinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieve StreetAccount headlines for given filters
     * This endpoint will pull all headlines produced by StreetAccount and the full story body will be returned by the data set. Filters can be specified via the endpoint below.
     * @param {Object} opts Optional parameters
     * @param {module:model/SaHeadlinesRequest} opts.saHeadlinesRequest Filter Body which needs to be sent with request
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchResponse} and HTTP response
     */
    getStreetAccountHeadlinesWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['saHeadlinesRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = SearchResponse;

      return this.apiClient.callApi(
        '/streetaccount/headlines', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve StreetAccount headlines for given filters
     * This endpoint will pull all headlines produced by StreetAccount and the full story body will be returned by the data set. Filters can be specified via the endpoint below.
     * @param {Object} opts Optional parameters
     * @param {module:model/SaHeadlinesRequest} opts.saHeadlinesRequest Filter Body which needs to be sent with request
     * @return { Promise.< module:model/SearchResponse > } a Promise, with data of type {@link module:model/SearchResponse }
     */
    getStreetAccountHeadlines(opts) {
      return this.getStreetAccountHeadlinesWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve StreetAccount headlines for given view
     * This endpoint allows you to pull all headlines produced by StreetAccount for a saved view. The full story body will be returned by the data set. Views can be created via the ‘Create Views’ endpoint.
     * @param {String} id view id of the view to return headlines for
     * @param {Object} opts Optional parameters
     * @param {module:model/SaHeadlinesRequestByView} opts.saHeadlinesRequestByView View body which needs to be sent with request
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchResponse} and HTTP response
     */
    getStreetAccountHeadlinesByViewWithHttpInfo(id, opts) {
      opts = opts || {};
      let postBody = opts['saHeadlinesRequestByView'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getStreetAccountHeadlinesByView");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = SearchResponse;

      return this.apiClient.callApi(
        '/streetaccount/views/{id}/headlines', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve StreetAccount headlines for given view
     * This endpoint allows you to pull all headlines produced by StreetAccount for a saved view. The full story body will be returned by the data set. Views can be created via the ‘Create Views’ endpoint.
     * @param {String} id view id of the view to return headlines for
     * @param {Object} opts Optional parameters
     * @param {module:model/SaHeadlinesRequestByView} opts.saHeadlinesRequestByView View body which needs to be sent with request
     * @return { Promise.< module:model/SearchResponse > } a Promise, with data of type {@link module:model/SearchResponse }
     */
    getStreetAccountHeadlinesByView(id, opts) {
      return this.getStreetAccountHeadlinesByViewWithHttpInfo(id, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





