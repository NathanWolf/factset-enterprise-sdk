/**
 * fpo_mp_input
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OptimizerInputsLookupTables from './OptimizerInputsLookupTables';
import OptimizerInputsMultiPeriodRiskModels from './OptimizerInputsMultiPeriodRiskModels';
import OptimizerInputsMultiPeriodStrategy from './OptimizerInputsMultiPeriodStrategy';
import OptimizerInputsPortfolios from './OptimizerInputsPortfolios';
import OptimizerInputsTotalUniverse from './OptimizerInputsTotalUniverse';

/**
 * The OptimizerInputsMultiPeriodInput model module.
 * @module model/OptimizerInputsMultiPeriodInput
 */
class OptimizerInputsMultiPeriodInput {
    /**
     * Constructs a new <code>OptimizerInputsMultiPeriodInput</code>.
     * @alias module:model/OptimizerInputsMultiPeriodInput
     */
    constructor() { 
        
        OptimizerInputsMultiPeriodInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OptimizerInputsMultiPeriodInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OptimizerInputsMultiPeriodInput} obj Optional instance to populate.
     * @return {module:model/OptimizerInputsMultiPeriodInput} The populated <code>OptimizerInputsMultiPeriodInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OptimizerInputsMultiPeriodInput();

            if (data.hasOwnProperty('strategy')) {
                obj['strategy'] = OptimizerInputsMultiPeriodStrategy.constructFromObject(data['strategy']);
            }
            if (data.hasOwnProperty('universe')) {
                obj['universe'] = OptimizerInputsTotalUniverse.constructFromObject(data['universe']);
            }
            if (data.hasOwnProperty('portfolios')) {
                obj['portfolios'] = OptimizerInputsPortfolios.constructFromObject(data['portfolios']);
            }
            if (data.hasOwnProperty('riskmodels')) {
                obj['riskmodels'] = OptimizerInputsMultiPeriodRiskModels.constructFromObject(data['riskmodels']);
            }
            if (data.hasOwnProperty('lookup_tables')) {
                obj['lookup_tables'] = OptimizerInputsLookupTables.constructFromObject(data['lookup_tables']);
            }
            if (data.hasOwnProperty('output_statistics')) {
                obj['output_statistics'] = ApiClient.convertToType(data['output_statistics'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/OptimizerInputsMultiPeriodStrategy} strategy
 */
OptimizerInputsMultiPeriodInput.prototype['strategy'] = undefined;

/**
 * @member {module:model/OptimizerInputsTotalUniverse} universe
 */
OptimizerInputsMultiPeriodInput.prototype['universe'] = undefined;

/**
 * @member {module:model/OptimizerInputsPortfolios} portfolios
 */
OptimizerInputsMultiPeriodInput.prototype['portfolios'] = undefined;

/**
 * @member {module:model/OptimizerInputsMultiPeriodRiskModels} riskmodels
 */
OptimizerInputsMultiPeriodInput.prototype['riskmodels'] = undefined;

/**
 * @member {module:model/OptimizerInputsLookupTables} lookup_tables
 */
OptimizerInputsMultiPeriodInput.prototype['lookup_tables'] = undefined;

/**
 * @member {Boolean} output_statistics
 */
OptimizerInputsMultiPeriodInput.prototype['output_statistics'] = undefined;






export default OptimizerInputsMultiPeriodInput;

