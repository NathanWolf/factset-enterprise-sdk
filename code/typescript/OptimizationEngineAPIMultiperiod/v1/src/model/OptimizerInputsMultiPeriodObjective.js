/**
 * fpo_mp_input
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OptimizerInputsMPExpectedReturnTerm from './OptimizerInputsMPExpectedReturnTerm';
import OptimizerInputsMPFactorExposureTerm from './OptimizerInputsMPFactorExposureTerm';
import OptimizerInputsMPGeneralLinearTerm from './OptimizerInputsMPGeneralLinearTerm';
import OptimizerInputsMPObjectiveRatioTerm from './OptimizerInputsMPObjectiveRatioTerm';
import OptimizerInputsMPSensitivityTerm from './OptimizerInputsMPSensitivityTerm';
import OptimizerInputsMPTailRiskTerm from './OptimizerInputsMPTailRiskTerm';
import OptimizerInputsMPTargetProbabilityTerm from './OptimizerInputsMPTargetProbabilityTerm';
import OptimizerInputsMPVolatilityTerm from './OptimizerInputsMPVolatilityTerm';

/**
 * The OptimizerInputsMultiPeriodObjective model module.
 * @module model/OptimizerInputsMultiPeriodObjective
 * @version 0.20.0
 */
class OptimizerInputsMultiPeriodObjective {
    /**
     * Constructs a new <code>OptimizerInputsMultiPeriodObjective</code>.
     * @alias module:model/OptimizerInputsMultiPeriodObjective
     */
    constructor() { 
        
        OptimizerInputsMultiPeriodObjective.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OptimizerInputsMultiPeriodObjective</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OptimizerInputsMultiPeriodObjective} obj Optional instance to populate.
     * @return {module:model/OptimizerInputsMultiPeriodObjective} The populated <code>OptimizerInputsMultiPeriodObjective</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OptimizerInputsMultiPeriodObjective();

            if (data.hasOwnProperty('factor_exposure')) {
                obj['factor_exposure'] = ApiClient.convertToType(data['factor_exposure'], [OptimizerInputsMPFactorExposureTerm]);
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = ApiClient.convertToType(data['volatility'], [OptimizerInputsMPVolatilityTerm]);
            }
            if (data.hasOwnProperty('general_linear')) {
                obj['general_linear'] = ApiClient.convertToType(data['general_linear'], [OptimizerInputsMPGeneralLinearTerm]);
            }
            if (data.hasOwnProperty('expected_return')) {
                obj['expected_return'] = ApiClient.convertToType(data['expected_return'], [OptimizerInputsMPExpectedReturnTerm]);
            }
            if (data.hasOwnProperty('sensitivity')) {
                obj['sensitivity'] = ApiClient.convertToType(data['sensitivity'], [OptimizerInputsMPSensitivityTerm]);
            }
            if (data.hasOwnProperty('objective_ratio')) {
                obj['objective_ratio'] = OptimizerInputsMPObjectiveRatioTerm.constructFromObject(data['objective_ratio']);
            }
            if (data.hasOwnProperty('tail_risk')) {
                obj['tail_risk'] = ApiClient.convertToType(data['tail_risk'], [OptimizerInputsMPTailRiskTerm]);
            }
            if (data.hasOwnProperty('target_probability')) {
                obj['target_probability'] = ApiClient.convertToType(data['target_probability'], [OptimizerInputsMPTargetProbabilityTerm]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/OptimizerInputsMPFactorExposureTerm>} factor_exposure
 */
OptimizerInputsMultiPeriodObjective.prototype['factor_exposure'] = undefined;

/**
 * @member {Array.<module:model/OptimizerInputsMPVolatilityTerm>} volatility
 */
OptimizerInputsMultiPeriodObjective.prototype['volatility'] = undefined;

/**
 * @member {Array.<module:model/OptimizerInputsMPGeneralLinearTerm>} general_linear
 */
OptimizerInputsMultiPeriodObjective.prototype['general_linear'] = undefined;

/**
 * @member {Array.<module:model/OptimizerInputsMPExpectedReturnTerm>} expected_return
 */
OptimizerInputsMultiPeriodObjective.prototype['expected_return'] = undefined;

/**
 * @member {Array.<module:model/OptimizerInputsMPSensitivityTerm>} sensitivity
 */
OptimizerInputsMultiPeriodObjective.prototype['sensitivity'] = undefined;

/**
 * @member {module:model/OptimizerInputsMPObjectiveRatioTerm} objective_ratio
 */
OptimizerInputsMultiPeriodObjective.prototype['objective_ratio'] = undefined;

/**
 * MultiPeriod-Specific
 * @member {Array.<module:model/OptimizerInputsMPTailRiskTerm>} tail_risk
 */
OptimizerInputsMultiPeriodObjective.prototype['tail_risk'] = undefined;

/**
 * @member {Array.<module:model/OptimizerInputsMPTargetProbabilityTerm>} target_probability
 */
OptimizerInputsMultiPeriodObjective.prototype['target_probability'] = undefined;






export default OptimizerInputsMultiPeriodObjective;

