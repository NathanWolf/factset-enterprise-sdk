/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse20064DataInstrument from './InlineResponse20064DataInstrument';
import InlineResponse20064DataMarket from './InlineResponse20064DataMarket';
import InlineResponse20064DataValueUnit from './InlineResponse20064DataValueUnit';
import InlineResponse20065Status from './InlineResponse20065Status';

/**
 * The InlineResponse20065Data model module.
 * @module model/InlineResponse20065Data
 * @version 0.9.0
 */
class InlineResponse20065Data {
    /**
     * Constructs a new <code>InlineResponse20065Data</code>.
     * @alias module:model/InlineResponse20065Data
     */
    constructor() { 
        
        InlineResponse20065Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20065Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20065Data} obj Optional instance to populate.
     * @return {module:model/InlineResponse20065Data} The populated <code>InlineResponse20065Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20065Data();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('factSetMarketSymbol')) {
                obj['factSetMarketSymbol'] = ApiClient.convertToType(data['factSetMarketSymbol'], 'String');
            }
            if (data.hasOwnProperty('valueUnit')) {
                obj['valueUnit'] = InlineResponse20064DataValueUnit.constructFromObject(data['valueUnit']);
            }
            if (data.hasOwnProperty('market')) {
                obj['market'] = InlineResponse20064DataMarket.constructFromObject(data['market']);
            }
            if (data.hasOwnProperty('instrument')) {
                obj['instrument'] = InlineResponse20064DataInstrument.constructFromObject(data['instrument']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = InlineResponse20065Status.constructFromObject(data['status']);
            }
        }
        return obj;
    }


}

/**
 * Identifier of the notation.
 * @member {String} id
 */
InlineResponse20065Data.prototype['id'] = undefined;

/**
 * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market.
 * @member {String} symbol
 */
InlineResponse20065Data.prototype['symbol'] = undefined;

/**
 * The FactSet market symbol of the notation (i.e. TICKER_EXCHANGE).
 * @member {String} factSetMarketSymbol
 */
InlineResponse20065Data.prototype['factSetMarketSymbol'] = undefined;

/**
 * @member {module:model/InlineResponse20064DataValueUnit} valueUnit
 */
InlineResponse20065Data.prototype['valueUnit'] = undefined;

/**
 * @member {module:model/InlineResponse20064DataMarket} market
 */
InlineResponse20065Data.prototype['market'] = undefined;

/**
 * @member {module:model/InlineResponse20064DataInstrument} instrument
 */
InlineResponse20065Data.prototype['instrument'] = undefined;

/**
 * @member {module:model/InlineResponse20065Status} status
 */
InlineResponse20065Data.prototype['status'] = undefined;






export default InlineResponse20065Data;

