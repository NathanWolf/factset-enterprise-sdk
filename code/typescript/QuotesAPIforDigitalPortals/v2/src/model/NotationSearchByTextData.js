/**
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NotationSearchByTextDataAssetClasses from './NotationSearchByTextDataAssetClasses';
import NotationSearchByTextDataMarket from './NotationSearchByTextDataMarket';
import NotationSearchByTextDataText from './NotationSearchByTextDataText';
import NotationSearchByTextDataTradingValue from './NotationSearchByTextDataTradingValue';
import NotationSearchByTextDataValidation from './NotationSearchByTextDataValidation';

/**
 * The NotationSearchByTextData model module.
 * @module model/NotationSearchByTextData
 * @version 0.9.1
 */
class NotationSearchByTextData {
    /**
     * Constructs a new <code>NotationSearchByTextData</code>.
     * The data member contains the request&#39;s primary data.
     * @alias module:model/NotationSearchByTextData
     */
    constructor() { 
        
        NotationSearchByTextData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotationSearchByTextData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotationSearchByTextData} obj Optional instance to populate.
     * @return {module:model/NotationSearchByTextData} The populated <code>NotationSearchByTextData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotationSearchByTextData();

            if (data.hasOwnProperty('text')) {
                obj['text'] = NotationSearchByTextDataText.constructFromObject(data['text']);
            }
            if (data.hasOwnProperty('validation')) {
                obj['validation'] = NotationSearchByTextDataValidation.constructFromObject(data['validation']);
            }
            if (data.hasOwnProperty('assetClasses')) {
                obj['assetClasses'] = NotationSearchByTextDataAssetClasses.constructFromObject(data['assetClasses']);
            }
            if (data.hasOwnProperty('market')) {
                obj['market'] = NotationSearchByTextDataMarket.constructFromObject(data['market']);
            }
            if (data.hasOwnProperty('tradingValue')) {
                obj['tradingValue'] = NotationSearchByTextDataTradingValue.constructFromObject(data['tradingValue']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/NotationSearchByTextDataText} text
 */
NotationSearchByTextData.prototype['text'] = undefined;

/**
 * @member {module:model/NotationSearchByTextDataValidation} validation
 */
NotationSearchByTextData.prototype['validation'] = undefined;

/**
 * @member {module:model/NotationSearchByTextDataAssetClasses} assetClasses
 */
NotationSearchByTextData.prototype['assetClasses'] = undefined;

/**
 * @member {module:model/NotationSearchByTextDataMarket} market
 */
NotationSearchByTextData.prototype['market'] = undefined;

/**
 * @member {module:model/NotationSearchByTextDataTradingValue} tradingValue
 */
NotationSearchByTextData.prototype['tradingValue'] = undefined;






export default NotationSearchByTextData;

