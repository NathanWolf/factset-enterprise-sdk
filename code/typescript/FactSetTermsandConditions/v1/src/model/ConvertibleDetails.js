/**
 * FactSet Terms & Conditions API
 * The FactSet Terms & Conditions API exposes Terms & Conditions data for Fixed Income Corporate, Governement & Agency securities. The FactSet Corporate Government & Agency Terms & Conditions library provides descriptive data on the issue level, such as offering details, redemption information, and coupon schedules. Issuer level data is also available. Coverage is global and includes corporate, sovereign, and agency issues. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConvertibleDetails model module.
 * @module model/ConvertibleDetails
 */
class ConvertibleDetails {
    /**
     * Constructs a new <code>ConvertibleDetails</code>.
     * Convertible Details for a Fixed Income security.
     * @alias module:model/ConvertibleDetails
     */
    constructor() { 
        
        ConvertibleDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConvertibleDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConvertibleDetails} obj Optional instance to populate.
     * @return {module:model/ConvertibleDetails} The populated <code>ConvertibleDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConvertibleDetails();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('convCurr')) {
                obj['convCurr'] = ApiClient.convertToType(data['convCurr'], 'String');
            }
            if (data.hasOwnProperty('convEffDate')) {
                obj['convEffDate'] = ApiClient.convertToType(data['convEffDate'], 'Date');
            }
            if (data.hasOwnProperty('convEndDate')) {
                obj['convEndDate'] = ApiClient.convertToType(data['convEndDate'], 'Date');
            }
            if (data.hasOwnProperty('convFrequency')) {
                obj['convFrequency'] = ApiClient.convertToType(data['convFrequency'], 'String');
            }
            if (data.hasOwnProperty('convId')) {
                obj['convId'] = ApiClient.convertToType(data['convId'], 'Number');
            }
            if (data.hasOwnProperty('convIdentification')) {
                obj['convIdentification'] = ApiClient.convertToType(data['convIdentification'], 'String');
            }
            if (data.hasOwnProperty('convNoticeDaysMax')) {
                obj['convNoticeDaysMax'] = ApiClient.convertToType(data['convNoticeDaysMax'], 'Number');
            }
            if (data.hasOwnProperty('convNoticeDaysMin')) {
                obj['convNoticeDaysMin'] = ApiClient.convertToType(data['convNoticeDaysMin'], 'Number');
            }
            if (data.hasOwnProperty('convPayForm')) {
                obj['convPayForm'] = ApiClient.convertToType(data['convPayForm'], 'String');
            }
            if (data.hasOwnProperty('convPayFormDet')) {
                obj['convPayFormDet'] = ApiClient.convertToType(data['convPayFormDet'], 'String');
            }
            if (data.hasOwnProperty('convPayFormElect')) {
                obj['convPayFormElect'] = ApiClient.convertToType(data['convPayFormElect'], 'String');
            }
            if (data.hasOwnProperty('convPremChgControl')) {
                obj['convPremChgControl'] = ApiClient.convertToType(data['convPremChgControl'], 'Number');
            }
            if (data.hasOwnProperty('convPriceMethod')) {
                obj['convPriceMethod'] = ApiClient.convertToType(data['convPriceMethod'], 'String');
            }
            if (data.hasOwnProperty('convRatio')) {
                obj['convRatio'] = ApiClient.convertToType(data['convRatio'], 'Number');
            }
            if (data.hasOwnProperty('convRatioDesc')) {
                obj['convRatioDesc'] = ApiClient.convertToType(data['convRatioDesc'], 'String');
            }
            if (data.hasOwnProperty('convType')) {
                obj['convType'] = ApiClient.convertToType(data['convType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Security identifier used in the request.
 * @member {String} requestId
 */
ConvertibleDetails.prototype['requestId'] = undefined;

/**
 * FactSet Permanent Security Identifier.
 * @member {String} fsymId
 */
ConvertibleDetails.prototype['fsymId'] = undefined;

/**
 * Convertible Currency
 * @member {String} convCurr
 */
ConvertibleDetails.prototype['convCurr'] = undefined;

/**
 * Convertible Effective Date
 * @member {Date} convEffDate
 */
ConvertibleDetails.prototype['convEffDate'] = undefined;

/**
 * Convertible End Date
 * @member {Date} convEndDate
 */
ConvertibleDetails.prototype['convEndDate'] = undefined;

/**
 * Convertible Frequency
 * @member {String} convFrequency
 */
ConvertibleDetails.prototype['convFrequency'] = undefined;

/**
 * Convertible Type Id
 * @member {Number} convId
 */
ConvertibleDetails.prototype['convId'] = undefined;

/**
 * Convertible Identification
 * @member {String} convIdentification
 */
ConvertibleDetails.prototype['convIdentification'] = undefined;

/**
 * Convertible Notice Max
 * @member {Number} convNoticeDaysMax
 */
ConvertibleDetails.prototype['convNoticeDaysMax'] = undefined;

/**
 * Convertible Notice Min
 * @member {Number} convNoticeDaysMin
 */
ConvertibleDetails.prototype['convNoticeDaysMin'] = undefined;

/**
 * Convertible Payment Form
 * @member {String} convPayForm
 */
ConvertibleDetails.prototype['convPayForm'] = undefined;

/**
 * Convertible Payment Form Detail
 * @member {String} convPayFormDet
 */
ConvertibleDetails.prototype['convPayFormDet'] = undefined;

/**
 * Convertible Payment Form Election
 * @member {String} convPayFormElect
 */
ConvertibleDetails.prototype['convPayFormElect'] = undefined;

/**
 * Convertible Premium Change Control
 * @member {Number} convPremChgControl
 */
ConvertibleDetails.prototype['convPremChgControl'] = undefined;

/**
 * Convertible Price Method
 * @member {String} convPriceMethod
 */
ConvertibleDetails.prototype['convPriceMethod'] = undefined;

/**
 * Convertibles Ratio
 * @member {Number} convRatio
 */
ConvertibleDetails.prototype['convRatio'] = undefined;

/**
 * Convertible Ratio Form Description
 * @member {String} convRatioDesc
 */
ConvertibleDetails.prototype['convRatioDesc'] = undefined;

/**
 * Convertible Type
 * @member {String} convType
 */
ConvertibleDetails.prototype['convType'] = undefined;






export default ConvertibleDetails;

