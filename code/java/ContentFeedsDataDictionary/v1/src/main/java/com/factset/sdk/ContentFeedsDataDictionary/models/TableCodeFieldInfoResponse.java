/*
 * CTS Data Dictionary API
 * An API for interacting with CTS Data Dictionary.
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ContentFeedsDataDictionary.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ContentFeedsDataDictionary.models.TableCodeInfo;
import com.factset.sdk.ContentFeedsDataDictionary.models.TableField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ContentFeedsDataDictionary.JSON;


/**
 * TableCodeFieldInfoResponse
 */
@JsonPropertyOrder({
  TableCodeFieldInfoResponse.JSON_PROPERTY_CODE_INFO,
  TableCodeFieldInfoResponse.JSON_PROPERTY_FIELDS,
  TableCodeFieldInfoResponse.JSON_PROPERTY_ENTITLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TableCodeFieldInfoResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CODE_INFO = "codeInfo";
  private TableCodeInfo codeInfo;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  private java.util.List<TableField> fields = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_ENTITLED = "entitled";
  private Boolean entitled;

  public TableCodeFieldInfoResponse() { 
  }

  @JsonCreator
  public TableCodeFieldInfoResponse(
    @JsonProperty(value=JSON_PROPERTY_CODE_INFO, required=true) TableCodeInfo codeInfo, 
    @JsonProperty(value=JSON_PROPERTY_FIELDS, required=true) java.util.List<TableField> fields
  ) {
    this();
    this.codeInfo = codeInfo;
    this.fields = fields;
  }

  public TableCodeFieldInfoResponse codeInfo(TableCodeInfo codeInfo) {
    this.codeInfo = codeInfo;
    return this;
  }

   /**
   * Get codeInfo
   * @return codeInfo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CODE_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TableCodeInfo getCodeInfo() {
    return codeInfo;
  }


  @JsonProperty(JSON_PROPERTY_CODE_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCodeInfo(TableCodeInfo codeInfo) {
    this.codeInfo = codeInfo;
  }


  public TableCodeFieldInfoResponse fields(java.util.List<TableField> fields) {
    this.fields = fields;
    return this;
  }

  public TableCodeFieldInfoResponse addFieldsItem(TableField fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<TableField> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFields(java.util.List<TableField> fields) {
    this.fields = fields;
  }


  public TableCodeFieldInfoResponse entitled(Boolean entitled) {
    this.entitled = entitled;
    return this;
  }

   /**
   * Get entitled
   * @return entitled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")
  @JsonProperty(JSON_PROPERTY_ENTITLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEntitled() {
    return entitled;
  }


  @JsonProperty(JSON_PROPERTY_ENTITLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntitled(Boolean entitled) {
    this.entitled = entitled;
  }


  /**
   * Return true if this TableCodeFieldInfoResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableCodeFieldInfoResponse tableCodeFieldInfoResponse = (TableCodeFieldInfoResponse) o;
    return Objects.equals(this.codeInfo, tableCodeFieldInfoResponse.codeInfo) &&
        Objects.equals(this.fields, tableCodeFieldInfoResponse.fields) &&
        Objects.equals(this.entitled, tableCodeFieldInfoResponse.entitled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codeInfo, fields, entitled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableCodeFieldInfoResponse {\n");
    sb.append("    codeInfo: ").append(toIndentedString(codeInfo)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    entitled: ").append(toIndentedString(entitled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

