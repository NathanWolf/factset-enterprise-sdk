/*
 * CTS Data Dictionary API
 * An API for interacting with CTS Data Dictionary.
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ContentFeedsDataDictionary.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ContentFeedsDataDictionary.models.DataItem;
import com.factset.sdk.ContentFeedsDataDictionary.models.Product;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ContentFeedsDataDictionary.JSON;


/**
 * BasicSearchResponseResults
 */
@JsonPropertyOrder({
  BasicSearchResponseResults.JSON_PROPERTY_PRODUCT,
  BasicSearchResponseResults.JSON_PROPERTY_DATA_ITEM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BasicSearchResponseResults implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private Product product;

  public static final String JSON_PROPERTY_DATA_ITEM = "dataItem";
  private DataItem dataItem;

  public BasicSearchResponseResults() { 
  }

  @JsonCreator
  public BasicSearchResponseResults(
    @JsonProperty(value=JSON_PROPERTY_PRODUCT, required=true) Product product, 
    @JsonProperty(value=JSON_PROPERTY_DATA_ITEM, required=true) DataItem dataItem
  ) {
    this();
    this.product = product;
    this.dataItem = dataItem;
  }

  public BasicSearchResponseResults product(Product product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Product getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProduct(Product product) {
    this.product = product;
  }


  public BasicSearchResponseResults dataItem(DataItem dataItem) {
    this.dataItem = dataItem;
    return this;
  }

   /**
   * Get dataItem
   * @return dataItem
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATA_ITEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataItem getDataItem() {
    return dataItem;
  }


  @JsonProperty(JSON_PROPERTY_DATA_ITEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataItem(DataItem dataItem) {
    this.dataItem = dataItem;
  }


  /**
   * Return true if this BasicSearchResponse_results object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasicSearchResponseResults basicSearchResponseResults = (BasicSearchResponseResults) o;
    return Objects.equals(this.product, basicSearchResponseResults.product) &&
        Objects.equals(this.dataItem, basicSearchResponseResults.dataItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, dataItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasicSearchResponseResults {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    dataItem: ").append(toIndentedString(dataItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

