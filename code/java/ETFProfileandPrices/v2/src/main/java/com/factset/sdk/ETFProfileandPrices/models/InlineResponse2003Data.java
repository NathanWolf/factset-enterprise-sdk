/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse2003DataExchanges;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * ETP exchange allocation data.
 */
@ApiModel(description = "ETP exchange allocation data.")
@JsonPropertyOrder({
  InlineResponse2003Data.JSON_PROPERTY_REPORT_DATE,
  InlineResponse2003Data.JSON_PROPERTY_EXCHANGES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2003Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REPORT_DATE = "reportDate";
  private LocalDate reportDate;

  public static final String JSON_PROPERTY_EXCHANGES = "exchanges";
  private java.util.Set<InlineResponse2003DataExchanges> exchanges = null;


  public InlineResponse2003Data reportDate(LocalDate reportDate) {
    this.reportDate = reportDate;
    return this;
  }

   /**
   * Reporting date for the allocations.
   * @return reportDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reporting date for the allocations.")
  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getReportDate() {
    return reportDate;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportDate(LocalDate reportDate) {
    this.reportDate = reportDate;
  }


  public InlineResponse2003Data exchanges(java.util.Set<InlineResponse2003DataExchanges> exchanges) {
    this.exchanges = exchanges;
    return this;
  }

  public InlineResponse2003Data addExchangesItem(InlineResponse2003DataExchanges exchangesItem) {
    if (this.exchanges == null) {
      this.exchanges = new java.util.LinkedHashSet<>();
    }
    this.exchanges.add(exchangesItem);
    return this;
  }

   /**
   * List of allocations by exchange.
   * @return exchanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of allocations by exchange.")
  @JsonProperty(JSON_PROPERTY_EXCHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Set<InlineResponse2003DataExchanges> getExchanges() {
    return exchanges;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchanges(java.util.Set<InlineResponse2003DataExchanges> exchanges) {
    this.exchanges = exchanges;
  }


  /**
   * Return true if this inline_response_200_3_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003Data inlineResponse2003Data = (InlineResponse2003Data) o;
    return Objects.equals(this.reportDate, inlineResponse2003Data.reportDate) &&
        Objects.equals(this.exchanges, inlineResponse2003Data.exchanges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportDate, exchanges);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003Data {\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    exchanges: ").append(toIndentedString(exchanges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

