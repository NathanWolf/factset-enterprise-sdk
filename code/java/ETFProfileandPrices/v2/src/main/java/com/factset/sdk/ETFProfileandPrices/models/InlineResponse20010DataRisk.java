/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Risk.
 */
@ApiModel(description = "Risk.")
@JsonPropertyOrder({
  InlineResponse20010DataRisk.JSON_PROPERTY_IS_CORPORATE_ACTION_PENDING,
  InlineResponse20010DataRisk.JSON_PROPERTY_COUNTER_PARTY,
  InlineResponse20010DataRisk.JSON_PROPERTY_FUND_CLOSURE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20010DataRisk implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IS_CORPORATE_ACTION_PENDING = "isCorporateActionPending";
  private Boolean isCorporateActionPending;

  public static final String JSON_PROPERTY_COUNTER_PARTY = "counterParty";
  private String counterParty;

  public static final String JSON_PROPERTY_FUND_CLOSURE = "fundClosure";
  private String fundClosure;

  public InlineResponse20010DataRisk() { 
  }

  public InlineResponse20010DataRisk isCorporateActionPending(Boolean isCorporateActionPending) {
    this.isCorporateActionPending = isCorporateActionPending;
    return this;
  }

   /**
   * Indicates a fund whose issuer has any corporate actions pending (e.g. merger, purchase, and closing). Available for the regions: US.
   * @return isCorporateActionPending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates a fund whose issuer has any corporate actions pending (e.g. merger, purchase, and closing). Available for the regions: US.")
  @JsonProperty(JSON_PROPERTY_IS_CORPORATE_ACTION_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCorporateActionPending() {
    return isCorporateActionPending;
  }


  @JsonProperty(JSON_PROPERTY_IS_CORPORATE_ACTION_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCorporateActionPending(Boolean isCorporateActionPending) {
    this.isCorporateActionPending = isCorporateActionPending;
  }


  public InlineResponse20010DataRisk counterParty(String counterParty) {
    this.counterParty = counterParty;
    return this;
  }

   /**
   * Score predicting the likelihood that an ETN counterparty will default, as measured by 1-year credit default swap rates. Possible values are Low, Medium, or High. Empty for non-ETNs. Available for the regions: US.
   * @return counterParty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Score predicting the likelihood that an ETN counterparty will default, as measured by 1-year credit default swap rates. Possible values are Low, Medium, or High. Empty for non-ETNs. Available for the regions: US.")
  @JsonProperty(JSON_PROPERTY_COUNTER_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCounterParty() {
    return counterParty;
  }


  @JsonProperty(JSON_PROPERTY_COUNTER_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCounterParty(String counterParty) {
    this.counterParty = counterParty;
  }


  public InlineResponse20010DataRisk fundClosure(String fundClosure) {
    this.fundClosure = fundClosure;
    return this;
  }

   /**
   * Score estimating the likelihood that a fund will close. Based on a quantitative model. Outputs are Low, Medium, or High. Available for the regions: US.
   * @return fundClosure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Score estimating the likelihood that a fund will close. Based on a quantitative model. Outputs are Low, Medium, or High. Available for the regions: US.")
  @JsonProperty(JSON_PROPERTY_FUND_CLOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFundClosure() {
    return fundClosure;
  }


  @JsonProperty(JSON_PROPERTY_FUND_CLOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundClosure(String fundClosure) {
    this.fundClosure = fundClosure;
  }


  /**
   * Return true if this inline_response_200_10_data_risk object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20010DataRisk inlineResponse20010DataRisk = (InlineResponse20010DataRisk) o;
    return Objects.equals(this.isCorporateActionPending, inlineResponse20010DataRisk.isCorporateActionPending) &&
        Objects.equals(this.counterParty, inlineResponse20010DataRisk.counterParty) &&
        Objects.equals(this.fundClosure, inlineResponse20010DataRisk.fundClosure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isCorporateActionPending, counterParty, fundClosure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20010DataRisk {\n");
    sb.append("    isCorporateActionPending: ").append(toIndentedString(isCorporateActionPending)).append("\n");
    sb.append("    counterParty: ").append(toIndentedString(counterParty)).append("\n");
    sb.append("    fundClosure: ").append(toIndentedString(fundClosure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

