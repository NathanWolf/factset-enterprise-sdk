/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse20015DataCategory;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse20015DataGeography;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Class information of given ETP.
 */
@ApiModel(description = "Class information of given ETP.")
@JsonPropertyOrder({
  InlineResponse20015Data.JSON_PROPERTY_ASSET,
  InlineResponse20015Data.JSON_PROPERTY_ECONOMIC_DEVELOPMENT,
  InlineResponse20015Data.JSON_PROPERTY_GEOGRAPHY,
  InlineResponse20015Data.JSON_PROPERTY_CATEGORY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20015Data implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Asset class of ETP holdings (Equity, Fixed Income, Currency, Commodities, Asset Allocation, or Alternatives), text and standardized value available. This data is available for all the regions.
   */
  public enum AssetEnum {
    EQUITY("Equity"),
    
    ALTERNATIVES("Alternatives"),
    
    FIXED_INCOME("Fixed Income"),
    
    COMMODITIES("Commodities"),
    
    CURRENCY("Currency"),
    
    ASSET_ALLOCATION("Asset Allocation");

    private String value;

    AssetEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AssetEnum fromValue(String value) {
      for (AssetEnum b : AssetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ASSET = "asset";
  private AssetEnum asset;

  /**
   * The country development level of the ETP&#39;s holdings (Developed, Emerging, Frontier, or Blended), text and standardized value available. This data is available for all the regions.
   */
  public enum EconomicDevelopmentEnum {
    DEVELOPED_MARKETS("Developed Markets"),
    
    BLENDED_DEVELOPMENT("Blended Development"),
    
    EMERGING_MARKETS("Emerging Markets"),
    
    FRONTIER_MARKETS("Frontier Markets");

    private String value;

    EconomicDevelopmentEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EconomicDevelopmentEnum fromValue(String value) {
      for (EconomicDevelopmentEnum b : EconomicDevelopmentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ECONOMIC_DEVELOPMENT = "economicDevelopment";
  private EconomicDevelopmentEnum economicDevelopment;

  public static final String JSON_PROPERTY_GEOGRAPHY = "geography";
  private InlineResponse20015DataGeography geography;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private InlineResponse20015DataCategory category;

  public InlineResponse20015Data() { 
  }

  public InlineResponse20015Data asset(AssetEnum asset) {
    this.asset = asset;
    return this;
  }

   /**
   * Asset class of ETP holdings (Equity, Fixed Income, Currency, Commodities, Asset Allocation, or Alternatives), text and standardized value available. This data is available for all the regions.
   * @return asset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Asset class of ETP holdings (Equity, Fixed Income, Currency, Commodities, Asset Allocation, or Alternatives), text and standardized value available. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssetEnum getAsset() {
    return asset;
  }


  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsset(AssetEnum asset) {
    this.asset = asset;
  }


  public InlineResponse20015Data economicDevelopment(EconomicDevelopmentEnum economicDevelopment) {
    this.economicDevelopment = economicDevelopment;
    return this;
  }

   /**
   * The country development level of the ETP&#39;s holdings (Developed, Emerging, Frontier, or Blended), text and standardized value available. This data is available for all the regions.
   * @return economicDevelopment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country development level of the ETP's holdings (Developed, Emerging, Frontier, or Blended), text and standardized value available. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_ECONOMIC_DEVELOPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EconomicDevelopmentEnum getEconomicDevelopment() {
    return economicDevelopment;
  }


  @JsonProperty(JSON_PROPERTY_ECONOMIC_DEVELOPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEconomicDevelopment(EconomicDevelopmentEnum economicDevelopment) {
    this.economicDevelopment = economicDevelopment;
  }


  public InlineResponse20015Data geography(InlineResponse20015DataGeography geography) {
    this.geography = geography;
    return this;
  }

   /**
   * Get geography
   * @return geography
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GEOGRAPHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20015DataGeography getGeography() {
    return geography;
  }


  @JsonProperty(JSON_PROPERTY_GEOGRAPHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeography(InlineResponse20015DataGeography geography) {
    this.geography = geography;
  }


  public InlineResponse20015Data category(InlineResponse20015DataCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20015DataCategory getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(InlineResponse20015DataCategory category) {
    this.category = category;
  }


  /**
   * Return true if this inline_response_200_15_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20015Data inlineResponse20015Data = (InlineResponse20015Data) o;
    return Objects.equals(this.asset, inlineResponse20015Data.asset) &&
        Objects.equals(this.economicDevelopment, inlineResponse20015Data.economicDevelopment) &&
        Objects.equals(this.geography, inlineResponse20015Data.geography) &&
        Objects.equals(this.category, inlineResponse20015Data.category);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, economicDevelopment, geography, category);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20015Data {\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    economicDevelopment: ").append(toIndentedString(economicDevelopment)).append("\n");
    sb.append("    geography: ").append(toIndentedString(geography)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

