/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse20032DataExpenseRatio;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse20032DataMaxCapitalGainsRate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Taxes and fees.
 */
@ApiModel(description = "Taxes and fees.")
@JsonPropertyOrder({
  InlineResponse20032Data.JSON_PROPERTY_MAX_CAPITAL_GAINS_RATE,
  InlineResponse20032Data.JSON_PROPERTY_DIVIDEND_TREATMENT,
  InlineResponse20032Data.JSON_PROPERTY_DISTRIBUTE_K1,
  InlineResponse20032Data.JSON_PROPERTY_TAX_TYPE,
  InlineResponse20032Data.JSON_PROPERTY_TAX_ON_DISTRIBUTIONS,
  InlineResponse20032Data.JSON_PROPERTY_EXPENSE_RATIO,
  InlineResponse20032Data.JSON_PROPERTY_POTENTIAL_COST_INCREASE_DATE,
  InlineResponse20032Data.JSON_PROPERTY_CONTRACT_ADVISORY_FEE,
  InlineResponse20032Data.JSON_PROPERTY_CAPITAL_GAINS,
  InlineResponse20032Data.JSON_PROPERTY_CAPITAL_GAINS_DISTIRBUTIONS3_Y,
  InlineResponse20032Data.JSON_PROPERTY_MANAGEMENT_EXPENSE_RATIO,
  InlineResponse20032Data.JSON_PROPERTY_MANAGEMENT_FEE,
  InlineResponse20032Data.JSON_PROPERTY_TRADING_EXPENSE_RATIO,
  InlineResponse20032Data.JSON_PROPERTY_FEE_WAIVER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse20032Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MAX_CAPITAL_GAINS_RATE = "maxCapitalGainsRate";
  private InlineResponse20032DataMaxCapitalGainsRate maxCapitalGainsRate;

  public static final String JSON_PROPERTY_DIVIDEND_TREATMENT = "dividendTreatment";
  private String dividendTreatment;

  public static final String JSON_PROPERTY_DISTRIBUTE_K1 = "distributeK1";
  private String distributeK1;

  public static final String JSON_PROPERTY_TAX_TYPE = "taxType";
  private String taxType;

  public static final String JSON_PROPERTY_TAX_ON_DISTRIBUTIONS = "taxOnDistributions";
  private String taxOnDistributions;

  public static final String JSON_PROPERTY_EXPENSE_RATIO = "expenseRatio";
  private InlineResponse20032DataExpenseRatio expenseRatio;

  public static final String JSON_PROPERTY_POTENTIAL_COST_INCREASE_DATE = "potentialCostIncreaseDate";
  private LocalDate potentialCostIncreaseDate;

  public static final String JSON_PROPERTY_CONTRACT_ADVISORY_FEE = "contractAdvisoryFee";
  private BigDecimal contractAdvisoryFee;

  public static final String JSON_PROPERTY_CAPITAL_GAINS = "capitalGains";
  private BigDecimal capitalGains;

  public static final String JSON_PROPERTY_CAPITAL_GAINS_DISTIRBUTIONS3_Y = "capitalGainsDistirbutions3Y";
  private BigDecimal capitalGainsDistirbutions3Y;

  public static final String JSON_PROPERTY_MANAGEMENT_EXPENSE_RATIO = "managementExpenseRatio";
  private BigDecimal managementExpenseRatio;

  public static final String JSON_PROPERTY_MANAGEMENT_FEE = "managementFee";
  private BigDecimal managementFee;

  public static final String JSON_PROPERTY_TRADING_EXPENSE_RATIO = "tradingExpenseRatio";
  private BigDecimal tradingExpenseRatio;

  public static final String JSON_PROPERTY_FEE_WAIVER = "feeWaiver";
  private String feeWaiver;

  public InlineResponse20032Data() { 
  }

  public InlineResponse20032Data maxCapitalGainsRate(InlineResponse20032DataMaxCapitalGainsRate maxCapitalGainsRate) {
    this.maxCapitalGainsRate = maxCapitalGainsRate;
    return this;
  }

   /**
   * Get maxCapitalGainsRate
   * @return maxCapitalGainsRate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX_CAPITAL_GAINS_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20032DataMaxCapitalGainsRate getMaxCapitalGainsRate() {
    return maxCapitalGainsRate;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CAPITAL_GAINS_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxCapitalGainsRate(InlineResponse20032DataMaxCapitalGainsRate maxCapitalGainsRate) {
    this.maxCapitalGainsRate = maxCapitalGainsRate;
  }


  public InlineResponse20032Data dividendTreatment(String dividendTreatment) {
    this.dividendTreatment = dividendTreatment;
    return this;
  }

   /**
   * Describes whether dividend income received by the ETP is distributed to ETP shareholders or capitalised (reinvested) into the ETP, text and standardized value available. This data is available for all the Canada and Europe regions.
   * @return dividendTreatment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Describes whether dividend income received by the ETP is distributed to ETP shareholders or capitalised (reinvested) into the ETP, text and standardized value available. This data is available for all the Canada and Europe regions.")
  @JsonProperty(JSON_PROPERTY_DIVIDEND_TREATMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDividendTreatment() {
    return dividendTreatment;
  }


  @JsonProperty(JSON_PROPERTY_DIVIDEND_TREATMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDividendTreatment(String dividendTreatment) {
    this.dividendTreatment = dividendTreatment;
  }


  public InlineResponse20032Data distributeK1(String distributeK1) {
    this.distributeK1 = distributeK1;
    return this;
  }

   /**
   * Flags ETPs that distribute K-1 tax forms. This data is available for the US regions.
   * @return distributeK1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Flags ETPs that distribute K-1 tax forms. This data is available for the US regions.")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTE_K1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDistributeK1() {
    return distributeK1;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTE_K1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributeK1(String distributeK1) {
    this.distributeK1 = distributeK1;
  }


  public InlineResponse20032Data taxType(String taxType) {
    this.taxType = taxType;
    return this;
  }

   /**
   * Type of the tax applicable on the distribution. This data is available for the US regions.
   * @return taxType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Type of the tax applicable on the distribution. This data is available for the US regions.")
  @JsonProperty(JSON_PROPERTY_TAX_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxType() {
    return taxType;
  }


  @JsonProperty(JSON_PROPERTY_TAX_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxType(String taxType) {
    this.taxType = taxType;
  }


  public InlineResponse20032Data taxOnDistributions(String taxOnDistributions) {
    this.taxOnDistributions = taxOnDistributions;
    return this;
  }

   /**
   * Tax treatment of the ETP&#39;s regular distributions. This data is available for the US regions.
   * @return taxOnDistributions
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Tax treatment of the ETP's regular distributions. This data is available for the US regions.")
  @JsonProperty(JSON_PROPERTY_TAX_ON_DISTRIBUTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxOnDistributions() {
    return taxOnDistributions;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ON_DISTRIBUTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxOnDistributions(String taxOnDistributions) {
    this.taxOnDistributions = taxOnDistributions;
  }


  public InlineResponse20032Data expenseRatio(InlineResponse20032DataExpenseRatio expenseRatio) {
    this.expenseRatio = expenseRatio;
    return this;
  }

   /**
   * Get expenseRatio
   * @return expenseRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20032DataExpenseRatio getExpenseRatio() {
    return expenseRatio;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpenseRatio(InlineResponse20032DataExpenseRatio expenseRatio) {
    this.expenseRatio = expenseRatio;
  }


  public InlineResponse20032Data potentialCostIncreaseDate(LocalDate potentialCostIncreaseDate) {
    this.potentialCostIncreaseDate = potentialCostIncreaseDate;
    return this;
  }

   /**
   * Expiration date of any fee waivers. This data is available for the US and Canada regions.
   * @return potentialCostIncreaseDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Expiration date of any fee waivers. This data is available for the US and Canada regions.")
  @JsonProperty(JSON_PROPERTY_POTENTIAL_COST_INCREASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getPotentialCostIncreaseDate() {
    return potentialCostIncreaseDate;
  }


  @JsonProperty(JSON_PROPERTY_POTENTIAL_COST_INCREASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPotentialCostIncreaseDate(LocalDate potentialCostIncreaseDate) {
    this.potentialCostIncreaseDate = potentialCostIncreaseDate;
  }


  public InlineResponse20032Data contractAdvisoryFee(BigDecimal contractAdvisoryFee) {
    this.contractAdvisoryFee = contractAdvisoryFee;
    return this;
  }

   /**
   * The advisors fee excluding any additional costs or fees; A subset of the total expense ratio. This data is available for the Canada regions.
   * @return contractAdvisoryFee
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The advisors fee excluding any additional costs or fees; A subset of the total expense ratio. This data is available for the Canada regions.")
  @JsonProperty(JSON_PROPERTY_CONTRACT_ADVISORY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getContractAdvisoryFee() {
    return contractAdvisoryFee;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_ADVISORY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContractAdvisoryFee(BigDecimal contractAdvisoryFee) {
    this.contractAdvisoryFee = contractAdvisoryFee;
  }


  public InlineResponse20032Data capitalGains(BigDecimal capitalGains) {
    this.capitalGains = capitalGains;
    return this;
  }

   /**
   * Realized capital gains or losses reported on the ETP&#39;s most recent annual or semi-annual report. Gains must generally be paid out as a distribution at year-end, while losses can be banked to offset future gains. This data is available only for the US regions.
   * @return capitalGains
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Realized capital gains or losses reported on the ETP's most recent annual or semi-annual report. Gains must generally be paid out as a distribution at year-end, while losses can be banked to offset future gains. This data is available only for the US regions.")
  @JsonProperty(JSON_PROPERTY_CAPITAL_GAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCapitalGains() {
    return capitalGains;
  }


  @JsonProperty(JSON_PROPERTY_CAPITAL_GAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapitalGains(BigDecimal capitalGains) {
    this.capitalGains = capitalGains;
  }


  public InlineResponse20032Data capitalGainsDistirbutions3Y(BigDecimal capitalGainsDistirbutions3Y) {
    this.capitalGainsDistirbutions3Y = capitalGainsDistirbutions3Y;
    return this;
  }

   /**
   * The average annual capital gains paid out to shareholders over the past 3 calendar years, measured as a percent of net asset value (NAV) on the final trading day of each previous year. This data is available for the US region only.
   * @return capitalGainsDistirbutions3Y
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The average annual capital gains paid out to shareholders over the past 3 calendar years, measured as a percent of net asset value (NAV) on the final trading day of each previous year. This data is available for the US region only.")
  @JsonProperty(JSON_PROPERTY_CAPITAL_GAINS_DISTIRBUTIONS3_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCapitalGainsDistirbutions3Y() {
    return capitalGainsDistirbutions3Y;
  }


  @JsonProperty(JSON_PROPERTY_CAPITAL_GAINS_DISTIRBUTIONS3_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapitalGainsDistirbutions3Y(BigDecimal capitalGainsDistirbutions3Y) {
    this.capitalGainsDistirbutions3Y = capitalGainsDistirbutions3Y;
  }


  public InlineResponse20032Data managementExpenseRatio(BigDecimal managementExpenseRatio) {
    this.managementExpenseRatio = managementExpenseRatio;
    return this;
  }

   /**
   * Total net annual cost associated with holding the ETP, expressed as a percentage. This data is available for the Canada regions.
   * @return managementExpenseRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Total net annual cost associated with holding the ETP, expressed as a percentage. This data is available for the Canada regions.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getManagementExpenseRatio() {
    return managementExpenseRatio;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementExpenseRatio(BigDecimal managementExpenseRatio) {
    this.managementExpenseRatio = managementExpenseRatio;
  }


  public InlineResponse20032Data managementFee(BigDecimal managementFee) {
    this.managementFee = managementFee;
    return this;
  }

   /**
   * Annual fee collected by fund manager, expressed as a percentage. This data is available for the Canada region.
   * @return managementFee
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Annual fee collected by fund manager, expressed as a percentage. This data is available for the Canada region.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getManagementFee() {
    return managementFee;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementFee(BigDecimal managementFee) {
    this.managementFee = managementFee;
  }


  public InlineResponse20032Data tradingExpenseRatio(BigDecimal tradingExpenseRatio) {
    this.tradingExpenseRatio = tradingExpenseRatio;
    return this;
  }

   /**
   * Estimated annual costs associated with trading the underlying holdings. This data is available for the Canada region.
   * @return tradingExpenseRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Estimated annual costs associated with trading the underlying holdings. This data is available for the Canada region.")
  @JsonProperty(JSON_PROPERTY_TRADING_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTradingExpenseRatio() {
    return tradingExpenseRatio;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradingExpenseRatio(BigDecimal tradingExpenseRatio) {
    this.tradingExpenseRatio = tradingExpenseRatio;
  }


  public InlineResponse20032Data feeWaiver(String feeWaiver) {
    this.feeWaiver = feeWaiver;
    return this;
  }

   /**
   * A reduction in annual ETP expenses, expressed as a percentage. This data is available for the Canada region.
   * @return feeWaiver
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A reduction in annual ETP expenses, expressed as a percentage. This data is available for the Canada region.")
  @JsonProperty(JSON_PROPERTY_FEE_WAIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeeWaiver() {
    return feeWaiver;
  }


  @JsonProperty(JSON_PROPERTY_FEE_WAIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeeWaiver(String feeWaiver) {
    this.feeWaiver = feeWaiver;
  }


  /**
   * Return true if this inline_response_200_32_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20032Data inlineResponse20032Data = (InlineResponse20032Data) o;
    return Objects.equals(this.maxCapitalGainsRate, inlineResponse20032Data.maxCapitalGainsRate) &&
        Objects.equals(this.dividendTreatment, inlineResponse20032Data.dividendTreatment) &&
        Objects.equals(this.distributeK1, inlineResponse20032Data.distributeK1) &&
        Objects.equals(this.taxType, inlineResponse20032Data.taxType) &&
        Objects.equals(this.taxOnDistributions, inlineResponse20032Data.taxOnDistributions) &&
        Objects.equals(this.expenseRatio, inlineResponse20032Data.expenseRatio) &&
        Objects.equals(this.potentialCostIncreaseDate, inlineResponse20032Data.potentialCostIncreaseDate) &&
        Objects.equals(this.contractAdvisoryFee, inlineResponse20032Data.contractAdvisoryFee) &&
        Objects.equals(this.capitalGains, inlineResponse20032Data.capitalGains) &&
        Objects.equals(this.capitalGainsDistirbutions3Y, inlineResponse20032Data.capitalGainsDistirbutions3Y) &&
        Objects.equals(this.managementExpenseRatio, inlineResponse20032Data.managementExpenseRatio) &&
        Objects.equals(this.managementFee, inlineResponse20032Data.managementFee) &&
        Objects.equals(this.tradingExpenseRatio, inlineResponse20032Data.tradingExpenseRatio) &&
        Objects.equals(this.feeWaiver, inlineResponse20032Data.feeWaiver);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxCapitalGainsRate, dividendTreatment, distributeK1, taxType, taxOnDistributions, expenseRatio, potentialCostIncreaseDate, contractAdvisoryFee, capitalGains, capitalGainsDistirbutions3Y, managementExpenseRatio, managementFee, tradingExpenseRatio, feeWaiver);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20032Data {\n");
    sb.append("    maxCapitalGainsRate: ").append(toIndentedString(maxCapitalGainsRate)).append("\n");
    sb.append("    dividendTreatment: ").append(toIndentedString(dividendTreatment)).append("\n");
    sb.append("    distributeK1: ").append(toIndentedString(distributeK1)).append("\n");
    sb.append("    taxType: ").append(toIndentedString(taxType)).append("\n");
    sb.append("    taxOnDistributions: ").append(toIndentedString(taxOnDistributions)).append("\n");
    sb.append("    expenseRatio: ").append(toIndentedString(expenseRatio)).append("\n");
    sb.append("    potentialCostIncreaseDate: ").append(toIndentedString(potentialCostIncreaseDate)).append("\n");
    sb.append("    contractAdvisoryFee: ").append(toIndentedString(contractAdvisoryFee)).append("\n");
    sb.append("    capitalGains: ").append(toIndentedString(capitalGains)).append("\n");
    sb.append("    capitalGainsDistirbutions3Y: ").append(toIndentedString(capitalGainsDistirbutions3Y)).append("\n");
    sb.append("    managementExpenseRatio: ").append(toIndentedString(managementExpenseRatio)).append("\n");
    sb.append("    managementFee: ").append(toIndentedString(managementFee)).append("\n");
    sb.append("    tradingExpenseRatio: ").append(toIndentedString(tradingExpenseRatio)).append("\n");
    sb.append("    feeWaiver: ").append(toIndentedString(feeWaiver)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

