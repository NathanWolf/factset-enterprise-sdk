/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Tradability.
 */
@ApiModel(description = "Tradability.")
@JsonPropertyOrder({
  InlineResponse20012DataTradability.JSON_PROPERTY_VALUE,
  InlineResponse20012DataTradability.JSON_PROPERTY_AVERAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse20012DataTradability implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALUE = "value";
  private BigDecimal value;

  public static final String JSON_PROPERTY_AVERAGE = "average";
  private BigDecimal average;

  public InlineResponse20012DataTradability() { 
  }

  public InlineResponse20012DataTradability value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * A total view of the liquidity of a fund taking into account share-level liquidity as well as the underlying liquidity of a fund&#39;s portfolio of securities. In the range 0 (low) to 100 (high). Available for the regions: US.
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A total view of the liquidity of a fund taking into account share-level liquidity as well as the underlying liquidity of a fund's portfolio of securities. In the range 0 (low) to 100 (high). Available for the regions: US.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(BigDecimal value) {
    this.value = value;
  }


  public InlineResponse20012DataTradability average(BigDecimal average) {
    this.average = average;
    return this;
  }

   /**
   * The average tradability score for all funds in the segment. Available for the regions: US.
   * @return average
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The average tradability score for all funds in the segment. Available for the regions: US.")
  @JsonProperty(JSON_PROPERTY_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAverage() {
    return average;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverage(BigDecimal average) {
    this.average = average;
  }


  /**
   * Return true if this inline_response_200_12_data_tradability object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20012DataTradability inlineResponse20012DataTradability = (InlineResponse20012DataTradability) o;
    return Objects.equals(this.value, inlineResponse20012DataTradability.value) &&
        Objects.equals(this.average, inlineResponse20012DataTradability.average);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, average);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20012DataTradability {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

