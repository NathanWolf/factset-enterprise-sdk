/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Expense ratio.
 */
@ApiModel(description = "Expense ratio.")
@JsonPropertyOrder({
  InlineResponse20021DataExpenseRatio.JSON_PROPERTY_VALUE,
  InlineResponse20021DataExpenseRatio.JSON_PROPERTY_POTENTIAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20021DataExpenseRatio implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALUE = "value";
  private BigDecimal value;

  public static final String JSON_PROPERTY_POTENTIAL = "potential";
  private BigDecimal potential;


  public InlineResponse20021DataExpenseRatio value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Typically the net total annual fee the issuer deducts from ETP assets as a management fee. Also can include where applicable acquired ETP fees, short interest expense, index fees, and financing fees. Breakeven rate is reported for commodity pools. This data is available for all the regions.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typically the net total annual fee the issuer deducts from ETP assets as a management fee. Also can include where applicable acquired ETP fees, short interest expense, index fees, and financing fees. Breakeven rate is reported for commodity pools. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(BigDecimal value) {
    this.value = value;
  }


  public InlineResponse20021DataExpenseRatio potential(BigDecimal potential) {
    this.potential = potential;
    return this;
  }

   /**
   * The full expense ratio before any fee waivers. This data is available fo the US and Canada regions.
   * @return potential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The full expense ratio before any fee waivers. This data is available fo the US and Canada regions.")
  @JsonProperty(JSON_PROPERTY_POTENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPotential() {
    return potential;
  }


  @JsonProperty(JSON_PROPERTY_POTENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPotential(BigDecimal potential) {
    this.potential = potential;
  }


  /**
   * Return true if this inline_response_200_21_data_expenseRatio object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20021DataExpenseRatio inlineResponse20021DataExpenseRatio = (InlineResponse20021DataExpenseRatio) o;
    return Objects.equals(this.value, inlineResponse20021DataExpenseRatio.value) &&
        Objects.equals(this.potential, inlineResponse20021DataExpenseRatio.potential);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, potential);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20021DataExpenseRatio {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    potential: ").append(toIndentedString(potential)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

