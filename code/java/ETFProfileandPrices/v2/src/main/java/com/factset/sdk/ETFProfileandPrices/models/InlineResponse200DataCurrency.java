/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Currency.
 */
@ApiModel(description = "Currency.")
@JsonPropertyOrder({
  InlineResponse200DataCurrency.JSON_PROPERTY_LISTING,
  InlineResponse200DataCurrency.JSON_PROPERTY_FUND
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200DataCurrency implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LISTING = "listing";
  private String listing;

  public static final String JSON_PROPERTY_FUND = "fund";
  private String fund;


  public InlineResponse200DataCurrency listing(String listing) {
    this.listing = listing;
    return this;
  }

   /**
   * Currency of exchange specific listing. This data is available for all the regions and currency code is in the format ISO 4217.
   * @return listing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency of exchange specific listing. This data is available for all the regions and currency code is in the format ISO 4217.")
  @JsonProperty(JSON_PROPERTY_LISTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getListing() {
    return listing;
  }


  @JsonProperty(JSON_PROPERTY_LISTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListing(String listing) {
    this.listing = listing;
  }


  public InlineResponse200DataCurrency fund(String fund) {
    this.fund = fund;
    return this;
  }

   /**
   * Base calculation currency of the ETP. This data is available for all the regions and currency code is in the format ISO 4217.
   * @return fund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base calculation currency of the ETP. This data is available for all the regions and currency code is in the format ISO 4217.")
  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFund() {
    return fund;
  }


  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFund(String fund) {
    this.fund = fund;
  }


  /**
   * Return true if this inline_response_200_data_currency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataCurrency inlineResponse200DataCurrency = (InlineResponse200DataCurrency) o;
    return Objects.equals(this.listing, inlineResponse200DataCurrency.listing) &&
        Objects.equals(this.fund, inlineResponse200DataCurrency.fund);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listing, fund);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataCurrency {\n");
    sb.append("    listing: ").append(toIndentedString(listing)).append("\n");
    sb.append("    fund: ").append(toIndentedString(fund)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

