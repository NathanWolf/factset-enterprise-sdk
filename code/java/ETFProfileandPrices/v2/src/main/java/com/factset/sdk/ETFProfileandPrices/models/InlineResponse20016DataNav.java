/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ETFProfileandPrices.models.InlineResponse20016DataNavLast;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Nav.
 */
@ApiModel(description = "Nav.")
@JsonPropertyOrder({
  InlineResponse20016DataNav.JSON_PROPERTY_VALUE,
  InlineResponse20016DataNav.JSON_PROPERTY_CURRENCY,
  InlineResponse20016DataNav.JSON_PROPERTY_START_DATE,
  InlineResponse20016DataNav.JSON_PROPERTY_LAST,
  InlineResponse20016DataNav.JSON_PROPERTY_TOTAL_RETURN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20016DataNav implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALUE = "value";
  private BigDecimal value;

  /**
   * Currency of the ETP&#39;s NAV in ISO 4217 format. This data is available for all the regions.
   */
  public enum CurrencyEnum {
    CHF("CHF"),
    
    CAD("CAD"),
    
    USD("USD"),
    
    EUR("EUR"),
    
    MXN("MXN"),
    
    GBP("GBP"),
    
    GBX("GBX"),
    
    SEK("SEK"),
    
    JPY("JPY");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyEnum currency;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private LocalDate startDate;

  public static final String JSON_PROPERTY_LAST = "last";
  private InlineResponse20016DataNavLast last;

  public static final String JSON_PROPERTY_TOTAL_RETURN = "totalReturn";
  private BigDecimal totalReturn;


  public InlineResponse20016DataNav value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Daily net asset value (NAV) of the ETP. This data is available for all the regions.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Daily net asset value (NAV) of the ETP. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(BigDecimal value) {
    this.value = value;
  }


  public InlineResponse20016DataNav currency(CurrencyEnum currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency of the ETP&#39;s NAV in ISO 4217 format. This data is available for all the regions.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency of the ETP's NAV in ISO 4217 format. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyEnum getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  public InlineResponse20016DataNav startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Date of first available NAV ex-date. This data is available for all the regions.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of first available NAV ex-date. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public InlineResponse20016DataNav last(InlineResponse20016DataNavLast last) {
    this.last = last;
    return this;
  }

   /**
   * Get last
   * @return last
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20016DataNavLast getLast() {
    return last;
  }


  @JsonProperty(JSON_PROPERTY_LAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLast(InlineResponse20016DataNavLast last) {
    this.last = last;
  }


  public InlineResponse20016DataNav totalReturn(BigDecimal totalReturn) {
    this.totalReturn = totalReturn;
    return this;
  }

   /**
   * ETP NAV calculated by reinvesting dividends and compounding returns. This data is available for all the regions.
   * @return totalReturn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ETP NAV calculated by reinvesting dividends and compounding returns. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalReturn() {
    return totalReturn;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalReturn(BigDecimal totalReturn) {
    this.totalReturn = totalReturn;
  }


  /**
   * Return true if this inline_response_200_16_data_nav object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20016DataNav inlineResponse20016DataNav = (InlineResponse20016DataNav) o;
    return Objects.equals(this.value, inlineResponse20016DataNav.value) &&
        Objects.equals(this.currency, inlineResponse20016DataNav.currency) &&
        Objects.equals(this.startDate, inlineResponse20016DataNav.startDate) &&
        Objects.equals(this.last, inlineResponse20016DataNav.last) &&
        Objects.equals(this.totalReturn, inlineResponse20016DataNav.totalReturn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, currency, startDate, last, totalReturn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20016DataNav {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    last: ").append(toIndentedString(last)).append("\n");
    sb.append("    totalReturn: ").append(toIndentedString(totalReturn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

