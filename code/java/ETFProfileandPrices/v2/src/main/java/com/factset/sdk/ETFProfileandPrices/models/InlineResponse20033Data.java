/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * InlineResponse20033Data
 */
@JsonPropertyOrder({
  InlineResponse20033Data.JSON_PROPERTY_NAV_DATE,
  InlineResponse20033Data.JSON_PROPERTY_NAV,
  InlineResponse20033Data.JSON_PROPERTY_NAV_CHANGE,
  InlineResponse20033Data.JSON_PROPERTY_NAV_CHANGE_PERCENT,
  InlineResponse20033Data.JSON_PROPERTY_PREMIUM_DISCOUNT,
  InlineResponse20033Data.JSON_PROPERTY_FUND_FLOWS,
  InlineResponse20033Data.JSON_PROPERTY_SHARES_OUTSTANDING,
  InlineResponse20033Data.JSON_PROPERTY_AUM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20033Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAV_DATE = "navDate";
  private LocalDate navDate;

  public static final String JSON_PROPERTY_NAV = "nav";
  private BigDecimal nav;

  public static final String JSON_PROPERTY_NAV_CHANGE = "navChange";
  private BigDecimal navChange;

  public static final String JSON_PROPERTY_NAV_CHANGE_PERCENT = "navChangePercent";
  private BigDecimal navChangePercent;

  public static final String JSON_PROPERTY_PREMIUM_DISCOUNT = "premiumDiscount";
  private BigDecimal premiumDiscount;

  public static final String JSON_PROPERTY_FUND_FLOWS = "fundFlows";
  private BigDecimal fundFlows;

  public static final String JSON_PROPERTY_SHARES_OUTSTANDING = "sharesOutstanding";
  private BigDecimal sharesOutstanding;

  public static final String JSON_PROPERTY_AUM = "aum";
  private BigDecimal aum;

  public InlineResponse20033Data() { 
  }

  public InlineResponse20033Data navDate(LocalDate navDate) {
    this.navDate = navDate;
    return this;
  }

   /**
   * Historice NAV date value.
   * @return navDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Historice NAV date value.")
  @JsonProperty(JSON_PROPERTY_NAV_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getNavDate() {
    return navDate;
  }


  @JsonProperty(JSON_PROPERTY_NAV_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavDate(LocalDate navDate) {
    this.navDate = navDate;
  }


  public InlineResponse20033Data nav(BigDecimal nav) {
    this.nav = nav;
    return this;
  }

   /**
   * Returns historic Net Asset Value of the ETP.
   * @return nav
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns historic Net Asset Value of the ETP.")
  @JsonProperty(JSON_PROPERTY_NAV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNav() {
    return nav;
  }


  @JsonProperty(JSON_PROPERTY_NAV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNav(BigDecimal nav) {
    this.nav = nav;
  }


  public InlineResponse20033Data navChange(BigDecimal navChange) {
    this.navChange = navChange;
    return this;
  }

   /**
   * Absolute change in NAV value.
   * @return navChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Absolute change in NAV value.")
  @JsonProperty(JSON_PROPERTY_NAV_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNavChange() {
    return navChange;
  }


  @JsonProperty(JSON_PROPERTY_NAV_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavChange(BigDecimal navChange) {
    this.navChange = navChange;
  }


  public InlineResponse20033Data navChangePercent(BigDecimal navChangePercent) {
    this.navChangePercent = navChangePercent;
    return this;
  }

   /**
   * Related change in the NAV value.
   * @return navChangePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Related change in the NAV value.")
  @JsonProperty(JSON_PROPERTY_NAV_CHANGE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNavChangePercent() {
    return navChangePercent;
  }


  @JsonProperty(JSON_PROPERTY_NAV_CHANGE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavChangePercent(BigDecimal navChangePercent) {
    this.navChangePercent = navChangePercent;
  }


  public InlineResponse20033Data premiumDiscount(BigDecimal premiumDiscount) {
    this.premiumDiscount = premiumDiscount;
    return this;
  }

   /**
   * Difference between market price and NAV of the ETP.
   * @return premiumDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Difference between market price and NAV of the ETP.")
  @JsonProperty(JSON_PROPERTY_PREMIUM_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPremiumDiscount() {
    return premiumDiscount;
  }


  @JsonProperty(JSON_PROPERTY_PREMIUM_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPremiumDiscount(BigDecimal premiumDiscount) {
    this.premiumDiscount = premiumDiscount;
  }


  public InlineResponse20033Data fundFlows(BigDecimal fundFlows) {
    this.fundFlows = fundFlows;
    return this;
  }

   /**
   * This value returns factset&#39;s ETF fundflow history. Rolling one day fund flows are calculated using the difference of shares outstanding at previous close and shares outstanding one day prior to close mulitplied by the NAV of one day prior to close.
   * @return fundFlows
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This value returns factset's ETF fundflow history. Rolling one day fund flows are calculated using the difference of shares outstanding at previous close and shares outstanding one day prior to close mulitplied by the NAV of one day prior to close.")
  @JsonProperty(JSON_PROPERTY_FUND_FLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFundFlows() {
    return fundFlows;
  }


  @JsonProperty(JSON_PROPERTY_FUND_FLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundFlows(BigDecimal fundFlows) {
    this.fundFlows = fundFlows;
  }


  public InlineResponse20033Data sharesOutstanding(BigDecimal sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
    return this;
  }

   /**
   * Returns the historic share Outstanding values of the ETP.
   * @return sharesOutstanding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns the historic share Outstanding values of the ETP.")
  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSharesOutstanding() {
    return sharesOutstanding;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesOutstanding(BigDecimal sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
  }


  public InlineResponse20033Data aum(BigDecimal aum) {
    this.aum = aum;
    return this;
  }

   /**
   * Returns the historic Total Asset Value of the ETP.
   * @return aum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns the historic Total Asset Value of the ETP.")
  @JsonProperty(JSON_PROPERTY_AUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAum() {
    return aum;
  }


  @JsonProperty(JSON_PROPERTY_AUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAum(BigDecimal aum) {
    this.aum = aum;
  }


  /**
   * Return true if this inline_response_200_33_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20033Data inlineResponse20033Data = (InlineResponse20033Data) o;
    return Objects.equals(this.navDate, inlineResponse20033Data.navDate) &&
        Objects.equals(this.nav, inlineResponse20033Data.nav) &&
        Objects.equals(this.navChange, inlineResponse20033Data.navChange) &&
        Objects.equals(this.navChangePercent, inlineResponse20033Data.navChangePercent) &&
        Objects.equals(this.premiumDiscount, inlineResponse20033Data.premiumDiscount) &&
        Objects.equals(this.fundFlows, inlineResponse20033Data.fundFlows) &&
        Objects.equals(this.sharesOutstanding, inlineResponse20033Data.sharesOutstanding) &&
        Objects.equals(this.aum, inlineResponse20033Data.aum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(navDate, nav, navChange, navChangePercent, premiumDiscount, fundFlows, sharesOutstanding, aum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20033Data {\n");
    sb.append("    navDate: ").append(toIndentedString(navDate)).append("\n");
    sb.append("    nav: ").append(toIndentedString(nav)).append("\n");
    sb.append("    navChange: ").append(toIndentedString(navChange)).append("\n");
    sb.append("    navChangePercent: ").append(toIndentedString(navChangePercent)).append("\n");
    sb.append("    premiumDiscount: ").append(toIndentedString(premiumDiscount)).append("\n");
    sb.append("    fundFlows: ").append(toIndentedString(fundFlows)).append("\n");
    sb.append("    sharesOutstanding: ").append(toIndentedString(sharesOutstanding)).append("\n");
    sb.append("    aum: ").append(toIndentedString(aum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

