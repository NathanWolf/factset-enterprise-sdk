/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * The index the ETP is replicating, if applicable.
 */
@ApiModel(description = "The index the ETP is replicating, if applicable.")
@JsonPropertyOrder({
  InlineResponse200DataIndex.JSON_PROPERTY_NAME,
  InlineResponse200DataIndex.JSON_PROPERTY_FAMILY,
  InlineResponse200DataIndex.JSON_PROPERTY_WEBSITE,
  InlineResponse200DataIndex.JSON_PROPERTY_DISTRIBUTION_TREATMENT,
  InlineResponse200DataIndex.JSON_PROPERTY_REBALANCING_FREQUENCY,
  InlineResponse200DataIndex.JSON_PROPERTY_CURRENCY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200DataIndex implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FAMILY = "family";
  private String family;

  public static final String JSON_PROPERTY_WEBSITE = "website";
  private String website;

  public static final String JSON_PROPERTY_DISTRIBUTION_TREATMENT = "distributionTreatment";
  private String distributionTreatment;

  /**
   * Period of time between reweighting underlying index constituents.
   */
  public enum RebalancingFrequencyEnum {
    MONTHLY("Monthly"),
    
    ANNUALLY("Annually"),
    
    QUARTERLY("Quarterly"),
    
    SEMI_ANNUAL("Semi-annual"),
    
    DAILY("Daily"),
    
    AS_NEEDED("As Needed"),
    
    BI_MONTHLY("Bi-Monthly"),
    
    WEEKLY("Weekly");

    private String value;

    RebalancingFrequencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RebalancingFrequencyEnum fromValue(String value) {
      for (RebalancingFrequencyEnum b : RebalancingFrequencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REBALANCING_FREQUENCY = "rebalancingFrequency";
  private RebalancingFrequencyEnum rebalancingFrequency;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public InlineResponse200DataIndex() { 
  }

  public InlineResponse200DataIndex name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the underlying index of the ETP. This data is available for all the regions.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the underlying index of the ETP. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public InlineResponse200DataIndex family(String family) {
    this.family = family;
    return this;
  }

   /**
   * The name of the index provider for the underlying index of the ETP. This data is available for all the regions.
   * @return family
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the index provider for the underlying index of the ETP. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFamily() {
    return family;
  }


  @JsonProperty(JSON_PROPERTY_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFamily(String family) {
    this.family = family;
  }


  public InlineResponse200DataIndex website(String website) {
    this.website = website;
    return this;
  }

   /**
   * The link to the underlying index&#39;s homepage. This data is available for all the regions.
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to the underlying index's homepage. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebsite() {
    return website;
  }


  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsite(String website) {
    this.website = website;
  }


  public InlineResponse200DataIndex distributionTreatment(String distributionTreatment) {
    this.distributionTreatment = distributionTreatment;
    return this;
  }

   /**
   * Describes the treatment of constituent cash flows by the index, whether capitalized (reinvested) or ignored, as well as tax withholding by foreign countries. Text and standardized value available for this data item. This data is available for Europe only.
   * @return distributionTreatment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Describes the treatment of constituent cash flows by the index, whether capitalized (reinvested) or ignored, as well as tax withholding by foreign countries. Text and standardized value available for this data item. This data is available for Europe only.")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_TREATMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDistributionTreatment() {
    return distributionTreatment;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_TREATMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributionTreatment(String distributionTreatment) {
    this.distributionTreatment = distributionTreatment;
  }


  public InlineResponse200DataIndex rebalancingFrequency(RebalancingFrequencyEnum rebalancingFrequency) {
    this.rebalancingFrequency = rebalancingFrequency;
    return this;
  }

   /**
   * Period of time between reweighting underlying index constituents.
   * @return rebalancingFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Period of time between reweighting underlying index constituents.")
  @JsonProperty(JSON_PROPERTY_REBALANCING_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RebalancingFrequencyEnum getRebalancingFrequency() {
    return rebalancingFrequency;
  }


  @JsonProperty(JSON_PROPERTY_REBALANCING_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRebalancingFrequency(RebalancingFrequencyEnum rebalancingFrequency) {
    this.rebalancingFrequency = rebalancingFrequency;
  }


  public InlineResponse200DataIndex currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Base calculation currency of underlying index. This data is available for all the regions and currency code is in the format ISO 4217.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base calculation currency of underlying index. This data is available for all the regions and currency code is in the format ISO 4217.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  /**
   * Return true if this inline_response_200_data_index object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataIndex inlineResponse200DataIndex = (InlineResponse200DataIndex) o;
    return Objects.equals(this.name, inlineResponse200DataIndex.name) &&
        Objects.equals(this.family, inlineResponse200DataIndex.family) &&
        Objects.equals(this.website, inlineResponse200DataIndex.website) &&
        Objects.equals(this.distributionTreatment, inlineResponse200DataIndex.distributionTreatment) &&
        Objects.equals(this.rebalancingFrequency, inlineResponse200DataIndex.rebalancingFrequency) &&
        Objects.equals(this.currency, inlineResponse200DataIndex.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, family, website, distributionTreatment, rebalancingFrequency, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataIndex {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    distributionTreatment: ").append(toIndentedString(distributionTreatment)).append("\n");
    sb.append("    rebalancingFrequency: ").append(toIndentedString(rebalancingFrequency)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

