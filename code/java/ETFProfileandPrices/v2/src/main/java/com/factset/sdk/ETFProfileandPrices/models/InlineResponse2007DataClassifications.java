/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * InlineResponse2007DataClassifications
 */
@JsonPropertyOrder({
  InlineResponse2007DataClassifications.JSON_PROPERTY_CLASSIFICATION,
  InlineResponse2007DataClassifications.JSON_PROPERTY_WEIGHT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2007DataClassifications implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CLASSIFICATION = "classification";
  private String classification;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private BigDecimal weight;

  public InlineResponse2007DataClassifications() { 
  }

  public InlineResponse2007DataClassifications classification(String classification) {
    this.classification = classification;
    return this;
  }

   /**
   * Name of the classification.
   * @return classification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the classification.")
  @JsonProperty(JSON_PROPERTY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassification() {
    return classification;
  }


  @JsonProperty(JSON_PROPERTY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassification(String classification) {
    this.classification = classification;
  }


  public InlineResponse2007DataClassifications weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Weight (net) of the classification.
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Weight (net) of the classification.")
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  /**
   * Return true if this inline_response_200_7_data_classifications object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007DataClassifications inlineResponse2007DataClassifications = (InlineResponse2007DataClassifications) o;
    return Objects.equals(this.classification, inlineResponse2007DataClassifications.classification) &&
        Objects.equals(this.weight, inlineResponse2007DataClassifications.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classification, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007DataClassifications {\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

