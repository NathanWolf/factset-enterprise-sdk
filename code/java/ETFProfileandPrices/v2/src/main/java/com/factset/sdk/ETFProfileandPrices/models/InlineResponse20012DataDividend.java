/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ETFProfileandPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ETFProfileandPrices.JSON;


/**
 * Dividend information for the next dividend.
 */
@ApiModel(description = "Dividend information for the next dividend.")
@JsonPropertyOrder({
  InlineResponse20012DataDividend.JSON_PROPERTY_IS_REPORTED,
  InlineResponse20012DataDividend.JSON_PROPERTY_EX_DIVIDEND_DATE,
  InlineResponse20012DataDividend.JSON_PROPERTY_QUALIFIED,
  InlineResponse20012DataDividend.JSON_PROPERTY_NON_QUALIFIED,
  InlineResponse20012DataDividend.JSON_PROPERTY_RETURN_ON_CAPITAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20012DataDividend implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IS_REPORTED = "isReported";
  private Boolean isReported;

  public static final String JSON_PROPERTY_EX_DIVIDEND_DATE = "exDividendDate";
  private LocalDate exDividendDate;

  public static final String JSON_PROPERTY_QUALIFIED = "qualified";
  private BigDecimal qualified;

  public static final String JSON_PROPERTY_NON_QUALIFIED = "nonQualified";
  private BigDecimal nonQualified;

  public static final String JSON_PROPERTY_RETURN_ON_CAPITAL = "returnOnCapital";
  private BigDecimal returnOnCapital;


  public InlineResponse20012DataDividend isReported(Boolean isReported) {
    this.isReported = isReported;
    return this;
  }

   /**
   * States whether the ETP&#39;s next ex-dividend date is posted on the issuer&#39;s website. This data is available for all the regions.
   * @return isReported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "States whether the ETP's next ex-dividend date is posted on the issuer's website. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_IS_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsReported() {
    return isReported;
  }


  @JsonProperty(JSON_PROPERTY_IS_REPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsReported(Boolean isReported) {
    this.isReported = isReported;
  }


  public InlineResponse20012DataDividend exDividendDate(LocalDate exDividendDate) {
    this.exDividendDate = exDividendDate;
    return this;
  }

   /**
   * The ex-dividend date of the ETP&#39;s next distribution. This data is available for all the regions.
   * @return exDividendDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ex-dividend date of the ETP's next distribution. This data is available for all the regions.")
  @JsonProperty(JSON_PROPERTY_EX_DIVIDEND_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExDividendDate() {
    return exDividendDate;
  }


  @JsonProperty(JSON_PROPERTY_EX_DIVIDEND_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExDividendDate(LocalDate exDividendDate) {
    this.exDividendDate = exDividendDate;
  }


  public InlineResponse20012DataDividend qualified(BigDecimal qualified) {
    this.qualified = qualified;
    return this;
  }

   /**
   * Qualified dividend payment on ex-dividend-date. This data is available for all regions.
   * @return qualified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Qualified dividend payment on ex-dividend-date. This data is available for all regions.")
  @JsonProperty(JSON_PROPERTY_QUALIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getQualified() {
    return qualified;
  }


  @JsonProperty(JSON_PROPERTY_QUALIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQualified(BigDecimal qualified) {
    this.qualified = qualified;
  }


  public InlineResponse20012DataDividend nonQualified(BigDecimal nonQualified) {
    this.nonQualified = nonQualified;
    return this;
  }

   /**
   * Non-Qualified dividend payment on ex-dividend-date. This data is available for all regions.
   * @return nonQualified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Non-Qualified dividend payment on ex-dividend-date. This data is available for all regions.")
  @JsonProperty(JSON_PROPERTY_NON_QUALIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNonQualified() {
    return nonQualified;
  }


  @JsonProperty(JSON_PROPERTY_NON_QUALIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonQualified(BigDecimal nonQualified) {
    this.nonQualified = nonQualified;
  }


  public InlineResponse20012DataDividend returnOnCapital(BigDecimal returnOnCapital) {
    this.returnOnCapital = returnOnCapital;
    return this;
  }

   /**
   * Return on Capital available on ex-dividend-date. This data is available for all regions.
   * @return returnOnCapital
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Return on Capital available on ex-dividend-date. This data is available for all regions.")
  @JsonProperty(JSON_PROPERTY_RETURN_ON_CAPITAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getReturnOnCapital() {
    return returnOnCapital;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_ON_CAPITAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnOnCapital(BigDecimal returnOnCapital) {
    this.returnOnCapital = returnOnCapital;
  }


  /**
   * Return true if this inline_response_200_12_data_dividend object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20012DataDividend inlineResponse20012DataDividend = (InlineResponse20012DataDividend) o;
    return Objects.equals(this.isReported, inlineResponse20012DataDividend.isReported) &&
        Objects.equals(this.exDividendDate, inlineResponse20012DataDividend.exDividendDate) &&
        Objects.equals(this.qualified, inlineResponse20012DataDividend.qualified) &&
        Objects.equals(this.nonQualified, inlineResponse20012DataDividend.nonQualified) &&
        Objects.equals(this.returnOnCapital, inlineResponse20012DataDividend.returnOnCapital);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isReported, exDividendDate, qualified, nonQualified, returnOnCapital);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20012DataDividend {\n");
    sb.append("    isReported: ").append(toIndentedString(isReported)).append("\n");
    sb.append("    exDividendDate: ").append(toIndentedString(exDividendDate)).append("\n");
    sb.append("    qualified: ").append(toIndentedString(qualified)).append("\n");
    sb.append("    nonQualified: ").append(toIndentedString(nonQualified)).append("\n");
    sb.append("    returnOnCapital: ").append(toIndentedString(returnOnCapital)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

