/*
 * FactSet Prices API
 * Gain access to comprehensive global coverage for Equities & Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.</p><p>Fixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.</p> 
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrices.JSON;


/**
 * Shares
 */
@JsonPropertyOrder({
  Shares.JSON_PROPERTY_FSYM_ID,
  Shares.JSON_PROPERTY_DATE,
  Shares.JSON_PROPERTY_ADJ_DATE,
  Shares.JSON_PROPERTY_SHARES_SECURITY,
  Shares.JSON_PROPERTY_SHARES_COMPANY,
  Shares.JSON_PROPERTY_SHARES_COMPANY_NONTRADED,
  Shares.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Shares implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_DATE = "date";
  private LocalDate date;

  public static final String JSON_PROPERTY_ADJ_DATE = "adjDate";
  private LocalDate adjDate;

  public static final String JSON_PROPERTY_SHARES_SECURITY = "sharesSecurity";
  private BigDecimal sharesSecurity;

  public static final String JSON_PROPERTY_SHARES_COMPANY = "sharesCompany";
  private BigDecimal sharesCompany;

  public static final String JSON_PROPERTY_SHARES_COMPANY_NONTRADED = "sharesCompanyNontraded";
  private BigDecimal sharesCompanyNontraded;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public Shares() { 
  }

  public Shares fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SJY281-R", value = "Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public Shares date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date expressed in YYYY-MM-DD format.
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Thu Aug 01 00:00:00 UTC 2013", value = "Date expressed in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(LocalDate date) {
    this.date = date;
  }


  public Shares adjDate(LocalDate adjDate) {
    this.adjDate = adjDate;
    return this;
  }

   /**
   * Date of last split for which return has been adjusted. Use the /factset-prices/v#/splits endpoint for details on split. If not available, date will return as 0001-01-01.
   * @return adjDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mon Feb 07 00:00:00 UTC 2005", value = "Date of last split for which return has been adjusted. Use the /factset-prices/v#/splits endpoint for details on split. If not available, date will return as 0001-01-01.")
  @JsonProperty(JSON_PROPERTY_ADJ_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getAdjDate() {
    return adjDate;
  }


  @JsonProperty(JSON_PROPERTY_ADJ_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdjDate(LocalDate adjDate) {
    this.adjDate = adjDate;
  }


  public Shares sharesSecurity(BigDecimal sharesSecurity) {
    this.sharesSecurity = sharesSecurity;
    return this;
  }

   /**
   * **Security-level** Common Shares Outstanding in base units. Shares sourced primarily from SEC filings. Securities in certain countries will include treasury shares. For details visit [Online Assistant Page #10435](https://oa.apps.factset.com/pages/10435)
   * @return sharesSecurity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "299532000", value = "**Security-level** Common Shares Outstanding in base units. Shares sourced primarily from SEC filings. Securities in certain countries will include treasury shares. For details visit [Online Assistant Page #10435](https://oa.apps.factset.com/pages/10435)")
  @JsonProperty(JSON_PROPERTY_SHARES_SECURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSharesSecurity() {
    return sharesSecurity;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_SECURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesSecurity(BigDecimal sharesSecurity) {
    this.sharesSecurity = sharesSecurity;
  }


  public Shares sharesCompany(BigDecimal sharesCompany) {
    this.sharesCompany = sharesCompany;
    return this;
  }

   /**
   * **Company-level** Shares Outstanding aggregated across all share classes. Non-traded shares are *excluded*. In base units. For more details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)
   * @return sharesCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "649532000", value = "**Company-level** Shares Outstanding aggregated across all share classes. Non-traded shares are *excluded*. In base units. For more details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)")
  @JsonProperty(JSON_PROPERTY_SHARES_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSharesCompany() {
    return sharesCompany;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesCompany(BigDecimal sharesCompany) {
    this.sharesCompany = sharesCompany;
  }


  public Shares sharesCompanyNontraded(BigDecimal sharesCompanyNontraded) {
    this.sharesCompanyNontraded = sharesCompanyNontraded;
    return this;
  }

   /**
   * **Company-level** Shares Outstanding aggregated across all share classes. Non-traded shares are *included* to the calculation basis by the proportion of their nominal or par value. In base units. For more details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)
   * @return sharesCompanyNontraded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "657532000", value = "**Company-level** Shares Outstanding aggregated across all share classes. Non-traded shares are *included* to the calculation basis by the proportion of their nominal or par value. In base units. For more details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)")
  @JsonProperty(JSON_PROPERTY_SHARES_COMPANY_NONTRADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSharesCompanyNontraded() {
    return sharesCompanyNontraded;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_COMPANY_NONTRADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesCompanyNontraded(BigDecimal sharesCompanyNontraded) {
    this.sharesCompanyNontraded = sharesCompanyNontraded;
  }


  public Shares requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "IBM-US", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this shares object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Shares shares = (Shares) o;
    return Objects.equals(this.fsymId, shares.fsymId) &&
        Objects.equals(this.date, shares.date) &&
        Objects.equals(this.adjDate, shares.adjDate) &&
        Objects.equals(this.sharesSecurity, shares.sharesSecurity) &&
        Objects.equals(this.sharesCompany, shares.sharesCompany) &&
        Objects.equals(this.sharesCompanyNontraded, shares.sharesCompanyNontraded) &&
        Objects.equals(this.requestId, shares.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, date, adjDate, sharesSecurity, sharesCompany, sharesCompanyNontraded, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Shares {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    adjDate: ").append(toIndentedString(adjDate)).append("\n");
    sb.append("    sharesSecurity: ").append(toIndentedString(sharesSecurity)).append("\n");
    sb.append("    sharesCompany: ").append(toIndentedString(sharesCompany)).append("\n");
    sb.append("    sharesCompanyNontraded: ").append(toIndentedString(sharesCompanyNontraded)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

