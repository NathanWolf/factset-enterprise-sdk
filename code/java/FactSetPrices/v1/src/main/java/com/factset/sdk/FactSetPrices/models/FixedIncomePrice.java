/*
 * FactSet Prices API
 * Gain access to comprehensive global coverage for Equities & Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.</p><p>Fixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.</p> 
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrices.JSON;


/**
 * FixedIncomePrice
 */
@JsonPropertyOrder({
  FixedIncomePrice.JSON_PROPERTY_FSYM_ID,
  FixedIncomePrice.JSON_PROPERTY_DATE,
  FixedIncomePrice.JSON_PROPERTY_SECURITY_TYPE,
  FixedIncomePrice.JSON_PROPERTY_ISSUER_ENTITY_ID,
  FixedIncomePrice.JSON_PROPERTY_ISSUER_TYPE,
  FixedIncomePrice.JSON_PROPERTY_PRICE_BID,
  FixedIncomePrice.JSON_PROPERTY_PRICE_MID,
  FixedIncomePrice.JSON_PROPERTY_PRICE_ASK,
  FixedIncomePrice.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FixedIncomePrice implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_DATE = "date";
  private LocalDate date;

  public static final String JSON_PROPERTY_SECURITY_TYPE = "securityType";
  private String securityType;

  public static final String JSON_PROPERTY_ISSUER_ENTITY_ID = "issuerEntityId";
  private String issuerEntityId;

  public static final String JSON_PROPERTY_ISSUER_TYPE = "issuerType";
  private String issuerType;

  public static final String JSON_PROPERTY_PRICE_BID = "priceBid";
  private Double priceBid;

  public static final String JSON_PROPERTY_PRICE_MID = "priceMid";
  private Double priceMid;

  public static final String JSON_PROPERTY_PRICE_ASK = "priceAsk";
  private Double priceAsk;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;


  public FixedIncomePrice fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * Factset Security Identifier. Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S).
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NL6DQ8-S", value = "Factset Security Identifier. Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S).")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public FixedIncomePrice date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Ending date for the period expressed in YYYY-MM-DD format.
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Tue Jun 09 00:00:00 UTC 2020", value = "Ending date for the period expressed in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(LocalDate date) {
    this.date = date;
  }


  public FixedIncomePrice securityType(String securityType) {
    this.securityType = securityType;
    return this;
  }

   /**
   * Returns the security type code of fixed income instruments.   * AGCY - Agency   * BDNT - Bond/Note   * BDWT  - Bond with Warrants   * BKAC  - Bankers Acceptance   * BLDN - Bill/Discount Note   * BOND  - Bond   * CAP  - Embedded ceiling or short interest rates   * CAPS - Capital Security   * CAPT - Capital Trust Security   * CD - Certificate of Deposit (Munis)   * CDO - Collateralized Debt Obligation   * CMO  - Collateralized mortgage obligation   * COMP - Commercial Paper   * CONV - Convertible/Exchangeable   * CONVP - Convertible Preferred   * CORP - Corporate   * COVR - Covered Bond   * CP  - Commercial Paper   * CRL - Credit Linked Security   * DEB - Debenture   * DERI  - Derivative (generic type)   * EBON - Eurobond   * EQL - Equity Linked Security   * FORW  - Forward deliveries   * GRTR  - Grantor trust   * HY - Hypotheken Pfandbriefe   * IIDX - Inflation Indexed Security   * INVF  - Inverse floaters   * LAUTH - Local Authority/Political Division   * LINK  - Linked securities   * LKS - Linked Securities   * MAPL - Mixed Asset Portfolio Linked Security   * MM - Money Market   * NOTE  - Note   * OF - Obligations FonciÃres   * OPTN  - Options   * OTHL - Other Linked Security   * PAYS  - Payment streams   * PFD - Preferred   * PFND - Pfandbriefe   * POOL  - Pooled derivatives   * PSEC - Preferred Security   * PSTK - Preferred Stock   * REPO  - REPOS   * RMIC  - REMIC   * SHFL  - Short floats (auction)   * STRIPS - STRIPS   * SWAP  - Embedded swaps   * TR  - Trust   * TRUPS - Trust Preferred Security 
   * @return securityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BDNT", value = "Returns the security type code of fixed income instruments.   * AGCY - Agency   * BDNT - Bond/Note   * BDWT  - Bond with Warrants   * BKAC  - Bankers Acceptance   * BLDN - Bill/Discount Note   * BOND  - Bond   * CAP  - Embedded ceiling or short interest rates   * CAPS - Capital Security   * CAPT - Capital Trust Security   * CD - Certificate of Deposit (Munis)   * CDO - Collateralized Debt Obligation   * CMO  - Collateralized mortgage obligation   * COMP - Commercial Paper   * CONV - Convertible/Exchangeable   * CONVP - Convertible Preferred   * CORP - Corporate   * COVR - Covered Bond   * CP  - Commercial Paper   * CRL - Credit Linked Security   * DEB - Debenture   * DERI  - Derivative (generic type)   * EBON - Eurobond   * EQL - Equity Linked Security   * FORW  - Forward deliveries   * GRTR  - Grantor trust   * HY - Hypotheken Pfandbriefe   * IIDX - Inflation Indexed Security   * INVF  - Inverse floaters   * LAUTH - Local Authority/Political Division   * LINK  - Linked securities   * LKS - Linked Securities   * MAPL - Mixed Asset Portfolio Linked Security   * MM - Money Market   * NOTE  - Note   * OF - Obligations FonciÃres   * OPTN  - Options   * OTHL - Other Linked Security   * PAYS  - Payment streams   * PFD - Preferred   * PFND - Pfandbriefe   * POOL  - Pooled derivatives   * PSEC - Preferred Security   * PSTK - Preferred Stock   * REPO  - REPOS   * RMIC  - REMIC   * SHFL  - Short floats (auction)   * STRIPS - STRIPS   * SWAP  - Embedded swaps   * TR  - Trust   * TRUPS - Trust Preferred Security ")
  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityType() {
    return securityType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityType(String securityType) {
    this.securityType = securityType;
  }


  public FixedIncomePrice issuerEntityId(String issuerEntityId) {
    this.issuerEntityId = issuerEntityId;
    return this;
  }

   /**
   * Fixed Income Issuer Entity ID (-E).
   * @return issuerEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "000C7F-E", value = "Fixed Income Issuer Entity ID (-E).")
  @JsonProperty(JSON_PROPERTY_ISSUER_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerEntityId() {
    return issuerEntityId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerEntityId(String issuerEntityId) {
    this.issuerEntityId = issuerEntityId;
  }


  public FixedIncomePrice issuerType(String issuerType) {
    this.issuerType = issuerType;
    return this;
  }

   /**
   * Returns the issuer type code of fixed income instruments.   * AGCY - Agency   * CORP - Corporate   * LAUTH - Local Authority/Political Division   * MUNI - Municipals   * SOV - Sovereign   * SUPR - Supranational   * SCOL - Securitized/Collateralized 
   * @return issuerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CORP", value = "Returns the issuer type code of fixed income instruments.   * AGCY - Agency   * CORP - Corporate   * LAUTH - Local Authority/Political Division   * MUNI - Municipals   * SOV - Sovereign   * SUPR - Supranational   * SCOL - Securitized/Collateralized ")
  @JsonProperty(JSON_PROPERTY_ISSUER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerType() {
    return issuerType;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerType(String issuerType) {
    this.issuerType = issuerType;
  }


  public FixedIncomePrice priceBid(Double priceBid) {
    this.priceBid = priceBid;
    return this;
  }

   /**
   * BID PRICE. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.
   * @return priceBid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "134.959", value = "BID PRICE. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.")
  @JsonProperty(JSON_PROPERTY_PRICE_BID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPriceBid() {
    return priceBid;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_BID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceBid(Double priceBid) {
    this.priceBid = priceBid;
  }


  public FixedIncomePrice priceMid(Double priceMid) {
    this.priceMid = priceMid;
    return this;
  }

   /**
   * MID Price. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.
   * @return priceMid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "137.695", value = "MID Price. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.")
  @JsonProperty(JSON_PROPERTY_PRICE_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPriceMid() {
    return priceMid;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceMid(Double priceMid) {
    this.priceMid = priceMid;
  }


  public FixedIncomePrice priceAsk(Double priceAsk) {
    this.priceAsk = priceAsk;
    return this;
  }

   /**
   * ASK Price. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.
   * @return priceAsk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "134.959", value = "ASK Price. For North American issues, the value is an evaluated price, where available, else it is an exchange-traded price. Please note that distinct Bid and Ask Prices are not available for North American issues; Bid, Mid, and Ask Prices will be identical for North American issues. For issues outside of North America (International), the value is an evaluated price. Please note that distinct Bid and Ask Prices are only available for issues outside of North America. By default, the Mid Price is returned for issues outside of North America.")
  @JsonProperty(JSON_PROPERTY_PRICE_ASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPriceAsk() {
    return priceAsk;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_ASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceAsk(Double priceAsk) {
    this.priceAsk = priceAsk;
  }


  public FixedIncomePrice requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "037833BX", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this fixedIncomePrice object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FixedIncomePrice fixedIncomePrice = (FixedIncomePrice) o;
    return Objects.equals(this.fsymId, fixedIncomePrice.fsymId) &&
        Objects.equals(this.date, fixedIncomePrice.date) &&
        Objects.equals(this.securityType, fixedIncomePrice.securityType) &&
        Objects.equals(this.issuerEntityId, fixedIncomePrice.issuerEntityId) &&
        Objects.equals(this.issuerType, fixedIncomePrice.issuerType) &&
        Objects.equals(this.priceBid, fixedIncomePrice.priceBid) &&
        Objects.equals(this.priceMid, fixedIncomePrice.priceMid) &&
        Objects.equals(this.priceAsk, fixedIncomePrice.priceAsk) &&
        Objects.equals(this.requestId, fixedIncomePrice.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, date, securityType, issuerEntityId, issuerType, priceBid, priceMid, priceAsk, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FixedIncomePrice {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("    issuerEntityId: ").append(toIndentedString(issuerEntityId)).append("\n");
    sb.append("    issuerType: ").append(toIndentedString(issuerType)).append("\n");
    sb.append("    priceBid: ").append(toIndentedString(priceBid)).append("\n");
    sb.append("    priceMid: ").append(toIndentedString(priceMid)).append("\n");
    sb.append("    priceAsk: ").append(toIndentedString(priceAsk)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

