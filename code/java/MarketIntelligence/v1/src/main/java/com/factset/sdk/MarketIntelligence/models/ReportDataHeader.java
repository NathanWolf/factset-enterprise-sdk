/*
 * Market Intelligence
 * Through the Market Intelligence API, stay up to date on the companies and sectors you care most about with ease. Request the templates you have made in Market Intelligence to receive news and data on your portfolio.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.MarketIntelligence.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.MarketIntelligence.models.ReportContent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.MarketIntelligence.JSON;


/**
 * ReportDataHeader
 */
@JsonPropertyOrder({
  ReportDataHeader.JSON_PROPERTY_SUBJECT_CATEGORY,
  ReportDataHeader.JSON_PROPERTY_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReportDataHeader implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SUBJECT_CATEGORY = "subject_category";
  private String subjectCategory;

  public static final String JSON_PROPERTY_DATA = "data";
  private java.util.List<ReportContent> data = null;

  public ReportDataHeader() { 
  }

  public ReportDataHeader subjectCategory(String subjectCategory) {
    this.subjectCategory = subjectCategory;
    return this;
  }

   /**
   * Column Title
   * @return subjectCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "~MARKET SYNOPSIS", value = "Column Title")
  @JsonProperty(JSON_PROPERTY_SUBJECT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubjectCategory() {
    return subjectCategory;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubjectCategory(String subjectCategory) {
    this.subjectCategory = subjectCategory;
  }


  public ReportDataHeader data(java.util.List<ReportContent> data) {
    this.data = data;
    return this;
  }

  public ReportDataHeader addDataItem(ReportContent dataItem) {
    if (this.data == null) {
      this.data = new java.util.ArrayList<>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ReportContent> getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(java.util.List<ReportContent> data) {
    this.data = data;
  }


  /**
   * Return true if this Report_Data_Header object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportDataHeader reportDataHeader = (ReportDataHeader) o;
    return Objects.equals(this.subjectCategory, reportDataHeader.subjectCategory) &&
        Objects.equals(this.data, reportDataHeader.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectCategory, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportDataHeader {\n");
    sb.append("    subjectCategory: ").append(toIndentedString(subjectCategory)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

