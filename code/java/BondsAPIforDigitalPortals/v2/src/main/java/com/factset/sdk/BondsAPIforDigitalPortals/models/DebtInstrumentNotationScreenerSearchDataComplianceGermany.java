/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BondsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BondsAPIforDigitalPortals.JSON;


/**
 * Compliance properties in accordance with the German law.
 */
@ApiModel(description = "Compliance properties in accordance with the German law.")
@JsonPropertyOrder({
  DebtInstrumentNotationScreenerSearchDataComplianceGermany.JSON_PROPERTY_TRUSTEE_ELIGIBLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DebtInstrumentNotationScreenerSearchDataComplianceGermany implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TRUSTEE_ELIGIBLE = "trusteeEligible";
  private Boolean trusteeEligible;


  public DebtInstrumentNotationScreenerSearchDataComplianceGermany trusteeEligible(Boolean trusteeEligible) {
    this.trusteeEligible = trusteeEligible;
    return this;
  }

   /**
   * Defines whether or not the debt instruments are eligible for investment by trustees according to §§1806ff of the BGB (German Civil Code). The German legislative has declared such debt instruments to be virtually free of the risk of loss, such as government and state bonds. Eligible are primarily German debt instruments.
   * @return trusteeEligible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines whether or not the debt instruments are eligible for investment by trustees according to §§1806ff of the BGB (German Civil Code). The German legislative has declared such debt instruments to be virtually free of the risk of loss, such as government and state bonds. Eligible are primarily German debt instruments.")
  @JsonProperty(JSON_PROPERTY_TRUSTEE_ELIGIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrusteeEligible() {
    return trusteeEligible;
  }


  @JsonProperty(JSON_PROPERTY_TRUSTEE_ELIGIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrusteeEligible(Boolean trusteeEligible) {
    this.trusteeEligible = trusteeEligible;
  }


  /**
   * Return true if this _debtInstrument_notation_screener_search_data_compliance_germany object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebtInstrumentNotationScreenerSearchDataComplianceGermany debtInstrumentNotationScreenerSearchDataComplianceGermany = (DebtInstrumentNotationScreenerSearchDataComplianceGermany) o;
    return Objects.equals(this.trusteeEligible, debtInstrumentNotationScreenerSearchDataComplianceGermany.trusteeEligible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trusteeEligible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebtInstrumentNotationScreenerSearchDataComplianceGermany {\n");
    sb.append("    trusteeEligible: ").append(toIndentedString(trusteeEligible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

