/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BondsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.BondsAPIforDigitalPortals.models.DebtInstrumentNotationScreenerSearchDataTradingVolumeOtc;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BondsAPIforDigitalPortals.JSON;


/**
 * Parameters regarding the trading volume. The issuer of a debt instrument may define a minimum trading volume, and an increment over that minimum, per market place and for the over-the-counter (e.g. interbank) trade. Orders that do not match the defined volumes cannot be (fully) executed. The currency is the currency of denomination, thus the parameter &#x60;issue.volume.currency.restrict.ids&#x60; must be set to exactly one currency in order to use this parameter.
 */
@ApiModel(description = "Parameters regarding the trading volume. The issuer of a debt instrument may define a minimum trading volume, and an increment over that minimum, per market place and for the over-the-counter (e.g. interbank) trade. Orders that do not match the defined volumes cannot be (fully) executed. The currency is the currency of denomination, thus the parameter `issue.volume.currency.restrict.ids` must be set to exactly one currency in order to use this parameter.")
@JsonPropertyOrder({
  DebtInstrumentNotationScreenerSearchDataTradingVolume.JSON_PROPERTY_OTC
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DebtInstrumentNotationScreenerSearchDataTradingVolume implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_OTC = "otc";
  private DebtInstrumentNotationScreenerSearchDataTradingVolumeOtc otc;


  public DebtInstrumentNotationScreenerSearchDataTradingVolume otc(DebtInstrumentNotationScreenerSearchDataTradingVolumeOtc otc) {
    this.otc = otc;
    return this;
  }

   /**
   * Get otc
   * @return otc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DebtInstrumentNotationScreenerSearchDataTradingVolumeOtc getOtc() {
    return otc;
  }


  @JsonProperty(JSON_PROPERTY_OTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtc(DebtInstrumentNotationScreenerSearchDataTradingVolumeOtc otc) {
    this.otc = otc;
  }


  /**
   * Return true if this _debtInstrument_notation_screener_search_data_tradingVolume object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebtInstrumentNotationScreenerSearchDataTradingVolume debtInstrumentNotationScreenerSearchDataTradingVolume = (DebtInstrumentNotationScreenerSearchDataTradingVolume) o;
    return Objects.equals(this.otc, debtInstrumentNotationScreenerSearchDataTradingVolume.otc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(otc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebtInstrumentNotationScreenerSearchDataTradingVolume {\n");
    sb.append("    otc: ").append(toIndentedString(otc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

