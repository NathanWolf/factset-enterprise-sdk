/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BondsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.BondsAPIforDigitalPortals.models.InlineResponse2004DataLifeCycleMaturityDate;
import com.factset.sdk.BondsAPIforDigitalPortals.models.InlineResponse2004DataLifeCycleMaturityPerpetual;
import com.factset.sdk.BondsAPIforDigitalPortals.models.InlineResponse2004DataLifeCycleMaturityRemainingTermYears;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BondsAPIforDigitalPortals.JSON;


/**
 * Ranges related to the maturity.
 */
@ApiModel(description = "Ranges related to the maturity.")
@JsonPropertyOrder({
  InlineResponse2004DataLifeCycleMaturity.JSON_PROPERTY_DATE,
  InlineResponse2004DataLifeCycleMaturity.JSON_PROPERTY_REMAINING_TERM_YEARS,
  InlineResponse2004DataLifeCycleMaturity.JSON_PROPERTY_PERPETUAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2004DataLifeCycleMaturity implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DATE = "date";
  private InlineResponse2004DataLifeCycleMaturityDate date;

  public static final String JSON_PROPERTY_REMAINING_TERM_YEARS = "remainingTermYears";
  private InlineResponse2004DataLifeCycleMaturityRemainingTermYears remainingTermYears;

  public static final String JSON_PROPERTY_PERPETUAL = "perpetual";
  private java.util.List<InlineResponse2004DataLifeCycleMaturityPerpetual> perpetual = null;


  public InlineResponse2004DataLifeCycleMaturity date(InlineResponse2004DataLifeCycleMaturityDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004DataLifeCycleMaturityDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(InlineResponse2004DataLifeCycleMaturityDate date) {
    this.date = date;
  }


  public InlineResponse2004DataLifeCycleMaturity remainingTermYears(InlineResponse2004DataLifeCycleMaturityRemainingTermYears remainingTermYears) {
    this.remainingTermYears = remainingTermYears;
    return this;
  }

   /**
   * Get remainingTermYears
   * @return remainingTermYears
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REMAINING_TERM_YEARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004DataLifeCycleMaturityRemainingTermYears getRemainingTermYears() {
    return remainingTermYears;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_TERM_YEARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemainingTermYears(InlineResponse2004DataLifeCycleMaturityRemainingTermYears remainingTermYears) {
    this.remainingTermYears = remainingTermYears;
  }


  public InlineResponse2004DataLifeCycleMaturity perpetual(java.util.List<InlineResponse2004DataLifeCycleMaturityPerpetual> perpetual) {
    this.perpetual = perpetual;
    return this;
  }

  public InlineResponse2004DataLifeCycleMaturity addPerpetualItem(InlineResponse2004DataLifeCycleMaturityPerpetual perpetualItem) {
    if (this.perpetual == null) {
      this.perpetual = new java.util.ArrayList<>();
    }
    this.perpetual.add(perpetualItem);
    return this;
  }

   /**
   * Indicates whether perpetual and non-perpetual debt instruments are among the results. A perpetual debt instrument is one that does not mature.
   * @return perpetual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether perpetual and non-perpetual debt instruments are among the results. A perpetual debt instrument is one that does not mature.")
  @JsonProperty(JSON_PROPERTY_PERPETUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2004DataLifeCycleMaturityPerpetual> getPerpetual() {
    return perpetual;
  }


  @JsonProperty(JSON_PROPERTY_PERPETUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerpetual(java.util.List<InlineResponse2004DataLifeCycleMaturityPerpetual> perpetual) {
    this.perpetual = perpetual;
  }


  /**
   * Return true if this inline_response_200_4_data_lifeCycle_maturity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004DataLifeCycleMaturity inlineResponse2004DataLifeCycleMaturity = (InlineResponse2004DataLifeCycleMaturity) o;
    return Objects.equals(this.date, inlineResponse2004DataLifeCycleMaturity.date) &&
        Objects.equals(this.remainingTermYears, inlineResponse2004DataLifeCycleMaturity.remainingTermYears) &&
        Objects.equals(this.perpetual, inlineResponse2004DataLifeCycleMaturity.perpetual);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, remainingTermYears, perpetual);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004DataLifeCycleMaturity {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    remainingTermYears: ").append(toIndentedString(remainingTermYears)).append("\n");
    sb.append("    perpetual: ").append(toIndentedString(perpetual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

