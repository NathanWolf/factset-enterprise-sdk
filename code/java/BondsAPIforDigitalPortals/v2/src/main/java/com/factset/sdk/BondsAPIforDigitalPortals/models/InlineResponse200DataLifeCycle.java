/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BondsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.BondsAPIforDigitalPortals.models.InlineResponse200DataLifeCycleMaturity;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BondsAPIforDigitalPortals.JSON;


/**
 * Important dates of the instrument.
 */
@ApiModel(description = "Important dates of the instrument.")
@JsonPropertyOrder({
  InlineResponse200DataLifeCycle.JSON_PROPERTY_ISSUE,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_MATURITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200DataLifeCycle implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ISSUE = "issue";
  private LocalDate issue;

  public static final String JSON_PROPERTY_MATURITY = "maturity";
  private InlineResponse200DataLifeCycleMaturity maturity;


  public InlineResponse200DataLifeCycle issue(LocalDate issue) {
    this.issue = issue;
    return this;
  }

   /**
   * Date of the issue.
   * @return issue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the issue.")
  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getIssue() {
    return issue;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssue(LocalDate issue) {
    this.issue = issue;
  }


  public InlineResponse200DataLifeCycle maturity(InlineResponse200DataLifeCycleMaturity maturity) {
    this.maturity = maturity;
    return this;
  }

   /**
   * Get maturity
   * @return maturity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MATURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycleMaturity getMaturity() {
    return maturity;
  }


  @JsonProperty(JSON_PROPERTY_MATURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaturity(InlineResponse200DataLifeCycleMaturity maturity) {
    this.maturity = maturity;
  }


  /**
   * Return true if this inline_response_200_data_lifeCycle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataLifeCycle inlineResponse200DataLifeCycle = (InlineResponse200DataLifeCycle) o;
    return Objects.equals(this.issue, inlineResponse200DataLifeCycle.issue) &&
        Objects.equals(this.maturity, inlineResponse200DataLifeCycle.maturity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issue, maturity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataLifeCycle {\n");
    sb.append("    issue: ").append(toIndentedString(issue)).append("\n");
    sb.append("    maturity: ").append(toIndentedString(maturity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

