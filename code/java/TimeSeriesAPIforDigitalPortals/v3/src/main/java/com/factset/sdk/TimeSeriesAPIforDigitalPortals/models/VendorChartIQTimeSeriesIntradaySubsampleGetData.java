/*
 * Time Series API For Digital Portals
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.TimeSeriesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.TimeSeriesAPIforDigitalPortals.models.VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.TimeSeriesAPIforDigitalPortals.JSON;


/**
 * The data member contains the request&#39;s primary data.
 */
@ApiModel(description = "The data member contains the request's primary data.")
@JsonPropertyOrder({
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_ID,
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_TYPE,
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_QUALITY,
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_FROM,
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_GRANULARITY,
  VendorChartIQTimeSeriesIntradaySubsampleGetData.JSON_PROPERTY_ADJUSTMENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VendorChartIQTimeSeriesIntradaySubsampleGetData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * Type of the price as configured for the customer.
   */
  public enum TypeEnum {
    TRADE("trade"),
    
    BID("bid"),
    
    ASK("ask"),
    
    YIELD("yield");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type = TypeEnum.TRADE;

  /**
   * Quality of the price.
   */
  public enum QualityEnum {
    RLT("RLT"),
    
    DLY("DLY"),
    
    BST("BST");

    private String value;

    QualityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QualityEnum fromValue(String value) {
      for (QualityEnum b : QualityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private QualityEnum quality = QualityEnum.DLY;

  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  /**
   * Subsample granularities suitable for intraday data.
   */
  public enum GranularityEnum {
    _1S("1s"),
    
    _5S("5s"),
    
    _10S("10s"),
    
    _30S("30s"),
    
    _1M("1m"),
    
    _5M("5m"),
    
    _10M("10m"),
    
    _15M("15m"),
    
    _30M("30m"),
    
    _1H("1h");

    private String value;

    GranularityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GranularityEnum fromValue(String value) {
      for (GranularityEnum b : GranularityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GRANULARITY = "granularity";
  private GranularityEnum granularity = GranularityEnum._1H;

  public static final String JSON_PROPERTY_ADJUSTMENTS = "adjustments";
  private VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments adjustments;

  public VendorChartIQTimeSeriesIntradaySubsampleGetData() { 
  }

  @JsonCreator
  public VendorChartIQTimeSeriesIntradaySubsampleGetData(
    @JsonProperty(value=JSON_PROPERTY_ID, required=true) String id, 
    @JsonProperty(value=JSON_PROPERTY_FROM, required=true) String from
  ) {
    this();
    this.id = id;
    this.from = from;
  }

  public VendorChartIQTimeSeriesIntradaySubsampleGetData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the notation.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Identifier of the notation.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public VendorChartIQTimeSeriesIntradaySubsampleGetData type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the price as configured for the customer.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the price as configured for the customer.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public VendorChartIQTimeSeriesIntradaySubsampleGetData quality(QualityEnum quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Quality of the price.
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quality of the price.")
  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QualityEnum getQuality() {
    return quality;
  }


  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuality(QualityEnum quality) {
    this.quality = quality;
  }


  public VendorChartIQTimeSeriesIntradaySubsampleGetData from(String from) {
    this.from = from;
    return this;
  }

   /**
   * Date and time of the start point of the subsample (inclusive). &#x60;from&#x60; must be aligned to &#x60;granularity&#x60;. That is, the numerical value is an integral multiple of the time span value represented by &#x60;granularity&#x60;. The data accessible in the past is limited to a few weeks at most. Dates in the future are not allowed.
   * @return from
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Date and time of the start point of the subsample (inclusive). `from` must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`. The data accessible in the past is limited to a few weeks at most. Dates in the future are not allowed.")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrom(String from) {
    this.from = from;
  }


  public VendorChartIQTimeSeriesIntradaySubsampleGetData granularity(GranularityEnum granularity) {
    this.granularity = granularity;
    return this;
  }

   /**
   * Subsample granularities suitable for intraday data.
   * @return granularity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subsample granularities suitable for intraday data.")
  @JsonProperty(JSON_PROPERTY_GRANULARITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GranularityEnum getGranularity() {
    return granularity;
  }


  @JsonProperty(JSON_PROPERTY_GRANULARITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGranularity(GranularityEnum granularity) {
    this.granularity = granularity;
  }


  public VendorChartIQTimeSeriesIntradaySubsampleGetData adjustments(VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments adjustments) {
    this.adjustments = adjustments;
    return this;
  }

   /**
   * Get adjustments
   * @return adjustments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADJUSTMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments getAdjustments() {
    return adjustments;
  }


  @JsonProperty(JSON_PROPERTY_ADJUSTMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdjustments(VendorChartIQTimeSeriesIntradaySubsampleGetDataAdjustments adjustments) {
    this.adjustments = adjustments;
  }


  /**
   * Return true if this _vendor_chartIQ_timeSeries_intraday_subsample_get_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VendorChartIQTimeSeriesIntradaySubsampleGetData vendorChartIQTimeSeriesIntradaySubsampleGetData = (VendorChartIQTimeSeriesIntradaySubsampleGetData) o;
    return Objects.equals(this.id, vendorChartIQTimeSeriesIntradaySubsampleGetData.id) &&
        Objects.equals(this.type, vendorChartIQTimeSeriesIntradaySubsampleGetData.type) &&
        Objects.equals(this.quality, vendorChartIQTimeSeriesIntradaySubsampleGetData.quality) &&
        Objects.equals(this.from, vendorChartIQTimeSeriesIntradaySubsampleGetData.from) &&
        Objects.equals(this.granularity, vendorChartIQTimeSeriesIntradaySubsampleGetData.granularity) &&
        Objects.equals(this.adjustments, vendorChartIQTimeSeriesIntradaySubsampleGetData.adjustments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, quality, from, granularity, adjustments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VendorChartIQTimeSeriesIntradaySubsampleGetData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    adjustments: ").append(toIndentedString(adjustments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

