/*
 * FactSet Benchmarks API
 * FactSet Benchmarks API gives access to Index Constituents, Prices, Returns, and Ratios. For a sample list of identifiers, use the /metrics endpoint. Equity Only - Fixed Income Benchmark support coming soon. 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetBenchmarks.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetBenchmarks.JSON;


/**
 * IndexHistory
 */
@JsonPropertyOrder({
  IndexHistory.JSON_PROPERTY_FSYM_ID,
  IndexHistory.JSON_PROPERTY_DATE,
  IndexHistory.JSON_PROPERTY_NAME,
  IndexHistory.JSON_PROPERTY_CONSTITUENT_NUMBER,
  IndexHistory.JSON_PROPERTY_CURRENCY,
  IndexHistory.JSON_PROPERTY_MARKET_VALUE,
  IndexHistory.JSON_PROPERTY_PRICE,
  IndexHistory.JSON_PROPERTY_PRICE_RETURN_PERCENT,
  IndexHistory.JSON_PROPERTY_TOTAL_RETURN_LEVEL,
  IndexHistory.JSON_PROPERTY_TOTAL_RETURN_PERCENT,
  IndexHistory.JSON_PROPERTY_RETURN_TYPE,
  IndexHistory.JSON_PROPERTY_HEDGE_TYPE,
  IndexHistory.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IndexHistory implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_DATE = "date";
  private LocalDate date;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CONSTITUENT_NUMBER = "constituentNumber";
  private Integer constituentNumber;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_MARKET_VALUE = "marketValue";
  private Double marketValue;

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_PRICE_RETURN_PERCENT = "priceReturnPercent";
  private Double priceReturnPercent;

  public static final String JSON_PROPERTY_TOTAL_RETURN_LEVEL = "totalReturnLevel";
  private Double totalReturnLevel;

  public static final String JSON_PROPERTY_TOTAL_RETURN_PERCENT = "totalReturnPercent";
  private Double totalReturnPercent;

  public static final String JSON_PROPERTY_RETURN_TYPE = "returnType";
  private String returnType;

  public static final String JSON_PROPERTY_HEDGE_TYPE = "hedgeType";
  private String hedgeType;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public IndexHistory() { 
  }

  public IndexHistory fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * Requested Identifier. Must be a valid Benchmark Identifier recognized by FactSet.
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SP50", value = "Requested Identifier. Must be a valid Benchmark Identifier recognized by FactSet.")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public IndexHistory date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * The respective date for values as of the date requested in YYYY-MM-DD format.
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wed Jul 01 00:00:00 UTC 2020", value = "The respective date for values as of the date requested in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(LocalDate date) {
    this.date = date;
  }


  public IndexHistory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Proper Name of Index.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "S&P 500", value = "Proper Name of Index.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public IndexHistory constituentNumber(Integer constituentNumber) {
    this.constituentNumber = constituentNumber;
    return this;
  }

   /**
   * The total number of constituents as of the date requested.
   * @return constituentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "502", value = "The total number of constituents as of the date requested.")
  @JsonProperty(JSON_PROPERTY_CONSTITUENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getConstituentNumber() {
    return constituentNumber;
  }


  @JsonProperty(JSON_PROPERTY_CONSTITUENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstituentNumber(Integer constituentNumber) {
    this.constituentNumber = constituentNumber;
  }


  public IndexHistory currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency Code used in adjustments. If no Currency was requested, the service will default to LOCAL (&#39;LOC&#39;).
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency Code used in adjustments. If no Currency was requested, the service will default to LOCAL ('LOC').")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public IndexHistory marketValue(Double marketValue) {
    this.marketValue = marketValue;
    return this;
  }

   /**
   * Index Level Market Capitalization as of the date requested expressed in millions.
   * @return marketValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "27696158.012077", value = "Index Level Market Capitalization as of the date requested expressed in millions.")
  @JsonProperty(JSON_PROPERTY_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMarketValue() {
    return marketValue;
  }


  @JsonProperty(JSON_PROPERTY_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketValue(Double marketValue) {
    this.marketValue = marketValue;
  }


  public IndexHistory price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Index Level Price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3349.15600690205", value = "Index Level Price")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public IndexHistory priceReturnPercent(Double priceReturnPercent) {
    this.priceReturnPercent = priceReturnPercent;
    return this;
  }

   /**
   * Index Level Price Percent Change
   * @return priceReturnPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.642620385795123", value = "Index Level Price Percent Change")
  @JsonProperty(JSON_PROPERTY_PRICE_RETURN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPriceReturnPercent() {
    return priceReturnPercent;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_RETURN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceReturnPercent(Double priceReturnPercent) {
    this.priceReturnPercent = priceReturnPercent;
  }


  public IndexHistory totalReturnLevel(Double totalReturnLevel) {
    this.totalReturnLevel = totalReturnLevel;
    return this;
  }

   /**
   * Index Level Total Return Amount
   * @return totalReturnLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6870.86168040129", value = "Index Level Total Return Amount")
  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalReturnLevel() {
    return totalReturnLevel;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalReturnLevel(Double totalReturnLevel) {
    this.totalReturnLevel = totalReturnLevel;
  }


  public IndexHistory totalReturnPercent(Double totalReturnPercent) {
    this.totalReturnPercent = totalReturnPercent;
    return this;
  }

   /**
   * Index Level Total Return Percent Change
   * @return totalReturnPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.653957589855003", value = "Index Level Total Return Percent Change")
  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalReturnPercent() {
    return totalReturnPercent;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RETURN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalReturnPercent(Double totalReturnPercent) {
    this.totalReturnPercent = totalReturnPercent;
  }


  public IndexHistory returnType(String returnType) {
    this.returnType = returnType;
    return this;
  }

   /**
   * The requested Return Type - GROSS or NET
   * @return returnType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GROSS", value = "The requested Return Type - GROSS or NET")
  @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnType() {
    return returnType;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnType(String returnType) {
    this.returnType = returnType;
  }


  public IndexHistory hedgeType(String hedgeType) {
    this.hedgeType = hedgeType;
    return this;
  }

   /**
   * The requested Hedge Type - HEDGED or UNHEDGED
   * @return hedgeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UNHEDGED", value = "The requested Hedge Type - HEDGED or UNHEDGED")
  @JsonProperty(JSON_PROPERTY_HEDGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHedgeType() {
    return hedgeType;
  }


  @JsonProperty(JSON_PROPERTY_HEDGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHedgeType(String hedgeType) {
    this.hedgeType = hedgeType;
  }


  public IndexHistory requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Benchmark Identifier specified in the request
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SP50", value = "Benchmark Identifier specified in the request")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this indexHistory object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexHistory indexHistory = (IndexHistory) o;
    return Objects.equals(this.fsymId, indexHistory.fsymId) &&
        Objects.equals(this.date, indexHistory.date) &&
        Objects.equals(this.name, indexHistory.name) &&
        Objects.equals(this.constituentNumber, indexHistory.constituentNumber) &&
        Objects.equals(this.currency, indexHistory.currency) &&
        Objects.equals(this.marketValue, indexHistory.marketValue) &&
        Objects.equals(this.price, indexHistory.price) &&
        Objects.equals(this.priceReturnPercent, indexHistory.priceReturnPercent) &&
        Objects.equals(this.totalReturnLevel, indexHistory.totalReturnLevel) &&
        Objects.equals(this.totalReturnPercent, indexHistory.totalReturnPercent) &&
        Objects.equals(this.returnType, indexHistory.returnType) &&
        Objects.equals(this.hedgeType, indexHistory.hedgeType) &&
        Objects.equals(this.requestId, indexHistory.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, date, name, constituentNumber, currency, marketValue, price, priceReturnPercent, totalReturnLevel, totalReturnPercent, returnType, hedgeType, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexHistory {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    constituentNumber: ").append(toIndentedString(constituentNumber)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    marketValue: ").append(toIndentedString(marketValue)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceReturnPercent: ").append(toIndentedString(priceReturnPercent)).append("\n");
    sb.append("    totalReturnLevel: ").append(toIndentedString(totalReturnLevel)).append("\n");
    sb.append("    totalReturnPercent: ").append(toIndentedString(totalReturnPercent)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    hedgeType: ").append(toIndentedString(hedgeType)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

