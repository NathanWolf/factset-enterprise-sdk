/*
 * FactSet Benchmarks API
 * FactSet Benchmarks API gives access to Index Constituents, Prices, Returns, and Ratios. For a sample list of identifiers, use the /metrics endpoint. Equity Only - Fixed Income Benchmark support coming soon. 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetBenchmarks.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetBenchmarks.JSON;


/**
 * BenchmarkConstituent
 */
@JsonPropertyOrder({
  BenchmarkConstituent.JSON_PROPERTY_FSYM_ID,
  BenchmarkConstituent.JSON_PROPERTY_DATE,
  BenchmarkConstituent.JSON_PROPERTY_FSYM_SECURITY_ID,
  BenchmarkConstituent.JSON_PROPERTY_FSYM_REGIONAL_ID,
  BenchmarkConstituent.JSON_PROPERTY_CURRENCY,
  BenchmarkConstituent.JSON_PROPERTY_WEIGHT_CLOSE,
  BenchmarkConstituent.JSON_PROPERTY_ADJ_HOLDING,
  BenchmarkConstituent.JSON_PROPERTY_UNADJ_HOLDING,
  BenchmarkConstituent.JSON_PROPERTY_PRICE,
  BenchmarkConstituent.JSON_PROPERTY_ADJ_MARKET_VALUE,
  BenchmarkConstituent.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BenchmarkConstituent implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_DATE = "date";
  private LocalDate date;

  public static final String JSON_PROPERTY_FSYM_SECURITY_ID = "fsymSecurityId";
  private String fsymSecurityId;

  public static final String JSON_PROPERTY_FSYM_REGIONAL_ID = "fsymRegionalId";
  private String fsymRegionalId;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_WEIGHT_CLOSE = "weightClose";
  private Double weightClose;

  public static final String JSON_PROPERTY_ADJ_HOLDING = "adjHolding";
  private Double adjHolding;

  public static final String JSON_PROPERTY_UNADJ_HOLDING = "unadjHolding";
  private Double unadjHolding;

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_ADJ_MARKET_VALUE = "adjMarketValue";
  private Double adjMarketValue;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public BenchmarkConstituent() { 
  }

  public BenchmarkConstituent fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * Benchmark Id
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SPY-US", value = "Benchmark Id")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public BenchmarkConstituent date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date of weight and shares.
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wed Jul 01 00:00:00 UTC 2020", value = "Date of weight and shares.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(LocalDate date) {
    this.date = date;
  }


  public BenchmarkConstituent fsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = fsymSecurityId;
    return this;
  }

   /**
   * FactSet Security Identifier (-S). If Cash or Generic Id holding, response will just pass through generic id (e.g. CASH_USD).
   * @return fsymSecurityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TKPJVY-S", value = "FactSet Security Identifier (-S). If Cash or Generic Id holding, response will just pass through generic id (e.g. CASH_USD).")
  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymSecurityId() {
    return fsymSecurityId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = fsymSecurityId;
  }


  public BenchmarkConstituent fsymRegionalId(String fsymRegionalId) {
    this.fsymRegionalId = fsymRegionalId;
    return this;
  }

   /**
   * FactSet Regional Identifier (-R). If Cash or Generic Id holding, response will just pass through generic id (e.g. CASH_USD).
   * @return fsymRegionalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "F07Q7W-R", value = "FactSet Regional Identifier (-R). If Cash or Generic Id holding, response will just pass through generic id (e.g. CASH_USD).")
  @JsonProperty(JSON_PROPERTY_FSYM_REGIONAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymRegionalId() {
    return fsymRegionalId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_REGIONAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymRegionalId(String fsymRegionalId) {
    this.fsymRegionalId = fsymRegionalId;
  }


  public BenchmarkConstituent currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency code for prices.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for prices.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public BenchmarkConstituent weightClose(Double weightClose) {
    this.weightClose = weightClose;
    return this;
  }

   /**
   * Weight of Security in benchmark (percent).
   * @return weightClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.085717610340781", value = "Weight of Security in benchmark (percent).")
  @JsonProperty(JSON_PROPERTY_WEIGHT_CLOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getWeightClose() {
    return weightClose;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT_CLOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeightClose(Double weightClose) {
    this.weightClose = weightClose;
  }


  public BenchmarkConstituent adjHolding(Double adjHolding) {
    this.adjHolding = adjHolding;
    return this;
  }

   /**
   * Shares held adjusted. Units in Millions.
   * @return adjHolding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.884722", value = "Shares held adjusted. Units in Millions.")
  @JsonProperty(JSON_PROPERTY_ADJ_HOLDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAdjHolding() {
    return adjHolding;
  }


  @JsonProperty(JSON_PROPERTY_ADJ_HOLDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdjHolding(Double adjHolding) {
    this.adjHolding = adjHolding;
  }


  public BenchmarkConstituent unadjHolding(Double unadjHolding) {
    this.unadjHolding = unadjHolding;
    return this;
  }

   /**
   * Shares held unadjusted. Units in Millions.
   * @return unadjHolding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.884722", value = "Shares held unadjusted. Units in Millions.")
  @JsonProperty(JSON_PROPERTY_UNADJ_HOLDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getUnadjHolding() {
    return unadjHolding;
  }


  @JsonProperty(JSON_PROPERTY_UNADJ_HOLDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnadjHolding(Double unadjHolding) {
    this.unadjHolding = unadjHolding;
  }


  public BenchmarkConstituent price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price of shares held.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "267.97", value = "Price of shares held.")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public BenchmarkConstituent adjMarketValue(Double adjMarketValue) {
    this.adjMarketValue = adjMarketValue;
    return this;
  }

   /**
   * Market value adjusted. Market Value represented in Millions.
   * @return adjMarketValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "237.07895434", value = "Market value adjusted. Market Value represented in Millions.")
  @JsonProperty(JSON_PROPERTY_ADJ_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAdjMarketValue() {
    return adjMarketValue;
  }


  @JsonProperty(JSON_PROPERTY_ADJ_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdjMarketValue(Double adjMarketValue) {
    this.adjMarketValue = adjMarketValue;
  }


  public BenchmarkConstituent requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier specified in the request
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SPY-US", value = "Identifier specified in the request")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this benchmarkConstituent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BenchmarkConstituent benchmarkConstituent = (BenchmarkConstituent) o;
    return Objects.equals(this.fsymId, benchmarkConstituent.fsymId) &&
        Objects.equals(this.date, benchmarkConstituent.date) &&
        Objects.equals(this.fsymSecurityId, benchmarkConstituent.fsymSecurityId) &&
        Objects.equals(this.fsymRegionalId, benchmarkConstituent.fsymRegionalId) &&
        Objects.equals(this.currency, benchmarkConstituent.currency) &&
        Objects.equals(this.weightClose, benchmarkConstituent.weightClose) &&
        Objects.equals(this.adjHolding, benchmarkConstituent.adjHolding) &&
        Objects.equals(this.unadjHolding, benchmarkConstituent.unadjHolding) &&
        Objects.equals(this.price, benchmarkConstituent.price) &&
        Objects.equals(this.adjMarketValue, benchmarkConstituent.adjMarketValue) &&
        Objects.equals(this.requestId, benchmarkConstituent.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, date, fsymSecurityId, fsymRegionalId, currency, weightClose, adjHolding, unadjHolding, price, adjMarketValue, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BenchmarkConstituent {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    fsymSecurityId: ").append(toIndentedString(fsymSecurityId)).append("\n");
    sb.append("    fsymRegionalId: ").append(toIndentedString(fsymRegionalId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    weightClose: ").append(toIndentedString(weightClose)).append("\n");
    sb.append("    adjHolding: ").append(toIndentedString(adjHolding)).append("\n");
    sb.append("    unadjHolding: ").append(toIndentedString(unadjHolding)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    adjMarketValue: ").append(toIndentedString(adjMarketValue)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

