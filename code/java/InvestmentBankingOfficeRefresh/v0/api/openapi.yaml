openapi: 3.0.3
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: Service for refreshing models with refreshable FactSet objects (e.g.,
    =FDS codes)
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Investment Banking Office Refresh API
  version: 0.1.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/
servers:
- url: https://api.factset.com/office-refresh/v0
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- name: ModelRefresh
paths:
  /refresh:
    post:
      description: Upload a model (e.g., an Excel workbook in Open Office XML format)
        for FactSet to refresh.
      operationId: postWorkbook
      parameters:
      - description: Option to handle =NOW codes.
        explode: true
        in: query
        name: nowHandlingEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Option to refresh codes in autofilters.
        explode: true
        in: query
        name: refreshAutoFilters
        required: false
        schema:
          type: boolean
        style: form
      - description: Option to resize arrays
        explode: true
        in: query
        name: resizeArrays
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/SpreadsheetFile'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: Accepted
          headers:
            Location:
              description: Absolute URL to check status of the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Limit Exceeded
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Server Error
      summary: Upload a model
      tags:
      - ModelRefresh
      x-factset-sdk-main-example: true
      x-contentType: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      x-accepts: application/json
  /refresh/{id}/status:
    get:
      description: Check the status of the given job by ID
      operationId: getStatusById
      parameters:
      - description: Resource ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: Created (the calculated workbook is ready to be retrieved)
          headers:
            Location:
              description: Absolute URL to the calculated file
              explode: false
              schema:
                type: string
              style: simple
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: Accepted (resource not ready yet)
          headers:
            Location:
              description: Absolute URL to check status of the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Limit Exceeded
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Server Error
      summary: Get the status of the refresh job with the given resource ID
      tags:
      - ModelRefresh
      x-accepts: application/json
  /refresh/{id}:
    get:
      description: If the requested job is complete, the calculated file will be returned.
      operationId: getFileById
      parameters:
      - description: Resource ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional name for returned output file as set in the Content-Disposition
          response header.
        explode: true
        in: query
        name: outputFileName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/SpreadsheetFile'
          description: Expected response; body will contain calculated file
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: Accepted (resource not ready yet)
          headers:
            Location:
              description: Absolute URL to check status of the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Limit Exceeded
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Server Error
      summary: Retrieve a calculated file by resource ID.
      tags:
      - ModelRefresh
      x-factset-different-success-responses: true
      x-accepts: application/json
components:
  parameters:
    ResourceId:
      description: Resource ID
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
  responses:
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Limit Exceeded
  schemas:
    SpreadsheetFile:
      description: An Open Office XML spreadsheet file.
      format: binary
      type: string
    Error:
      example:
        code: code
        id: id
        title: title
      properties:
        id:
          type: string
        code:
          type: string
        title:
          type: string
      type: object
    Errors:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    JobStatus:
      example:
        data:
          id: id
          error:
            code: code
            id: id
            title: title
          status: queued
      properties:
        data:
          $ref: '#/components/schemas/JobStatus_data'
      type: object
    JobStatus_data:
      example:
        id: id
        error:
          code: code
          id: id
          title: title
        status: queued
      properties:
        id:
          type: string
        status:
          description: the status of the job
          enum:
          - queued
          - executing
          - created
          - failed
          - cancelled
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http
x-factset-sdk-has-main-example: true

