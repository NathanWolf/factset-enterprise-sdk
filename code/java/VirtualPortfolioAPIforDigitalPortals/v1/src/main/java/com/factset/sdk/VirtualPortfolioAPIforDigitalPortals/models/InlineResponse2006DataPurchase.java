/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.JSON;


/**
 * Purchase details of the position.
 */
@ApiModel(description = "Purchase details of the position.")
@JsonPropertyOrder({
  InlineResponse2006DataPurchase.JSON_PROPERTY_PRICE,
  InlineResponse2006DataPurchase.JSON_PROPERTY_EXCHANGE_RATE,
  InlineResponse2006DataPurchase.JSON_PROPERTY_CHARGES,
  InlineResponse2006DataPurchase.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2006DataPurchase implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRICE = "price";
  private BigDecimal price;

  public static final String JSON_PROPERTY_EXCHANGE_RATE = "exchangeRate";
  private BigDecimal exchangeRate;

  public static final String JSON_PROPERTY_CHARGES = "charges";
  private BigDecimal charges;

  public static final String JSON_PROPERTY_VALUE = "value";
  private BigDecimal value;

  public InlineResponse2006DataPurchase() { 
  }

  public InlineResponse2006DataPurchase price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Weighted average purchase price of the position.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Weighted average purchase price of the position.")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public InlineResponse2006DataPurchase exchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Weighted average exchange rate of the position between the position and portfolio currency.
   * @return exchangeRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Weighted average exchange rate of the position between the position and portfolio currency.")
  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExchangeRate() {
    return exchangeRate;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
  }


  public InlineResponse2006DataPurchase charges(BigDecimal charges) {
    this.charges = charges;
    return this;
  }

   /**
   * Sum of additional purchase fees for the position in portfolio&#39;s base currency.
   * @return charges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sum of additional purchase fees for the position in portfolio's base currency.")
  @JsonProperty(JSON_PROPERTY_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCharges() {
    return charges;
  }


  @JsonProperty(JSON_PROPERTY_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCharges(BigDecimal charges) {
    this.charges = charges;
  }


  public InlineResponse2006DataPurchase value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Aggregated purchase value of all buy transactions of the position.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Aggregated purchase value of all buy transactions of the position.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(BigDecimal value) {
    this.value = value;
  }


  /**
   * Return true if this inline_response_200_6_data_purchase object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006DataPurchase inlineResponse2006DataPurchase = (InlineResponse2006DataPurchase) o;
    return Objects.equals(this.price, inlineResponse2006DataPurchase.price) &&
        Objects.equals(this.exchangeRate, inlineResponse2006DataPurchase.exchangeRate) &&
        Objects.equals(this.charges, inlineResponse2006DataPurchase.charges) &&
        Objects.equals(this.value, inlineResponse2006DataPurchase.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, exchangeRate, charges, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006DataPurchase {\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

