/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.models.InlineResponse2001DataSummaryCash;
import com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.models.InlineResponse2002SummaryTransactions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.VirtualPortfolioAPIforDigitalPortals.JSON;


/**
 * Summary of portfolio values in the portfolio&#39;s currency (see attribute &#x60;currency&#x60;).
 */
@ApiModel(description = "Summary of portfolio values in the portfolio's currency (see attribute `currency`).")
@JsonPropertyOrder({
  InlineResponse2002Summary.JSON_PROPERTY_TOTAL_VALUE,
  InlineResponse2002Summary.JSON_PROPERTY_NUMBER_POSITIONS,
  InlineResponse2002Summary.JSON_PROPERTY_TRANSACTIONS,
  InlineResponse2002Summary.JSON_PROPERTY_CASH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2002Summary implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TOTAL_VALUE = "totalValue";
  private BigDecimal totalValue;

  public static final String JSON_PROPERTY_NUMBER_POSITIONS = "numberPositions";
  private BigDecimal numberPositions;

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private InlineResponse2002SummaryTransactions transactions;

  public static final String JSON_PROPERTY_CASH = "cash";
  private InlineResponse2001DataSummaryCash cash;

  public InlineResponse2002Summary() { 
  }

  public InlineResponse2002Summary totalValue(BigDecimal totalValue) {
    this.totalValue = totalValue;
    return this;
  }

   /**
   * The total portfolio value, including the current cash amount.
   * @return totalValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total portfolio value, including the current cash amount.")
  @JsonProperty(JSON_PROPERTY_TOTAL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalValue() {
    return totalValue;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalValue(BigDecimal totalValue) {
    this.totalValue = totalValue;
  }


  public InlineResponse2002Summary numberPositions(BigDecimal numberPositions) {
    this.numberPositions = numberPositions;
    return this;
  }

   /**
   * Number of positions in the portfolio.
   * @return numberPositions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of positions in the portfolio.")
  @JsonProperty(JSON_PROPERTY_NUMBER_POSITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNumberPositions() {
    return numberPositions;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_POSITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberPositions(BigDecimal numberPositions) {
    this.numberPositions = numberPositions;
  }


  public InlineResponse2002Summary transactions(InlineResponse2002SummaryTransactions transactions) {
    this.transactions = transactions;
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002SummaryTransactions getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactions(InlineResponse2002SummaryTransactions transactions) {
    this.transactions = transactions;
  }


  public InlineResponse2002Summary cash(InlineResponse2001DataSummaryCash cash) {
    this.cash = cash;
    return this;
  }

   /**
   * Get cash
   * @return cash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataSummaryCash getCash() {
    return cash;
  }


  @JsonProperty(JSON_PROPERTY_CASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCash(InlineResponse2001DataSummaryCash cash) {
    this.cash = cash;
  }


  /**
   * Return true if this inline_response_200_2_summary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002Summary inlineResponse2002Summary = (InlineResponse2002Summary) o;
    return Objects.equals(this.totalValue, inlineResponse2002Summary.totalValue) &&
        Objects.equals(this.numberPositions, inlineResponse2002Summary.numberPositions) &&
        Objects.equals(this.transactions, inlineResponse2002Summary.transactions) &&
        Objects.equals(this.cash, inlineResponse2002Summary.cash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalValue, numberPositions, transactions, cash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002Summary {\n");
    sb.append("    totalValue: ").append(toIndentedString(totalValue)).append("\n");
    sb.append("    numberPositions: ").append(toIndentedString(numberPositions)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    cash: ").append(toIndentedString(cash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

