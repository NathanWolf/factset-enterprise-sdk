openapi: 3.0.1
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: Allow clients to trade orders.
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: EMS API
  version: 0.3.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/factset-trading-api
servers:
- description: Production
  url: https://api.factset.com/trading/ems/v0
- description: UAT
  url: https://api.uat.factset.com/trading/ems/v0
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: These endpoints relate to Order Entry.
  name: Orders
- description: These endpoints relate to Order Routing.
  name: ChildOrders
paths:
  /orders/create:
    post:
      description: This endpoint takes the list of orders and place them on EMS for
        execution.
      operationId: create
      requestBody:
        content:
          application/json:
            examples:
              Multiple Orders:
                value:
                  data:
                    investorId: MyOrganization
                    orders:
                    - clientOrderId: OR0000001
                      instrument:
                        symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 1000
                      price: 450
                      currency: USD
                      settlementType: regular
                      handlingInstructions: autoOrderPublic
                    - clientOrderId: OR0000002
                      instrument:
                        symbol: MSFT
                      side: sell
                      orderType: limit
                      orderQuantity: 1000
                      price: 450
                      currency: USD
                      settlementType: regular
                      handlingInstructions: autoOrderPublic
                    - clientOrderId: OR0000003
                      instrument:
                        symbol: TSLA
                      side: buy
                      orderType: marketOnClose
                      orderQuantity: 1000
                      price: 450
                      currency: USD
                      settlementType: regular
                      handlingInstructions: autoOrderPublic
              Single Order (Minimum Fields):
                summary: Very basic single order with only required fields.
                value:
                  data:
                    investorId: MyOrganization
                    orders:
                    - instrument:
                        symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 1000
                      price: 450
                      currency: USD
                      settlementType: regular
              Single Order:
                value:
                  data:
                    investorId: MyOrganization
                    orders:
                    - clientOrderId: OR0000004
                      instrument:
                        symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 1000
                      price: 450
                      stopPrice: 500
                      strikePrice: 60
                      currency: USD
                      isCovered: false
                      maxShow: 30
                      maxFloor: 20
                      settlementType: regular
                      settlementDate: "20211024"
                      handlingInstructions: autoOrderPublic
                      locateRequired: false
                      account: ACCT1
                      timeInForce:
                        tif: goodTillCancel
              Single order with derivatives (futures/options):
                value:
                  data:
                    investorId: MyOrganization
                    orders:
                    - instrument:
                        symbol: GOOGL
                        putOrCall: call
                        underlyingSecurityType: Equity
                      side: buy
                      orderType: market
                      orderQuantity: 1000
                      price: 450
                      currency: USD
                      settlementType: regular
                      handlingInstructions: autoOrderPublic
                      account: ACCT1
            schema:
              $ref: '#/components/schemas/EMSOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    OR123456789:
                      symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 2500
                    OR123456790:
                      symbol: MSFT
                      side: buy
                      orderType: market
                      orderQuantity: 200
                  rejected:
                    OR123456791:
                      symbol: TSLA
                      side: buy
                      orderType: market
                      orderQuantity: 500
              schema:
                $ref: '#/components/schemas/EMSOrdersResponseRoot'
          description: Expected response, returns the list of orders.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid post body parameters.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Send orders to EMS for execution.
      tags:
      - Orders
      x-contentType: application/json
      x-accepts: application/json
  /orders/replace:
    post:
      description: This endpoint takes the list of orders to be replaced on the EMS
        system.
      operationId: replace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSReplaceOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    OR123456789:
                      symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 2500
                    OR123456790:
                      symbol: MSFT
                      side: buy
                      orderType: market
                      orderQuantity: 200
                  rejected:
                    OR123456791:
                      symbol: TSLA
                      side: buy
                      orderType: market
                      orderQuantity: 500
              schema:
                $ref: '#/components/schemas/EMSOrdersResponseRoot'
          description: Expected response, returns the list of order ids.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid post body parameters.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Replace the orders on EMS system.
      tags:
      - Orders
      x-contentType: application/json
      x-accepts: application/json
  /orders/cancel:
    post:
      description: This endpoint takes the list of orders to be cancelled on the EMS
        system.
      operationId: cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSCancelOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    OR123456789:
                      symbol: GOOGL
                      side: buy
                      orderType: market
                      orderQuantity: 2500
                    OR123456790:
                      symbol: MSFT
                      side: buy
                      orderType: market
                      orderQuantity: 200
                  rejected:
                    OR123456791:
                      symbol: TSLA
                      side: buy
                      orderType: market
                      orderQuantity: 500
              schema:
                $ref: '#/components/schemas/EMSOrdersResponseRoot'
          description: Expected response, returns the list of order ids.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid post body parameters.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Cancel the orders on EMS system.
      tags:
      - Orders
      x-contentType: application/json
      x-accepts: application/json
  /child-orders/create:
    post:
      description: This endpoint is used to create child orders.
      operationId: createChildOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSChildOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    "3280015":
                      basketId: FACTSET_OMS-100823_12345
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
                  rejected:
                    "3280015":
                      message: 'Ticket does not exist for ticketid: null'
                      basketId: FACTSET_OMS-100823_12345
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
              schema:
                $ref: '#/components/schemas/EMSCreateChildOrdersResponseRoot'
          description: Expected response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid parameters provided.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Create Child Orders
      tags:
      - ChildOrders
      x-contentType: application/json
      x-accepts: application/json
  /child-orders/replace:
    post:
      description: This endpoint takes the child order to be replaced on the EMS system.
      operationId: replaceChildOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSReplaceChildOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    "3280015":
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
                  rejected:
                    "3280015":
                      message: 'Ticket does not exist for ticketid: null'
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
              schema:
                $ref: '#/components/schemas/EMSChildOrdersResponseRoot'
          description: Expected response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid parameters provided.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Replace the Child Orders on EMS system.
      tags:
      - ChildOrders
      x-contentType: application/json
      x-accepts: application/json
  /child-orders/cancel:
    post:
      description: This endpoint is to cancel a specific child order.
      operationId: cancelChildOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMSCancelChildOrdersRoot'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  accepted:
                    "3280015":
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
                  rejected:
                    "3280015":
                      message: 'Ticket does not exist for ticketid: null'
                      ticketId: RKPW.3280015
                      symbol: FDS-USA
              schema:
                $ref: '#/components/schemas/EMSChildOrdersResponseRoot'
          description: Expected response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid parameters provided.
        "401":
          description: Missing or invalid authentication.
        "403":
          description: User is forbidden with current credentials.
        "415":
          description: Missing/Invalid Content-Type header. Header needs to be set
            to application/json.
        "429":
          description: Rate limit reached. Wait before sending further requests.
        "500":
          description: Server error. Log the X-DataDirect-Request-Key header to assist
            in troubleshooting.
        "503":
          description: Request timed out. Retry the request in sometime.
      summary: Cancel Child Orders
      tags:
      - ChildOrders
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    ClientErrorResponse:
      description: Client Error Response
      properties:
        errors:
          description: List of errors
          items:
            $ref: '#/components/schemas/Error'
          nullable: true
          type: array
      type: object
    EMSCancelChildOrder:
      description: EMS Cancel Child Order
      example:
        reason: mistyped order quantity to be routed
        ticketId: RKPW.3280015
      properties:
        ticketId:
          description: Ticket Id for the child order to be cancelled
          example: RKPW.3280015
          type: string
        reason:
          description: Reason for cancelling the child order
          example: mistyped order quantity to be routed
          nullable: true
          type: string
      required:
      - ticketId
      type: object
    EMSCancelChildOrders:
      description: EMS Cancel Child Orders
      example:
        childOrders:
        - reason: mistyped order quantity to be routed
          ticketId: RKPW.3280015
      properties:
        childOrders:
          items:
            $ref: '#/components/schemas/EMSCancelChildOrder'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - childOrders
      type: object
    EMSCancelChildOrdersRoot:
      example:
        data:
          childOrders:
          - reason: mistyped order quantity to be routed
            ticketId: RKPW.3280015
      properties:
        data:
          $ref: '#/components/schemas/EMSCancelChildOrders'
      type: object
    EMSCancelOrder:
      description: EMS Cancel Order
      example:
        originalClientOrderId: originalClientOrderId
        inboundDestination: inboundDestination
      properties:
        originalClientOrderId:
          description: Unique identifier of the original order, generated in Create.
          type: string
        inboundDestination:
          description: To facilitate integration with translators that transform orders
            into a format compatible with the internal order routing and execution
            infrastructure.
          nullable: true
          type: string
      required:
      - originalClientOrderId
      type: object
    EMSCancelOrders:
      description: EMS Cancel Orders
      example:
        investorId: DEMO-12345
        orders:
        - originalClientOrderId: originalClientOrderId
          inboundDestination: inboundDestination
        - originalClientOrderId: originalClientOrderId
          inboundDestination: inboundDestination
      properties:
        investorId:
          description: Investor Id
          example: DEMO-12345
          nullable: true
          type: string
        orders:
          description: List of orders to cancel
          items:
            $ref: '#/components/schemas/EMSCancelOrder'
          nullable: true
          type: array
      type: object
    EMSCancelOrdersRoot:
      example:
        data:
          investorId: DEMO-12345
          orders:
          - originalClientOrderId: originalClientOrderId
            inboundDestination: inboundDestination
          - originalClientOrderId: originalClientOrderId
            inboundDestination: inboundDestination
      properties:
        data:
          $ref: '#/components/schemas/EMSCancelOrders'
      type: object
    EMSChildOrder:
      description: EMS Child Orders
      example:
        settlementType: regular
        orderType: market
        side: buy
        executionInstructions: notHeld
        maxFloor: 100
        profile: profile
        destination: PAPER
        settlementDate: "20230823"
        parentId:
          symbol: FDS-USA
          basketId: FACTSET_OMS-100823_12345
        orderQuantity: 250
        userDefinedFields:
          key: userDefinedFields
        stopPrice: 250
        minQuantity: 120
        price: 450
        text: routing 10 orders to PAPER destination
        exDestination: America Stock Exchange
        timeInForce:
          tif: day
          expireTime: 20230823-12:20:25
          expireDate: "20230823"
        handlingInstructions: autoOrderPublic
        locateRequired: false
      properties:
        parentId:
          $ref: '#/components/schemas/ParentId'
        side:
          description: Side of the order.If the parent order side is 'buy', valid
            values are 'buy' or 'buyMinus'. If the parent order side is 'sell', valid
            values are 'sell' or 'sellPlus'
          enum:
          - buy
          - sell
          - buyMinus
          - sellPlus
          - sellShort
          - sellShortExempt
          example: buy
          nullable: true
          type: string
        orderType:
          description: Type of the order
          enum:
          - market
          - limit
          - stop
          - stopLimit
          - marketOnClose
          - limitOrBetter
          example: market
          type: string
        orderQuantity:
          description: Number of shares/Quantity to be routed. Must be less than or
            equal to the orderQuantity of the parent order.
          example: 250
          format: double
          minimum: 0
          type: number
        price:
          description: Order price per share.
          example: 450
          format: double
          nullable: true
          type: number
        timeInForce:
          $ref: '#/components/schemas/TimeInForce'
        handlingInstructions:
          description: Instructions for order handling on Broker trading floor.
          enum:
          - autoOrderPrivate
          - autoOrderPublic
          - bestExecution
          example: autoOrderPublic
          nullable: true
          type: string
        exDestination:
          default: America Stock Exchange
          description: Execution destination as defined by institution when order
            is entered.
          example: America Stock Exchange
          nullable: true
          type: string
        destination:
          description: Represents the designated venue or location to which an order
            is intended to be routed.
          example: PAPER
          type: string
        stopPrice:
          description: Stop-loss price to buy/sell stock at market.
          example: 250
          format: double
          nullable: true
          type: number
        maxFloor:
          description: Maximum number of shares within an order to be shown on the
            exchange floor at any given time.
          example: 100
          format: double
          nullable: true
          type: number
        minQuantity:
          description: Minimum quantity of an order to be executed.
          example: 120
          format: double
          nullable: true
          type: number
        settlementType:
          description: Order settlement period
          enum:
          - regular
          - cash
          - nextDay
          - tPlus2
          - tPlus3
          - tPlus4
          - future
          - whenIssued
          - sellersOption
          - tPlus5
          example: regular
          nullable: true
          type: string
        settlementDate:
          description: Specific date of trade settlement in YYYYMMDD format.
          example: "20230823"
          nullable: true
          type: string
        executionInstructions:
          description: Instructions for order handling on exchange trading floor.
          enum:
          - notHeld
          - work
          - goAlong
          - overTheDay
          - held
          - participateDoNotInitiate
          - strictScale
          - tryToScale
          - stayOnBidSide
          - stayOnOfferSide
          - noCross
          - okToCross
          - callFirst
          - percentOfVolume
          - doNotIncrease
          - doNotReduce
          - allOrNone
          - reinstateOnSystemFailure
          - institutionsOnly
          - reinstateOnTradingHalt
          - cancelOnTradingHalt
          - lastPeg
          - midPricePeg
          - nonNegotiable
          - openingPeg
          - marketPeg
          - cancelOnSystemFailure
          - primaryPeg
          - suspend
          - fixedPegToLocalBestBid
          - customerDisplayInstruction
          - netting
          - pegToVWAP
          - tradeAlong
          - tryToStop
          - cancelIfNotBest
          - trailingStopPeg
          - strictLimit
          - ignorePriceValidityChecks
          - pegToLimitPrice
          - workToTargetStrategy
          - intermarketSweep
          - externalRoutingAllowed
          - externalRoutingNotAllowed
          - imbalanceOnly
          - singleExecutionRequestedForBlockTrade
          - bestExecution
          example: notHeld
          nullable: true
          type: string
        locateRequired:
          description: Indicates whether the broker is to locate the stock in conjunction
            with a short sell order.
          example: false
          nullable: true
          type: boolean
        text:
          description: Free format text string.
          example: routing 10 orders to PAPER destination
          maxLength: 250
          nullable: true
          type: string
        profile:
          description: A name given to broker algo
          nullable: true
          type: string
        userDefinedFields:
          additionalProperties:
            type: string
          description: User defined fields
          nullable: true
          type: object
      required:
      - destination
      - orderQuantity
      - orderType
      - parentId
      type: object
    EMSChildOrderInfo:
      description: EMS Child Order Info
      example:
        symbol: FDS-USA
        ticketId: RKPW.3280015
      properties:
        ticketId:
          description: Ticket Id for the child order
          example: RKPW.3280015
          nullable: true
          type: string
        symbol:
          description: Ticker symbol
          example: FDS-USA
          nullable: true
          type: string
      type: object
    EMSChildOrderRejectedInfo:
      description: EMS Child Order Rejected Info
      example:
        symbol: FDS-USA
        message: 'Ticket does not exist for ticketid: null'
        ticketId: RKPW.3280015
      properties:
        message:
          description: Reason for rejection
          example: 'Ticket does not exist for ticketid: null'
          nullable: true
          type: string
        ticketId:
          description: Ticket Id for the child order
          example: RKPW.3280015
          nullable: true
          type: string
        symbol:
          description: Ticker symbol
          example: FDS-USA
          nullable: true
          type: string
      type: object
    EMSChildOrders:
      example:
        childOrders:
        - settlementType: regular
          orderType: market
          side: buy
          executionInstructions: notHeld
          maxFloor: 100
          profile: profile
          destination: PAPER
          settlementDate: "20230823"
          parentId:
            symbol: FDS-USA
            basketId: FACTSET_OMS-100823_12345
          orderQuantity: 250
          userDefinedFields:
            key: userDefinedFields
          stopPrice: 250
          minQuantity: 120
          price: 450
          text: routing 10 orders to PAPER destination
          exDestination: America Stock Exchange
          timeInForce:
            tif: day
            expireTime: 20230823-12:20:25
            expireDate: "20230823"
          handlingInstructions: autoOrderPublic
          locateRequired: false
      properties:
        childOrders:
          items:
            $ref: '#/components/schemas/EMSChildOrder'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - childOrders
      type: object
    EMSChildOrdersResponse:
      description: EMS Child Orders Response
      example:
        rejected:
          key:
            symbol: FDS-USA
            message: 'Ticket does not exist for ticketid: null'
            ticketId: RKPW.3280015
        accepted:
          key:
            symbol: FDS-USA
            ticketId: RKPW.3280015
      properties:
        accepted:
          additionalProperties:
            $ref: '#/components/schemas/EMSChildOrderInfo'
          description: Accepted Orders. Key is the clientOrderId of the request.
          nullable: true
          type: object
        rejected:
          additionalProperties:
            $ref: '#/components/schemas/EMSChildOrderRejectedInfo'
          description: Rejected Orders. Key is the clientOrderId of the request.
          nullable: true
          type: object
      type: object
    EMSChildOrdersResponseRoot:
      description: EMS Response
      example:
        data:
          rejected:
            key:
              symbol: FDS-USA
              message: 'Ticket does not exist for ticketid: null'
              ticketId: RKPW.3280015
          accepted:
            key:
              symbol: FDS-USA
              ticketId: RKPW.3280015
      properties:
        data:
          $ref: '#/components/schemas/EMSChildOrdersResponse'
      required:
      - data
      type: object
    EMSChildOrdersRoot:
      example:
        data:
          childOrders:
          - settlementType: regular
            orderType: market
            side: buy
            executionInstructions: notHeld
            maxFloor: 100
            profile: profile
            destination: PAPER
            settlementDate: "20230823"
            parentId:
              symbol: FDS-USA
              basketId: FACTSET_OMS-100823_12345
            orderQuantity: 250
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 250
            minQuantity: 120
            price: 450
            text: routing 10 orders to PAPER destination
            exDestination: America Stock Exchange
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            handlingInstructions: autoOrderPublic
            locateRequired: false
      properties:
        data:
          $ref: '#/components/schemas/EMSChildOrders'
      type: object
    EMSCreateChildOrderInfo:
      example:
        basketId: FACTSET_OMS-100823_12345
        symbol: FDS-USA
        ticketId: RKPW.3280015
      properties:
        basketId:
          description: Unique identifier assigned to basket order
          example: FACTSET_OMS-100823_12345
          nullable: true
          type: string
        ticketId:
          description: Ticket Id for the child order
          example: RKPW.3280015
          nullable: true
          type: string
        symbol:
          description: Ticker symbol
          example: FDS-USA
          nullable: true
          type: string
      type: object
    EMSCreateChildOrderRejectedInfo:
      example:
        basketId: FACTSET_OMS-100823_12345
        symbol: FDS-USA
        message: 'Ticket does not exist for ticketid: null'
        ticketId: RKPW.3280015
      properties:
        message:
          description: Reason for rejection
          example: 'Ticket does not exist for ticketid: null'
          nullable: true
          type: string
        basketId:
          description: Unique identifier assigned to basket order
          example: FACTSET_OMS-100823_12345
          nullable: true
          type: string
        ticketId:
          description: Ticket Id for the child order
          example: RKPW.3280015
          nullable: true
          type: string
        symbol:
          description: Ticker symbol
          example: FDS-USA
          nullable: true
          type: string
      type: object
    EMSCreateChildOrdersResponse:
      example:
        rejected:
          key:
            basketId: FACTSET_OMS-100823_12345
            symbol: FDS-USA
            message: 'Ticket does not exist for ticketid: null'
            ticketId: RKPW.3280015
        accepted:
          key:
            basketId: FACTSET_OMS-100823_12345
            symbol: FDS-USA
            ticketId: RKPW.3280015
      properties:
        accepted:
          additionalProperties:
            $ref: '#/components/schemas/EMSCreateChildOrderInfo'
          description: Accepted Orders. Key is the clientOrderId of the request.
          nullable: true
          type: object
        rejected:
          additionalProperties:
            $ref: '#/components/schemas/EMSCreateChildOrderRejectedInfo'
          description: Rejected Orders. Key is the clientOrderId of the request.
          nullable: true
          type: object
      type: object
    EMSCreateChildOrdersResponseRoot:
      description: EMS Response
      example:
        data:
          rejected:
            key:
              basketId: FACTSET_OMS-100823_12345
              symbol: FDS-USA
              message: 'Ticket does not exist for ticketid: null'
              ticketId: RKPW.3280015
          accepted:
            key:
              basketId: FACTSET_OMS-100823_12345
              symbol: FDS-USA
              ticketId: RKPW.3280015
      properties:
        data:
          $ref: '#/components/schemas/EMSCreateChildOrdersResponse'
      required:
      - data
      type: object
    EMSOrder:
      description: EMS Order
      example:
        settlementType: regular
        orderType: market
        side: buy
        executionInstructions: notHeld
        effectiveTime: 20210622-12:15:30
        clientOrderId: "12322123"
        maxFloor: 100
        instrument:
          symbol: TATAMOTORS
          putOrCall: put
          underlyingSecurityType: underlyingSecurityType
          securityType: securityType
          maturityMonthYear: maturityMonthYear
          maturityDay: maturityDay
          securityExchange: securityExchange
          securityDescription: securityDescription
          cfiCode: cfiCode
          issuer: issuer
        settlementDate: "20210622"
        orderQuantity: 350
        maxShow: 100
        userDefinedFields:
          key: userDefinedFields
        stopPrice: 800
        price: 800
        currency: USD
        prevClosePrice: 100
        timeInForce:
          tif: day
          expireTime: 20230823-12:20:25
          expireDate: "20230823"
        strikePrice: 400
        isCovered: false
        handlingInstructions: autoOrderPublic
        account: Test.ACCT
        inboundDestination: inboundDestination
        locateRequired: false
      properties:
        clientOrderId:
          description: Unique id for the order
          example: "12322123"
          nullable: true
          type: string
        instrument:
          $ref: '#/components/schemas/Instrument'
        side:
          description: Side of the order.
          enum:
          - buy
          - sell
          - sellShort
          - sellShortExempt
          example: buy
          type: string
        orderType:
          description: Type of the order
          enum:
          - market
          - limit
          - stop
          - stopLimit
          - marketOnClose
          - limitOrBetter
          example: market
          type: string
        orderQuantity:
          description: Number of shares/Quantity.
          example: 350
          format: double
          minimum: 0
          type: number
        price:
          description: Order price per share
          example: 800
          format: double
          nullable: true
          type: number
        stopPrice:
          description: Stop-loss price to buy/sell stock at market.
          example: 800
          format: double
          nullable: true
          type: number
        strikePrice:
          description: Strike Price for an Option.
          example: 400
          format: double
          nullable: true
          type: number
        currency:
          description: Currency used for price in ISO format.
          example: USD
          nullable: true
          type: string
        isCovered:
          description: Signifies if a specific order is a covered order. A covered
            order is one that involves an investment strategy with the capability
            to limit the potential loss of the order.
          example: false
          nullable: true
          type: boolean
        maxShow:
          description: Maximum number of shares within an order to be shown to other
            customers.
          example: 100
          format: double
          nullable: true
          type: number
        maxFloor:
          description: Maximum number of shares within an order to be shown on the
            exchange floor at any given time.
          example: 100
          format: double
          nullable: true
          type: number
        prevClosePrice:
          description: Previous closing price of security.
          example: 100
          format: double
          nullable: true
          type: number
        settlementType:
          description: Order settlement period.
          enum:
          - regular
          - cash
          - nextDay
          - tPlus2
          - tPlus3
          - tPlus4
          - future
          - whenIssued
          - sellersOption
          - tPlus5
          example: regular
          nullable: true
          type: string
        settlementDate:
          description: Settlement date of trade settlement in YYYYMMDD format
          example: "20210622"
          nullable: true
          type: string
        handlingInstructions:
          description: Instructions for order handling on Broker trading floor.
          enum:
          - autoOrderPrivate
          - autoOrderPublic
          - bestExecution
          example: autoOrderPublic
          nullable: true
          type: string
        executionInstructions:
          description: Instructions for order handling on exchange trading floor.
          enum:
          - notHeld
          - work
          - goAlong
          - overTheDay
          - held
          - participateDoNotInitiate
          - strictScale
          - tryToScale
          - stayOnBidSide
          - stayOnOfferSide
          - noCross
          - okToCross
          - callFirst
          - percentOfVolume
          - doNotIncrease
          - doNotReduce
          - allOrNone
          - reinstateOnSystemFailure
          - institutionsOnly
          - reinstateOnTradingHalt
          - cancelOnTradingHalt
          - lastPeg
          - midPricePeg
          - nonNegotiable
          - openingPeg
          - marketPeg
          - cancelOnSystemFailure
          - primaryPeg
          - suspend
          - fixedPegToLocalBestBid
          - customerDisplayInstruction
          - netting
          - pegToVWAP
          - tradeAlong
          - tryToStop
          - cancelIfNotBest
          - trailingStopPeg
          - strictLimit
          - ignorePriceValidityChecks
          - pegToLimitPrice
          - workToTargetStrategy
          - intermarketSweep
          - externalRoutingAllowed
          - externalRoutingNotAllowed
          - imbalanceOnly
          - singleExecutionRequestedForBlockTrade
          - bestExecution
          example: notHeld
          nullable: true
          type: string
        locateRequired:
          description: Indicates whether the broker is to locate the stock in conjunction
            with a short sell order.
          example: false
          nullable: true
          type: boolean
        effectiveTime:
          description: Effective time in YYYYMMDD-HH:MM:SS format expressed in UTC
          example: 20210622-12:15:30
          nullable: true
          type: string
        account:
          description: Account for the basket, parent basket or position.
          example: Test.ACCT
          nullable: true
          type: string
        timeInForce:
          $ref: '#/components/schemas/TimeInForce'
        inboundDestination:
          description: To facilitate integration with translators that transform orders
            into a format compatible with the internal order routing and execution
            infrastructure.
          nullable: true
          type: string
        userDefinedFields:
          additionalProperties:
            type: string
          description: User defined fields
          nullable: true
          type: object
      required:
      - instrument
      - orderType
      - side
      type: object
    EMSOrderMetadata:
      description: EMS Order Metadata
      example:
        symbol: symbol
        orderType: market
        side: buy
        clientOrderId: clientOrderId
        warning: warning
        error: error
        orderQuantity: 0.8008281904610115
        info: info
      properties:
        symbol:
          description: Ticker symbol
          nullable: true
          type: string
        side:
          description: Side of the order
          enum:
          - buy
          - sell
          - sellShort
          - sellShortExempt
          nullable: true
          type: string
        orderType:
          description: Type of the order
          enum:
          - market
          - limit
          - stop
          - stopLimit
          - marketOnClose
          - limitOrBetter
          nullable: true
          type: string
        orderQuantity:
          description: Number of shares/Quantity.
          format: double
          nullable: true
          type: number
        error:
          description: Error message
          nullable: true
          type: string
        info:
          description: Information
          nullable: true
          type: string
        clientOrderId:
          description: Client Order Id
          nullable: true
          type: string
        warning:
          description: Warning
          nullable: true
          type: string
      type: object
    EMSOrders:
      description: EMS Orders
      example:
        investorId: DEMO-12345
        orders:
        - settlementType: regular
          orderType: market
          side: buy
          executionInstructions: notHeld
          effectiveTime: 20210622-12:15:30
          clientOrderId: "12322123"
          maxFloor: 100
          instrument:
            symbol: TATAMOTORS
            putOrCall: put
            underlyingSecurityType: underlyingSecurityType
            securityType: securityType
            maturityMonthYear: maturityMonthYear
            maturityDay: maturityDay
            securityExchange: securityExchange
            securityDescription: securityDescription
            cfiCode: cfiCode
            issuer: issuer
          settlementDate: "20210622"
          orderQuantity: 350
          maxShow: 100
          userDefinedFields:
            key: userDefinedFields
          stopPrice: 800
          price: 800
          currency: USD
          prevClosePrice: 100
          timeInForce:
            tif: day
            expireTime: 20230823-12:20:25
            expireDate: "20230823"
          strikePrice: 400
          isCovered: false
          handlingInstructions: autoOrderPublic
          account: Test.ACCT
          inboundDestination: inboundDestination
          locateRequired: false
        - settlementType: regular
          orderType: market
          side: buy
          executionInstructions: notHeld
          effectiveTime: 20210622-12:15:30
          clientOrderId: "12322123"
          maxFloor: 100
          instrument:
            symbol: TATAMOTORS
            putOrCall: put
            underlyingSecurityType: underlyingSecurityType
            securityType: securityType
            maturityMonthYear: maturityMonthYear
            maturityDay: maturityDay
            securityExchange: securityExchange
            securityDescription: securityDescription
            cfiCode: cfiCode
            issuer: issuer
          settlementDate: "20210622"
          orderQuantity: 350
          maxShow: 100
          userDefinedFields:
            key: userDefinedFields
          stopPrice: 800
          price: 800
          currency: USD
          prevClosePrice: 100
          timeInForce:
            tif: day
            expireTime: 20230823-12:20:25
            expireDate: "20230823"
          strikePrice: 400
          isCovered: false
          handlingInstructions: autoOrderPublic
          account: Test.ACCT
          inboundDestination: inboundDestination
          locateRequired: false
      properties:
        investorId:
          description: Investor Id
          example: DEMO-12345
          nullable: true
          type: string
        orders:
          description: List of orders
          items:
            $ref: '#/components/schemas/EMSOrder'
          type: array
      required:
      - orders
      type: object
    EMSOrdersResponse:
      description: EMS Orders Response
      example:
        rejected:
          key:
            symbol: symbol
            orderType: market
            side: buy
            clientOrderId: clientOrderId
            warning: warning
            error: error
            orderQuantity: 0.8008281904610115
            info: info
        accepted:
          key:
            symbol: symbol
            orderType: market
            side: buy
            clientOrderId: clientOrderId
            warning: warning
            error: error
            orderQuantity: 0.8008281904610115
            info: info
      properties:
        accepted:
          additionalProperties:
            $ref: '#/components/schemas/EMSOrderMetadata'
          description: Accepted Orders
          nullable: true
          type: object
        rejected:
          additionalProperties:
            $ref: '#/components/schemas/EMSOrderMetadata'
          description: Rejected Orders
          nullable: true
          type: object
      type: object
    EMSOrdersResponseRoot:
      description: EMS Response
      example:
        data:
          rejected:
            key:
              symbol: symbol
              orderType: market
              side: buy
              clientOrderId: clientOrderId
              warning: warning
              error: error
              orderQuantity: 0.8008281904610115
              info: info
          accepted:
            key:
              symbol: symbol
              orderType: market
              side: buy
              clientOrderId: clientOrderId
              warning: warning
              error: error
              orderQuantity: 0.8008281904610115
              info: info
      properties:
        data:
          $ref: '#/components/schemas/EMSOrdersResponse'
      required:
      - data
      type: object
    EMSOrdersRoot:
      example:
        data:
          investorId: DEMO-12345
          orders:
          - settlementType: regular
            orderType: market
            side: buy
            executionInstructions: notHeld
            effectiveTime: 20210622-12:15:30
            clientOrderId: "12322123"
            maxFloor: 100
            instrument:
              symbol: TATAMOTORS
              putOrCall: put
              underlyingSecurityType: underlyingSecurityType
              securityType: securityType
              maturityMonthYear: maturityMonthYear
              maturityDay: maturityDay
              securityExchange: securityExchange
              securityDescription: securityDescription
              cfiCode: cfiCode
              issuer: issuer
            settlementDate: "20210622"
            orderQuantity: 350
            maxShow: 100
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 800
            price: 800
            currency: USD
            prevClosePrice: 100
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            strikePrice: 400
            isCovered: false
            handlingInstructions: autoOrderPublic
            account: Test.ACCT
            inboundDestination: inboundDestination
            locateRequired: false
          - settlementType: regular
            orderType: market
            side: buy
            executionInstructions: notHeld
            effectiveTime: 20210622-12:15:30
            clientOrderId: "12322123"
            maxFloor: 100
            instrument:
              symbol: TATAMOTORS
              putOrCall: put
              underlyingSecurityType: underlyingSecurityType
              securityType: securityType
              maturityMonthYear: maturityMonthYear
              maturityDay: maturityDay
              securityExchange: securityExchange
              securityDescription: securityDescription
              cfiCode: cfiCode
              issuer: issuer
            settlementDate: "20210622"
            orderQuantity: 350
            maxShow: 100
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 800
            price: 800
            currency: USD
            prevClosePrice: 100
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            strikePrice: 400
            isCovered: false
            handlingInstructions: autoOrderPublic
            account: Test.ACCT
            inboundDestination: inboundDestination
            locateRequired: false
      properties:
        data:
          $ref: '#/components/schemas/EMSOrders'
      type: object
    EMSReplaceChildOrders:
      example:
        childOrders:
        - settlementType: regular
          orderType: market
          executionInstructions: notHeld
          maxFloor: 200
          settlementDate: "20230823"
          orderQuantity: 100
          userDefinedFields:
            key: userDefinedFields
          stopPrice: 120
          minQuantity: 120
          price: 450
          text: Replacing price to 300 for 50 orders
          timeInForce:
            tif: day
            expireTime: 20230823-12:20:25
            expireDate: "20230823"
          ticketId: RKPW.3280015
          handlingInstructions: autoOrderPublic
          locateRequired: false
      properties:
        childOrders:
          items:
            $ref: '#/components/schemas/ReplaceChildOrder'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - childOrders
      type: object
    EMSReplaceChildOrdersRoot:
      example:
        data:
          childOrders:
          - settlementType: regular
            orderType: market
            executionInstructions: notHeld
            maxFloor: 200
            settlementDate: "20230823"
            orderQuantity: 100
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 120
            minQuantity: 120
            price: 450
            text: Replacing price to 300 for 50 orders
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            ticketId: RKPW.3280015
            handlingInstructions: autoOrderPublic
            locateRequired: false
      properties:
        data:
          $ref: '#/components/schemas/EMSReplaceChildOrders'
      type: object
    EMSReplaceOrder:
      description: EMS Replace Order
      example:
        originalClientOrderId: originalClientOrderId
        order:
          settlementType: regular
          orderType: market
          side: buy
          executionInstructions: notHeld
          effectiveTime: 20210622-12:15:30
          clientOrderId: "12322123"
          maxFloor: 100
          instrument:
            symbol: TATAMOTORS
            putOrCall: put
            underlyingSecurityType: underlyingSecurityType
            securityType: securityType
            maturityMonthYear: maturityMonthYear
            maturityDay: maturityDay
            securityExchange: securityExchange
            securityDescription: securityDescription
            cfiCode: cfiCode
            issuer: issuer
          settlementDate: "20210622"
          orderQuantity: 350
          maxShow: 100
          userDefinedFields:
            key: userDefinedFields
          stopPrice: 800
          price: 800
          currency: USD
          prevClosePrice: 100
          timeInForce:
            tif: day
            expireTime: 20230823-12:20:25
            expireDate: "20230823"
          strikePrice: 400
          isCovered: false
          handlingInstructions: autoOrderPublic
          account: Test.ACCT
          inboundDestination: inboundDestination
          locateRequired: false
      properties:
        originalClientOrderId:
          description: Unique identifier of the original order, generated in Create.
          type: string
        order:
          $ref: '#/components/schemas/EMSOrder'
      required:
      - order
      - originalClientOrderId
      type: object
    EMSReplaceOrders:
      description: EMS Replace Orders
      example:
        investorId: DEMO-12345
        orders:
        - originalClientOrderId: originalClientOrderId
          order:
            settlementType: regular
            orderType: market
            side: buy
            executionInstructions: notHeld
            effectiveTime: 20210622-12:15:30
            clientOrderId: "12322123"
            maxFloor: 100
            instrument:
              symbol: TATAMOTORS
              putOrCall: put
              underlyingSecurityType: underlyingSecurityType
              securityType: securityType
              maturityMonthYear: maturityMonthYear
              maturityDay: maturityDay
              securityExchange: securityExchange
              securityDescription: securityDescription
              cfiCode: cfiCode
              issuer: issuer
            settlementDate: "20210622"
            orderQuantity: 350
            maxShow: 100
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 800
            price: 800
            currency: USD
            prevClosePrice: 100
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            strikePrice: 400
            isCovered: false
            handlingInstructions: autoOrderPublic
            account: Test.ACCT
            inboundDestination: inboundDestination
            locateRequired: false
        - originalClientOrderId: originalClientOrderId
          order:
            settlementType: regular
            orderType: market
            side: buy
            executionInstructions: notHeld
            effectiveTime: 20210622-12:15:30
            clientOrderId: "12322123"
            maxFloor: 100
            instrument:
              symbol: TATAMOTORS
              putOrCall: put
              underlyingSecurityType: underlyingSecurityType
              securityType: securityType
              maturityMonthYear: maturityMonthYear
              maturityDay: maturityDay
              securityExchange: securityExchange
              securityDescription: securityDescription
              cfiCode: cfiCode
              issuer: issuer
            settlementDate: "20210622"
            orderQuantity: 350
            maxShow: 100
            userDefinedFields:
              key: userDefinedFields
            stopPrice: 800
            price: 800
            currency: USD
            prevClosePrice: 100
            timeInForce:
              tif: day
              expireTime: 20230823-12:20:25
              expireDate: "20230823"
            strikePrice: 400
            isCovered: false
            handlingInstructions: autoOrderPublic
            account: Test.ACCT
            inboundDestination: inboundDestination
            locateRequired: false
      properties:
        investorId:
          description: Investor Id
          example: DEMO-12345
          nullable: true
          type: string
        orders:
          description: List of orders to replace
          items:
            $ref: '#/components/schemas/EMSReplaceOrder'
          nullable: true
          type: array
      type: object
    EMSReplaceOrdersRoot:
      example:
        data:
          investorId: DEMO-12345
          orders:
          - originalClientOrderId: originalClientOrderId
            order:
              settlementType: regular
              orderType: market
              side: buy
              executionInstructions: notHeld
              effectiveTime: 20210622-12:15:30
              clientOrderId: "12322123"
              maxFloor: 100
              instrument:
                symbol: TATAMOTORS
                putOrCall: put
                underlyingSecurityType: underlyingSecurityType
                securityType: securityType
                maturityMonthYear: maturityMonthYear
                maturityDay: maturityDay
                securityExchange: securityExchange
                securityDescription: securityDescription
                cfiCode: cfiCode
                issuer: issuer
              settlementDate: "20210622"
              orderQuantity: 350
              maxShow: 100
              userDefinedFields:
                key: userDefinedFields
              stopPrice: 800
              price: 800
              currency: USD
              prevClosePrice: 100
              timeInForce:
                tif: day
                expireTime: 20230823-12:20:25
                expireDate: "20230823"
              strikePrice: 400
              isCovered: false
              handlingInstructions: autoOrderPublic
              account: Test.ACCT
              inboundDestination: inboundDestination
              locateRequired: false
          - originalClientOrderId: originalClientOrderId
            order:
              settlementType: regular
              orderType: market
              side: buy
              executionInstructions: notHeld
              effectiveTime: 20210622-12:15:30
              clientOrderId: "12322123"
              maxFloor: 100
              instrument:
                symbol: TATAMOTORS
                putOrCall: put
                underlyingSecurityType: underlyingSecurityType
                securityType: securityType
                maturityMonthYear: maturityMonthYear
                maturityDay: maturityDay
                securityExchange: securityExchange
                securityDescription: securityDescription
                cfiCode: cfiCode
                issuer: issuer
              settlementDate: "20210622"
              orderQuantity: 350
              maxShow: 100
              userDefinedFields:
                key: userDefinedFields
              stopPrice: 800
              price: 800
              currency: USD
              prevClosePrice: 100
              timeInForce:
                tif: day
                expireTime: 20230823-12:20:25
                expireDate: "20230823"
              strikePrice: 400
              isCovered: false
              handlingInstructions: autoOrderPublic
              account: Test.ACCT
              inboundDestination: inboundDestination
              locateRequired: false
      properties:
        data:
          $ref: '#/components/schemas/EMSReplaceOrders'
      type: object
    Error:
      description: Error
      properties:
        id:
          description: Identifier for the error
          nullable: true
          type: string
        code:
          description: Code
          nullable: true
          type: string
        title:
          description: Title
          nullable: true
          type: string
        detail:
          description: Explanation specific to the occurrence of the error
          nullable: true
          type: string
        source:
          $ref: '#/components/schemas/ErrorSource'
      type: object
    ErrorSource:
      description: Error Source
      properties:
        pointer:
          description: Pointer to the associated entity in the request body
          nullable: true
          type: string
        parameter:
          description: Indicates which path or URI query parameter caused the error
          nullable: true
          type: string
      type: object
    Instrument:
      description: Instrument
      example:
        symbol: TATAMOTORS
        putOrCall: put
        underlyingSecurityType: underlyingSecurityType
        securityType: securityType
        maturityMonthYear: maturityMonthYear
        maturityDay: maturityDay
        securityExchange: securityExchange
        securityDescription: securityDescription
        cfiCode: cfiCode
        issuer: issuer
      properties:
        symbol:
          description: Ticker symbol
          example: TATAMOTORS
          maxLength: 250
          type: string
        securityType:
          description: Indicates type of security.
          nullable: true
          type: string
        cfiCode:
          description: Classification of Financial Instruments. Indicates the type
            of security using ISO 0962 standard.
          nullable: true
          type: string
        securityExchange:
          description: Market used to help identify a security.
          nullable: true
          type: string
        issuer:
          description: Company name of security issuer.
          nullable: true
          type: string
        securityDescription:
          description: Security Description
          nullable: true
          type: string
        maturityMonthYear:
          description: Month and Year of the maturity.
          nullable: true
          type: string
        maturityDay:
          description: Day of month used in conjunction with maturityMonthYear to
            specify the maturity date
          nullable: true
          type: string
        putOrCall:
          description: Indicates whether an Option is for a put or call.
          enum:
          - put
          - call
          nullable: true
          type: string
        underlyingSecurityType:
          description: Underlying security’s SecurityType.
          nullable: true
          type: string
      required:
      - symbol
      type: object
    ParentId:
      description: Unique identifier to identify the parent order.
      example:
        symbol: FDS-USA
        basketId: FACTSET_OMS-100823_12345
      properties:
        symbol:
          description: Ticker symbol
          example: FDS-USA
          type: string
        basketId:
          description: Unique identifier assigned to basket order. Can be fetched
            from the WebSocket Order Update API.
          example: FACTSET_OMS-100823_12345
          type: string
      required:
      - basketId
      - symbol
      type: object
    ReplaceChildOrder:
      description: EMS Replace Child Orders
      example:
        settlementType: regular
        orderType: market
        executionInstructions: notHeld
        maxFloor: 200
        settlementDate: "20230823"
        orderQuantity: 100
        userDefinedFields:
          key: userDefinedFields
        stopPrice: 120
        minQuantity: 120
        price: 450
        text: Replacing price to 300 for 50 orders
        timeInForce:
          tif: day
          expireTime: 20230823-12:20:25
          expireDate: "20230823"
        ticketId: RKPW.3280015
        handlingInstructions: autoOrderPublic
        locateRequired: false
      properties:
        ticketId:
          description: Ticket Id for the child order to be replaced
          example: RKPW.3280015
          type: string
        orderType:
          description: Type of the order
          enum:
          - market
          - limit
          - stop
          - stopLimit
          - marketOnClose
          - limitOrBetter
          example: market
          nullable: true
          type: string
        orderQuantity:
          description: Number of shares/Quantity to be routed. Must be less than or
            equal to the orderQuantity of the parent order.
          example: 100
          format: double
          minimum: 0
          nullable: true
          type: number
        price:
          description: Order price per share.
          example: 450
          format: double
          nullable: true
          type: number
        timeInForce:
          $ref: '#/components/schemas/TimeInForce'
        handlingInstructions:
          description: Instructions for order handling on Broker trading floor.
          enum:
          - autoOrderPrivate
          - autoOrderPublic
          - bestExecution
          example: autoOrderPublic
          nullable: true
          type: string
        stopPrice:
          description: Stop-loss price to buy/sell stock at market.
          example: 120
          format: double
          nullable: true
          type: number
        maxFloor:
          description: Maximum number of shares within an order to be shown on the
            exchange floor at any given time.
          example: 200
          format: double
          nullable: true
          type: number
        minQuantity:
          description: Minimum quantity of an order to be executed.
          example: 120
          format: double
          nullable: true
          type: number
        settlementType:
          description: Order settlement period
          enum:
          - regular
          - cash
          - nextDay
          - tPlus2
          - tPlus3
          - tPlus4
          - future
          - whenIssued
          - sellersOption
          - tPlus5
          example: regular
          nullable: true
          type: string
        settlementDate:
          description: Specific date of trade settlement in YYYYMMDD format.
          example: "20230823"
          nullable: true
          type: string
        executionInstructions:
          description: Instructions for order handling on exchange trading floor.
          enum:
          - notHeld
          - work
          - goAlong
          - overTheDay
          - held
          - participateDoNotInitiate
          - strictScale
          - tryToScale
          - stayOnBidSide
          - stayOnOfferSide
          - noCross
          - okToCross
          - callFirst
          - percentOfVolume
          - doNotIncrease
          - doNotReduce
          - allOrNone
          - reinstateOnSystemFailure
          - institutionsOnly
          - reinstateOnTradingHalt
          - cancelOnTradingHalt
          - lastPeg
          - midPricePeg
          - nonNegotiable
          - openingPeg
          - marketPeg
          - cancelOnSystemFailure
          - primaryPeg
          - suspend
          - fixedPegToLocalBestBid
          - customerDisplayInstruction
          - netting
          - pegToVWAP
          - tradeAlong
          - tryToStop
          - cancelIfNotBest
          - trailingStopPeg
          - strictLimit
          - ignorePriceValidityChecks
          - pegToLimitPrice
          - workToTargetStrategy
          - intermarketSweep
          - externalRoutingAllowed
          - externalRoutingNotAllowed
          - imbalanceOnly
          - singleExecutionRequestedForBlockTrade
          - bestExecution
          example: notHeld
          nullable: true
          type: string
        locateRequired:
          description: Indicates whether the broker is to locate the stock in conjunction
            with a short sell order.
          example: false
          nullable: true
          type: boolean
        text:
          description: Free format text string.
          example: Replacing price to 300 for 50 orders
          maxLength: 250
          nullable: true
          type: string
        userDefinedFields:
          additionalProperties:
            type: string
          description: User defined fields
          nullable: true
          type: object
      required:
      - ticketId
      type: object
    TimeInForce:
      description: Time in Force
      example:
        tif: day
        expireTime: 20230823-12:20:25
        expireDate: "20230823"
      properties:
        tif:
          description: 'Time in force: if goodTillDate, then Expire Time or Expire
            Date is a required field'
          enum:
          - day
          - goodTillCancel
          - atTheOpening
          - immediateOrCancel
          - fillOrKill
          - goodTillCrossing
          - goodTillDate
          - atc
          type: string
        expireDate:
          description: Expire date in YYYYMMDD format expressed in UTC
          example: "20230823"
          nullable: true
          type: string
        expireTime:
          description: Expire time in YYYYMMDD-HH:MM:SS format expressed in UTC
          example: 20230823-12:20:25
          nullable: true
          type: string
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

