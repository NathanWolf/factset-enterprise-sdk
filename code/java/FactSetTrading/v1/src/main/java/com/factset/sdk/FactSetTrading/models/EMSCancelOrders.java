/*
 * EMS API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 1
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTrading.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetTrading.models.EMSCancelOrder;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTrading.JSON;


/**
 * EMSCancelOrders
 */
@JsonPropertyOrder({
  EMSCancelOrders.JSON_PROPERTY_INVESTOR_ID,
  EMSCancelOrders.JSON_PROPERTY_ORDERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EMSCancelOrders implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INVESTOR_ID = "investorId";
  private String investorId;

  public static final String JSON_PROPERTY_ORDERS = "orders";
  private java.util.List<EMSCancelOrder> orders = null;

  public EMSCancelOrders() { 
  }

  public EMSCancelOrders investorId(String investorId) {
    this.investorId = investorId;
    return this;
  }

   /**
   * Get investorId
   * @return investorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVESTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvestorId() {
    return investorId;
  }


  @JsonProperty(JSON_PROPERTY_INVESTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestorId(String investorId) {
    this.investorId = investorId;
  }


  public EMSCancelOrders orders(java.util.List<EMSCancelOrder> orders) {
    this.orders = orders;
    return this;
  }

  public EMSCancelOrders addOrdersItem(EMSCancelOrder ordersItem) {
    if (this.orders == null) {
      this.orders = new java.util.ArrayList<>();
    }
    this.orders.add(ordersItem);
    return this;
  }

   /**
   * Get orders
   * @return orders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<EMSCancelOrder> getOrders() {
    return orders;
  }


  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrders(java.util.List<EMSCancelOrder> orders) {
    this.orders = orders;
  }


  /**
   * Return true if this EMSCancelOrders object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EMSCancelOrders emSCancelOrders = (EMSCancelOrders) o;
    return Objects.equals(this.investorId, emSCancelOrders.investorId) &&
        Objects.equals(this.orders, emSCancelOrders.orders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(investorId, orders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EMSCancelOrders {\n");
    sb.append("    investorId: ").append(toIndentedString(investorId)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

