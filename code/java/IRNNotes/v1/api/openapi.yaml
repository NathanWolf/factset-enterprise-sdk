openapi: 3.0.1
info:
  description: Allows users to extract, create, update and configure IRN data.
  title: IRN API v1
  version: "1"
servers:
- url: https://api-sandbox.factset.com/research/irn
security:
- FactSetApiKey: []
- FactSetOAuth2: []
paths:
  /v1/notes:
    get:
      operationId: GetNotes
      parameters:
      - description: StartDate
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: EndDate
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: Set of identifiers to filter on
        explode: true
        in: query
        name: identifiers
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Set of authors to filter on
        explode: true
        in: query
        name: authors
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of subjects to filter on
        explode: true
        in: query
        name: subjects
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of recommendations to filter on
        explode: true
        in: query
        name: recommendations
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of sentiments to filter on
        explode: true
        in: query
        name: sentiments
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Limit on the number of notes retrieved
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Fetch notes after the offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return notes which have been modified or created since a
          particular time
        explode: true
        in: query
        name: modifiedSince
        required: false
        schema:
          type: string
        style: form
      - description: Include notes whose related symbols match the identifier filter
        explode: true
        in: query
        name: filterOnRelatedSymbols
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: header
        name: X-IRN-Include-Deleted
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NoteSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get all the notes in the specified date range filtered on the given
        identifiers
      tags:
      - Notes
      x-accepts: application/json
    post:
      operationId: CreateNote
      parameters:
      - explode: false
        in: header
        name: X-IRN-Contributor-Username
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-IRN-Contributor-Serial
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Success - Returns unique identifier of the note created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a note
      tags:
      - Notes
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}:
    delete:
      operationId: DeleteNote
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a Note
      tags:
      - Notes
      x-accepts: application/json
    get:
      operationId: GetNote
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get details of a note
      tags:
      - Notes
      x-accepts: application/json
    put:
      operationId: UpdateNote
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
        description: Note details to update
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Update a note
      tags:
      - Notes
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/attachments:
    get:
      operationId: GetAttachments
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentSummaryDto'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get all the attachments belonging to a note
      tags:
      - Attachments
      x-accepts: application/json
    post:
      operationId: CreateAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create an attachment for an existing note
      tags:
      - Attachments
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v1/notes/{noteId}/attachments/{attachmentId}/download:
    get:
      operationId: DownloadAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Download an attachment from a note
      tags:
      - Attachments
      x-accepts: application/json
  /v1/notes/{noteId}/attachments/{attachmentId}:
    delete:
      operationId: SoftDeleteNoteAttachment
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Attachment Id
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Delete attachment from note
      tags:
      - Attachments
      x-accepts: application/json
  /v1/notes/{noteId}/events:
    get:
      operationId: GetEvents
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RecordEventSummaryDto'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get all the record events that belong to a note
      tags:
      - Events
      x-accepts: application/json
  /v1/notes/{noteId}/events/{recordEventId}:
    get:
      operationId: GetRecordEvent
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Record Event Id
        explode: false
        in: path
        name: recordEventId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteEventDto'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get details of a record event of a note
      tags:
      - Events
      x-accepts: application/json
  /v1/notes/{noteId}/comments:
    get:
      operationId: GetComments
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommentSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get all comments for a note
      tags:
      - Comments
      x-accepts: application/json
    post:
      operationId: CreateComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Create a comment to a Note
      tags:
      - Comments
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}:
    delete:
      operationId: DeleteComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Delete a Comment from a Note
      tags:
      - Comments
      x-accepts: application/json
    get:
      operationId: GetComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get details of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
    patch:
      operationId: PatchComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Edit a comment for a note
      tags:
      - Comments
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}/attachments:
    get:
      operationId: GetCommentAttachments
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get attachments summary of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
    post:
      operationId: CreateCommentAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Create a comment attachment to a Note
      tags:
      - Comments
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}/attachments/{attachmentId}/download:
    get:
      operationId: DownloadCommentAttachmentForComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Download single attachment detail of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
  /v1/identifiers:
    get:
      operationId: GetIdentifiers
      parameters:
      - description: Identifiers
        explode: true
        in: query
        name: identifiers
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentifierResolutionDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get all the identifier details for given identifiers
      tags:
      - Identifiers
      x-accepts: application/json
components:
  requestBodies:
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    CustomFieldValueDto:
      additionalProperties: false
      example:
        code: code
        options:
        - options
        - options
        contactValues:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value: value
      properties:
        code:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        options:
          items:
            type: string
          nullable: true
          type: array
        contactValues:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    NoteSummaryDto:
      additionalProperties: false
      example:
        date: date
        approvalStatus: approvalStatus
        identifier: identifier
        customFields:
        - code: code
          options:
          - options
          - options
          contactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        - code: code
          options:
          - options
          - options
          contactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        relatedSymbols:
        - relatedSymbols
        - relatedSymbols
        isPersonal: true
        recommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdAt: createdAt
        attachmentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        date:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        authorId:
          format: uuid
          type: string
        title:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        subjectId:
          format: uuid
          type: string
        isPersonal:
          type: boolean
        approvalStatus:
          nullable: true
          type: string
        attachmentIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        relatedSymbols:
          items:
            type: string
          nullable: true
          type: array
        recommendationId:
          format: uuid
          type: string
        sentimentId:
          format: uuid
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
          nullable: true
          type: array
      type: object
    ProblemDetails:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        extensions:
          additionalProperties:
            additionalProperties: false
            type: object
          nullable: true
          readOnly: true
          type: object
      type: object
    UserSerialDto:
      additionalProperties: false
      example:
        serialNumber: serialNumber
        username: username
      properties:
        username:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        serialNumber:
          maxLength: 8
          minLength: 0
          nullable: true
          type: string
      required:
      - serialNumber
      - username
      type: object
    CreateBodyDto:
      additionalProperties: false
      example:
        content: content
      properties:
        content:
          nullable: true
          type: string
      type: object
    RelatedRecordsDto:
      additionalProperties: false
      example:
        meetingIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        noteIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        noteIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        meetingIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    CreateCustomFieldValueDto:
      additionalProperties: false
      description: "Set a value or values for a custom field identified by the field\
        \ 'Code'. Only one of the fields (IntegerValue / TextValue / FilePathValue\
        \ etc) will be used,\r\ndepending on the data type of the custom field corresponding\
        \ to the 'Code' provided"
      example:
        dateValue: dateValue
        code: code
        textValue: textValue
        contactLookupValues:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        optionValue: optionValue
        numericValue: 6.027456183070403
        integerValue: 0
        extendedTextValue: extendedTextValue
        filePathValue: filePathValue
        optionValues:
        - optionValues
        - optionValues
      properties:
        code:
          nullable: true
          type: string
        integerValue:
          format: int32
          nullable: true
          type: integer
        textValue:
          nullable: true
          type: string
        filePathValue:
          nullable: true
          type: string
        numericValue:
          format: double
          nullable: true
          type: number
        dateValue:
          nullable: true
          type: string
        extendedTextValue:
          nullable: true
          type: string
        contactLookupValues:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        optionValue:
          nullable: true
          type: string
        optionValues:
          items:
            type: string
          nullable: true
          type: array
      required:
      - code
      type: object
    CreateNoteDto:
      additionalProperties: false
      example:
        date: date
        identifier: identifier
        author:
          serialNumber: serialNumber
          username: username
        link: link
        relatedSymbols:
        - relatedSymbols
        - relatedSymbols
        recommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source: source
        isPersonal: true
        title: title
        body:
          content: content
        subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        relatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customFieldValues:
        - dateValue: dateValue
          code: code
          textValue: textValue
          contactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          optionValue: optionValue
          numericValue: 6.027456183070403
          integerValue: 0
          extendedTextValue: extendedTextValue
          filePathValue: filePathValue
          optionValues:
          - optionValues
          - optionValues
        - dateValue: dateValue
          code: code
          textValue: textValue
          contactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          optionValue: optionValue
          numericValue: 6.027456183070403
          integerValue: 0
          extendedTextValue: extendedTextValue
          filePathValue: filePathValue
          optionValues:
          - optionValues
          - optionValues
        relatedRecords:
          meetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          noteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        author:
          $ref: '#/components/schemas/UserSerialDto'
        title:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        date:
          nullable: true
          type: string
        subjectId:
          format: uuid
          nullable: true
          type: string
        recommendationId:
          format: uuid
          nullable: true
          type: string
        sentimentId:
          format: uuid
          nullable: true
          type: string
        body:
          $ref: '#/components/schemas/CreateBodyDto'
        source:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        relatedSymbols:
          items:
            type: string
          maxLength: 100
          nullable: true
          type: array
        relatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        relatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        customFieldValues:
          items:
            $ref: '#/components/schemas/CreateCustomFieldValueDto'
          nullable: true
          type: array
        isPersonal:
          nullable: true
          type: boolean
      required:
      - author
      - date
      - identifier
      type: object
    NewItemDto:
      additionalProperties: false
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      type: object
    NoteDto:
      additionalProperties: false
      example:
        date: date
        approvalStatus: approvalStatus
        identifier: identifier
        customFields:
        - code: code
          options:
          - options
          - options
          contactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        - code: code
          options:
          - options
          - options
          contactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        link: link
        relatedSymbols:
        - relatedSymbols
        - relatedSymbols
        recommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source: source
        isPersonal: true
        authorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        body: body
        subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdAt: createdAt
        relatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        averageRating: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        relatedRecords:
          meetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          noteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        date:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        authorId:
          format: uuid
          type: string
        title:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        relatedSymbols:
          items:
            type: string
          nullable: true
          type: array
        subjectId:
          format: uuid
          type: string
        recommendationId:
          format: uuid
          nullable: true
          type: string
        sentimentId:
          format: uuid
          nullable: true
          type: string
        source:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
        isPersonal:
          type: boolean
        approvalStatus:
          nullable: true
          type: string
        averageRating:
          format: int32
          nullable: true
          type: integer
        relatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        relatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
          nullable: true
          type: array
      type: object
    UpdateNoteDto:
      additionalProperties: false
      example:
        relatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customFieldValues:
        - dateValue: dateValue
          code: code
          textValue: textValue
          contactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          optionValue: optionValue
          numericValue: 6.027456183070403
          integerValue: 0
          extendedTextValue: extendedTextValue
          filePathValue: filePathValue
          optionValues:
          - optionValues
          - optionValues
        - dateValue: dateValue
          code: code
          textValue: textValue
          contactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          optionValue: optionValue
          numericValue: 6.027456183070403
          integerValue: 0
          extendedTextValue: extendedTextValue
          filePathValue: filePathValue
          optionValues:
          - optionValues
          - optionValues
        author:
          serialNumber: serialNumber
          username: username
        link: link
        relatedSymbols:
        - relatedSymbols
        - relatedSymbols
        recommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source: source
        isPersonal: true
        title: title
        body:
          content: content
        relatedRecords:
          meetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          noteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        author:
          $ref: '#/components/schemas/UserSerialDto'
        title:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        recommendationId:
          format: uuid
          nullable: true
          type: string
        sentimentId:
          format: uuid
          nullable: true
          type: string
        body:
          $ref: '#/components/schemas/CreateBodyDto'
        source:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        relatedSymbols:
          items:
            type: string
          maxLength: 100
          nullable: true
          type: array
        relatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        relatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        customFieldValues:
          items:
            $ref: '#/components/schemas/CreateCustomFieldValueDto'
          nullable: true
          type: array
        isPersonal:
          nullable: true
          type: boolean
      type: object
    AttachmentSummaryDto:
      additionalProperties: false
      example:
        fileName: fileName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mimeType: mimeType
      properties:
        id:
          format: uuid
          type: string
        fileName:
          nullable: true
          type: string
        mimeType:
          nullable: true
          type: string
      type: object
    RecordEventSummaryDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        id:
          format: uuid
          type: string
        type:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
      type: object
    RecordChangeDto:
      additionalProperties: false
      example:
        newValue: newValue
        oldList:
        - oldList
        - oldList
        field: field
        newList:
        - newList
        - newList
        oldValue: oldValue
        operation: operation
      properties:
        field:
          nullable: true
          type: string
        operation:
          nullable: true
          type: string
        oldValue:
          nullable: true
          type: string
        newValue:
          nullable: true
          type: string
        oldList:
          items:
            type: string
          nullable: true
          type: array
        newList:
          items:
            type: string
          nullable: true
          type: array
      type: object
    NoteEventDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        changeList:
        - newValue: newValue
          oldList:
          - oldList
          - oldList
          field: field
          newList:
          - newList
          - newList
          oldValue: oldValue
          operation: operation
        - newValue: newValue
          oldList:
          - oldList
          - oldList
          field: field
          newList:
          - newList
          - newList
          oldValue: oldValue
          operation: operation
        comment: comment
        type: type
        user: user
      properties:
        createdAt:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        user:
          nullable: true
          type: string
        comment:
          nullable: true
          type: string
        changeList:
          items:
            $ref: '#/components/schemas/RecordChangeDto'
          nullable: true
          type: array
      type: object
    SubcommentSummaryDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        createdAt:
          nullable: true
          type: string
      type: object
    CommentDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        attachments:
        - fileName: fileName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mimeType: mimeType
        - fileName: fileName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mimeType: mimeType
        subcomments:
        - createdAt: createdAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: createdAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parentCommentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        body: body
      properties:
        id:
          format: uuid
          type: string
        authorId:
          format: uuid
          type: string
        parentCommentId:
          format: uuid
          nullable: true
          type: string
        body:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/AttachmentSummaryDto'
          nullable: true
          type: array
        subcomments:
          items:
            $ref: '#/components/schemas/SubcommentSummaryDto'
          nullable: true
          type: array
      type: object
    Operation:
      additionalProperties: false
      example:
        path: path
        op: op
        from: from
        value: '{}'
      properties:
        value:
          additionalProperties: false
          nullable: true
          type: object
        path:
          nullable: true
          type: string
        op:
          nullable: true
          type: string
        from:
          nullable: true
          type: string
      type: object
    CommentSummaryDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        subcomments:
        - createdAt: createdAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: createdAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        createdAt:
          nullable: true
          type: string
        subcomments:
          items:
            $ref: '#/components/schemas/SubcommentSummaryDto'
          nullable: true
          type: array
      type: object
    CreateCommentDto:
      additionalProperties: false
      example:
        parentCommentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        body: body
      properties:
        authorId:
          format: uuid
          type: string
        parentCommentId:
          format: uuid
          nullable: true
          type: string
        body:
          nullable: true
          type: string
      type: object
    ResolvedInstrumentDto:
      additionalProperties: false
      example:
        ticker: ticker
        cusip: cusip
        name: name
        entityId: entityId
        sedol: sedol
        isin: isin
      properties:
        name:
          nullable: true
          type: string
        entityId:
          nullable: true
          type: string
        ticker:
          nullable: true
          type: string
        sedol:
          nullable: true
          type: string
        cusip:
          nullable: true
          type: string
        isin:
          nullable: true
          type: string
      type: object
    IdentifierResolutionDto:
      additionalProperties: false
      example:
        instrumentMetadata:
          ticker: ticker
          cusip: cusip
          name: name
          entityId: entityId
          sedol: sedol
          isin: isin
        query: query
      properties:
        instrumentMetadata:
          $ref: '#/components/schemas/ResolvedInstrumentDto'
        query:
          nullable: true
          type: string
      type: object
    inline_object:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    inline_object_1:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

