openapi: 3.0.1
info:
  description: Allows users to extract, create, update and configure IRN data.
  title: IRN API v1
  version: "1"
servers:
- description: Production Server
  url: https://api.factset.com/research/irn
- description: Sandbox
  url: https://api-sandbox.factset.com/research/irn
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- name: Attachments
- name: Comments
- name: Events
- name: Identifiers
- name: Notes
paths:
  /v1/events:
    get:
      operationId: GetAllEvents
      parameters:
      - description: StartDate
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          type: string
        style: form
      - description: EndDate
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - description: Set of event types to filter on
        explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/EventSnippetDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventSnippetDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventSnippetDto'
                type: array
          description: Success - Returns events list
        "400":
          description: Bad Request - Returns error message
      summary: Get all the record events in the specified date range filtered on the
        given types
      tags:
      - Events
      x-accepts: application/json
  /v1/identifiers:
    get:
      operationId: GetIdentifiers
      parameters:
      - description: Identifiers
        explode: true
        in: query
        name: identifiers
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentifierResolutionDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get all the identifier details for given identifiers
      tags:
      - Identifiers
      x-accepts: application/json
  /v1/notes:
    get:
      operationId: GetNotes
      parameters:
      - description: StartDate
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: EndDate
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: Set of identifiers to filter on
        explode: true
        in: query
        name: identifiers
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Set of authors to filter on
        explode: true
        in: query
        name: authors
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of subjects to filter on
        explode: true
        in: query
        name: subjects
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of recommendations to filter on
        explode: true
        in: query
        name: recommendations
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Set of sentiments to filter on
        explode: true
        in: query
        name: sentiments
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Limit on the number of notes retrieved
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Fetch notes after the offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return notes which have been modified or created since a
          particular time
        explode: true
        in: query
        name: modifiedSince
        required: false
        schema:
          type: string
        style: form
      - description: Set of states to filter on
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include notes whose related symbols match the identifier filter
        explode: true
        in: query
        name: filterOnRelatedSymbols
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: header
        name: X-IRN-Include-Deleted
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NoteSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get all the notes in the specified date range filtered on the given
        identifiers
      tags:
      - Notes
      x-accepts: application/json
    post:
      operationId: CreateNote
      parameters:
      - explode: false
        in: header
        name: X-IRN-Contributor-Username
        required: false
        schema:
          maxLength: 30
          minLength: 0
          type: string
        style: simple
      - explode: false
        in: header
        name: X-IRN-Contributor-Serial
        required: false
        schema:
          maxLength: 8
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Success - Returns unique identifier of the note created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a note
      tags:
      - Notes
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}:
    delete:
      operationId: DeleteNote
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a Note
      tags:
      - Notes
      x-accepts: application/json
    get:
      operationId: GetNote
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get details of a note
      tags:
      - Notes
      x-accepts: application/json
    put:
      operationId: UpdateNote
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
        description: Note details to update
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Update a note
      tags:
      - Notes
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/attachments:
    get:
      operationId: GetAttachments
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentSummaryDto'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get all the attachments belonging to a note
      tags:
      - Attachments
      x-accepts: application/json
    post:
      operationId: CreateAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create an attachment for an existing note
      tags:
      - Attachments
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v1/notes/{noteId}/attachments/{attachmentId}/download:
    get:
      operationId: DownloadAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Download an attachment from a Note
      tags:
      - Attachments
      x-accepts: application/json
  /v1/notes/{noteId}/comments:
    get:
      operationId: GetComments
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommentSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get all comments for a note
      tags:
      - Comments
      x-accepts: application/json
    post:
      operationId: CreateComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Create a comment to a Note
      tags:
      - Comments
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}:
    delete:
      operationId: DeleteComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Delete a Comment from a Note
      tags:
      - Comments
      x-accepts: application/json
    get:
      operationId: GetComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get details of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
    patch:
      operationId: PatchComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Edit a comment for a note
      tags:
      - Comments
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}/attachments:
    get:
      operationId: GetCommentAttachments
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentSummaryDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get attachments summary of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
    post:
      operationId: CreateCommentAttachment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Create a comment attachment to a Note
      tags:
      - Comments
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v1/notes/{noteId}/comments/{commentId}/attachments/{attachmentId}/download:
    get:
      operationId: DownloadCommentAttachmentForComment
      parameters:
      - explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Download single attachment detail of a comment belonging to a note
      tags:
      - Comments
      x-accepts: application/json
  /v1/notes/{noteId}/events:
    get:
      operationId: GetEvents
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RecordEventSummaryDto'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get all the record events that belong to a note
      tags:
      - Events
      x-accepts: application/json
  /v1/notes/{noteId}/events/{recordEventId}:
    get:
      operationId: GetRecordEvent
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Record Event Id
        explode: false
        in: path
        name: recordEventId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteEventDto'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get details of a record event of a note
      tags:
      - Events
      x-accepts: application/json
  /v1/notes/{noteId}/attachments/{attachmentId}:
    delete:
      operationId: SoftDeleteNoteAttachment
      parameters:
      - description: Note Id
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Attachment Id
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Delete attachment from note
      tags:
      - Attachments
      x-accepts: application/json
components:
  requestBodies:
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    AttachmentSummaryDto:
      additionalProperties: false
      example:
        Size: 0
        FileName: FileName
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MimeType: MimeType
      properties:
        Id:
          format: uuid
          type: string
        FileName:
          nullable: true
          type: string
        MimeType:
          nullable: true
          type: string
        Size:
          format: int64
          nullable: true
          type: integer
      type: object
    CommentDto:
      additionalProperties: false
      example:
        AuthorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Subcomments:
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CreatedAt: CreatedAt
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CreatedAt: CreatedAt
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CreatedAt: CreatedAt
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ParentCommentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Body: Body
        Attachments:
        - Size: 0
          FileName: FileName
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MimeType: MimeType
        - Size: 0
          FileName: FileName
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MimeType: MimeType
      properties:
        Id:
          format: uuid
          type: string
        AuthorId:
          format: uuid
          type: string
        ParentCommentId:
          format: uuid
          nullable: true
          type: string
        Body:
          nullable: true
          type: string
        CreatedAt:
          nullable: true
          type: string
        Attachments:
          items:
            $ref: '#/components/schemas/AttachmentSummaryDto'
          nullable: true
          type: array
        Subcomments:
          items:
            $ref: '#/components/schemas/SubcommentSummaryDto'
          nullable: true
          type: array
      type: object
    CommentSummaryDto:
      additionalProperties: false
      example:
        Subcomments:
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CreatedAt: CreatedAt
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CreatedAt: CreatedAt
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CreatedAt: CreatedAt
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        UserId:
          format: uuid
          type: string
        CreatedAt:
          nullable: true
          type: string
        Subcomments:
          items:
            $ref: '#/components/schemas/SubcommentSummaryDto'
          nullable: true
          type: array
      type: object
    CreateBodyDto:
      additionalProperties: false
      example:
        Content: Content
      properties:
        Content:
          nullable: true
          type: string
      type: object
    CreateCommentDto:
      additionalProperties: false
      example:
        AuthorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ParentCommentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Body: Body
      properties:
        AuthorId:
          format: uuid
          type: string
        ParentCommentId:
          format: uuid
          nullable: true
          type: string
        Body:
          nullable: true
          type: string
      type: object
    CreateCustomFieldValueDto:
      additionalProperties: false
      description: "Set a value or values for a custom field identified by the field\
        \ 'Code'. Only one of the fields (IntegerValue / TextValue / FilePathValue\
        \ etc) will be used,\r\ndepending on the data type of the custom field corresponding\
        \ to the 'Code' provided"
      example:
        ContactLookupValues:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        OptionValues:
        - OptionValues
        - OptionValues
        TextValue: TextValue
        DateValue: DateValue
        IntegerValue: 0
        OptionValue: OptionValue
        NumericValue: 6.027456183070403
        Code: Code
        FilePathValue: FilePathValue
        ExtendedTextValue: ExtendedTextValue
      properties:
        Code:
          type: string
        IntegerValue:
          format: int32
          nullable: true
          type: integer
        TextValue:
          nullable: true
          type: string
        FilePathValue:
          nullable: true
          type: string
        NumericValue:
          format: double
          nullable: true
          type: number
        DateValue:
          nullable: true
          type: string
        ExtendedTextValue:
          nullable: true
          type: string
        ContactLookupValues:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        OptionValue:
          nullable: true
          type: string
        OptionValues:
          items:
            type: string
          nullable: true
          type: array
      required:
      - Code
      type: object
    CreateNoteDto:
      additionalProperties: false
      example:
        RelatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        RelatedRecords:
          MeetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NoteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CustomFieldValues:
        - ContactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          OptionValues:
          - OptionValues
          - OptionValues
          TextValue: TextValue
          DateValue: DateValue
          IntegerValue: 0
          OptionValue: OptionValue
          NumericValue: 6.027456183070403
          Code: Code
          FilePathValue: FilePathValue
          ExtendedTextValue: ExtendedTextValue
        - ContactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          OptionValues:
          - OptionValues
          - OptionValues
          TextValue: TextValue
          DateValue: DateValue
          IntegerValue: 0
          OptionValue: OptionValue
          NumericValue: 6.027456183070403
          Code: Code
          FilePathValue: FilePathValue
          ExtendedTextValue: ExtendedTextValue
        Title: Title
        SentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Date: Date
        Source: Source
        RelatedSymbols:
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        Identifier: Identifier
        RecommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Author:
          SerialNumber: SerialNumber
          Username: Username
        IsPersonal: false
        SubjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Body:
          Content: Content
        Link: Link
      properties:
        Author:
          $ref: '#/components/schemas/UserSerialDto'
        Title:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        Identifier:
          nullable: true
          type: string
        Date:
          type: string
        SubjectId:
          format: uuid
          nullable: true
          type: string
        RecommendationId:
          format: uuid
          nullable: true
          type: string
        SentimentId:
          format: uuid
          nullable: true
          type: string
        Body:
          $ref: '#/components/schemas/CreateBodyDto'
        Source:
          nullable: true
          type: string
        Link:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        RelatedSymbols:
          items:
            type: string
          maxItems: 100
          nullable: true
          type: array
        RelatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        RelatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        CustomFieldValues:
          items:
            $ref: '#/components/schemas/CreateCustomFieldValueDto'
          nullable: true
          type: array
        IsPersonal:
          default: false
          type: boolean
      required:
      - Author
      - Date
      type: object
    CustomFieldValueDto:
      additionalProperties: false
      example:
        Options:
        - Options
        - Options
        Value: Value
        Code: Code
        ContactValues:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Code:
          nullable: true
          type: string
        Value:
          nullable: true
          type: string
        Options:
          items:
            type: string
          nullable: true
          type: array
        ContactValues:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    EventSnippetDto:
      additionalProperties: false
      example:
        NoteId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Type: Type
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        MeetingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        Type:
          nullable: true
          type: string
        NoteId:
          format: uuid
          nullable: true
          type: string
        MeetingId:
          format: uuid
          nullable: true
          type: string
        CreatedAt:
          format: date-time
          type: string
      type: object
    IdentifierResolutionDto:
      additionalProperties: false
      type: object
    NewItemDto:
      additionalProperties: false
      example:
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
      type: object
    NoteDto:
      additionalProperties: false
      example:
        RelatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AuthorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ContributorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        RelatedRecords:
          MeetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NoteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CreatedAt: CreatedAt
        Title: Title
        SentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Date: Date
        Source: Source
        ApprovalStatus: ApprovalStatus
        RelatedSymbols:
        - RelatedSymbols
        - RelatedSymbols
        CustomFields:
        - Options:
          - Options
          - Options
          Value: Value
          Code: Code
          ContactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - Options:
          - Options
          - Options
          Value: Value
          Code: Code
          ContactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Identifier: Identifier
        State: State
        AverageRating: 0
        RecommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsPersonal: true
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SubjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Body: Body
        Link: Link
      properties:
        Id:
          format: uuid
          type: string
        Date:
          nullable: true
          type: string
        CreatedAt:
          nullable: true
          type: string
        AuthorId:
          format: uuid
          type: string
        ContributorId:
          format: uuid
          type: string
        Title:
          nullable: true
          type: string
        Identifier:
          nullable: true
          type: string
        RelatedSymbols:
          items:
            type: string
          nullable: true
          type: array
        SubjectId:
          format: uuid
          type: string
        RecommendationId:
          format: uuid
          nullable: true
          type: string
        SentimentId:
          format: uuid
          nullable: true
          type: string
        Source:
          nullable: true
          type: string
        Link:
          nullable: true
          type: string
        Body:
          nullable: true
          type: string
        IsPersonal:
          type: boolean
        State:
          nullable: true
          type: string
        ApprovalStatus:
          nullable: true
          type: string
        AverageRating:
          format: int32
          nullable: true
          type: integer
        RelatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        RelatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        CustomFields:
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
          nullable: true
          type: array
      type: object
    NoteEventDto:
      additionalProperties: false
      example:
        Comment: Comment
        Type: Type
        User: User
        ChangeList:
        - Field: Field
          OldValue: OldValue
          OldList:
          - OldList
          - OldList
          NewValue: NewValue
          Operation: Operation
          NewList:
          - NewList
          - NewList
        - Field: Field
          OldValue: OldValue
          OldList:
          - OldList
          - OldList
          NewValue: NewValue
          Operation: Operation
          NewList:
          - NewList
          - NewList
        CreatedAt: CreatedAt
      properties:
        CreatedAt:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        User:
          nullable: true
          type: string
        Comment:
          nullable: true
          type: string
        ChangeList:
          items:
            $ref: '#/components/schemas/RecordChangeDto'
          nullable: true
          type: array
      type: object
    NoteSummaryDto:
      additionalProperties: false
      example:
        AuthorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ContributorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CreatedAt: CreatedAt
        Title: Title
        SentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Date: Date
        ApprovalStatus: ApprovalStatus
        RelatedSymbols:
        - RelatedSymbols
        - RelatedSymbols
        CustomFields:
        - Options:
          - Options
          - Options
          Value: Value
          Code: Code
          ContactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - Options:
          - Options
          - Options
          Value: Value
          Code: Code
          ContactValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Identifier: Identifier
        State: State
        RecommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsPersonal: true
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AttachmentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SubjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        Date:
          nullable: true
          type: string
        CreatedAt:
          nullable: true
          type: string
        AuthorId:
          format: uuid
          type: string
        ContributorId:
          format: uuid
          type: string
        Title:
          nullable: true
          type: string
        Identifier:
          nullable: true
          type: string
        SubjectId:
          format: uuid
          type: string
        IsPersonal:
          type: boolean
        State:
          nullable: true
          type: string
        ApprovalStatus:
          nullable: true
          type: string
        AttachmentIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        RelatedSymbols:
          items:
            type: string
          nullable: true
          type: array
        RecommendationId:
          format: uuid
          type: string
        SentimentId:
          format: uuid
          type: string
        CustomFields:
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
          nullable: true
          type: array
      type: object
    Operation:
      additionalProperties: false
      example:
        path: path
        op: op
        from: from
        value: ""
      properties:
        OperationType:
          $ref: '#/components/schemas/OperationType'
        path:
          nullable: true
          type: string
        op:
          nullable: true
          type: string
        from:
          nullable: true
          type: string
        value:
          nullable: true
      type: object
    OperationType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    ProblemDetails:
      additionalProperties: {}
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    RecordChangeDto:
      additionalProperties: false
      example:
        Field: Field
        OldValue: OldValue
        OldList:
        - OldList
        - OldList
        NewValue: NewValue
        Operation: Operation
        NewList:
        - NewList
        - NewList
      properties:
        Field:
          nullable: true
          type: string
        Operation:
          nullable: true
          type: string
        OldValue:
          nullable: true
          type: string
        NewValue:
          nullable: true
          type: string
        OldList:
          items:
            type: string
          nullable: true
          type: array
        NewList:
          items:
            type: string
          nullable: true
          type: array
      type: object
    RecordEventSummaryDto:
      additionalProperties: false
      example:
        Type: Type
        CreatedAt: CreatedAt
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        Type:
          nullable: true
          type: string
        CreatedAt:
          nullable: true
          type: string
      type: object
    RelatedRecordsDto:
      additionalProperties: false
      example:
        MeetingIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NoteIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        NoteIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        MeetingIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    SubcommentSummaryDto:
      additionalProperties: false
      example:
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CreatedAt: CreatedAt
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        UserId:
          format: uuid
          type: string
        CreatedAt:
          nullable: true
          type: string
      type: object
    UpdateNoteDto:
      additionalProperties: false
      example:
        RelatedContacts:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        RelatedRecords:
          MeetingIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NoteIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CustomFieldValues:
        - ContactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          OptionValues:
          - OptionValues
          - OptionValues
          TextValue: TextValue
          DateValue: DateValue
          IntegerValue: 0
          OptionValue: OptionValue
          NumericValue: 6.027456183070403
          Code: Code
          FilePathValue: FilePathValue
          ExtendedTextValue: ExtendedTextValue
        - ContactLookupValues:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          OptionValues:
          - OptionValues
          - OptionValues
          TextValue: TextValue
          DateValue: DateValue
          IntegerValue: 0
          OptionValue: OptionValue
          NumericValue: 6.027456183070403
          Code: Code
          FilePathValue: FilePathValue
          ExtendedTextValue: ExtendedTextValue
        Title: Title
        SentimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Source: Source
        RelatedSymbols:
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        - RelatedSymbols
        NoteDate: NoteDate
        Identifier: Identifier
        RecommendationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Author:
          SerialNumber: SerialNumber
          Username: Username
        IsPersonal: true
        SubjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Body:
          Content: Content
        Link: Link
      properties:
        Author:
          $ref: '#/components/schemas/UserSerialDto'
        Title:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        SubjectId:
          format: uuid
          type: string
        NoteDate:
          nullable: true
          type: string
        RecommendationId:
          format: uuid
          nullable: true
          type: string
        SentimentId:
          format: uuid
          nullable: true
          type: string
        Body:
          $ref: '#/components/schemas/CreateBodyDto'
        Source:
          nullable: true
          type: string
        Link:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        RelatedSymbols:
          items:
            type: string
          maxItems: 100
          nullable: true
          type: array
        RelatedContacts:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        RelatedRecords:
          $ref: '#/components/schemas/RelatedRecordsDto'
        CustomFieldValues:
          items:
            $ref: '#/components/schemas/CreateCustomFieldValueDto'
          nullable: true
          type: array
        IsPersonal:
          nullable: true
          type: boolean
        Identifier:
          nullable: true
          type: string
      type: object
    UserSerialDto:
      additionalProperties: false
      example:
        SerialNumber: SerialNumber
        Username: Username
      properties:
        Username:
          maxLength: 30
          minLength: 0
          type: string
        SerialNumber:
          maxLength: 8
          minLength: 0
          type: string
      required:
      - SerialNumber
      - Username
      type: object
    inline_object:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    inline_object_1:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

