/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNNotes.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNNotes.models.ResolvedInstrumentDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNNotes.JSON;


/**
 * IdentifierResolutionDto
 */
@JsonPropertyOrder({
  IdentifierResolutionDto.JSON_PROPERTY_INSTRUMENT_METADATA,
  IdentifierResolutionDto.JSON_PROPERTY_QUERY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IdentifierResolutionDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INSTRUMENT_METADATA = "instrumentMetadata";
  private ResolvedInstrumentDto instrumentMetadata;

  public static final String JSON_PROPERTY_QUERY = "query";
  private JsonNullable<String> query = JsonNullable.<String>undefined();


  public IdentifierResolutionDto instrumentMetadata(ResolvedInstrumentDto instrumentMetadata) {
    this.instrumentMetadata = instrumentMetadata;
    return this;
  }

   /**
   * Get instrumentMetadata
   * @return instrumentMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResolvedInstrumentDto getInstrumentMetadata() {
    return instrumentMetadata;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrumentMetadata(ResolvedInstrumentDto instrumentMetadata) {
    this.instrumentMetadata = instrumentMetadata;
  }


  public IdentifierResolutionDto query(String query) {
    this.query = JsonNullable.<String>of(query);
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getQuery() {
        return query.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQuery_JsonNullable() {
    return query;
  }
  
  @JsonProperty(JSON_PROPERTY_QUERY)
  public void setQuery_JsonNullable(JsonNullable<String> query) {
    this.query = query;
  }

  public void setQuery(String query) {
    this.query = JsonNullable.<String>of(query);
  }


  /**
   * Return true if this IdentifierResolutionDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentifierResolutionDto identifierResolutionDto = (IdentifierResolutionDto) o;
    return Objects.equals(this.instrumentMetadata, identifierResolutionDto.instrumentMetadata) &&
        equalsNullable(this.query, identifierResolutionDto.query);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(instrumentMetadata, hashCodeNullable(query));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentifierResolutionDto {\n");
    sb.append("    instrumentMetadata: ").append(toIndentedString(instrumentMetadata)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

