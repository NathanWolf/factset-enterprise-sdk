/*
 * TickHistory
 * TickHistory provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTickHistory.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTickHistory.JSON;


/**
 * GetFilesErrorDetail
 */
@JsonPropertyOrder({
  GetFilesErrorDetail.JSON_PROPERTY_NOT_AUTHORIZED_TICKERS,
  GetFilesErrorDetail.JSON_PROPERTY_PAGINATION_LIMIT,
  GetFilesErrorDetail.JSON_PROPERTY_PAGINATION_OFFSET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetFilesErrorDetail implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NOT_AUTHORIZED_TICKERS = "not_authorized_tickers";
  private java.util.List<String> notAuthorizedTickers = null;

  public static final String JSON_PROPERTY_PAGINATION_LIMIT = "_paginationLimit";
  private java.util.List<String> paginationLimit = null;

  public static final String JSON_PROPERTY_PAGINATION_OFFSET = "_paginationOffset";
  private java.util.List<String> paginationOffset = null;

  public GetFilesErrorDetail() { 
  }

  public GetFilesErrorDetail notAuthorizedTickers(java.util.List<String> notAuthorizedTickers) {
    this.notAuthorizedTickers = notAuthorizedTickers;
    return this;
  }

  public GetFilesErrorDetail addNotAuthorizedTickersItem(String notAuthorizedTickersItem) {
    if (this.notAuthorizedTickers == null) {
      this.notAuthorizedTickers = new java.util.ArrayList<>();
    }
    this.notAuthorizedTickers.add(notAuthorizedTickersItem);
    return this;
  }

   /**
   * query with partial tickers, products or exchanges not subscribed to
   * @return notAuthorizedTickers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "query with partial tickers, products or exchanges not subscribed to")
  @JsonProperty(JSON_PROPERTY_NOT_AUTHORIZED_TICKERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getNotAuthorizedTickers() {
    return notAuthorizedTickers;
  }


  @JsonProperty(JSON_PROPERTY_NOT_AUTHORIZED_TICKERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotAuthorizedTickers(java.util.List<String> notAuthorizedTickers) {
    this.notAuthorizedTickers = notAuthorizedTickers;
  }


  public GetFilesErrorDetail paginationLimit(java.util.List<String> paginationLimit) {
    this.paginationLimit = paginationLimit;
    return this;
  }

  public GetFilesErrorDetail addPaginationLimitItem(String paginationLimitItem) {
    if (this.paginationLimit == null) {
      this.paginationLimit = new java.util.ArrayList<>();
    }
    this.paginationLimit.add(paginationLimitItem);
    return this;
  }

   /**
   * _paginationLimit must be &lt;&#x3D;500
   * @return paginationLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "_paginationLimit must be <=500")
  @JsonProperty(JSON_PROPERTY_PAGINATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getPaginationLimit() {
    return paginationLimit;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaginationLimit(java.util.List<String> paginationLimit) {
    this.paginationLimit = paginationLimit;
  }


  public GetFilesErrorDetail paginationOffset(java.util.List<String> paginationOffset) {
    this.paginationOffset = paginationOffset;
    return this;
  }

  public GetFilesErrorDetail addPaginationOffsetItem(String paginationOffsetItem) {
    if (this.paginationOffset == null) {
      this.paginationOffset = new java.util.ArrayList<>();
    }
    this.paginationOffset.add(paginationOffsetItem);
    return this;
  }

   /**
   * _paginationoffset must be an integer
   * @return paginationOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "_paginationoffset must be an integer")
  @JsonProperty(JSON_PROPERTY_PAGINATION_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getPaginationOffset() {
    return paginationOffset;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaginationOffset(java.util.List<String> paginationOffset) {
    this.paginationOffset = paginationOffset;
  }


  /**
   * Return true if this Get-FilesErrorDetail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFilesErrorDetail getFilesErrorDetail = (GetFilesErrorDetail) o;
    return Objects.equals(this.notAuthorizedTickers, getFilesErrorDetail.notAuthorizedTickers) &&
        Objects.equals(this.paginationLimit, getFilesErrorDetail.paginationLimit) &&
        Objects.equals(this.paginationOffset, getFilesErrorDetail.paginationOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notAuthorizedTickers, paginationLimit, paginationOffset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFilesErrorDetail {\n");
    sb.append("    notAuthorizedTickers: ").append(toIndentedString(notAuthorizedTickers)).append("\n");
    sb.append("    paginationLimit: ").append(toIndentedString(paginationLimit)).append("\n");
    sb.append("    paginationOffset: ").append(toIndentedString(paginationOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

