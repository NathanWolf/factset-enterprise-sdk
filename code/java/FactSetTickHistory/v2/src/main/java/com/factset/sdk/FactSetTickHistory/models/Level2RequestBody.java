/*
 * Tick History
 * Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTickHistory.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetTickHistory.models.DateRangeOne;
import com.factset.sdk.FactSetTickHistory.models.ResponseFileType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTickHistory.JSON;


/**
 * Level2 request body elements
 */
@ApiModel(description = "Level2 request body elements")
@JsonPropertyOrder({
  Level2RequestBody.JSON_PROPERTY_TICKERS,
  Level2RequestBody.JSON_PROPERTY_MIC,
  Level2RequestBody.JSON_PROPERTY_DATE_RANGE,
  Level2RequestBody.JSON_PROPERTY_RESPONSE_FILE_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Level2RequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TICKERS = "tickers";
  private java.util.List<String> tickers = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_MIC = "mic";
  private String mic;

  public static final String JSON_PROPERTY_DATE_RANGE = "dateRange";
  private DateRangeOne dateRange;

  public static final String JSON_PROPERTY_RESPONSE_FILE_TYPE = "responseFileType";
  private ResponseFileType responseFileType = ResponseFileType.PARQUET;

  public Level2RequestBody() { 
  }

  @JsonCreator
  public Level2RequestBody(
    @JsonProperty(value=JSON_PROPERTY_TICKERS, required=true) java.util.List<String> tickers, 
    @JsonProperty(value=JSON_PROPERTY_MIC, required=true) String mic, 
    @JsonProperty(value=JSON_PROPERTY_DATE_RANGE, required=true) DateRangeOne dateRange
  ) {
    this();
    this.tickers = tickers;
    this.mic = mic;
    this.dateRange = dateRange;
  }

  public Level2RequestBody tickers(java.util.List<String> tickers) {
    this.tickers = tickers;
    return this;
  }

  public Level2RequestBody addTickersItem(String tickersItem) {
    this.tickers.add(tickersItem);
    return this;
  }

   /**
   * The requested list of one or more tickers. &lt;p&gt; NOTE: Maximum 500 tickers per request.&lt;/p&gt;.   
   * @return tickers
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"FDS\"]", required = true, value = "The requested list of one or more tickers. <p> NOTE: Maximum 500 tickers per request.</p>.   ")
  @JsonProperty(JSON_PROPERTY_TICKERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getTickers() {
    return tickers;
  }


  @JsonProperty(JSON_PROPERTY_TICKERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTickers(java.util.List<String> tickers) {
    this.tickers = tickers;
  }


  public Level2RequestBody mic(String mic) {
    this.mic = mic;
    return this;
  }

   /**
   * A four-character code used to identify exchanges in which securities are traded. &lt;p&gt;**NOTE**:Does not support multiple mic codes&lt;/p&gt; 
   * @return mic
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "XNYS", required = true, value = "A four-character code used to identify exchanges in which securities are traded. <p>**NOTE**:Does not support multiple mic codes</p> ")
  @JsonProperty(JSON_PROPERTY_MIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMic() {
    return mic;
  }


  @JsonProperty(JSON_PROPERTY_MIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMic(String mic) {
    this.mic = mic;
  }


  public Level2RequestBody dateRange(DateRangeOne dateRange) {
    this.dateRange = dateRange;
    return this;
  }

   /**
   * Get dateRange
   * @return dateRange
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DateRangeOne getDateRange() {
    return dateRange;
  }


  @JsonProperty(JSON_PROPERTY_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateRange(DateRangeOne dateRange) {
    this.dateRange = dateRange;
  }


  public Level2RequestBody responseFileType(ResponseFileType responseFileType) {
    this.responseFileType = responseFileType;
    return this;
  }

   /**
   * Get responseFileType
   * @return responseFileType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESPONSE_FILE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResponseFileType getResponseFileType() {
    return responseFileType;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_FILE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseFileType(ResponseFileType responseFileType) {
    this.responseFileType = responseFileType;
  }


  /**
   * Return true if this level2RequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Level2RequestBody level2RequestBody = (Level2RequestBody) o;
    return Objects.equals(this.tickers, level2RequestBody.tickers) &&
        Objects.equals(this.mic, level2RequestBody.mic) &&
        Objects.equals(this.dateRange, level2RequestBody.dateRange) &&
        Objects.equals(this.responseFileType, level2RequestBody.responseFileType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tickers, mic, dateRange, responseFileType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Level2RequestBody {\n");
    sb.append("    tickers: ").append(toIndentedString(tickers)).append("\n");
    sb.append("    mic: ").append(toIndentedString(mic)).append("\n");
    sb.append("    dateRange: ").append(toIndentedString(dateRange)).append("\n");
    sb.append("    responseFileType: ").append(toIndentedString(responseFileType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

