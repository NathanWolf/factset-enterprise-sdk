/*
 * Tick History
 * Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTickHistory.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetTickHistory.models.Files;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTickHistory.JSON;


/**
 * Returns Tick History Files
 */
@ApiModel(description = "Returns Tick History Files")
@JsonPropertyOrder({
  TickDataLevel2.JSON_PROPERTY_STATUS,
  TickDataLevel2.JSON_PROPERTY_REQUEST_TIMESTAMP,
  TickDataLevel2.JSON_PROPERTY_UPDATE_TIMESTAMP,
  TickDataLevel2.JSON_PROPERTY_LIST_OF_FILES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TickDataLevel2 implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_REQUEST_TIMESTAMP = "requestTimestamp";
  private OffsetDateTime requestTimestamp;

  public static final String JSON_PROPERTY_UPDATE_TIMESTAMP = "updateTimestamp";
  private OffsetDateTime updateTimestamp;

  public static final String JSON_PROPERTY_LIST_OF_FILES = "listOfFiles";
  private java.util.List<Files> listOfFiles = null;

  public TickDataLevel2() { 
  }

  public TickDataLevel2 status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the request
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the request")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public TickDataLevel2 requestTimestamp(OffsetDateTime requestTimestamp) {
    this.requestTimestamp = requestTimestamp;
    return this;
  }

   /**
   * Timestamp of when request was made
   * @return requestTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of when request was made")
  @JsonProperty(JSON_PROPERTY_REQUEST_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRequestTimestamp() {
    return requestTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestTimestamp(OffsetDateTime requestTimestamp) {
    this.requestTimestamp = requestTimestamp;
  }


  public TickDataLevel2 updateTimestamp(OffsetDateTime updateTimestamp) {
    this.updateTimestamp = updateTimestamp;
    return this;
  }

   /**
   * :\&quot;Timestamp when the file was last updated\&quot;
   * @return updateTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = ":\"Timestamp when the file was last updated\"")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTimestamp() {
    return updateTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTimestamp(OffsetDateTime updateTimestamp) {
    this.updateTimestamp = updateTimestamp;
  }


  public TickDataLevel2 listOfFiles(java.util.List<Files> listOfFiles) {
    this.listOfFiles = listOfFiles;
    return this;
  }

  public TickDataLevel2 addListOfFilesItem(Files listOfFilesItem) {
    if (this.listOfFiles == null) {
      this.listOfFiles = new java.util.ArrayList<>();
    }
    this.listOfFiles.add(listOfFilesItem);
    return this;
  }

   /**
   * Data Object
   * @return listOfFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data Object")
  @JsonProperty(JSON_PROPERTY_LIST_OF_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Files> getListOfFiles() {
    return listOfFiles;
  }


  @JsonProperty(JSON_PROPERTY_LIST_OF_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListOfFiles(java.util.List<Files> listOfFiles) {
    this.listOfFiles = listOfFiles;
  }


  /**
   * Return true if this TickDataLevel2 object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TickDataLevel2 tickDataLevel2 = (TickDataLevel2) o;
    return Objects.equals(this.status, tickDataLevel2.status) &&
        Objects.equals(this.requestTimestamp, tickDataLevel2.requestTimestamp) &&
        Objects.equals(this.updateTimestamp, tickDataLevel2.updateTimestamp) &&
        Objects.equals(this.listOfFiles, tickDataLevel2.listOfFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, requestTimestamp, updateTimestamp, listOfFiles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TickDataLevel2 {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    requestTimestamp: ").append(toIndentedString(requestTimestamp)).append("\n");
    sb.append("    updateTimestamp: ").append(toIndentedString(updateTimestamp)).append("\n");
    sb.append("    listOfFiles: ").append(toIndentedString(listOfFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

