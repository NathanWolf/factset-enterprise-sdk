/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20050DataComponents;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * Composite instrument and its components.
 */
@ApiModel(description = "Composite instrument and its components.")
@JsonPropertyOrder({
  InlineResponse20050Data.JSON_PROPERTY_TYPE_COMPOSITE,
  InlineResponse20050Data.JSON_PROPERTY_ACTIVE_MANAGEMENT,
  InlineResponse20050Data.JSON_PROPERTY_MANAGEMENT_FEE,
  InlineResponse20050Data.JSON_PROPERTY_COMPONENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20050Data implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Type of the composite instrument.
   */
  public enum TypeCompositeEnum {
    BASKET("basket"),
    
    ALPHASTRUCTURE("alphaStructure"),
    
    FUTURESSPREAD("futuresSpread"),
    
    FACTORINDEX("factorIndex");

    private String value;

    TypeCompositeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeCompositeEnum fromValue(String value) {
      for (TypeCompositeEnum b : TypeCompositeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE_COMPOSITE = "typeComposite";
  private TypeCompositeEnum typeComposite;

  public static final String JSON_PROPERTY_ACTIVE_MANAGEMENT = "activeManagement";
  private Boolean activeManagement;

  public static final String JSON_PROPERTY_MANAGEMENT_FEE = "managementFee";
  private BigDecimal managementFee;

  public static final String JSON_PROPERTY_COMPONENTS = "components";
  private java.util.List<InlineResponse20050DataComponents> components = null;

  public InlineResponse20050Data() { 
  }

  public InlineResponse20050Data typeComposite(TypeCompositeEnum typeComposite) {
    this.typeComposite = typeComposite;
    return this;
  }

   /**
   * Type of the composite instrument.
   * @return typeComposite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the composite instrument.")
  @JsonProperty(JSON_PROPERTY_TYPE_COMPOSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeCompositeEnum getTypeComposite() {
    return typeComposite;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_COMPOSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeComposite(TypeCompositeEnum typeComposite) {
    this.typeComposite = typeComposite;
  }


  public InlineResponse20050Data activeManagement(Boolean activeManagement) {
    this.activeManagement = activeManagement;
    return this;
  }

   /**
   * If set to true, the composite instrument is actively managed.
   * @return activeManagement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to true, the composite instrument is actively managed.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveManagement() {
    return activeManagement;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveManagement(Boolean activeManagement) {
    this.activeManagement = activeManagement;
  }


  public InlineResponse20050Data managementFee(BigDecimal managementFee) {
    this.managementFee = managementFee;
    return this;
  }

   /**
   * Management fee p.a. of the composite instrument.
   * @return managementFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Management fee p.a. of the composite instrument.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getManagementFee() {
    return managementFee;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementFee(BigDecimal managementFee) {
    this.managementFee = managementFee;
  }


  public InlineResponse20050Data components(java.util.List<InlineResponse20050DataComponents> components) {
    this.components = components;
    return this;
  }

  public InlineResponse20050Data addComponentsItem(InlineResponse20050DataComponents componentsItem) {
    if (this.components == null) {
      this.components = new java.util.ArrayList<>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Information regarding the components of the composite instrument.
   * @return components
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information regarding the components of the composite instrument.")
  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse20050DataComponents> getComponents() {
    return components;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponents(java.util.List<InlineResponse20050DataComponents> components) {
    this.components = components;
  }


  /**
   * Return true if this inline_response_200_50_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20050Data inlineResponse20050Data = (InlineResponse20050Data) o;
    return Objects.equals(this.typeComposite, inlineResponse20050Data.typeComposite) &&
        Objects.equals(this.activeManagement, inlineResponse20050Data.activeManagement) &&
        Objects.equals(this.managementFee, inlineResponse20050Data.managementFee) &&
        Objects.equals(this.components, inlineResponse20050Data.components);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeComposite, activeManagement, managementFee, components);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20050Data {\n");
    sb.append("    typeComposite: ").append(toIndentedString(typeComposite)).append("\n");
    sb.append("    activeManagement: ").append(toIndentedString(activeManagement)).append("\n");
    sb.append("    managementFee: ").append(toIndentedString(managementFee)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

