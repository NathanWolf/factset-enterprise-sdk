/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExAnte;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPost;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * MiFID cost is the disclosure of information on costs and charges related to an investment product and on the investment or ancillary service provided to a client. MiFID distinguishes between ex-ante and ex-post disclosure of costs.
 */
@ApiModel(description = "MiFID cost is the disclosure of information on costs and charges related to an investment product and on the investment or ancillary service provided to a client. MiFID distinguishes between ex-ante and ex-post disclosure of costs.")
@JsonPropertyOrder({
  InlineResponse20062DataCostsAndCharges.JSON_PROPERTY_QUOTATION,
  InlineResponse20062DataCostsAndCharges.JSON_PROPERTY_EX_ANTE,
  InlineResponse20062DataCostsAndCharges.JSON_PROPERTY_EX_POST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20062DataCostsAndCharges implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Quotation type originally used for providing most of the cost items of the investment product.
   */
  public enum QuotationEnum {
    CURRENCY("currency"),
    
    PERCENT("percent");

    private String value;

    QuotationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QuotationEnum fromValue(String value) {
      for (QuotationEnum b : QuotationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUOTATION = "quotation";
  private QuotationEnum quotation;

  public static final String JSON_PROPERTY_EX_ANTE = "exAnte";
  private InlineResponse20062DataCostsAndChargesExAnte exAnte;

  public static final String JSON_PROPERTY_EX_POST = "exPost";
  private InlineResponse20062DataCostsAndChargesExPost exPost;


  public InlineResponse20062DataCostsAndCharges quotation(QuotationEnum quotation) {
    this.quotation = quotation;
    return this;
  }

   /**
   * Quotation type originally used for providing most of the cost items of the investment product.
   * @return quotation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quotation type originally used for providing most of the cost items of the investment product.")
  @JsonProperty(JSON_PROPERTY_QUOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QuotationEnum getQuotation() {
    return quotation;
  }


  @JsonProperty(JSON_PROPERTY_QUOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuotation(QuotationEnum quotation) {
    this.quotation = quotation;
  }


  public InlineResponse20062DataCostsAndCharges exAnte(InlineResponse20062DataCostsAndChargesExAnte exAnte) {
    this.exAnte = exAnte;
    return this;
  }

   /**
   * Get exAnte
   * @return exAnte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EX_ANTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExAnte getExAnte() {
    return exAnte;
  }


  @JsonProperty(JSON_PROPERTY_EX_ANTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExAnte(InlineResponse20062DataCostsAndChargesExAnte exAnte) {
    this.exAnte = exAnte;
  }


  public InlineResponse20062DataCostsAndCharges exPost(InlineResponse20062DataCostsAndChargesExPost exPost) {
    this.exPost = exPost;
    return this;
  }

   /**
   * Get exPost
   * @return exPost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EX_POST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPost getExPost() {
    return exPost;
  }


  @JsonProperty(JSON_PROPERTY_EX_POST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExPost(InlineResponse20062DataCostsAndChargesExPost exPost) {
    this.exPost = exPost;
  }


  /**
   * Return true if this inline_response_200_62_data_costsAndCharges object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20062DataCostsAndCharges inlineResponse20062DataCostsAndCharges = (InlineResponse20062DataCostsAndCharges) o;
    return Objects.equals(this.quotation, inlineResponse20062DataCostsAndCharges.quotation) &&
        Objects.equals(this.exAnte, inlineResponse20062DataCostsAndCharges.exAnte) &&
        Objects.equals(this.exPost, inlineResponse20062DataCostsAndCharges.exPost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quotation, exAnte, exPost);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20062DataCostsAndCharges {\n");
    sb.append("    quotation: ").append(toIndentedString(quotation)).append("\n");
    sb.append("    exAnte: ").append(toIndentedString(exAnte)).append("\n");
    sb.append("    exPost: ").append(toIndentedString(exPost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

