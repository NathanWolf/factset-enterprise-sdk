/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * MiFID distribution channel provides information on the different services a firm might employ in order to deliver an investment product to its customers and on the client type the particular service is appropriate for.
 */
@ApiModel(description = "MiFID distribution channel provides information on the different services a firm might employ in order to deliver an investment product to its customers and on the client type the particular service is appropriate for.")
@JsonPropertyOrder({
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_EXECUTION_ONLY,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_EXECUTION_APPROPRIATENESS,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_INVESTMENT_ADVICE,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_PORTFOLIO_MANAGEMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20062DataDistributionChannel implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) without appropriateness assessment\&quot;.
   */
  public enum ExecutionOnlyEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    ExecutionOnlyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionOnlyEnum fromValue(String value) {
      for (ExecutionOnlyEnum b : ExecutionOnlyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXECUTION_ONLY = "executionOnly";
  private ExecutionOnlyEnum executionOnly;

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) with appropriateness assessment\&quot;.
   */
  public enum ExecutionAppropriatenessEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    ExecutionAppropriatenessEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionAppropriatenessEnum fromValue(String value) {
      for (ExecutionAppropriatenessEnum b : ExecutionAppropriatenessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXECUTION_APPROPRIATENESS = "executionAppropriateness";
  private ExecutionAppropriatenessEnum executionAppropriateness;

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;investment advice with suitability assessment\&quot;.
   */
  public enum InvestmentAdviceEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    InvestmentAdviceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvestmentAdviceEnum fromValue(String value) {
      for (InvestmentAdviceEnum b : InvestmentAdviceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INVESTMENT_ADVICE = "investmentAdvice";
  private InvestmentAdviceEnum investmentAdvice;

  /**
   * Indicates the client type for which the investment product is suitable through the distribution channel \&quot;discretionary/portfolio management with suitability assessment\&quot;.
   */
  public enum PortfolioManagementEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    PortfolioManagementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PortfolioManagementEnum fromValue(String value) {
      for (PortfolioManagementEnum b : PortfolioManagementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PORTFOLIO_MANAGEMENT = "portfolioManagement";
  private PortfolioManagementEnum portfolioManagement;


  public InlineResponse20062DataDistributionChannel executionOnly(ExecutionOnlyEnum executionOnly) {
    this.executionOnly = executionOnly;
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) without appropriateness assessment\&quot;.
   * @return executionOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) without appropriateness assessment\".")
  @JsonProperty(JSON_PROPERTY_EXECUTION_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutionOnlyEnum getExecutionOnly() {
    return executionOnly;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionOnly(ExecutionOnlyEnum executionOnly) {
    this.executionOnly = executionOnly;
  }


  public InlineResponse20062DataDistributionChannel executionAppropriateness(ExecutionAppropriatenessEnum executionAppropriateness) {
    this.executionAppropriateness = executionAppropriateness;
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) with appropriateness assessment\&quot;.
   * @return executionAppropriateness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) with appropriateness assessment\".")
  @JsonProperty(JSON_PROPERTY_EXECUTION_APPROPRIATENESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutionAppropriatenessEnum getExecutionAppropriateness() {
    return executionAppropriateness;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_APPROPRIATENESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionAppropriateness(ExecutionAppropriatenessEnum executionAppropriateness) {
    this.executionAppropriateness = executionAppropriateness;
  }


  public InlineResponse20062DataDistributionChannel investmentAdvice(InvestmentAdviceEnum investmentAdvice) {
    this.investmentAdvice = investmentAdvice;
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;investment advice with suitability assessment\&quot;.
   * @return investmentAdvice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"investment advice with suitability assessment\".")
  @JsonProperty(JSON_PROPERTY_INVESTMENT_ADVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvestmentAdviceEnum getInvestmentAdvice() {
    return investmentAdvice;
  }


  @JsonProperty(JSON_PROPERTY_INVESTMENT_ADVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvestmentAdvice(InvestmentAdviceEnum investmentAdvice) {
    this.investmentAdvice = investmentAdvice;
  }


  public InlineResponse20062DataDistributionChannel portfolioManagement(PortfolioManagementEnum portfolioManagement) {
    this.portfolioManagement = portfolioManagement;
    return this;
  }

   /**
   * Indicates the client type for which the investment product is suitable through the distribution channel \&quot;discretionary/portfolio management with suitability assessment\&quot;.
   * @return portfolioManagement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type for which the investment product is suitable through the distribution channel \"discretionary/portfolio management with suitability assessment\".")
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortfolioManagementEnum getPortfolioManagement() {
    return portfolioManagement;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortfolioManagement(PortfolioManagementEnum portfolioManagement) {
    this.portfolioManagement = portfolioManagement;
  }


  /**
   * Return true if this inline_response_200_62_data_distributionChannel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20062DataDistributionChannel inlineResponse20062DataDistributionChannel = (InlineResponse20062DataDistributionChannel) o;
    return Objects.equals(this.executionOnly, inlineResponse20062DataDistributionChannel.executionOnly) &&
        Objects.equals(this.executionAppropriateness, inlineResponse20062DataDistributionChannel.executionAppropriateness) &&
        Objects.equals(this.investmentAdvice, inlineResponse20062DataDistributionChannel.investmentAdvice) &&
        Objects.equals(this.portfolioManagement, inlineResponse20062DataDistributionChannel.portfolioManagement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executionOnly, executionAppropriateness, investmentAdvice, portfolioManagement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20062DataDistributionChannel {\n");
    sb.append("    executionOnly: ").append(toIndentedString(executionOnly)).append("\n");
    sb.append("    executionAppropriateness: ").append(toIndentedString(executionAppropriateness)).append("\n");
    sb.append("    investmentAdvice: ").append(toIndentedString(investmentAdvice)).append("\n");
    sb.append("    portfolioManagement: ").append(toIndentedString(portfolioManagement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

