/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * Interest rate based on the coupon period, i.e. not annualized. Period-based data is not available for instruments with a variable interest rate (i.e. the attribute &#x60;coupons.interestRate.type&#x60; has the value 4 or 6).
 */
@ApiModel(description = "Interest rate based on the coupon period, i.e. not annualized. Period-based data is not available for instruments with a variable interest rate (i.e. the attribute `coupons.interestRate.type` has the value 4 or 6).")
@JsonPropertyOrder({
  InlineResponse20051DataInterestRatePeriodic.JSON_PROPERTY_FIXED,
  InlineResponse20051DataInterestRatePeriodic.JSON_PROPERTY_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20051DataInterestRatePeriodic implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FIXED = "fixed";
  private BigDecimal fixed;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;


  public InlineResponse20051DataInterestRatePeriodic fixed(BigDecimal fixed) {
    this.fixed = fixed;
    return this;
  }

   /**
   * Fixed interest rate. For coupon periods different from one year, the value differs from the fixed annualized interest rate (see attribute &#x60;coupons.interestRate.annualized.fixed&#x60;).
   * @return fixed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fixed interest rate. For coupon periods different from one year, the value differs from the fixed annualized interest rate (see attribute `coupons.interestRate.annualized.fixed`).")
  @JsonProperty(JSON_PROPERTY_FIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFixed() {
    return fixed;
  }


  @JsonProperty(JSON_PROPERTY_FIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFixed(BigDecimal fixed) {
    this.fixed = fixed;
  }


  public InlineResponse20051DataInterestRatePeriodic amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Coupon amount corresponding to the fixed interest rate (see attribute &#x60;coupons.interestRate.periodic.fixed&#x60;). The attribute is available only for instruments with a declared nominal value, e.g. securitized derivatives.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Coupon amount corresponding to the fixed interest rate (see attribute `coupons.interestRate.periodic.fixed`). The attribute is available only for instruments with a declared nominal value, e.g. securitized derivatives.")
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  /**
   * Return true if this inline_response_200_51_data_interestRate_periodic object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20051DataInterestRatePeriodic inlineResponse20051DataInterestRatePeriodic = (InlineResponse20051DataInterestRatePeriodic) o;
    return Objects.equals(this.fixed, inlineResponse20051DataInterestRatePeriodic.fixed) &&
        Objects.equals(this.amount, inlineResponse20051DataInterestRatePeriodic.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fixed, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20051DataInterestRatePeriodic {\n");
    sb.append("    fixed: ").append(toIndentedString(fixed)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

