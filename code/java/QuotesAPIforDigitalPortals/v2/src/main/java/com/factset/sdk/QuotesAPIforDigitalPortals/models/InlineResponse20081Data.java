/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataCurrency;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataMarket;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataValueUnit;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20081DataAsk;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20081DataBid;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * Bid and ask prices for the notation.
 */
@ApiModel(description = "Bid and ask prices for the notation.")
@JsonPropertyOrder({
  InlineResponse20081Data.JSON_PROPERTY_VALUE_UNIT,
  InlineResponse20081Data.JSON_PROPERTY_CURRENCY,
  InlineResponse20081Data.JSON_PROPERTY_MARKET,
  InlineResponse20081Data.JSON_PROPERTY_QUALITY,
  InlineResponse20081Data.JSON_PROPERTY_BID,
  InlineResponse20081Data.JSON_PROPERTY_ASK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20081Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private InlineResponse20079DataValueUnit valueUnit;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse20079DataCurrency currency;

  public static final String JSON_PROPERTY_MARKET = "market";
  private InlineResponse20079DataMarket market;

  /**
   * Quality of the price.
   */
  public enum QualityEnum {
    RLT("RLT"),
    
    DLY("DLY"),
    
    EOD("EOD");

    private String value;

    QualityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QualityEnum fromValue(String value) {
      for (QualityEnum b : QualityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private QualityEnum quality;

  public static final String JSON_PROPERTY_BID = "bid";
  private InlineResponse20081DataBid bid;

  public static final String JSON_PROPERTY_ASK = "ask";
  private InlineResponse20081DataAsk ask;

  public InlineResponse20081Data() { 
  }

  public InlineResponse20081Data valueUnit(InlineResponse20079DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(InlineResponse20079DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public InlineResponse20081Data currency(InlineResponse20079DataCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse20079DataCurrency currency) {
    this.currency = currency;
  }


  public InlineResponse20081Data market(InlineResponse20079DataMarket market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataMarket getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(InlineResponse20079DataMarket market) {
    this.market = market;
  }


  public InlineResponse20081Data quality(QualityEnum quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Quality of the price.
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quality of the price.")
  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QualityEnum getQuality() {
    return quality;
  }


  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuality(QualityEnum quality) {
    this.quality = quality;
  }


  public InlineResponse20081Data bid(InlineResponse20081DataBid bid) {
    this.bid = bid;
    return this;
  }

   /**
   * Get bid
   * @return bid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20081DataBid getBid() {
    return bid;
  }


  @JsonProperty(JSON_PROPERTY_BID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBid(InlineResponse20081DataBid bid) {
    this.bid = bid;
  }


  public InlineResponse20081Data ask(InlineResponse20081DataAsk ask) {
    this.ask = ask;
    return this;
  }

   /**
   * Get ask
   * @return ask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20081DataAsk getAsk() {
    return ask;
  }


  @JsonProperty(JSON_PROPERTY_ASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsk(InlineResponse20081DataAsk ask) {
    this.ask = ask;
  }


  /**
   * Return true if this inline_response_200_81_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20081Data inlineResponse20081Data = (InlineResponse20081Data) o;
    return Objects.equals(this.valueUnit, inlineResponse20081Data.valueUnit) &&
        Objects.equals(this.currency, inlineResponse20081Data.currency) &&
        Objects.equals(this.market, inlineResponse20081Data.market) &&
        Objects.equals(this.quality, inlineResponse20081Data.quality) &&
        Objects.equals(this.bid, inlineResponse20081Data.bid) &&
        Objects.equals(this.ask, inlineResponse20081Data.ask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valueUnit, currency, market, quality, bid, ask);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20081Data {\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    bid: ").append(toIndentedString(bid)).append("\n");
    sb.append("    ask: ").append(toIndentedString(ask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

