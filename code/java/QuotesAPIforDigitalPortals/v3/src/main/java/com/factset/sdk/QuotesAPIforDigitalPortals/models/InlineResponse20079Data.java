/*
 * Quotes API For Digital Portals
 * The quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the Time Series API for Digital Portals for direct access to price histories, and the News API for Digital Portals for searching and fetching related news.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataAccumulated;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataCurrency;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataFirst;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataHigh;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataLatest;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataLow;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataMarket;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataPreviousClose;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20079DataValueUnit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * Set of price related data for the notation.
 */
@ApiModel(description = "Set of price related data for the notation.")
@JsonPropertyOrder({
  InlineResponse20079Data.JSON_PROPERTY_VALUE_UNIT,
  InlineResponse20079Data.JSON_PROPERTY_CURRENCY,
  InlineResponse20079Data.JSON_PROPERTY_MARKET,
  InlineResponse20079Data.JSON_PROPERTY_QUALITY,
  InlineResponse20079Data.JSON_PROPERTY_LATEST,
  InlineResponse20079Data.JSON_PROPERTY_FIRST,
  InlineResponse20079Data.JSON_PROPERTY_LOW,
  InlineResponse20079Data.JSON_PROPERTY_HIGH,
  InlineResponse20079Data.JSON_PROPERTY_PREVIOUS_CLOSE,
  InlineResponse20079Data.JSON_PROPERTY_ACCUMULATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20079Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private InlineResponse20079DataValueUnit valueUnit;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse20079DataCurrency currency;

  public static final String JSON_PROPERTY_MARKET = "market";
  private InlineResponse20079DataMarket market;

  /**
   * Quality of the price.
   */
  public enum QualityEnum {
    RLT("RLT"),
    
    DLY("DLY"),
    
    EOD("EOD");

    private String value;

    QualityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QualityEnum fromValue(String value) {
      for (QualityEnum b : QualityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private QualityEnum quality;

  public static final String JSON_PROPERTY_LATEST = "latest";
  private InlineResponse20079DataLatest latest;

  public static final String JSON_PROPERTY_FIRST = "first";
  private InlineResponse20079DataFirst first;

  public static final String JSON_PROPERTY_LOW = "low";
  private InlineResponse20079DataLow low;

  public static final String JSON_PROPERTY_HIGH = "high";
  private InlineResponse20079DataHigh high;

  public static final String JSON_PROPERTY_PREVIOUS_CLOSE = "previousClose";
  private InlineResponse20079DataPreviousClose previousClose;

  public static final String JSON_PROPERTY_ACCUMULATED = "accumulated";
  private InlineResponse20079DataAccumulated accumulated;

  public InlineResponse20079Data() { 
  }

  public InlineResponse20079Data valueUnit(InlineResponse20079DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(InlineResponse20079DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public InlineResponse20079Data currency(InlineResponse20079DataCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse20079DataCurrency currency) {
    this.currency = currency;
  }


  public InlineResponse20079Data market(InlineResponse20079DataMarket market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataMarket getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(InlineResponse20079DataMarket market) {
    this.market = market;
  }


  public InlineResponse20079Data quality(QualityEnum quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Quality of the price.
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quality of the price.")
  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QualityEnum getQuality() {
    return quality;
  }


  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuality(QualityEnum quality) {
    this.quality = quality;
  }


  public InlineResponse20079Data latest(InlineResponse20079DataLatest latest) {
    this.latest = latest;
    return this;
  }

   /**
   * Get latest
   * @return latest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataLatest getLatest() {
    return latest;
  }


  @JsonProperty(JSON_PROPERTY_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatest(InlineResponse20079DataLatest latest) {
    this.latest = latest;
  }


  public InlineResponse20079Data first(InlineResponse20079DataFirst first) {
    this.first = first;
    return this;
  }

   /**
   * Get first
   * @return first
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataFirst getFirst() {
    return first;
  }


  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirst(InlineResponse20079DataFirst first) {
    this.first = first;
  }


  public InlineResponse20079Data low(InlineResponse20079DataLow low) {
    this.low = low;
    return this;
  }

   /**
   * Get low
   * @return low
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataLow getLow() {
    return low;
  }


  @JsonProperty(JSON_PROPERTY_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLow(InlineResponse20079DataLow low) {
    this.low = low;
  }


  public InlineResponse20079Data high(InlineResponse20079DataHigh high) {
    this.high = high;
    return this;
  }

   /**
   * Get high
   * @return high
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataHigh getHigh() {
    return high;
  }


  @JsonProperty(JSON_PROPERTY_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHigh(InlineResponse20079DataHigh high) {
    this.high = high;
  }


  public InlineResponse20079Data previousClose(InlineResponse20079DataPreviousClose previousClose) {
    this.previousClose = previousClose;
    return this;
  }

   /**
   * Get previousClose
   * @return previousClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS_CLOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataPreviousClose getPreviousClose() {
    return previousClose;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_CLOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousClose(InlineResponse20079DataPreviousClose previousClose) {
    this.previousClose = previousClose;
  }


  public InlineResponse20079Data accumulated(InlineResponse20079DataAccumulated accumulated) {
    this.accumulated = accumulated;
    return this;
  }

   /**
   * Get accumulated
   * @return accumulated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20079DataAccumulated getAccumulated() {
    return accumulated;
  }


  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccumulated(InlineResponse20079DataAccumulated accumulated) {
    this.accumulated = accumulated;
  }


  /**
   * Return true if this inline_response_200_79_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20079Data inlineResponse20079Data = (InlineResponse20079Data) o;
    return Objects.equals(this.valueUnit, inlineResponse20079Data.valueUnit) &&
        Objects.equals(this.currency, inlineResponse20079Data.currency) &&
        Objects.equals(this.market, inlineResponse20079Data.market) &&
        Objects.equals(this.quality, inlineResponse20079Data.quality) &&
        Objects.equals(this.latest, inlineResponse20079Data.latest) &&
        Objects.equals(this.first, inlineResponse20079Data.first) &&
        Objects.equals(this.low, inlineResponse20079Data.low) &&
        Objects.equals(this.high, inlineResponse20079Data.high) &&
        Objects.equals(this.previousClose, inlineResponse20079Data.previousClose) &&
        Objects.equals(this.accumulated, inlineResponse20079Data.accumulated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valueUnit, currency, market, quality, latest, first, low, high, previousClose, accumulated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20079Data {\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    latest: ").append(toIndentedString(latest)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    previousClose: ").append(toIndentedString(previousClose)).append("\n");
    sb.append("    accumulated: ").append(toIndentedString(accumulated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

