/*
 * Quotes API For Digital Portals
 * The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostDistributionFee;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostIncidentalCosts;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostManagementFee;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostOneOffEntryCost;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostOneOffExitCost;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostOngoingCostAccumulated;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostOngoingCosts;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20062DataCostsAndChargesExPostTransactionCosts;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * Disclosure on costs and charges in the latest available post sale period, providing the latest available figures.
 */
@ApiModel(description = "Disclosure on costs and charges in the latest available post sale period, providing the latest available figures.")
@JsonPropertyOrder({
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_ONE_OFF_ENTRY_COST,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_ONE_OFF_EXIT_COST,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_ONGOING_COSTS,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_ONGOING_COST_ACCUMULATED,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_MANAGEMENT_FEE,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_DISTRIBUTION_FEE,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_TRANSACTION_COSTS,
  InlineResponse20062DataCostsAndChargesExPost.JSON_PROPERTY_INCIDENTAL_COSTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20062DataCostsAndChargesExPost implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ONE_OFF_ENTRY_COST = "oneOffEntryCost";
  private InlineResponse20062DataCostsAndChargesExPostOneOffEntryCost oneOffEntryCost;

  public static final String JSON_PROPERTY_ONE_OFF_EXIT_COST = "oneOffExitCost";
  private InlineResponse20062DataCostsAndChargesExPostOneOffExitCost oneOffExitCost;

  public static final String JSON_PROPERTY_ONGOING_COSTS = "ongoingCosts";
  private InlineResponse20062DataCostsAndChargesExPostOngoingCosts ongoingCosts;

  public static final String JSON_PROPERTY_ONGOING_COST_ACCUMULATED = "ongoingCostAccumulated";
  private InlineResponse20062DataCostsAndChargesExPostOngoingCostAccumulated ongoingCostAccumulated;

  public static final String JSON_PROPERTY_MANAGEMENT_FEE = "managementFee";
  private InlineResponse20062DataCostsAndChargesExPostManagementFee managementFee;

  public static final String JSON_PROPERTY_DISTRIBUTION_FEE = "distributionFee";
  private InlineResponse20062DataCostsAndChargesExPostDistributionFee distributionFee;

  public static final String JSON_PROPERTY_TRANSACTION_COSTS = "transactionCosts";
  private InlineResponse20062DataCostsAndChargesExPostTransactionCosts transactionCosts;

  public static final String JSON_PROPERTY_INCIDENTAL_COSTS = "incidentalCosts";
  private InlineResponse20062DataCostsAndChargesExPostIncidentalCosts incidentalCosts;

  public InlineResponse20062DataCostsAndChargesExPost() { 
  }

  public InlineResponse20062DataCostsAndChargesExPost oneOffEntryCost(InlineResponse20062DataCostsAndChargesExPostOneOffEntryCost oneOffEntryCost) {
    this.oneOffEntryCost = oneOffEntryCost;
    return this;
  }

   /**
   * Get oneOffEntryCost
   * @return oneOffEntryCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ONE_OFF_ENTRY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostOneOffEntryCost getOneOffEntryCost() {
    return oneOffEntryCost;
  }


  @JsonProperty(JSON_PROPERTY_ONE_OFF_ENTRY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOneOffEntryCost(InlineResponse20062DataCostsAndChargesExPostOneOffEntryCost oneOffEntryCost) {
    this.oneOffEntryCost = oneOffEntryCost;
  }


  public InlineResponse20062DataCostsAndChargesExPost oneOffExitCost(InlineResponse20062DataCostsAndChargesExPostOneOffExitCost oneOffExitCost) {
    this.oneOffExitCost = oneOffExitCost;
    return this;
  }

   /**
   * Get oneOffExitCost
   * @return oneOffExitCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ONE_OFF_EXIT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostOneOffExitCost getOneOffExitCost() {
    return oneOffExitCost;
  }


  @JsonProperty(JSON_PROPERTY_ONE_OFF_EXIT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOneOffExitCost(InlineResponse20062DataCostsAndChargesExPostOneOffExitCost oneOffExitCost) {
    this.oneOffExitCost = oneOffExitCost;
  }


  public InlineResponse20062DataCostsAndChargesExPost ongoingCosts(InlineResponse20062DataCostsAndChargesExPostOngoingCosts ongoingCosts) {
    this.ongoingCosts = ongoingCosts;
    return this;
  }

   /**
   * Get ongoingCosts
   * @return ongoingCosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ONGOING_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostOngoingCosts getOngoingCosts() {
    return ongoingCosts;
  }


  @JsonProperty(JSON_PROPERTY_ONGOING_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOngoingCosts(InlineResponse20062DataCostsAndChargesExPostOngoingCosts ongoingCosts) {
    this.ongoingCosts = ongoingCosts;
  }


  public InlineResponse20062DataCostsAndChargesExPost ongoingCostAccumulated(InlineResponse20062DataCostsAndChargesExPostOngoingCostAccumulated ongoingCostAccumulated) {
    this.ongoingCostAccumulated = ongoingCostAccumulated;
    return this;
  }

   /**
   * Get ongoingCostAccumulated
   * @return ongoingCostAccumulated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ONGOING_COST_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostOngoingCostAccumulated getOngoingCostAccumulated() {
    return ongoingCostAccumulated;
  }


  @JsonProperty(JSON_PROPERTY_ONGOING_COST_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOngoingCostAccumulated(InlineResponse20062DataCostsAndChargesExPostOngoingCostAccumulated ongoingCostAccumulated) {
    this.ongoingCostAccumulated = ongoingCostAccumulated;
  }


  public InlineResponse20062DataCostsAndChargesExPost managementFee(InlineResponse20062DataCostsAndChargesExPostManagementFee managementFee) {
    this.managementFee = managementFee;
    return this;
  }

   /**
   * Get managementFee
   * @return managementFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostManagementFee getManagementFee() {
    return managementFee;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementFee(InlineResponse20062DataCostsAndChargesExPostManagementFee managementFee) {
    this.managementFee = managementFee;
  }


  public InlineResponse20062DataCostsAndChargesExPost distributionFee(InlineResponse20062DataCostsAndChargesExPostDistributionFee distributionFee) {
    this.distributionFee = distributionFee;
    return this;
  }

   /**
   * Get distributionFee
   * @return distributionFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostDistributionFee getDistributionFee() {
    return distributionFee;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributionFee(InlineResponse20062DataCostsAndChargesExPostDistributionFee distributionFee) {
    this.distributionFee = distributionFee;
  }


  public InlineResponse20062DataCostsAndChargesExPost transactionCosts(InlineResponse20062DataCostsAndChargesExPostTransactionCosts transactionCosts) {
    this.transactionCosts = transactionCosts;
    return this;
  }

   /**
   * Get transactionCosts
   * @return transactionCosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostTransactionCosts getTransactionCosts() {
    return transactionCosts;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionCosts(InlineResponse20062DataCostsAndChargesExPostTransactionCosts transactionCosts) {
    this.transactionCosts = transactionCosts;
  }


  public InlineResponse20062DataCostsAndChargesExPost incidentalCosts(InlineResponse20062DataCostsAndChargesExPostIncidentalCosts incidentalCosts) {
    this.incidentalCosts = incidentalCosts;
    return this;
  }

   /**
   * Get incidentalCosts
   * @return incidentalCosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCIDENTAL_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20062DataCostsAndChargesExPostIncidentalCosts getIncidentalCosts() {
    return incidentalCosts;
  }


  @JsonProperty(JSON_PROPERTY_INCIDENTAL_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncidentalCosts(InlineResponse20062DataCostsAndChargesExPostIncidentalCosts incidentalCosts) {
    this.incidentalCosts = incidentalCosts;
  }


  /**
   * Return true if this inline_response_200_62_data_costsAndCharges_exPost object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20062DataCostsAndChargesExPost inlineResponse20062DataCostsAndChargesExPost = (InlineResponse20062DataCostsAndChargesExPost) o;
    return Objects.equals(this.oneOffEntryCost, inlineResponse20062DataCostsAndChargesExPost.oneOffEntryCost) &&
        Objects.equals(this.oneOffExitCost, inlineResponse20062DataCostsAndChargesExPost.oneOffExitCost) &&
        Objects.equals(this.ongoingCosts, inlineResponse20062DataCostsAndChargesExPost.ongoingCosts) &&
        Objects.equals(this.ongoingCostAccumulated, inlineResponse20062DataCostsAndChargesExPost.ongoingCostAccumulated) &&
        Objects.equals(this.managementFee, inlineResponse20062DataCostsAndChargesExPost.managementFee) &&
        Objects.equals(this.distributionFee, inlineResponse20062DataCostsAndChargesExPost.distributionFee) &&
        Objects.equals(this.transactionCosts, inlineResponse20062DataCostsAndChargesExPost.transactionCosts) &&
        Objects.equals(this.incidentalCosts, inlineResponse20062DataCostsAndChargesExPost.incidentalCosts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oneOffEntryCost, oneOffExitCost, ongoingCosts, ongoingCostAccumulated, managementFee, distributionFee, transactionCosts, incidentalCosts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20062DataCostsAndChargesExPost {\n");
    sb.append("    oneOffEntryCost: ").append(toIndentedString(oneOffEntryCost)).append("\n");
    sb.append("    oneOffExitCost: ").append(toIndentedString(oneOffExitCost)).append("\n");
    sb.append("    ongoingCosts: ").append(toIndentedString(ongoingCosts)).append("\n");
    sb.append("    ongoingCostAccumulated: ").append(toIndentedString(ongoingCostAccumulated)).append("\n");
    sb.append("    managementFee: ").append(toIndentedString(managementFee)).append("\n");
    sb.append("    distributionFee: ").append(toIndentedString(distributionFee)).append("\n");
    sb.append("    transactionCosts: ").append(toIndentedString(transactionCosts)).append("\n");
    sb.append("    incidentalCosts: ").append(toIndentedString(incidentalCosts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

