/*
 * Quotes API For Digital Portals
 * The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * MiFID distribution channel provides information on the different services a firm might employ in order to deliver an investment product to its customers and on the client type the particular service is appropriate for.
 */
@ApiModel(description = "MiFID distribution channel provides information on the different services a firm might employ in order to deliver an investment product to its customers and on the client type the particular service is appropriate for.")
@JsonPropertyOrder({
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_EXECUTION_ONLY,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_EXECUTION_APPROPRIATENESS,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_INVESTMENT_ADVICE,
  InlineResponse20062DataDistributionChannel.JSON_PROPERTY_PORTFOLIO_MANAGEMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20062DataDistributionChannel implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) without appropriateness assessment\&quot;.
   */
  public enum ExecutionOnlyEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    ExecutionOnlyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionOnlyEnum fromValue(String value) {
      for (ExecutionOnlyEnum b : ExecutionOnlyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_EXECUTION_ONLY = "executionOnly";
  private JsonNullable<ExecutionOnlyEnum> executionOnly = JsonNullable.<ExecutionOnlyEnum>undefined();

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) with appropriateness assessment\&quot;.
   */
  public enum ExecutionAppropriatenessEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    ExecutionAppropriatenessEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionAppropriatenessEnum fromValue(String value) {
      for (ExecutionAppropriatenessEnum b : ExecutionAppropriatenessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_EXECUTION_APPROPRIATENESS = "executionAppropriateness";
  private JsonNullable<ExecutionAppropriatenessEnum> executionAppropriateness = JsonNullable.<ExecutionAppropriatenessEnum>undefined();

  /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;investment advice with suitability assessment\&quot;.
   */
  public enum InvestmentAdviceEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    InvestmentAdviceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvestmentAdviceEnum fromValue(String value) {
      for (InvestmentAdviceEnum b : InvestmentAdviceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_INVESTMENT_ADVICE = "investmentAdvice";
  private JsonNullable<InvestmentAdviceEnum> investmentAdvice = JsonNullable.<InvestmentAdviceEnum>undefined();

  /**
   * Indicates the client type for which the investment product is suitable through the distribution channel \&quot;discretionary/portfolio management with suitability assessment\&quot;.
   */
  public enum PortfolioManagementEnum {
    RETAIL("retail"),
    
    PROFESSIONAL("professional"),
    
    BOTH("both"),
    
    NONE("none");

    private String value;

    PortfolioManagementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PortfolioManagementEnum fromValue(String value) {
      for (PortfolioManagementEnum b : PortfolioManagementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PORTFOLIO_MANAGEMENT = "portfolioManagement";
  private JsonNullable<PortfolioManagementEnum> portfolioManagement = JsonNullable.<PortfolioManagementEnum>undefined();

  public InlineResponse20062DataDistributionChannel() { 
  }

  public InlineResponse20062DataDistributionChannel executionOnly(ExecutionOnlyEnum executionOnly) {
    this.executionOnly = JsonNullable.<ExecutionOnlyEnum>of(executionOnly);
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) without appropriateness assessment\&quot;.
   * @return executionOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) without appropriateness assessment\".")
  @JsonIgnore

  public ExecutionOnlyEnum getExecutionOnly() {
        return executionOnly.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXECUTION_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ExecutionOnlyEnum> getExecutionOnly_JsonNullable() {
    return executionOnly;
  }
  
  @JsonProperty(JSON_PROPERTY_EXECUTION_ONLY)
  public void setExecutionOnly_JsonNullable(JsonNullable<ExecutionOnlyEnum> executionOnly) {
    this.executionOnly = executionOnly;
  }

  public void setExecutionOnly(ExecutionOnlyEnum executionOnly) {
    this.executionOnly = JsonNullable.<ExecutionOnlyEnum>of(executionOnly);
  }


  public InlineResponse20062DataDistributionChannel executionAppropriateness(ExecutionAppropriatenessEnum executionAppropriateness) {
    this.executionAppropriateness = JsonNullable.<ExecutionAppropriatenessEnum>of(executionAppropriateness);
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;execution only / reception and transmission of orders (RTO) with appropriateness assessment\&quot;.
   * @return executionAppropriateness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) with appropriateness assessment\".")
  @JsonIgnore

  public ExecutionAppropriatenessEnum getExecutionAppropriateness() {
        return executionAppropriateness.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXECUTION_APPROPRIATENESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ExecutionAppropriatenessEnum> getExecutionAppropriateness_JsonNullable() {
    return executionAppropriateness;
  }
  
  @JsonProperty(JSON_PROPERTY_EXECUTION_APPROPRIATENESS)
  public void setExecutionAppropriateness_JsonNullable(JsonNullable<ExecutionAppropriatenessEnum> executionAppropriateness) {
    this.executionAppropriateness = executionAppropriateness;
  }

  public void setExecutionAppropriateness(ExecutionAppropriatenessEnum executionAppropriateness) {
    this.executionAppropriateness = JsonNullable.<ExecutionAppropriatenessEnum>of(executionAppropriateness);
  }


  public InlineResponse20062DataDistributionChannel investmentAdvice(InvestmentAdviceEnum investmentAdvice) {
    this.investmentAdvice = JsonNullable.<InvestmentAdviceEnum>of(investmentAdvice);
    return this;
  }

   /**
   * Indicates the client type(s) for which the investment product is suitable through the distribution channel \&quot;investment advice with suitability assessment\&quot;.
   * @return investmentAdvice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"investment advice with suitability assessment\".")
  @JsonIgnore

  public InvestmentAdviceEnum getInvestmentAdvice() {
        return investmentAdvice.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INVESTMENT_ADVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<InvestmentAdviceEnum> getInvestmentAdvice_JsonNullable() {
    return investmentAdvice;
  }
  
  @JsonProperty(JSON_PROPERTY_INVESTMENT_ADVICE)
  public void setInvestmentAdvice_JsonNullable(JsonNullable<InvestmentAdviceEnum> investmentAdvice) {
    this.investmentAdvice = investmentAdvice;
  }

  public void setInvestmentAdvice(InvestmentAdviceEnum investmentAdvice) {
    this.investmentAdvice = JsonNullable.<InvestmentAdviceEnum>of(investmentAdvice);
  }


  public InlineResponse20062DataDistributionChannel portfolioManagement(PortfolioManagementEnum portfolioManagement) {
    this.portfolioManagement = JsonNullable.<PortfolioManagementEnum>of(portfolioManagement);
    return this;
  }

   /**
   * Indicates the client type for which the investment product is suitable through the distribution channel \&quot;discretionary/portfolio management with suitability assessment\&quot;.
   * @return portfolioManagement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the client type for which the investment product is suitable through the distribution channel \"discretionary/portfolio management with suitability assessment\".")
  @JsonIgnore

  public PortfolioManagementEnum getPortfolioManagement() {
        return portfolioManagement.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORTFOLIO_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PortfolioManagementEnum> getPortfolioManagement_JsonNullable() {
    return portfolioManagement;
  }
  
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_MANAGEMENT)
  public void setPortfolioManagement_JsonNullable(JsonNullable<PortfolioManagementEnum> portfolioManagement) {
    this.portfolioManagement = portfolioManagement;
  }

  public void setPortfolioManagement(PortfolioManagementEnum portfolioManagement) {
    this.portfolioManagement = JsonNullable.<PortfolioManagementEnum>of(portfolioManagement);
  }


  /**
   * Return true if this inline_response_200_62_data_distributionChannel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20062DataDistributionChannel inlineResponse20062DataDistributionChannel = (InlineResponse20062DataDistributionChannel) o;
    return equalsNullable(this.executionOnly, inlineResponse20062DataDistributionChannel.executionOnly) &&
        equalsNullable(this.executionAppropriateness, inlineResponse20062DataDistributionChannel.executionAppropriateness) &&
        equalsNullable(this.investmentAdvice, inlineResponse20062DataDistributionChannel.investmentAdvice) &&
        equalsNullable(this.portfolioManagement, inlineResponse20062DataDistributionChannel.portfolioManagement);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(executionOnly), hashCodeNullable(executionAppropriateness), hashCodeNullable(investmentAdvice), hashCodeNullable(portfolioManagement));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20062DataDistributionChannel {\n");
    sb.append("    executionOnly: ").append(toIndentedString(executionOnly)).append("\n");
    sb.append("    executionAppropriateness: ").append(toIndentedString(executionAppropriateness)).append("\n");
    sb.append("    investmentAdvice: ").append(toIndentedString(investmentAdvice)).append("\n");
    sb.append("    portfolioManagement: ").append(toIndentedString(portfolioManagement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

