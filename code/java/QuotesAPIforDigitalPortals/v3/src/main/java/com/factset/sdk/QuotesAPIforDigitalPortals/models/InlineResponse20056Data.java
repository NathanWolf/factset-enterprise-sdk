/*
 * Quotes API For Digital Portals
 * The quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the Time Series API for Digital Portals for direct access to price histories, and the News API for Digital Portals for searching and fetching related news.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.QuotesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20036Fsym;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20055DataValidity;
import com.factset.sdk.QuotesAPIforDigitalPortals.models.InlineResponse20056Status;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.QuotesAPIforDigitalPortals.JSON;


/**
 * InlineResponse20056Data
 */
@JsonPropertyOrder({
  InlineResponse20056Data.JSON_PROPERTY_ID,
  InlineResponse20056Data.JSON_PROPERTY_FSYM,
  InlineResponse20056Data.JSON_PROPERTY_VALIDITY,
  InlineResponse20056Data.JSON_PROPERTY_SOURCE_ISIN,
  InlineResponse20056Data.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20056Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_FSYM = "fsym";
  private InlineResponse20036Fsym fsym;

  public static final String JSON_PROPERTY_VALIDITY = "validity";
  private InlineResponse20055DataValidity validity;

  public static final String JSON_PROPERTY_SOURCE_ISIN = "sourceIsin";
  private String sourceIsin;

  public static final String JSON_PROPERTY_STATUS = "status";
  private InlineResponse20056Status status;

  public InlineResponse20056Data() { 
  }

  public InlineResponse20056Data id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the instrument.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of the instrument.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public InlineResponse20056Data fsym(InlineResponse20036Fsym fsym) {
    this.fsym = fsym;
    return this;
  }

   /**
   * Get fsym
   * @return fsym
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20036Fsym getFsym() {
    return fsym;
  }


  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsym(InlineResponse20036Fsym fsym) {
    this.fsym = fsym;
  }


  public InlineResponse20056Data validity(InlineResponse20055DataValidity validity) {
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20055DataValidity getValidity() {
    return validity;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidity(InlineResponse20055DataValidity validity) {
    this.validity = validity;
  }


  public InlineResponse20056Data sourceIsin(String sourceIsin) {
    this.sourceIsin = sourceIsin;
    return this;
  }

   /**
   * The source ISIN that the instrument is translated for.
   * @return sourceIsin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The source ISIN that the instrument is translated for.")
  @JsonProperty(JSON_PROPERTY_SOURCE_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceIsin() {
    return sourceIsin;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceIsin(String sourceIsin) {
    this.sourceIsin = sourceIsin;
  }


  public InlineResponse20056Data status(InlineResponse20056Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20056Status getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(InlineResponse20056Status status) {
    this.status = status;
  }


  /**
   * Return true if this inline_response_200_56_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20056Data inlineResponse20056Data = (InlineResponse20056Data) o;
    return Objects.equals(this.id, inlineResponse20056Data.id) &&
        Objects.equals(this.fsym, inlineResponse20056Data.fsym) &&
        Objects.equals(this.validity, inlineResponse20056Data.validity) &&
        Objects.equals(this.sourceIsin, inlineResponse20056Data.sourceIsin) &&
        Objects.equals(this.status, inlineResponse20056Data.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fsym, validity, sourceIsin, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20056Data {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fsym: ").append(toIndentedString(fsym)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    sourceIsin: ").append(toIndentedString(sourceIsin)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

