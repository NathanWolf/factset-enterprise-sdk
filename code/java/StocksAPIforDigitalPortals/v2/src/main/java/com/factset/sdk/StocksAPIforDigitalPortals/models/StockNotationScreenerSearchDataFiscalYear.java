/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Since a fiscal year and a calendar year do not necessarily match  with regard to their start and end dates, the year is derived as the calendar year  occupied to a larger extent by the fiscal year, using a June through May fiscal year assignment. That means, fiscal years ending from the 1st of June onwards are assigned to the same calendar year. Either must be at most ten years in the past.
 */
@ApiModel(description = "Since a fiscal year and a calendar year do not necessarily match  with regard to their start and end dates, the year is derived as the calendar year  occupied to a larger extent by the fiscal year, using a June through May fiscal year assignment. That means, fiscal years ending from the 1st of June onwards are assigned to the same calendar year. Either must be at most ten years in the past.")
@JsonPropertyOrder({
  StockNotationScreenerSearchDataFiscalYear.JSON_PROPERTY_YEAR_END,
  StockNotationScreenerSearchDataFiscalYear.JSON_PROPERTY_YEAR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StockNotationScreenerSearchDataFiscalYear implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_YEAR_END = "yearEnd";
  private BigDecimal yearEnd;

  public static final String JSON_PROPERTY_YEAR = "year";
  private BigDecimal year;


  public StockNotationScreenerSearchDataFiscalYear yearEnd(BigDecimal yearEnd) {
    this.yearEnd = yearEnd;
    return this;
  }

   /**
   * Calendar year of the ending date of the fiscal year.
   * @return yearEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Calendar year of the ending date of the fiscal year.")
  @JsonProperty(JSON_PROPERTY_YEAR_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYearEnd() {
    return yearEnd;
  }


  @JsonProperty(JSON_PROPERTY_YEAR_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYearEnd(BigDecimal yearEnd) {
    this.yearEnd = yearEnd;
  }


  public StockNotationScreenerSearchDataFiscalYear year(BigDecimal year) {
    this.year = year;
    return this;
  }

   /**
   * Derived fiscal year.
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Derived fiscal year.")
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear(BigDecimal year) {
    this.year = year;
  }


  /**
   * Return true if this _stock_notation_screener_search_data_fiscalYear object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StockNotationScreenerSearchDataFiscalYear stockNotationScreenerSearchDataFiscalYear = (StockNotationScreenerSearchDataFiscalYear) o;
    return Objects.equals(this.yearEnd, stockNotationScreenerSearchDataFiscalYear.yearEnd) &&
        Objects.equals(this.year, stockNotationScreenerSearchDataFiscalYear.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(yearEnd, year);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StockNotationScreenerSearchDataFiscalYear {\n");
    sb.append("    yearEnd: ").append(toIndentedString(yearEnd)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

