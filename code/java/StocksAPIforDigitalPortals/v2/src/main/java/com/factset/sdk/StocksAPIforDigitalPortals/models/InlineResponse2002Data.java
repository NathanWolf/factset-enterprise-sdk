/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002Notation;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002Status;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * InlineResponse2002Data
 */
@JsonPropertyOrder({
  InlineResponse2002Data.JSON_PROPERTY_NOTATION,
  InlineResponse2002Data.JSON_PROPERTY_BETA,
  InlineResponse2002Data.JSON_PROPERTY_CORRELATION,
  InlineResponse2002Data.JSON_PROPERTY_OUTPERFORMANCE,
  InlineResponse2002Data.JSON_PROPERTY_RELATIVE_STRENGTH,
  InlineResponse2002Data.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2002Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NOTATION = "notation";
  private InlineResponse2002Notation notation;

  public static final String JSON_PROPERTY_BETA = "beta";
  private BigDecimal beta;

  public static final String JSON_PROPERTY_CORRELATION = "correlation";
  private BigDecimal correlation;

  public static final String JSON_PROPERTY_OUTPERFORMANCE = "outperformance";
  private BigDecimal outperformance;

  public static final String JSON_PROPERTY_RELATIVE_STRENGTH = "relativeStrength";
  private BigDecimal relativeStrength;

  public static final String JSON_PROPERTY_STATUS = "status";
  private InlineResponse2002Status status;

  public InlineResponse2002Data() { 
  }

  public InlineResponse2002Data notation(InlineResponse2002Notation notation) {
    this.notation = notation;
    return this;
  }

   /**
   * Get notation
   * @return notation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002Notation getNotation() {
    return notation;
  }


  @JsonProperty(JSON_PROPERTY_NOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotation(InlineResponse2002Notation notation) {
    this.notation = notation;
  }


  public InlineResponse2002Data beta(BigDecimal beta) {
    this.beta = beta;
    return this;
  }

   /**
   * Beta of the notation.
   * @return beta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Beta of the notation.")
  @JsonProperty(JSON_PROPERTY_BETA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBeta() {
    return beta;
  }


  @JsonProperty(JSON_PROPERTY_BETA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeta(BigDecimal beta) {
    this.beta = beta;
  }


  public InlineResponse2002Data correlation(BigDecimal correlation) {
    this.correlation = correlation;
    return this;
  }

   /**
   * Correlation of the notation.
   * @return correlation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Correlation of the notation.")
  @JsonProperty(JSON_PROPERTY_CORRELATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCorrelation() {
    return correlation;
  }


  @JsonProperty(JSON_PROPERTY_CORRELATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorrelation(BigDecimal correlation) {
    this.correlation = correlation;
  }


  public InlineResponse2002Data outperformance(BigDecimal outperformance) {
    this.outperformance = outperformance;
    return this;
  }

   /**
   * Outperformance of the notation.
   * @return outperformance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Outperformance of the notation.")
  @JsonProperty(JSON_PROPERTY_OUTPERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOutperformance() {
    return outperformance;
  }


  @JsonProperty(JSON_PROPERTY_OUTPERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutperformance(BigDecimal outperformance) {
    this.outperformance = outperformance;
  }


  public InlineResponse2002Data relativeStrength(BigDecimal relativeStrength) {
    this.relativeStrength = relativeStrength;
    return this;
  }

   /**
   * Relative strength of the notation.
   * @return relativeStrength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Relative strength of the notation.")
  @JsonProperty(JSON_PROPERTY_RELATIVE_STRENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRelativeStrength() {
    return relativeStrength;
  }


  @JsonProperty(JSON_PROPERTY_RELATIVE_STRENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelativeStrength(BigDecimal relativeStrength) {
    this.relativeStrength = relativeStrength;
  }


  public InlineResponse2002Data status(InlineResponse2002Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002Status getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(InlineResponse2002Status status) {
    this.status = status;
  }


  /**
   * Return true if this inline_response_200_2_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002Data inlineResponse2002Data = (InlineResponse2002Data) o;
    return Objects.equals(this.notation, inlineResponse2002Data.notation) &&
        Objects.equals(this.beta, inlineResponse2002Data.beta) &&
        Objects.equals(this.correlation, inlineResponse2002Data.correlation) &&
        Objects.equals(this.outperformance, inlineResponse2002Data.outperformance) &&
        Objects.equals(this.relativeStrength, inlineResponse2002Data.relativeStrength) &&
        Objects.equals(this.status, inlineResponse2002Data.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notation, beta, correlation, outperformance, relativeStrength, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002Data {\n");
    sb.append("    notation: ").append(toIndentedString(notation)).append("\n");
    sb.append("    beta: ").append(toIndentedString(beta)).append("\n");
    sb.append("    correlation: ").append(toIndentedString(correlation)).append("\n");
    sb.append("    outperformance: ").append(toIndentedString(outperformance)).append("\n");
    sb.append("    relativeStrength: ").append(toIndentedString(relativeStrength)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

