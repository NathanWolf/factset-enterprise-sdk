/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Ratios.
 */
@ApiModel(description = "Ratios.")
@JsonPropertyOrder({
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_PRICE_EARNINGS,
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_PRICE_BOOK_VALUE,
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_PRICE_CASH_FLOW,
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_PRICE_SALES,
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_DIVIDEND_YIELD,
  InlineResponse20014CurrentKeyFiguresShareInstrumentRatios.JSON_PROPERTY_EARNINGS_YIELD
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse20014CurrentKeyFiguresShareInstrumentRatios implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRICE_EARNINGS = "priceEarnings";
  private JsonNullable<BigDecimal> priceEarnings = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PRICE_BOOK_VALUE = "priceBookValue";
  private JsonNullable<BigDecimal> priceBookValue = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PRICE_CASH_FLOW = "priceCashFlow";
  private JsonNullable<BigDecimal> priceCashFlow = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PRICE_SALES = "priceSales";
  private JsonNullable<BigDecimal> priceSales = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_DIVIDEND_YIELD = "dividendYield";
  private JsonNullable<BigDecimal> dividendYield = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EARNINGS_YIELD = "earningsYield";
  private JsonNullable<BigDecimal> earningsYield = JsonNullable.<BigDecimal>undefined();

  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios() { 
  }

  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios priceEarnings(BigDecimal priceEarnings) {
    this.priceEarnings = JsonNullable.<BigDecimal>of(priceEarnings);
    return this;
  }

   /**
   * Price earnings ratio.
   * @return priceEarnings
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Price earnings ratio.")
  @JsonIgnore

  public BigDecimal getPriceEarnings() {
        return priceEarnings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_EARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPriceEarnings_JsonNullable() {
    return priceEarnings;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_EARNINGS)
  public void setPriceEarnings_JsonNullable(JsonNullable<BigDecimal> priceEarnings) {
    this.priceEarnings = priceEarnings;
  }

  public void setPriceEarnings(BigDecimal priceEarnings) {
    this.priceEarnings = JsonNullable.<BigDecimal>of(priceEarnings);
  }


  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios priceBookValue(BigDecimal priceBookValue) {
    this.priceBookValue = JsonNullable.<BigDecimal>of(priceBookValue);
    return this;
  }

   /**
   * Price book value ratio.
   * @return priceBookValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Price book value ratio.")
  @JsonIgnore

  public BigDecimal getPriceBookValue() {
        return priceBookValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_BOOK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPriceBookValue_JsonNullable() {
    return priceBookValue;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_BOOK_VALUE)
  public void setPriceBookValue_JsonNullable(JsonNullable<BigDecimal> priceBookValue) {
    this.priceBookValue = priceBookValue;
  }

  public void setPriceBookValue(BigDecimal priceBookValue) {
    this.priceBookValue = JsonNullable.<BigDecimal>of(priceBookValue);
  }


  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios priceCashFlow(BigDecimal priceCashFlow) {
    this.priceCashFlow = JsonNullable.<BigDecimal>of(priceCashFlow);
    return this;
  }

   /**
   * Price cash flow ratio.
   * @return priceCashFlow
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Price cash flow ratio.")
  @JsonIgnore

  public BigDecimal getPriceCashFlow() {
        return priceCashFlow.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_CASH_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPriceCashFlow_JsonNullable() {
    return priceCashFlow;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_CASH_FLOW)
  public void setPriceCashFlow_JsonNullable(JsonNullable<BigDecimal> priceCashFlow) {
    this.priceCashFlow = priceCashFlow;
  }

  public void setPriceCashFlow(BigDecimal priceCashFlow) {
    this.priceCashFlow = JsonNullable.<BigDecimal>of(priceCashFlow);
  }


  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios priceSales(BigDecimal priceSales) {
    this.priceSales = JsonNullable.<BigDecimal>of(priceSales);
    return this;
  }

   /**
   * Price sales ratio.
   * @return priceSales
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Price sales ratio.")
  @JsonIgnore

  public BigDecimal getPriceSales() {
        return priceSales.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPriceSales_JsonNullable() {
    return priceSales;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_SALES)
  public void setPriceSales_JsonNullable(JsonNullable<BigDecimal> priceSales) {
    this.priceSales = priceSales;
  }

  public void setPriceSales(BigDecimal priceSales) {
    this.priceSales = JsonNullable.<BigDecimal>of(priceSales);
  }


  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios dividendYield(BigDecimal dividendYield) {
    this.dividendYield = JsonNullable.<BigDecimal>of(dividendYield);
    return this;
  }

   /**
   * Dividend yield.
   * @return dividendYield
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Dividend yield.")
  @JsonIgnore

  public BigDecimal getDividendYield() {
        return dividendYield.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVIDEND_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getDividendYield_JsonNullable() {
    return dividendYield;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVIDEND_YIELD)
  public void setDividendYield_JsonNullable(JsonNullable<BigDecimal> dividendYield) {
    this.dividendYield = dividendYield;
  }

  public void setDividendYield(BigDecimal dividendYield) {
    this.dividendYield = JsonNullable.<BigDecimal>of(dividendYield);
  }


  public InlineResponse20014CurrentKeyFiguresShareInstrumentRatios earningsYield(BigDecimal earningsYield) {
    this.earningsYield = JsonNullable.<BigDecimal>of(earningsYield);
    return this;
  }

   /**
   * Earnings yield.
   * @return earningsYield
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Earnings yield.")
  @JsonIgnore

  public BigDecimal getEarningsYield() {
        return earningsYield.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EARNINGS_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEarningsYield_JsonNullable() {
    return earningsYield;
  }
  
  @JsonProperty(JSON_PROPERTY_EARNINGS_YIELD)
  public void setEarningsYield_JsonNullable(JsonNullable<BigDecimal> earningsYield) {
    this.earningsYield = earningsYield;
  }

  public void setEarningsYield(BigDecimal earningsYield) {
    this.earningsYield = JsonNullable.<BigDecimal>of(earningsYield);
  }


  /**
   * Return true if this inline_response_200_14_currentKeyFigures_shareInstrument_ratios object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20014CurrentKeyFiguresShareInstrumentRatios inlineResponse20014CurrentKeyFiguresShareInstrumentRatios = (InlineResponse20014CurrentKeyFiguresShareInstrumentRatios) o;
    return equalsNullable(this.priceEarnings, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.priceEarnings) &&
        equalsNullable(this.priceBookValue, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.priceBookValue) &&
        equalsNullable(this.priceCashFlow, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.priceCashFlow) &&
        equalsNullable(this.priceSales, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.priceSales) &&
        equalsNullable(this.dividendYield, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.dividendYield) &&
        equalsNullable(this.earningsYield, inlineResponse20014CurrentKeyFiguresShareInstrumentRatios.earningsYield);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(priceEarnings), hashCodeNullable(priceBookValue), hashCodeNullable(priceCashFlow), hashCodeNullable(priceSales), hashCodeNullable(dividendYield), hashCodeNullable(earningsYield));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20014CurrentKeyFiguresShareInstrumentRatios {\n");
    sb.append("    priceEarnings: ").append(toIndentedString(priceEarnings)).append("\n");
    sb.append("    priceBookValue: ").append(toIndentedString(priceBookValue)).append("\n");
    sb.append("    priceCashFlow: ").append(toIndentedString(priceCashFlow)).append("\n");
    sb.append("    priceSales: ").append(toIndentedString(priceSales)).append("\n");
    sb.append("    dividendYield: ").append(toIndentedString(dividendYield)).append("\n");
    sb.append("    earningsYield: ").append(toIndentedString(earningsYield)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

