/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresCurrency;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Currency-dependent key figures. If no currency has been selected (see parameter &#x60;reportedKeyFigures.currencyDependentKeyFigures.currency.isoCode&#x60;), the returned values are in the reporting currency of the company.
 */
@ApiModel(description = "Currency-dependent key figures. If no currency has been selected (see parameter `reportedKeyFigures.currencyDependentKeyFigures.currency.isoCode`), the returned values are in the reporting currency of the company.")
@JsonPropertyOrder({
  InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.JSON_PROPERTY_CURRENCY,
  InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.JSON_PROPERTY_MARKET_CAPITALIZATION,
  InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.JSON_PROPERTY_EBIT,
  InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.JSON_PROPERTY_EBITDA,
  InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.JSON_PROPERTY_PER_SHARE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresCurrency currency;

  public static final String JSON_PROPERTY_MARKET_CAPITALIZATION = "marketCapitalization";
  private JsonNullable<BigDecimal> marketCapitalization = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EBIT = "ebit";
  private JsonNullable<BigDecimal> ebit = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EBITDA = "ebitda";
  private JsonNullable<BigDecimal> ebitda = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PER_SHARE = "perShare";
  private InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare perShare;

  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures() { 
  }

  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures currency(InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresCurrency currency) {
    this.currency = currency;
  }


  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures marketCapitalization(BigDecimal marketCapitalization) {
    this.marketCapitalization = JsonNullable.<BigDecimal>of(marketCapitalization);
    return this;
  }

   /**
   * Market capitalization, which is the market value of the shares outstanding over all types of shares of the company.
   * @return marketCapitalization
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Market capitalization, which is the market value of the shares outstanding over all types of shares of the company.")
  @JsonIgnore

  public BigDecimal getMarketCapitalization() {
        return marketCapitalization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MARKET_CAPITALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMarketCapitalization_JsonNullable() {
    return marketCapitalization;
  }
  
  @JsonProperty(JSON_PROPERTY_MARKET_CAPITALIZATION)
  public void setMarketCapitalization_JsonNullable(JsonNullable<BigDecimal> marketCapitalization) {
    this.marketCapitalization = marketCapitalization;
  }

  public void setMarketCapitalization(BigDecimal marketCapitalization) {
    this.marketCapitalization = JsonNullable.<BigDecimal>of(marketCapitalization);
  }


  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures ebit(BigDecimal ebit) {
    this.ebit = JsonNullable.<BigDecimal>of(ebit);
    return this;
  }

   /**
   * EBIT (earnings before interest and taxes).
   * @return ebit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "EBIT (earnings before interest and taxes).")
  @JsonIgnore

  public BigDecimal getEbit() {
        return ebit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEbit_JsonNullable() {
    return ebit;
  }
  
  @JsonProperty(JSON_PROPERTY_EBIT)
  public void setEbit_JsonNullable(JsonNullable<BigDecimal> ebit) {
    this.ebit = ebit;
  }

  public void setEbit(BigDecimal ebit) {
    this.ebit = JsonNullable.<BigDecimal>of(ebit);
  }


  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures ebitda(BigDecimal ebitda) {
    this.ebitda = JsonNullable.<BigDecimal>of(ebitda);
    return this;
  }

   /**
   * EBITDA (earnings before interest, taxes, depreciation, and amortization).
   * @return ebitda
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "EBITDA (earnings before interest, taxes, depreciation, and amortization).")
  @JsonIgnore

  public BigDecimal getEbitda() {
        return ebitda.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEbitda_JsonNullable() {
    return ebitda;
  }
  
  @JsonProperty(JSON_PROPERTY_EBITDA)
  public void setEbitda_JsonNullable(JsonNullable<BigDecimal> ebitda) {
    this.ebitda = ebitda;
  }

  public void setEbitda(BigDecimal ebitda) {
    this.ebitda = JsonNullable.<BigDecimal>of(ebitda);
  }


  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures perShare(InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare perShare) {
    this.perShare = perShare;
    return this;
  }

   /**
   * Get perShare
   * @return perShare
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare getPerShare() {
    return perShare;
  }


  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerShare(InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare perShare) {
    this.perShare = perShare;
  }


  /**
   * Return true if this inline_response_200_14_reportedKeyFigures_firstFiscalYear_currencyDependentKeyFigures object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures = (InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures) o;
    return Objects.equals(this.currency, inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.currency) &&
        equalsNullable(this.marketCapitalization, inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.marketCapitalization) &&
        equalsNullable(this.ebit, inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.ebit) &&
        equalsNullable(this.ebitda, inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.ebitda) &&
        Objects.equals(this.perShare, inlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures.perShare);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, hashCodeNullable(marketCapitalization), hashCodeNullable(ebit), hashCodeNullable(ebitda), perShare);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20014ReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFigures {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    marketCapitalization: ").append(toIndentedString(marketCapitalization)).append("\n");
    sb.append("    ebit: ").append(toIndentedString(ebit)).append("\n");
    sb.append("    ebitda: ").append(toIndentedString(ebitda)).append("\n");
    sb.append("    perShare: ").append(toIndentedString(perShare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

