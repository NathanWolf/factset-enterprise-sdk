/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementClaimLossExpense;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementEbit;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementEbitda;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementGrossIncome;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementInterestExpense;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementInterestIncome;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementLoanLossProvision;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementLongTermInsuranceReserves;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementNetIncome;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementNetInterestIncome;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementOperatingExpense;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementOperatingIncome;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatementSales;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Income statement data.
 */
@ApiModel(description = "Income statement data.")
@JsonPropertyOrder({
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_SALES,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_GROSS_INCOME,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_EBIT,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_EBITDA,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_INTEREST_INCOME,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_INTEREST_EXPENSE,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_LOAN_LOSS_PROVISION,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_NET_INTEREST_INCOME,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_NET_INCOME,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_OPERATING_INCOME,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_OPERATING_EXPENSE,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_CLAIM_LOSS_EXPENSE,
  InlineResponse2001DataIncomeStatement.JSON_PROPERTY_LONG_TERM_INSURANCE_RESERVES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse2001DataIncomeStatement implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SALES = "sales";
  private InlineResponse2001DataIncomeStatementSales sales;

  public static final String JSON_PROPERTY_GROSS_INCOME = "grossIncome";
  private InlineResponse2001DataIncomeStatementGrossIncome grossIncome;

  public static final String JSON_PROPERTY_EBIT = "ebit";
  private InlineResponse2001DataIncomeStatementEbit ebit;

  public static final String JSON_PROPERTY_EBITDA = "ebitda";
  private InlineResponse2001DataIncomeStatementEbitda ebitda;

  public static final String JSON_PROPERTY_INTEREST_INCOME = "interestIncome";
  private InlineResponse2001DataIncomeStatementInterestIncome interestIncome;

  public static final String JSON_PROPERTY_INTEREST_EXPENSE = "interestExpense";
  private InlineResponse2001DataIncomeStatementInterestExpense interestExpense;

  public static final String JSON_PROPERTY_LOAN_LOSS_PROVISION = "loanLossProvision";
  private InlineResponse2001DataIncomeStatementLoanLossProvision loanLossProvision;

  public static final String JSON_PROPERTY_NET_INTEREST_INCOME = "netInterestIncome";
  private InlineResponse2001DataIncomeStatementNetInterestIncome netInterestIncome;

  public static final String JSON_PROPERTY_NET_INCOME = "netIncome";
  private InlineResponse2001DataIncomeStatementNetIncome netIncome;

  public static final String JSON_PROPERTY_OPERATING_INCOME = "operatingIncome";
  private InlineResponse2001DataIncomeStatementOperatingIncome operatingIncome;

  public static final String JSON_PROPERTY_OPERATING_EXPENSE = "operatingExpense";
  private InlineResponse2001DataIncomeStatementOperatingExpense operatingExpense;

  public static final String JSON_PROPERTY_CLAIM_LOSS_EXPENSE = "claimLossExpense";
  private InlineResponse2001DataIncomeStatementClaimLossExpense claimLossExpense;

  public static final String JSON_PROPERTY_LONG_TERM_INSURANCE_RESERVES = "longTermInsuranceReserves";
  private InlineResponse2001DataIncomeStatementLongTermInsuranceReserves longTermInsuranceReserves;

  public InlineResponse2001DataIncomeStatement() { 
  }

  public InlineResponse2001DataIncomeStatement sales(InlineResponse2001DataIncomeStatementSales sales) {
    this.sales = sales;
    return this;
  }

   /**
   * Get sales
   * @return sales
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementSales getSales() {
    return sales;
  }


  @JsonProperty(JSON_PROPERTY_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSales(InlineResponse2001DataIncomeStatementSales sales) {
    this.sales = sales;
  }


  public InlineResponse2001DataIncomeStatement grossIncome(InlineResponse2001DataIncomeStatementGrossIncome grossIncome) {
    this.grossIncome = grossIncome;
    return this;
  }

   /**
   * Get grossIncome
   * @return grossIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GROSS_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementGrossIncome getGrossIncome() {
    return grossIncome;
  }


  @JsonProperty(JSON_PROPERTY_GROSS_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrossIncome(InlineResponse2001DataIncomeStatementGrossIncome grossIncome) {
    this.grossIncome = grossIncome;
  }


  public InlineResponse2001DataIncomeStatement ebit(InlineResponse2001DataIncomeStatementEbit ebit) {
    this.ebit = ebit;
    return this;
  }

   /**
   * Get ebit
   * @return ebit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementEbit getEbit() {
    return ebit;
  }


  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEbit(InlineResponse2001DataIncomeStatementEbit ebit) {
    this.ebit = ebit;
  }


  public InlineResponse2001DataIncomeStatement ebitda(InlineResponse2001DataIncomeStatementEbitda ebitda) {
    this.ebitda = ebitda;
    return this;
  }

   /**
   * Get ebitda
   * @return ebitda
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementEbitda getEbitda() {
    return ebitda;
  }


  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEbitda(InlineResponse2001DataIncomeStatementEbitda ebitda) {
    this.ebitda = ebitda;
  }


  public InlineResponse2001DataIncomeStatement interestIncome(InlineResponse2001DataIncomeStatementInterestIncome interestIncome) {
    this.interestIncome = interestIncome;
    return this;
  }

   /**
   * Get interestIncome
   * @return interestIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTEREST_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementInterestIncome getInterestIncome() {
    return interestIncome;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestIncome(InlineResponse2001DataIncomeStatementInterestIncome interestIncome) {
    this.interestIncome = interestIncome;
  }


  public InlineResponse2001DataIncomeStatement interestExpense(InlineResponse2001DataIncomeStatementInterestExpense interestExpense) {
    this.interestExpense = interestExpense;
    return this;
  }

   /**
   * Get interestExpense
   * @return interestExpense
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTEREST_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementInterestExpense getInterestExpense() {
    return interestExpense;
  }


  @JsonProperty(JSON_PROPERTY_INTEREST_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterestExpense(InlineResponse2001DataIncomeStatementInterestExpense interestExpense) {
    this.interestExpense = interestExpense;
  }


  public InlineResponse2001DataIncomeStatement loanLossProvision(InlineResponse2001DataIncomeStatementLoanLossProvision loanLossProvision) {
    this.loanLossProvision = loanLossProvision;
    return this;
  }

   /**
   * Get loanLossProvision
   * @return loanLossProvision
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOAN_LOSS_PROVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementLoanLossProvision getLoanLossProvision() {
    return loanLossProvision;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_LOSS_PROVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoanLossProvision(InlineResponse2001DataIncomeStatementLoanLossProvision loanLossProvision) {
    this.loanLossProvision = loanLossProvision;
  }


  public InlineResponse2001DataIncomeStatement netInterestIncome(InlineResponse2001DataIncomeStatementNetInterestIncome netInterestIncome) {
    this.netInterestIncome = netInterestIncome;
    return this;
  }

   /**
   * Get netInterestIncome
   * @return netInterestIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NET_INTEREST_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementNetInterestIncome getNetInterestIncome() {
    return netInterestIncome;
  }


  @JsonProperty(JSON_PROPERTY_NET_INTEREST_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetInterestIncome(InlineResponse2001DataIncomeStatementNetInterestIncome netInterestIncome) {
    this.netInterestIncome = netInterestIncome;
  }


  public InlineResponse2001DataIncomeStatement netIncome(InlineResponse2001DataIncomeStatementNetIncome netIncome) {
    this.netIncome = netIncome;
    return this;
  }

   /**
   * Get netIncome
   * @return netIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NET_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementNetIncome getNetIncome() {
    return netIncome;
  }


  @JsonProperty(JSON_PROPERTY_NET_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetIncome(InlineResponse2001DataIncomeStatementNetIncome netIncome) {
    this.netIncome = netIncome;
  }


  public InlineResponse2001DataIncomeStatement operatingIncome(InlineResponse2001DataIncomeStatementOperatingIncome operatingIncome) {
    this.operatingIncome = operatingIncome;
    return this;
  }

   /**
   * Get operatingIncome
   * @return operatingIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATING_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementOperatingIncome getOperatingIncome() {
    return operatingIncome;
  }


  @JsonProperty(JSON_PROPERTY_OPERATING_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatingIncome(InlineResponse2001DataIncomeStatementOperatingIncome operatingIncome) {
    this.operatingIncome = operatingIncome;
  }


  public InlineResponse2001DataIncomeStatement operatingExpense(InlineResponse2001DataIncomeStatementOperatingExpense operatingExpense) {
    this.operatingExpense = operatingExpense;
    return this;
  }

   /**
   * Get operatingExpense
   * @return operatingExpense
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATING_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementOperatingExpense getOperatingExpense() {
    return operatingExpense;
  }


  @JsonProperty(JSON_PROPERTY_OPERATING_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatingExpense(InlineResponse2001DataIncomeStatementOperatingExpense operatingExpense) {
    this.operatingExpense = operatingExpense;
  }


  public InlineResponse2001DataIncomeStatement claimLossExpense(InlineResponse2001DataIncomeStatementClaimLossExpense claimLossExpense) {
    this.claimLossExpense = claimLossExpense;
    return this;
  }

   /**
   * Get claimLossExpense
   * @return claimLossExpense
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLAIM_LOSS_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementClaimLossExpense getClaimLossExpense() {
    return claimLossExpense;
  }


  @JsonProperty(JSON_PROPERTY_CLAIM_LOSS_EXPENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClaimLossExpense(InlineResponse2001DataIncomeStatementClaimLossExpense claimLossExpense) {
    this.claimLossExpense = claimLossExpense;
  }


  public InlineResponse2001DataIncomeStatement longTermInsuranceReserves(InlineResponse2001DataIncomeStatementLongTermInsuranceReserves longTermInsuranceReserves) {
    this.longTermInsuranceReserves = longTermInsuranceReserves;
    return this;
  }

   /**
   * Get longTermInsuranceReserves
   * @return longTermInsuranceReserves
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LONG_TERM_INSURANCE_RESERVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatementLongTermInsuranceReserves getLongTermInsuranceReserves() {
    return longTermInsuranceReserves;
  }


  @JsonProperty(JSON_PROPERTY_LONG_TERM_INSURANCE_RESERVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLongTermInsuranceReserves(InlineResponse2001DataIncomeStatementLongTermInsuranceReserves longTermInsuranceReserves) {
    this.longTermInsuranceReserves = longTermInsuranceReserves;
  }


  /**
   * Return true if this inline_response_200_1_data_incomeStatement object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001DataIncomeStatement inlineResponse2001DataIncomeStatement = (InlineResponse2001DataIncomeStatement) o;
    return Objects.equals(this.sales, inlineResponse2001DataIncomeStatement.sales) &&
        Objects.equals(this.grossIncome, inlineResponse2001DataIncomeStatement.grossIncome) &&
        Objects.equals(this.ebit, inlineResponse2001DataIncomeStatement.ebit) &&
        Objects.equals(this.ebitda, inlineResponse2001DataIncomeStatement.ebitda) &&
        Objects.equals(this.interestIncome, inlineResponse2001DataIncomeStatement.interestIncome) &&
        Objects.equals(this.interestExpense, inlineResponse2001DataIncomeStatement.interestExpense) &&
        Objects.equals(this.loanLossProvision, inlineResponse2001DataIncomeStatement.loanLossProvision) &&
        Objects.equals(this.netInterestIncome, inlineResponse2001DataIncomeStatement.netInterestIncome) &&
        Objects.equals(this.netIncome, inlineResponse2001DataIncomeStatement.netIncome) &&
        Objects.equals(this.operatingIncome, inlineResponse2001DataIncomeStatement.operatingIncome) &&
        Objects.equals(this.operatingExpense, inlineResponse2001DataIncomeStatement.operatingExpense) &&
        Objects.equals(this.claimLossExpense, inlineResponse2001DataIncomeStatement.claimLossExpense) &&
        Objects.equals(this.longTermInsuranceReserves, inlineResponse2001DataIncomeStatement.longTermInsuranceReserves);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sales, grossIncome, ebit, ebitda, interestIncome, interestExpense, loanLossProvision, netInterestIncome, netIncome, operatingIncome, operatingExpense, claimLossExpense, longTermInsuranceReserves);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001DataIncomeStatement {\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    grossIncome: ").append(toIndentedString(grossIncome)).append("\n");
    sb.append("    ebit: ").append(toIndentedString(ebit)).append("\n");
    sb.append("    ebitda: ").append(toIndentedString(ebitda)).append("\n");
    sb.append("    interestIncome: ").append(toIndentedString(interestIncome)).append("\n");
    sb.append("    interestExpense: ").append(toIndentedString(interestExpense)).append("\n");
    sb.append("    loanLossProvision: ").append(toIndentedString(loanLossProvision)).append("\n");
    sb.append("    netInterestIncome: ").append(toIndentedString(netInterestIncome)).append("\n");
    sb.append("    netIncome: ").append(toIndentedString(netIncome)).append("\n");
    sb.append("    operatingIncome: ").append(toIndentedString(operatingIncome)).append("\n");
    sb.append("    operatingExpense: ").append(toIndentedString(operatingExpense)).append("\n");
    sb.append("    claimLossExpense: ").append(toIndentedString(claimLossExpense)).append("\n");
    sb.append("    longTermInsuranceReserves: ").append(toIndentedString(longTermInsuranceReserves)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

