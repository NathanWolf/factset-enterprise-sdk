/*
 * Stocks API For Digital Portals
 * The stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts: Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with potentially daily updates).  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the Bonds API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesCurrency;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbit;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbitda;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesPerShare;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Currency-dependent estimates. If no currency has been selected (see parameter &#x60;estimates.currencyDependentEstimates.currency.isoCode&#x60;) the currency in which the analysts report is used.
 */
@ApiModel(description = "Currency-dependent estimates. If no currency has been selected (see parameter `estimates.currencyDependentEstimates.currency.isoCode`) the currency in which the analysts report is used.")
@JsonPropertyOrder({
  InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.JSON_PROPERTY_CURRENCY,
  InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.JSON_PROPERTY_EBIT,
  InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.JSON_PROPERTY_EBITDA,
  InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.JSON_PROPERTY_PER_SHARE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesCurrency currency;

  public static final String JSON_PROPERTY_EBIT = "ebit";
  private InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbit ebit;

  public static final String JSON_PROPERTY_EBITDA = "ebitda";
  private InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbitda ebitda;

  public static final String JSON_PROPERTY_PER_SHARE = "perShare";
  private InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesPerShare perShare;

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates() { 
  }

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates currency(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesCurrency currency) {
    this.currency = currency;
  }


  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates ebit(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbit ebit) {
    this.ebit = ebit;
    return this;
  }

   /**
   * Get ebit
   * @return ebit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbit getEbit() {
    return ebit;
  }


  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEbit(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbit ebit) {
    this.ebit = ebit;
  }


  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates ebitda(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbitda ebitda) {
    this.ebitda = ebitda;
    return this;
  }

   /**
   * Get ebitda
   * @return ebitda
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbitda getEbitda() {
    return ebitda;
  }


  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEbitda(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesEbitda ebitda) {
    this.ebitda = ebitda;
  }


  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates perShare(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesPerShare perShare) {
    this.perShare = perShare;
    return this;
  }

   /**
   * Get perShare
   * @return perShare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesPerShare getPerShare() {
    return perShare;
  }


  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerShare(InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimatesPerShare perShare) {
    this.perShare = perShare;
  }


  /**
   * Return true if this inline_response_200_11_estimates_firstFiscalYear_currencyDependentEstimates object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates inlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates = (InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates) o;
    return Objects.equals(this.currency, inlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.currency) &&
        Objects.equals(this.ebit, inlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.ebit) &&
        Objects.equals(this.ebitda, inlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.ebitda) &&
        Objects.equals(this.perShare, inlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates.perShare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, ebit, ebitda, perShare);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20011EstimatesFirstFiscalYearCurrencyDependentEstimates {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    ebit: ").append(toIndentedString(ebit)).append("\n");
    sb.append("    ebitda: ").append(toIndentedString(ebitda)).append("\n");
    sb.append("    perShare: ").append(toIndentedString(perShare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

