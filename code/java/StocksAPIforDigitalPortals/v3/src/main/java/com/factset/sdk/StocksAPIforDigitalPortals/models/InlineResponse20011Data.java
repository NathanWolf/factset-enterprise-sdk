/*
 * Stocks API For Digital Portals
 * The stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts: Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with potentially daily updates).  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the Bonds API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20010Fsym;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Compliance;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Estimates;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Instrument;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Market;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Nsin;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Performance;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Recommendation;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011ReportedKeyFigures;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011RsiWilder;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011SimpleMovingAverage;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011TradingValue;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011ValueUnit;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse20011Volatility;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * InlineResponse20011Data
 */
@JsonPropertyOrder({
  InlineResponse20011Data.JSON_PROPERTY_ID,
  InlineResponse20011Data.JSON_PROPERTY_VALUE_UNIT,
  InlineResponse20011Data.JSON_PROPERTY_MARKET,
  InlineResponse20011Data.JSON_PROPERTY_SYMBOL,
  InlineResponse20011Data.JSON_PROPERTY_NSIN,
  InlineResponse20011Data.JSON_PROPERTY_FSYM,
  InlineResponse20011Data.JSON_PROPERTY_INSTRUMENT,
  InlineResponse20011Data.JSON_PROPERTY_COMPLIANCE,
  InlineResponse20011Data.JSON_PROPERTY_REPORTED_KEY_FIGURES,
  InlineResponse20011Data.JSON_PROPERTY_PERFORMANCE,
  InlineResponse20011Data.JSON_PROPERTY_VOLATILITY,
  InlineResponse20011Data.JSON_PROPERTY_TRADING_VALUE,
  InlineResponse20011Data.JSON_PROPERTY_SIMPLE_MOVING_AVERAGE,
  InlineResponse20011Data.JSON_PROPERTY_RSI_WILDER,
  InlineResponse20011Data.JSON_PROPERTY_RECOMMENDATION,
  InlineResponse20011Data.JSON_PROPERTY_ESTIMATES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20011Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private InlineResponse20011ValueUnit valueUnit;

  public static final String JSON_PROPERTY_MARKET = "market";
  private InlineResponse20011Market market;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_NSIN = "nsin";
  private InlineResponse20011Nsin nsin;

  public static final String JSON_PROPERTY_FSYM = "fsym";
  private InlineResponse20010Fsym fsym;

  public static final String JSON_PROPERTY_INSTRUMENT = "instrument";
  private InlineResponse20011Instrument instrument;

  public static final String JSON_PROPERTY_COMPLIANCE = "compliance";
  private InlineResponse20011Compliance compliance;

  public static final String JSON_PROPERTY_REPORTED_KEY_FIGURES = "reportedKeyFigures";
  private InlineResponse20011ReportedKeyFigures reportedKeyFigures;

  public static final String JSON_PROPERTY_PERFORMANCE = "performance";
  private InlineResponse20011Performance performance;

  public static final String JSON_PROPERTY_VOLATILITY = "volatility";
  private InlineResponse20011Volatility volatility;

  public static final String JSON_PROPERTY_TRADING_VALUE = "tradingValue";
  private InlineResponse20011TradingValue tradingValue;

  public static final String JSON_PROPERTY_SIMPLE_MOVING_AVERAGE = "simpleMovingAverage";
  private InlineResponse20011SimpleMovingAverage simpleMovingAverage;

  public static final String JSON_PROPERTY_RSI_WILDER = "rsiWilder";
  private InlineResponse20011RsiWilder rsiWilder;

  public static final String JSON_PROPERTY_RECOMMENDATION = "recommendation";
  private InlineResponse20011Recommendation recommendation;

  public static final String JSON_PROPERTY_ESTIMATES = "estimates";
  private InlineResponse20011Estimates estimates;

  public InlineResponse20011Data() { 
  }

  public InlineResponse20011Data id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the notation.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of the notation.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public InlineResponse20011Data valueUnit(InlineResponse20011ValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011ValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(InlineResponse20011ValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public InlineResponse20011Data market(InlineResponse20011Market market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Market getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(InlineResponse20011Market market) {
    this.market = market;
  }


  public InlineResponse20011Data symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.
   * @return symbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public InlineResponse20011Data nsin(InlineResponse20011Nsin nsin) {
    this.nsin = nsin;
    return this;
  }

   /**
   * Get nsin
   * @return nsin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NSIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Nsin getNsin() {
    return nsin;
  }


  @JsonProperty(JSON_PROPERTY_NSIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNsin(InlineResponse20011Nsin nsin) {
    this.nsin = nsin;
  }


  public InlineResponse20011Data fsym(InlineResponse20010Fsym fsym) {
    this.fsym = fsym;
    return this;
  }

   /**
   * Get fsym
   * @return fsym
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20010Fsym getFsym() {
    return fsym;
  }


  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsym(InlineResponse20010Fsym fsym) {
    this.fsym = fsym;
  }


  public InlineResponse20011Data instrument(InlineResponse20011Instrument instrument) {
    this.instrument = instrument;
    return this;
  }

   /**
   * Get instrument
   * @return instrument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Instrument getInstrument() {
    return instrument;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrument(InlineResponse20011Instrument instrument) {
    this.instrument = instrument;
  }


  public InlineResponse20011Data compliance(InlineResponse20011Compliance compliance) {
    this.compliance = compliance;
    return this;
  }

   /**
   * Get compliance
   * @return compliance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPLIANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Compliance getCompliance() {
    return compliance;
  }


  @JsonProperty(JSON_PROPERTY_COMPLIANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompliance(InlineResponse20011Compliance compliance) {
    this.compliance = compliance;
  }


  public InlineResponse20011Data reportedKeyFigures(InlineResponse20011ReportedKeyFigures reportedKeyFigures) {
    this.reportedKeyFigures = reportedKeyFigures;
    return this;
  }

   /**
   * Get reportedKeyFigures
   * @return reportedKeyFigures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTED_KEY_FIGURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011ReportedKeyFigures getReportedKeyFigures() {
    return reportedKeyFigures;
  }


  @JsonProperty(JSON_PROPERTY_REPORTED_KEY_FIGURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportedKeyFigures(InlineResponse20011ReportedKeyFigures reportedKeyFigures) {
    this.reportedKeyFigures = reportedKeyFigures;
  }


  public InlineResponse20011Data performance(InlineResponse20011Performance performance) {
    this.performance = performance;
    return this;
  }

   /**
   * Get performance
   * @return performance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Performance getPerformance() {
    return performance;
  }


  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerformance(InlineResponse20011Performance performance) {
    this.performance = performance;
  }


  public InlineResponse20011Data volatility(InlineResponse20011Volatility volatility) {
    this.volatility = volatility;
    return this;
  }

   /**
   * Get volatility
   * @return volatility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Volatility getVolatility() {
    return volatility;
  }


  @JsonProperty(JSON_PROPERTY_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolatility(InlineResponse20011Volatility volatility) {
    this.volatility = volatility;
  }


  public InlineResponse20011Data tradingValue(InlineResponse20011TradingValue tradingValue) {
    this.tradingValue = tradingValue;
    return this;
  }

   /**
   * Get tradingValue
   * @return tradingValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011TradingValue getTradingValue() {
    return tradingValue;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradingValue(InlineResponse20011TradingValue tradingValue) {
    this.tradingValue = tradingValue;
  }


  public InlineResponse20011Data simpleMovingAverage(InlineResponse20011SimpleMovingAverage simpleMovingAverage) {
    this.simpleMovingAverage = simpleMovingAverage;
    return this;
  }

   /**
   * Get simpleMovingAverage
   * @return simpleMovingAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIMPLE_MOVING_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011SimpleMovingAverage getSimpleMovingAverage() {
    return simpleMovingAverage;
  }


  @JsonProperty(JSON_PROPERTY_SIMPLE_MOVING_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimpleMovingAverage(InlineResponse20011SimpleMovingAverage simpleMovingAverage) {
    this.simpleMovingAverage = simpleMovingAverage;
  }


  public InlineResponse20011Data rsiWilder(InlineResponse20011RsiWilder rsiWilder) {
    this.rsiWilder = rsiWilder;
    return this;
  }

   /**
   * Get rsiWilder
   * @return rsiWilder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RSI_WILDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011RsiWilder getRsiWilder() {
    return rsiWilder;
  }


  @JsonProperty(JSON_PROPERTY_RSI_WILDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRsiWilder(InlineResponse20011RsiWilder rsiWilder) {
    this.rsiWilder = rsiWilder;
  }


  public InlineResponse20011Data recommendation(InlineResponse20011Recommendation recommendation) {
    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Recommendation getRecommendation() {
    return recommendation;
  }


  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecommendation(InlineResponse20011Recommendation recommendation) {
    this.recommendation = recommendation;
  }


  public InlineResponse20011Data estimates(InlineResponse20011Estimates estimates) {
    this.estimates = estimates;
    return this;
  }

   /**
   * Get estimates
   * @return estimates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ESTIMATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20011Estimates getEstimates() {
    return estimates;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimates(InlineResponse20011Estimates estimates) {
    this.estimates = estimates;
  }


  /**
   * Return true if this inline_response_200_11_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20011Data inlineResponse20011Data = (InlineResponse20011Data) o;
    return Objects.equals(this.id, inlineResponse20011Data.id) &&
        Objects.equals(this.valueUnit, inlineResponse20011Data.valueUnit) &&
        Objects.equals(this.market, inlineResponse20011Data.market) &&
        Objects.equals(this.symbol, inlineResponse20011Data.symbol) &&
        Objects.equals(this.nsin, inlineResponse20011Data.nsin) &&
        Objects.equals(this.fsym, inlineResponse20011Data.fsym) &&
        Objects.equals(this.instrument, inlineResponse20011Data.instrument) &&
        Objects.equals(this.compliance, inlineResponse20011Data.compliance) &&
        Objects.equals(this.reportedKeyFigures, inlineResponse20011Data.reportedKeyFigures) &&
        Objects.equals(this.performance, inlineResponse20011Data.performance) &&
        Objects.equals(this.volatility, inlineResponse20011Data.volatility) &&
        Objects.equals(this.tradingValue, inlineResponse20011Data.tradingValue) &&
        Objects.equals(this.simpleMovingAverage, inlineResponse20011Data.simpleMovingAverage) &&
        Objects.equals(this.rsiWilder, inlineResponse20011Data.rsiWilder) &&
        Objects.equals(this.recommendation, inlineResponse20011Data.recommendation) &&
        Objects.equals(this.estimates, inlineResponse20011Data.estimates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, valueUnit, market, symbol, nsin, fsym, instrument, compliance, reportedKeyFigures, performance, volatility, tradingValue, simpleMovingAverage, rsiWilder, recommendation, estimates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20011Data {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    nsin: ").append(toIndentedString(nsin)).append("\n");
    sb.append("    fsym: ").append(toIndentedString(fsym)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    compliance: ").append(toIndentedString(compliance)).append("\n");
    sb.append("    reportedKeyFigures: ").append(toIndentedString(reportedKeyFigures)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("    volatility: ").append(toIndentedString(volatility)).append("\n");
    sb.append("    tradingValue: ").append(toIndentedString(tradingValue)).append("\n");
    sb.append("    simpleMovingAverage: ").append(toIndentedString(simpleMovingAverage)).append("\n");
    sb.append("    rsiWilder: ").append(toIndentedString(rsiWilder)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    estimates: ").append(toIndentedString(estimates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

