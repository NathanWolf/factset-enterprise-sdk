/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonth1;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths3;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths6;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceWeek1;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYear1;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears3;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears5;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataPerformanceEndOfDayYearToDate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year for different time ranges.
 */
@ApiModel(description = "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year for different time ranges.")
@JsonPropertyOrder({
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_WEEK1,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_MONTH1,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_MONTHS3,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_MONTHS6,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_YEAR1,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_YEARS3,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_YEARS5,
  PostStockNotationScreenerSearchRequestDataVolatility.JSON_PROPERTY_YEAR_TO_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PostStockNotationScreenerSearchRequestDataVolatility implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_WEEK1 = "week1";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceWeek1 week1;

  public static final String JSON_PROPERTY_MONTH1 = "month1";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonth1 month1;

  public static final String JSON_PROPERTY_MONTHS3 = "months3";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths3 months3;

  public static final String JSON_PROPERTY_MONTHS6 = "months6";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths6 months6;

  public static final String JSON_PROPERTY_YEAR1 = "year1";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYear1 year1;

  public static final String JSON_PROPERTY_YEARS3 = "years3";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears3 years3;

  public static final String JSON_PROPERTY_YEARS5 = "years5";
  private PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears5 years5;

  public static final String JSON_PROPERTY_YEAR_TO_DATE = "yearToDate";
  private PostStockNotationScreenerSearchRequestDataPerformanceEndOfDayYearToDate yearToDate;

  public PostStockNotationScreenerSearchRequestDataVolatility() { 
  }

  public PostStockNotationScreenerSearchRequestDataVolatility week1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceWeek1 week1) {
    this.week1 = week1;
    return this;
  }

   /**
   * Get week1
   * @return week1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEEK1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceWeek1 getWeek1() {
    return week1;
  }


  @JsonProperty(JSON_PROPERTY_WEEK1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeek1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceWeek1 week1) {
    this.week1 = week1;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility month1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonth1 month1) {
    this.month1 = month1;
    return this;
  }

   /**
   * Get month1
   * @return month1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MONTH1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonth1 getMonth1() {
    return month1;
  }


  @JsonProperty(JSON_PROPERTY_MONTH1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonth1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonth1 month1) {
    this.month1 = month1;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility months3(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths3 months3) {
    this.months3 = months3;
    return this;
  }

   /**
   * Get months3
   * @return months3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MONTHS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths3 getMonths3() {
    return months3;
  }


  @JsonProperty(JSON_PROPERTY_MONTHS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonths3(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths3 months3) {
    this.months3 = months3;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility months6(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths6 months6) {
    this.months6 = months6;
    return this;
  }

   /**
   * Get months6
   * @return months6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MONTHS6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths6 getMonths6() {
    return months6;
  }


  @JsonProperty(JSON_PROPERTY_MONTHS6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonths6(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceMonths6 months6) {
    this.months6 = months6;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility year1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYear1 year1) {
    this.year1 = year1;
    return this;
  }

   /**
   * Get year1
   * @return year1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YEAR1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYear1 getYear1() {
    return year1;
  }


  @JsonProperty(JSON_PROPERTY_YEAR1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear1(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYear1 year1) {
    this.year1 = year1;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility years3(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears3 years3) {
    this.years3 = years3;
    return this;
  }

   /**
   * Get years3
   * @return years3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YEARS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears3 getYears3() {
    return years3;
  }


  @JsonProperty(JSON_PROPERTY_YEARS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYears3(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears3 years3) {
    this.years3 = years3;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility years5(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears5 years5) {
    this.years5 = years5;
    return this;
  }

   /**
   * Get years5
   * @return years5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YEARS5)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears5 getYears5() {
    return years5;
  }


  @JsonProperty(JSON_PROPERTY_YEARS5)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYears5(PostStockNotationScreenerSearchRequestDataBenchmarkOutperformanceYears5 years5) {
    this.years5 = years5;
  }


  public PostStockNotationScreenerSearchRequestDataVolatility yearToDate(PostStockNotationScreenerSearchRequestDataPerformanceEndOfDayYearToDate yearToDate) {
    this.yearToDate = yearToDate;
    return this;
  }

   /**
   * Get yearToDate
   * @return yearToDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataPerformanceEndOfDayYearToDate getYearToDate() {
    return yearToDate;
  }


  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYearToDate(PostStockNotationScreenerSearchRequestDataPerformanceEndOfDayYearToDate yearToDate) {
    this.yearToDate = yearToDate;
  }


  /**
   * Return true if this PostStockNotationScreenerSearchRequest_data_volatility object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostStockNotationScreenerSearchRequestDataVolatility postStockNotationScreenerSearchRequestDataVolatility = (PostStockNotationScreenerSearchRequestDataVolatility) o;
    return Objects.equals(this.week1, postStockNotationScreenerSearchRequestDataVolatility.week1) &&
        Objects.equals(this.month1, postStockNotationScreenerSearchRequestDataVolatility.month1) &&
        Objects.equals(this.months3, postStockNotationScreenerSearchRequestDataVolatility.months3) &&
        Objects.equals(this.months6, postStockNotationScreenerSearchRequestDataVolatility.months6) &&
        Objects.equals(this.year1, postStockNotationScreenerSearchRequestDataVolatility.year1) &&
        Objects.equals(this.years3, postStockNotationScreenerSearchRequestDataVolatility.years3) &&
        Objects.equals(this.years5, postStockNotationScreenerSearchRequestDataVolatility.years5) &&
        Objects.equals(this.yearToDate, postStockNotationScreenerSearchRequestDataVolatility.yearToDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(week1, month1, months3, months6, year1, years3, years5, yearToDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostStockNotationScreenerSearchRequestDataVolatility {\n");
    sb.append("    week1: ").append(toIndentedString(week1)).append("\n");
    sb.append("    month1: ").append(toIndentedString(month1)).append("\n");
    sb.append("    months3: ").append(toIndentedString(months3)).append("\n");
    sb.append("    months6: ").append(toIndentedString(months6)).append("\n");
    sb.append("    year1: ").append(toIndentedString(year1)).append("\n");
    sb.append("    years3: ").append(toIndentedString(years3)).append("\n");
    sb.append("    years5: ").append(toIndentedString(years5)).append("\n");
    sb.append("    yearToDate: ").append(toIndentedString(yearToDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

