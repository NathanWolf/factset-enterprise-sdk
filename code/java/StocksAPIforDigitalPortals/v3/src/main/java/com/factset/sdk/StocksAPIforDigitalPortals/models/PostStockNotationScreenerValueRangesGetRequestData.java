/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataCompany;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataCompliance;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataEstimates;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataIndexMembership;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataIndustryClassification;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataPerformance;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataReportedKeyFigures;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataRsiWilder;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataSimpleMovingAverage;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataTradingValue;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataValidation;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerSearchRequestDataVolatility;
import com.factset.sdk.StocksAPIforDigitalPortals.models.PostStockNotationScreenerValueRangesGetRequestDataRecommendation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * The data member contains the request&#39;s primary data.
 */
@ApiModel(description = "The data member contains the request's primary data.")
@JsonPropertyOrder({
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_VALIDATION,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_STOCK_TYPE,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_INDUSTRY_CLASSIFICATION,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_COMPANY,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_INDEX_MEMBERSHIP,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_COMPLIANCE,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_REPORTED_KEY_FIGURES,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_PERFORMANCE,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_VOLATILITY,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_TRADING_VALUE,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_SIMPLE_MOVING_AVERAGE,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_RSI_WILDER,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_RECOMMENDATION,
  PostStockNotationScreenerValueRangesGetRequestData.JSON_PROPERTY_ESTIMATES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PostStockNotationScreenerValueRangesGetRequestData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VALIDATION = "validation";
  private PostStockNotationScreenerSearchRequestDataValidation validation;

  /**
   * Gets or Sets stockType
   */
  public enum StockTypeEnum {
    COMMON("common"),
    
    PREFERRED("preferred"),
    
    DEPOSITORYRECEIPT("depositoryReceipt"),
    
    OTHER("other");

    private String value;

    StockTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StockTypeEnum fromValue(String value) {
      for (StockTypeEnum b : StockTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STOCK_TYPE = "stockType";
  private java.util.Set<StockTypeEnum> stockType = null;

  public static final String JSON_PROPERTY_INDUSTRY_CLASSIFICATION = "industryClassification";
  private PostStockNotationScreenerSearchRequestDataIndustryClassification industryClassification;

  public static final String JSON_PROPERTY_COMPANY = "company";
  private PostStockNotationScreenerSearchRequestDataCompany company;

  public static final String JSON_PROPERTY_INDEX_MEMBERSHIP = "indexMembership";
  private PostStockNotationScreenerSearchRequestDataIndexMembership indexMembership;

  public static final String JSON_PROPERTY_COMPLIANCE = "compliance";
  private PostStockNotationScreenerSearchRequestDataCompliance compliance;

  public static final String JSON_PROPERTY_REPORTED_KEY_FIGURES = "reportedKeyFigures";
  private java.util.List<PostStockNotationScreenerSearchRequestDataReportedKeyFigures> reportedKeyFigures = null;

  public static final String JSON_PROPERTY_PERFORMANCE = "performance";
  private PostStockNotationScreenerSearchRequestDataPerformance performance;

  public static final String JSON_PROPERTY_VOLATILITY = "volatility";
  private PostStockNotationScreenerSearchRequestDataVolatility volatility;

  public static final String JSON_PROPERTY_TRADING_VALUE = "tradingValue";
  private PostStockNotationScreenerSearchRequestDataTradingValue tradingValue;

  public static final String JSON_PROPERTY_SIMPLE_MOVING_AVERAGE = "simpleMovingAverage";
  private PostStockNotationScreenerSearchRequestDataSimpleMovingAverage simpleMovingAverage;

  public static final String JSON_PROPERTY_RSI_WILDER = "rsiWilder";
  private PostStockNotationScreenerSearchRequestDataRsiWilder rsiWilder;

  public static final String JSON_PROPERTY_RECOMMENDATION = "recommendation";
  private PostStockNotationScreenerValueRangesGetRequestDataRecommendation recommendation;

  public static final String JSON_PROPERTY_ESTIMATES = "estimates";
  private java.util.List<PostStockNotationScreenerSearchRequestDataEstimates> estimates = null;

  public PostStockNotationScreenerValueRangesGetRequestData() { 
  }

  public PostStockNotationScreenerValueRangesGetRequestData validation(PostStockNotationScreenerSearchRequestDataValidation validation) {
    this.validation = validation;
    return this;
  }

   /**
   * Get validation
   * @return validation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataValidation getValidation() {
    return validation;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidation(PostStockNotationScreenerSearchRequestDataValidation validation) {
    this.validation = validation;
  }


  public PostStockNotationScreenerValueRangesGetRequestData stockType(java.util.Set<StockTypeEnum> stockType) {
    this.stockType = stockType;
    return this;
  }

  public PostStockNotationScreenerValueRangesGetRequestData addStockTypeItem(StockTypeEnum stockTypeItem) {
    if (this.stockType == null) {
      this.stockType = new java.util.LinkedHashSet<>();
    }
    this.stockType.add(stockTypeItem);
    return this;
  }

   /**
   * Type of stock.
   * @return stockType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of stock.")
  @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Set<StockTypeEnum> getStockType() {
    return stockType;
  }


  @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStockType(java.util.Set<StockTypeEnum> stockType) {
    this.stockType = stockType;
  }


  public PostStockNotationScreenerValueRangesGetRequestData industryClassification(PostStockNotationScreenerSearchRequestDataIndustryClassification industryClassification) {
    this.industryClassification = industryClassification;
    return this;
  }

   /**
   * Get industryClassification
   * @return industryClassification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDUSTRY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataIndustryClassification getIndustryClassification() {
    return industryClassification;
  }


  @JsonProperty(JSON_PROPERTY_INDUSTRY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndustryClassification(PostStockNotationScreenerSearchRequestDataIndustryClassification industryClassification) {
    this.industryClassification = industryClassification;
  }


  public PostStockNotationScreenerValueRangesGetRequestData company(PostStockNotationScreenerSearchRequestDataCompany company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataCompany getCompany() {
    return company;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompany(PostStockNotationScreenerSearchRequestDataCompany company) {
    this.company = company;
  }


  public PostStockNotationScreenerValueRangesGetRequestData indexMembership(PostStockNotationScreenerSearchRequestDataIndexMembership indexMembership) {
    this.indexMembership = indexMembership;
    return this;
  }

   /**
   * Get indexMembership
   * @return indexMembership
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDEX_MEMBERSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataIndexMembership getIndexMembership() {
    return indexMembership;
  }


  @JsonProperty(JSON_PROPERTY_INDEX_MEMBERSHIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndexMembership(PostStockNotationScreenerSearchRequestDataIndexMembership indexMembership) {
    this.indexMembership = indexMembership;
  }


  public PostStockNotationScreenerValueRangesGetRequestData compliance(PostStockNotationScreenerSearchRequestDataCompliance compliance) {
    this.compliance = compliance;
    return this;
  }

   /**
   * Get compliance
   * @return compliance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPLIANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataCompliance getCompliance() {
    return compliance;
  }


  @JsonProperty(JSON_PROPERTY_COMPLIANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompliance(PostStockNotationScreenerSearchRequestDataCompliance compliance) {
    this.compliance = compliance;
  }


  public PostStockNotationScreenerValueRangesGetRequestData reportedKeyFigures(java.util.List<PostStockNotationScreenerSearchRequestDataReportedKeyFigures> reportedKeyFigures) {
    this.reportedKeyFigures = reportedKeyFigures;
    return this;
  }

  public PostStockNotationScreenerValueRangesGetRequestData addReportedKeyFiguresItem(PostStockNotationScreenerSearchRequestDataReportedKeyFigures reportedKeyFiguresItem) {
    if (this.reportedKeyFigures == null) {
      this.reportedKeyFigures = new java.util.ArrayList<>();
    }
    this.reportedKeyFigures.add(reportedKeyFiguresItem);
    return this;
  }

   /**
   * Parameters for stock-specific key figures as reported for a fiscal year.
   * @return reportedKeyFigures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameters for stock-specific key figures as reported for a fiscal year.")
  @JsonProperty(JSON_PROPERTY_REPORTED_KEY_FIGURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<PostStockNotationScreenerSearchRequestDataReportedKeyFigures> getReportedKeyFigures() {
    return reportedKeyFigures;
  }


  @JsonProperty(JSON_PROPERTY_REPORTED_KEY_FIGURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportedKeyFigures(java.util.List<PostStockNotationScreenerSearchRequestDataReportedKeyFigures> reportedKeyFigures) {
    this.reportedKeyFigures = reportedKeyFigures;
  }


  public PostStockNotationScreenerValueRangesGetRequestData performance(PostStockNotationScreenerSearchRequestDataPerformance performance) {
    this.performance = performance;
    return this;
  }

   /**
   * Get performance
   * @return performance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataPerformance getPerformance() {
    return performance;
  }


  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerformance(PostStockNotationScreenerSearchRequestDataPerformance performance) {
    this.performance = performance;
  }


  public PostStockNotationScreenerValueRangesGetRequestData volatility(PostStockNotationScreenerSearchRequestDataVolatility volatility) {
    this.volatility = volatility;
    return this;
  }

   /**
   * Get volatility
   * @return volatility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataVolatility getVolatility() {
    return volatility;
  }


  @JsonProperty(JSON_PROPERTY_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolatility(PostStockNotationScreenerSearchRequestDataVolatility volatility) {
    this.volatility = volatility;
  }


  public PostStockNotationScreenerValueRangesGetRequestData tradingValue(PostStockNotationScreenerSearchRequestDataTradingValue tradingValue) {
    this.tradingValue = tradingValue;
    return this;
  }

   /**
   * Get tradingValue
   * @return tradingValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataTradingValue getTradingValue() {
    return tradingValue;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradingValue(PostStockNotationScreenerSearchRequestDataTradingValue tradingValue) {
    this.tradingValue = tradingValue;
  }


  public PostStockNotationScreenerValueRangesGetRequestData simpleMovingAverage(PostStockNotationScreenerSearchRequestDataSimpleMovingAverage simpleMovingAverage) {
    this.simpleMovingAverage = simpleMovingAverage;
    return this;
  }

   /**
   * Get simpleMovingAverage
   * @return simpleMovingAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIMPLE_MOVING_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataSimpleMovingAverage getSimpleMovingAverage() {
    return simpleMovingAverage;
  }


  @JsonProperty(JSON_PROPERTY_SIMPLE_MOVING_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimpleMovingAverage(PostStockNotationScreenerSearchRequestDataSimpleMovingAverage simpleMovingAverage) {
    this.simpleMovingAverage = simpleMovingAverage;
  }


  public PostStockNotationScreenerValueRangesGetRequestData rsiWilder(PostStockNotationScreenerSearchRequestDataRsiWilder rsiWilder) {
    this.rsiWilder = rsiWilder;
    return this;
  }

   /**
   * Get rsiWilder
   * @return rsiWilder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RSI_WILDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerSearchRequestDataRsiWilder getRsiWilder() {
    return rsiWilder;
  }


  @JsonProperty(JSON_PROPERTY_RSI_WILDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRsiWilder(PostStockNotationScreenerSearchRequestDataRsiWilder rsiWilder) {
    this.rsiWilder = rsiWilder;
  }


  public PostStockNotationScreenerValueRangesGetRequestData recommendation(PostStockNotationScreenerValueRangesGetRequestDataRecommendation recommendation) {
    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostStockNotationScreenerValueRangesGetRequestDataRecommendation getRecommendation() {
    return recommendation;
  }


  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecommendation(PostStockNotationScreenerValueRangesGetRequestDataRecommendation recommendation) {
    this.recommendation = recommendation;
  }


  public PostStockNotationScreenerValueRangesGetRequestData estimates(java.util.List<PostStockNotationScreenerSearchRequestDataEstimates> estimates) {
    this.estimates = estimates;
    return this;
  }

  public PostStockNotationScreenerValueRangesGetRequestData addEstimatesItem(PostStockNotationScreenerSearchRequestDataEstimates estimatesItem) {
    if (this.estimates == null) {
      this.estimates = new java.util.ArrayList<>();
    }
    this.estimates.add(estimatesItem);
    return this;
  }

   /**
   * Parameters for stock-specific consolidated estimates for a fiscal year.
   * @return estimates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameters for stock-specific consolidated estimates for a fiscal year.")
  @JsonProperty(JSON_PROPERTY_ESTIMATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<PostStockNotationScreenerSearchRequestDataEstimates> getEstimates() {
    return estimates;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimates(java.util.List<PostStockNotationScreenerSearchRequestDataEstimates> estimates) {
    this.estimates = estimates;
  }


  /**
   * Return true if this PostStockNotationScreenerValueRangesGetRequest_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostStockNotationScreenerValueRangesGetRequestData postStockNotationScreenerValueRangesGetRequestData = (PostStockNotationScreenerValueRangesGetRequestData) o;
    return Objects.equals(this.validation, postStockNotationScreenerValueRangesGetRequestData.validation) &&
        Objects.equals(this.stockType, postStockNotationScreenerValueRangesGetRequestData.stockType) &&
        Objects.equals(this.industryClassification, postStockNotationScreenerValueRangesGetRequestData.industryClassification) &&
        Objects.equals(this.company, postStockNotationScreenerValueRangesGetRequestData.company) &&
        Objects.equals(this.indexMembership, postStockNotationScreenerValueRangesGetRequestData.indexMembership) &&
        Objects.equals(this.compliance, postStockNotationScreenerValueRangesGetRequestData.compliance) &&
        Objects.equals(this.reportedKeyFigures, postStockNotationScreenerValueRangesGetRequestData.reportedKeyFigures) &&
        Objects.equals(this.performance, postStockNotationScreenerValueRangesGetRequestData.performance) &&
        Objects.equals(this.volatility, postStockNotationScreenerValueRangesGetRequestData.volatility) &&
        Objects.equals(this.tradingValue, postStockNotationScreenerValueRangesGetRequestData.tradingValue) &&
        Objects.equals(this.simpleMovingAverage, postStockNotationScreenerValueRangesGetRequestData.simpleMovingAverage) &&
        Objects.equals(this.rsiWilder, postStockNotationScreenerValueRangesGetRequestData.rsiWilder) &&
        Objects.equals(this.recommendation, postStockNotationScreenerValueRangesGetRequestData.recommendation) &&
        Objects.equals(this.estimates, postStockNotationScreenerValueRangesGetRequestData.estimates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validation, stockType, industryClassification, company, indexMembership, compliance, reportedKeyFigures, performance, volatility, tradingValue, simpleMovingAverage, rsiWilder, recommendation, estimates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostStockNotationScreenerValueRangesGetRequestData {\n");
    sb.append("    validation: ").append(toIndentedString(validation)).append("\n");
    sb.append("    stockType: ").append(toIndentedString(stockType)).append("\n");
    sb.append("    industryClassification: ").append(toIndentedString(industryClassification)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    indexMembership: ").append(toIndentedString(indexMembership)).append("\n");
    sb.append("    compliance: ").append(toIndentedString(compliance)).append("\n");
    sb.append("    reportedKeyFigures: ").append(toIndentedString(reportedKeyFigures)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("    volatility: ").append(toIndentedString(volatility)).append("\n");
    sb.append("    tradingValue: ").append(toIndentedString(tradingValue)).append("\n");
    sb.append("    simpleMovingAverage: ").append(toIndentedString(simpleMovingAverage)).append("\n");
    sb.append("    rsiWilder: ").append(toIndentedString(rsiWilder)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    estimates: ").append(toIndentedString(estimates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

