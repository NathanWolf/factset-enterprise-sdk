/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002BalanceSheet;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002Currency;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002FiscalYear;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002IncomeStatement;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002PerShare;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2002Ratios;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * InlineResponse2002Data
 */
@JsonPropertyOrder({
  InlineResponse2002Data.JSON_PROPERTY_FISCAL_YEAR,
  InlineResponse2002Data.JSON_PROPERTY_REPORT_DATE,
  InlineResponse2002Data.JSON_PROPERTY_CURRENCY,
  InlineResponse2002Data.JSON_PROPERTY_INCOME_STATEMENT,
  InlineResponse2002Data.JSON_PROPERTY_BALANCE_SHEET,
  InlineResponse2002Data.JSON_PROPERTY_RATIOS,
  InlineResponse2002Data.JSON_PROPERTY_PER_SHARE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2002Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FISCAL_YEAR = "fiscalYear";
  private InlineResponse2002FiscalYear fiscalYear;

  public static final String JSON_PROPERTY_REPORT_DATE = "reportDate";
  private JsonNullable<LocalDate> reportDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse2002Currency currency;

  public static final String JSON_PROPERTY_INCOME_STATEMENT = "incomeStatement";
  private InlineResponse2002IncomeStatement incomeStatement;

  public static final String JSON_PROPERTY_BALANCE_SHEET = "balanceSheet";
  private InlineResponse2002BalanceSheet balanceSheet;

  public static final String JSON_PROPERTY_RATIOS = "ratios";
  private InlineResponse2002Ratios ratios;

  public static final String JSON_PROPERTY_PER_SHARE = "perShare";
  private InlineResponse2002PerShare perShare;

  public InlineResponse2002Data() { 
  }

  public InlineResponse2002Data fiscalYear(InlineResponse2002FiscalYear fiscalYear) {
    this.fiscalYear = fiscalYear;
    return this;
  }

   /**
   * Get fiscalYear
   * @return fiscalYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002FiscalYear getFiscalYear() {
    return fiscalYear;
  }


  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiscalYear(InlineResponse2002FiscalYear fiscalYear) {
    this.fiscalYear = fiscalYear;
  }


  public InlineResponse2002Data reportDate(LocalDate reportDate) {
    this.reportDate = JsonNullable.<LocalDate>of(reportDate);
    return this;
  }

   /**
   * Publication date of the financial report.
   * @return reportDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Publication date of the financial report.")
  @JsonIgnore

  public LocalDate getReportDate() {
        return reportDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getReportDate_JsonNullable() {
    return reportDate;
  }
  
  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  public void setReportDate_JsonNullable(JsonNullable<LocalDate> reportDate) {
    this.reportDate = reportDate;
  }

  public void setReportDate(LocalDate reportDate) {
    this.reportDate = JsonNullable.<LocalDate>of(reportDate);
  }


  public InlineResponse2002Data currency(InlineResponse2002Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse2002Currency currency) {
    this.currency = currency;
  }


  public InlineResponse2002Data incomeStatement(InlineResponse2002IncomeStatement incomeStatement) {
    this.incomeStatement = incomeStatement;
    return this;
  }

   /**
   * Get incomeStatement
   * @return incomeStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCOME_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002IncomeStatement getIncomeStatement() {
    return incomeStatement;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStatement(InlineResponse2002IncomeStatement incomeStatement) {
    this.incomeStatement = incomeStatement;
  }


  public InlineResponse2002Data balanceSheet(InlineResponse2002BalanceSheet balanceSheet) {
    this.balanceSheet = balanceSheet;
    return this;
  }

   /**
   * Get balanceSheet
   * @return balanceSheet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BALANCE_SHEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002BalanceSheet getBalanceSheet() {
    return balanceSheet;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_SHEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceSheet(InlineResponse2002BalanceSheet balanceSheet) {
    this.balanceSheet = balanceSheet;
  }


  public InlineResponse2002Data ratios(InlineResponse2002Ratios ratios) {
    this.ratios = ratios;
    return this;
  }

   /**
   * Get ratios
   * @return ratios
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATIOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002Ratios getRatios() {
    return ratios;
  }


  @JsonProperty(JSON_PROPERTY_RATIOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRatios(InlineResponse2002Ratios ratios) {
    this.ratios = ratios;
  }


  public InlineResponse2002Data perShare(InlineResponse2002PerShare perShare) {
    this.perShare = perShare;
    return this;
  }

   /**
   * Get perShare
   * @return perShare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2002PerShare getPerShare() {
    return perShare;
  }


  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerShare(InlineResponse2002PerShare perShare) {
    this.perShare = perShare;
  }


  /**
   * Return true if this inline_response_200_2_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002Data inlineResponse2002Data = (InlineResponse2002Data) o;
    return Objects.equals(this.fiscalYear, inlineResponse2002Data.fiscalYear) &&
        equalsNullable(this.reportDate, inlineResponse2002Data.reportDate) &&
        Objects.equals(this.currency, inlineResponse2002Data.currency) &&
        Objects.equals(this.incomeStatement, inlineResponse2002Data.incomeStatement) &&
        Objects.equals(this.balanceSheet, inlineResponse2002Data.balanceSheet) &&
        Objects.equals(this.ratios, inlineResponse2002Data.ratios) &&
        Objects.equals(this.perShare, inlineResponse2002Data.perShare);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(fiscalYear, hashCodeNullable(reportDate), currency, incomeStatement, balanceSheet, ratios, perShare);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002Data {\n");
    sb.append("    fiscalYear: ").append(toIndentedString(fiscalYear)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    incomeStatement: ").append(toIndentedString(incomeStatement)).append("\n");
    sb.append("    balanceSheet: ").append(toIndentedString(balanceSheet)).append("\n");
    sb.append("    ratios: ").append(toIndentedString(ratios)).append("\n");
    sb.append("    perShare: ").append(toIndentedString(perShare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

