/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataBalanceSheet;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataCashFlow;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataCurrency;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataFiscalYear;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataIncomeStatement;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataPerShare;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataRatios;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2001DataSharesOutstanding;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * InlineResponse2001DataFiscalYearData
 */
@JsonPropertyOrder({
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_FISCAL_YEAR,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_CURRENCY,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_PRICE,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_FREE_FLOAT,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_SHARES_OUTSTANDING,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_MARKET_CAPITALIZATION,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_INCOME_STATEMENT,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_BALANCE_SHEET,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_CASH_FLOW,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_RATIOS,
  InlineResponse2001DataFiscalYearData.JSON_PROPERTY_PER_SHARE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2001DataFiscalYearData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FISCAL_YEAR = "fiscalYear";
  private InlineResponse2001DataFiscalYear fiscalYear;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private InlineResponse2001DataCurrency currency;

  public static final String JSON_PROPERTY_PRICE = "price";
  private JsonNullable<BigDecimal> price = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_FREE_FLOAT = "freeFloat";
  private JsonNullable<BigDecimal> freeFloat = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SHARES_OUTSTANDING = "sharesOutstanding";
  private InlineResponse2001DataSharesOutstanding sharesOutstanding;

  public static final String JSON_PROPERTY_MARKET_CAPITALIZATION = "marketCapitalization";
  private JsonNullable<BigDecimal> marketCapitalization = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_INCOME_STATEMENT = "incomeStatement";
  private InlineResponse2001DataIncomeStatement incomeStatement;

  public static final String JSON_PROPERTY_BALANCE_SHEET = "balanceSheet";
  private InlineResponse2001DataBalanceSheet balanceSheet;

  public static final String JSON_PROPERTY_CASH_FLOW = "cashFlow";
  private InlineResponse2001DataCashFlow cashFlow;

  public static final String JSON_PROPERTY_RATIOS = "ratios";
  private InlineResponse2001DataRatios ratios;

  public static final String JSON_PROPERTY_PER_SHARE = "perShare";
  private InlineResponse2001DataPerShare perShare;

  public InlineResponse2001DataFiscalYearData() { 
  }

  public InlineResponse2001DataFiscalYearData fiscalYear(InlineResponse2001DataFiscalYear fiscalYear) {
    this.fiscalYear = fiscalYear;
    return this;
  }

   /**
   * Get fiscalYear
   * @return fiscalYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataFiscalYear getFiscalYear() {
    return fiscalYear;
  }


  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiscalYear(InlineResponse2001DataFiscalYear fiscalYear) {
    this.fiscalYear = fiscalYear;
  }


  public InlineResponse2001DataFiscalYearData currency(InlineResponse2001DataCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(InlineResponse2001DataCurrency currency) {
    this.currency = currency;
  }


  public InlineResponse2001DataFiscalYearData price(BigDecimal price) {
    this.price = JsonNullable.<BigDecimal>of(price);
    return this;
  }

   /**
   * End-of-day price as of the end of the fiscal year. It is used for calculation of all price-related data items corresponding to the end of the fiscal year.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End-of-day price as of the end of the fiscal year. It is used for calculation of all price-related data items corresponding to the end of the fiscal year.")
  @JsonIgnore

  public BigDecimal getPrice() {
        return price.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPrice_JsonNullable() {
    return price;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE)
  public void setPrice_JsonNullable(JsonNullable<BigDecimal> price) {
    this.price = price;
  }

  public void setPrice(BigDecimal price) {
    this.price = JsonNullable.<BigDecimal>of(price);
  }


  public InlineResponse2001DataFiscalYearData freeFloat(BigDecimal freeFloat) {
    this.freeFloat = JsonNullable.<BigDecimal>of(freeFloat);
    return this;
  }

   /**
   * Free float, which is the number of shares outstanding available for trading to the public. Closely-held shares (e.g. held by a majority investor) and temporarily restricted shares (e.g. due to insider lock-up periods) are not part of the free float.
   * @return freeFloat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Free float, which is the number of shares outstanding available for trading to the public. Closely-held shares (e.g. held by a majority investor) and temporarily restricted shares (e.g. due to insider lock-up periods) are not part of the free float.")
  @JsonIgnore

  public BigDecimal getFreeFloat() {
        return freeFloat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FREE_FLOAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getFreeFloat_JsonNullable() {
    return freeFloat;
  }
  
  @JsonProperty(JSON_PROPERTY_FREE_FLOAT)
  public void setFreeFloat_JsonNullable(JsonNullable<BigDecimal> freeFloat) {
    this.freeFloat = freeFloat;
  }

  public void setFreeFloat(BigDecimal freeFloat) {
    this.freeFloat = JsonNullable.<BigDecimal>of(freeFloat);
  }


  public InlineResponse2001DataFiscalYearData sharesOutstanding(InlineResponse2001DataSharesOutstanding sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
    return this;
  }

   /**
   * Get sharesOutstanding
   * @return sharesOutstanding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataSharesOutstanding getSharesOutstanding() {
    return sharesOutstanding;
  }


  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharesOutstanding(InlineResponse2001DataSharesOutstanding sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
  }


  public InlineResponse2001DataFiscalYearData marketCapitalization(BigDecimal marketCapitalization) {
    this.marketCapitalization = JsonNullable.<BigDecimal>of(marketCapitalization);
    return this;
  }

   /**
   * Market capitalization, which is the market value of the shares outstanding over all types of shares of the company.
   * @return marketCapitalization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Market capitalization, which is the market value of the shares outstanding over all types of shares of the company.")
  @JsonIgnore

  public BigDecimal getMarketCapitalization() {
        return marketCapitalization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MARKET_CAPITALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMarketCapitalization_JsonNullable() {
    return marketCapitalization;
  }
  
  @JsonProperty(JSON_PROPERTY_MARKET_CAPITALIZATION)
  public void setMarketCapitalization_JsonNullable(JsonNullable<BigDecimal> marketCapitalization) {
    this.marketCapitalization = marketCapitalization;
  }

  public void setMarketCapitalization(BigDecimal marketCapitalization) {
    this.marketCapitalization = JsonNullable.<BigDecimal>of(marketCapitalization);
  }


  public InlineResponse2001DataFiscalYearData incomeStatement(InlineResponse2001DataIncomeStatement incomeStatement) {
    this.incomeStatement = incomeStatement;
    return this;
  }

   /**
   * Get incomeStatement
   * @return incomeStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCOME_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataIncomeStatement getIncomeStatement() {
    return incomeStatement;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeStatement(InlineResponse2001DataIncomeStatement incomeStatement) {
    this.incomeStatement = incomeStatement;
  }


  public InlineResponse2001DataFiscalYearData balanceSheet(InlineResponse2001DataBalanceSheet balanceSheet) {
    this.balanceSheet = balanceSheet;
    return this;
  }

   /**
   * Get balanceSheet
   * @return balanceSheet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BALANCE_SHEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataBalanceSheet getBalanceSheet() {
    return balanceSheet;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_SHEET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceSheet(InlineResponse2001DataBalanceSheet balanceSheet) {
    this.balanceSheet = balanceSheet;
  }


  public InlineResponse2001DataFiscalYearData cashFlow(InlineResponse2001DataCashFlow cashFlow) {
    this.cashFlow = cashFlow;
    return this;
  }

   /**
   * Get cashFlow
   * @return cashFlow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CASH_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataCashFlow getCashFlow() {
    return cashFlow;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlow(InlineResponse2001DataCashFlow cashFlow) {
    this.cashFlow = cashFlow;
  }


  public InlineResponse2001DataFiscalYearData ratios(InlineResponse2001DataRatios ratios) {
    this.ratios = ratios;
    return this;
  }

   /**
   * Get ratios
   * @return ratios
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATIOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataRatios getRatios() {
    return ratios;
  }


  @JsonProperty(JSON_PROPERTY_RATIOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRatios(InlineResponse2001DataRatios ratios) {
    this.ratios = ratios;
  }


  public InlineResponse2001DataFiscalYearData perShare(InlineResponse2001DataPerShare perShare) {
    this.perShare = perShare;
    return this;
  }

   /**
   * Get perShare
   * @return perShare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2001DataPerShare getPerShare() {
    return perShare;
  }


  @JsonProperty(JSON_PROPERTY_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerShare(InlineResponse2001DataPerShare perShare) {
    this.perShare = perShare;
  }


  /**
   * Return true if this inline_response_200_1_data_fiscalYearData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001DataFiscalYearData inlineResponse2001DataFiscalYearData = (InlineResponse2001DataFiscalYearData) o;
    return Objects.equals(this.fiscalYear, inlineResponse2001DataFiscalYearData.fiscalYear) &&
        Objects.equals(this.currency, inlineResponse2001DataFiscalYearData.currency) &&
        equalsNullable(this.price, inlineResponse2001DataFiscalYearData.price) &&
        equalsNullable(this.freeFloat, inlineResponse2001DataFiscalYearData.freeFloat) &&
        Objects.equals(this.sharesOutstanding, inlineResponse2001DataFiscalYearData.sharesOutstanding) &&
        equalsNullable(this.marketCapitalization, inlineResponse2001DataFiscalYearData.marketCapitalization) &&
        Objects.equals(this.incomeStatement, inlineResponse2001DataFiscalYearData.incomeStatement) &&
        Objects.equals(this.balanceSheet, inlineResponse2001DataFiscalYearData.balanceSheet) &&
        Objects.equals(this.cashFlow, inlineResponse2001DataFiscalYearData.cashFlow) &&
        Objects.equals(this.ratios, inlineResponse2001DataFiscalYearData.ratios) &&
        Objects.equals(this.perShare, inlineResponse2001DataFiscalYearData.perShare);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(fiscalYear, currency, hashCodeNullable(price), hashCodeNullable(freeFloat), sharesOutstanding, hashCodeNullable(marketCapitalization), incomeStatement, balanceSheet, cashFlow, ratios, perShare);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001DataFiscalYearData {\n");
    sb.append("    fiscalYear: ").append(toIndentedString(fiscalYear)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    freeFloat: ").append(toIndentedString(freeFloat)).append("\n");
    sb.append("    sharesOutstanding: ").append(toIndentedString(sharesOutstanding)).append("\n");
    sb.append("    marketCapitalization: ").append(toIndentedString(marketCapitalization)).append("\n");
    sb.append("    incomeStatement: ").append(toIndentedString(incomeStatement)).append("\n");
    sb.append("    balanceSheet: ").append(toIndentedString(balanceSheet)).append("\n");
    sb.append("    cashFlow: ").append(toIndentedString(cashFlow)).append("\n");
    sb.append("    ratios: ").append(toIndentedString(ratios)).append("\n");
    sb.append("    perShare: ").append(toIndentedString(perShare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

