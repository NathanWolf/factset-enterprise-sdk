/*
 * Stocks API For Digital Portals
 * The Stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years. Search criteria also include benchmark-related attributes (beta, correlation, outperformance), and ESG parameters, based on FactSetâ€™s Truvalue ESG scores.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with daily updates).  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) and the [Securitized Derivatives API](https://developer.factset.com/api-catalog/securitized-derivatives-api-digital-portals) for details.  See also the recipe [\"Enrich Your Digital Portal with Flexible Equity Screening\"](https://developer.factset.com/recipe-catalog/enrich-your-digital-portal-flexible-equity-screening). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Description missing
 */
@ApiModel(description = "Description missing")
@JsonPropertyOrder({
  InlineResponse2009Data.JSON_PROPERTY_ID_NOTATION,
  InlineResponse2009Data.JSON_PROPERTY_SOURCE_IDENTIFIER,
  InlineResponse2009Data.JSON_PROPERTY_DESCRIPTION,
  InlineResponse2009Data.JSON_PROPERTY_C_E_O,
  InlineResponse2009Data.JSON_PROPERTY_INDUSTRY,
  InlineResponse2009Data.JSON_PROPERTY_HEADQUARTERS,
  InlineResponse2009Data.JSON_PROPERTY_SYMBOL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2009Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID_NOTATION = "idNotation";
  private JsonNullable<String> idNotation = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOURCE_IDENTIFIER = "sourceIdentifier";
  private JsonNullable<String> sourceIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_C_E_O = "CEO";
  private JsonNullable<String> CEO = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INDUSTRY = "industry";
  private JsonNullable<String> industry = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HEADQUARTERS = "headquarters";
  private JsonNullable<String> headquarters = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private JsonNullable<String> symbol = JsonNullable.<String>undefined();

  public InlineResponse2009Data() { 
  }

  public InlineResponse2009Data idNotation(String idNotation) {
    this.idNotation = JsonNullable.<String>of(idNotation);
    return this;
  }

   /**
   * MDG identifier of the listing.
   * @return idNotation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MDG identifier of the listing.")
  @JsonIgnore

  public String getIdNotation() {
        return idNotation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotation_JsonNullable() {
    return idNotation;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOTATION)
  public void setIdNotation_JsonNullable(JsonNullable<String> idNotation) {
    this.idNotation = idNotation;
  }

  public void setIdNotation(String idNotation) {
    this.idNotation = JsonNullable.<String>of(idNotation);
  }


  public InlineResponse2009Data sourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = JsonNullable.<String>of(sourceIdentifier);
    return this;
  }

   /**
   * Identifier used in the request.
   * @return sourceIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier used in the request.")
  @JsonIgnore

  public String getSourceIdentifier() {
        return sourceIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSourceIdentifier_JsonNullable() {
    return sourceIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_IDENTIFIER)
  public void setSourceIdentifier_JsonNullable(JsonNullable<String> sourceIdentifier) {
    this.sourceIdentifier = sourceIdentifier;
  }

  public void setSourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = JsonNullable.<String>of(sourceIdentifier);
  }


  public InlineResponse2009Data description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Body of the background text for the description of the company.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Body of the background text for the description of the company.")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public InlineResponse2009Data CEO(String CEO) {
    this.CEO = JsonNullable.<String>of(CEO);
    return this;
  }

   /**
   * Full name of the CEO officer.
   * @return CEO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Full name of the CEO officer.")
  @JsonIgnore

  public String getCEO() {
        return CEO.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_C_E_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCEO_JsonNullable() {
    return CEO;
  }
  
  @JsonProperty(JSON_PROPERTY_C_E_O)
  public void setCEO_JsonNullable(JsonNullable<String> CEO) {
    this.CEO = CEO;
  }

  public void setCEO(String CEO) {
    this.CEO = JsonNullable.<String>of(CEO);
  }


  public InlineResponse2009Data industry(String industry) {
    this.industry = JsonNullable.<String>of(industry);
    return this;
  }

   /**
   * Name of the industry category.
   * @return industry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the industry category.")
  @JsonIgnore

  public String getIndustry() {
        return industry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDUSTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIndustry_JsonNullable() {
    return industry;
  }
  
  @JsonProperty(JSON_PROPERTY_INDUSTRY)
  public void setIndustry_JsonNullable(JsonNullable<String> industry) {
    this.industry = industry;
  }

  public void setIndustry(String industry) {
    this.industry = JsonNullable.<String>of(industry);
  }


  public InlineResponse2009Data headquarters(String headquarters) {
    this.headquarters = JsonNullable.<String>of(headquarters);
    return this;
  }

   /**
   * Postal address and name of the country for theheadquarters of the company
   * @return headquarters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal address and name of the country for theheadquarters of the company")
  @JsonIgnore

  public String getHeadquarters() {
        return headquarters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEADQUARTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHeadquarters_JsonNullable() {
    return headquarters;
  }
  
  @JsonProperty(JSON_PROPERTY_HEADQUARTERS)
  public void setHeadquarters_JsonNullable(JsonNullable<String> headquarters) {
    this.headquarters = headquarters;
  }

  public void setHeadquarters(String headquarters) {
    this.headquarters = JsonNullable.<String>of(headquarters);
  }


  public InlineResponse2009Data symbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
    return this;
  }

   /**
   * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market.
   * @return symbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market.")
  @JsonIgnore

  public String getSymbol() {
        return symbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSymbol_JsonNullable() {
    return symbol;
  }
  
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  public void setSymbol_JsonNullable(JsonNullable<String> symbol) {
    this.symbol = symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
  }


  /**
   * Return true if this inline_response_200_9_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2009Data inlineResponse2009Data = (InlineResponse2009Data) o;
    return equalsNullable(this.idNotation, inlineResponse2009Data.idNotation) &&
        equalsNullable(this.sourceIdentifier, inlineResponse2009Data.sourceIdentifier) &&
        equalsNullable(this.description, inlineResponse2009Data.description) &&
        equalsNullable(this.CEO, inlineResponse2009Data.CEO) &&
        equalsNullable(this.industry, inlineResponse2009Data.industry) &&
        equalsNullable(this.headquarters, inlineResponse2009Data.headquarters) &&
        equalsNullable(this.symbol, inlineResponse2009Data.symbol);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(idNotation), hashCodeNullable(sourceIdentifier), hashCodeNullable(description), hashCodeNullable(CEO), hashCodeNullable(industry), hashCodeNullable(headquarters), hashCodeNullable(symbol));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2009Data {\n");
    sb.append("    idNotation: ").append(toIndentedString(idNotation)).append("\n");
    sb.append("    sourceIdentifier: ").append(toIndentedString(sourceIdentifier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    CEO: ").append(toIndentedString(CEO)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    headquarters: ").append(toIndentedString(headquarters)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

