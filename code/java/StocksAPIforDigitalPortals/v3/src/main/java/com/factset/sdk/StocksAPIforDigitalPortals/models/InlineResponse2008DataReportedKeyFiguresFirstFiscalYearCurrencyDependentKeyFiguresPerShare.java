/*
 * Stocks API For Digital Portals
 * The stocks API features a screener to search for equity instruments based on stock-specific parameters.  Parameters for up to three fiscal years might now be used in one request; data is available for the ten most recent completed fiscal years. Estimates are available for the current and two consecutive fiscal years.  A separate endpoint returns the possible values and value ranges for the parameters that the endpoint /stock/notation/screener/search accepts: Application developers can request the values and value ranges only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /stock/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  The endpoint /stock/notation/ranking/intraday/list ranks stocks notations using intraday figures, for example to build a gainers/losers list.   Additional endpoints include end-of-day benchmark key figures, and selected fundamentals (as of end of fiscal year and with potentially daily updates).  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for fixed income instruments and securitized derivatives: See the Bonds API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StocksAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareBookValue;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareCashFlow;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareDividends;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareRecurringEarnings;
import com.factset.sdk.StocksAPIforDigitalPortals.models.InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareSales;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StocksAPIforDigitalPortals.JSON;


/**
 * Value ranges of the per-share attributes.
 */
@ApiModel(description = "Value ranges of the per-share attributes.")
@JsonPropertyOrder({
  InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.JSON_PROPERTY_SALES,
  InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.JSON_PROPERTY_RECURRING_EARNINGS,
  InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.JSON_PROPERTY_DIVIDENDS,
  InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.JSON_PROPERTY_BOOK_VALUE,
  InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.JSON_PROPERTY_CASH_FLOW
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SALES = "sales";
  private InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareSales sales;

  public static final String JSON_PROPERTY_RECURRING_EARNINGS = "recurringEarnings";
  private InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareRecurringEarnings recurringEarnings;

  public static final String JSON_PROPERTY_DIVIDENDS = "dividends";
  private InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareDividends dividends;

  public static final String JSON_PROPERTY_BOOK_VALUE = "bookValue";
  private InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareBookValue bookValue;

  public static final String JSON_PROPERTY_CASH_FLOW = "cashFlow";
  private InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareCashFlow cashFlow;

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare() { 
  }

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare sales(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareSales sales) {
    this.sales = sales;
    return this;
  }

   /**
   * Get sales
   * @return sales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareSales getSales() {
    return sales;
  }


  @JsonProperty(JSON_PROPERTY_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSales(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareSales sales) {
    this.sales = sales;
  }


  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare recurringEarnings(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareRecurringEarnings recurringEarnings) {
    this.recurringEarnings = recurringEarnings;
    return this;
  }

   /**
   * Get recurringEarnings
   * @return recurringEarnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECURRING_EARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareRecurringEarnings getRecurringEarnings() {
    return recurringEarnings;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_EARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringEarnings(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareRecurringEarnings recurringEarnings) {
    this.recurringEarnings = recurringEarnings;
  }


  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare dividends(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareDividends dividends) {
    this.dividends = dividends;
    return this;
  }

   /**
   * Get dividends
   * @return dividends
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIVIDENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareDividends getDividends() {
    return dividends;
  }


  @JsonProperty(JSON_PROPERTY_DIVIDENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDividends(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareDividends dividends) {
    this.dividends = dividends;
  }


  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare bookValue(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareBookValue bookValue) {
    this.bookValue = bookValue;
    return this;
  }

   /**
   * Get bookValue
   * @return bookValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BOOK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareBookValue getBookValue() {
    return bookValue;
  }


  @JsonProperty(JSON_PROPERTY_BOOK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookValue(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareBookValue bookValue) {
    this.bookValue = bookValue;
  }


  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare cashFlow(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareCashFlow cashFlow) {
    this.cashFlow = cashFlow;
    return this;
  }

   /**
   * Get cashFlow
   * @return cashFlow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CASH_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareCashFlow getCashFlow() {
    return cashFlow;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlow(InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShareCashFlow cashFlow) {
    this.cashFlow = cashFlow;
  }


  /**
   * Return true if this inline_response_200_8_data_reportedKeyFigures_firstFiscalYear_currencyDependentKeyFigures_perShare object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare = (InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare) o;
    return Objects.equals(this.sales, inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.sales) &&
        Objects.equals(this.recurringEarnings, inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.recurringEarnings) &&
        Objects.equals(this.dividends, inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.dividends) &&
        Objects.equals(this.bookValue, inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.bookValue) &&
        Objects.equals(this.cashFlow, inlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare.cashFlow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sales, recurringEarnings, dividends, bookValue, cashFlow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2008DataReportedKeyFiguresFirstFiscalYearCurrencyDependentKeyFiguresPerShare {\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    recurringEarnings: ").append(toIndentedString(recurringEarnings)).append("\n");
    sb.append("    dividends: ").append(toIndentedString(dividends)).append("\n");
    sb.append("    bookValue: ").append(toIndentedString(bookValue)).append("\n");
    sb.append("    cashFlow: ").append(toIndentedString(cashFlow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

