/*
 * Documents Distributor - Documents API
 * Documents APIs that provide filings such as Global Filings and XML files such as StreetAccount    Global Filings API provides the capability to search and download filings documents from various exchanges around the world. The API also provides relevant metadata such as document source, company identifiers and form type around each filings document. Filings providers currently include EDGAR and SYMEX WebDisclosure.      StreetAccount XML API provides access to historical StreetAccount (SA) news. SA provides a summary for various corporate and market news written by journalist with background in financial markets.    The API delivers SA stories in XML format based on user-specified date input parameters. When the API request is completed, output files will be made available back to the users through a secure URL. This API has three endpoints (1) Request Files (2) Check Status (3) Get Files.   Files delivered contain both metadata and content body in each file. This eliminates the need to make multiple requests through multiple services to get all the information.  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.DocumentsDistributorDocuments.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.DocumentsDistributorDocuments.JSON;


/**
 * CheckstatusResponse
 */
@JsonPropertyOrder({
  CheckstatusResponse.JSON_PROPERTY_JOB_I_D,
  CheckstatusResponse.JSON_PROPERTY_STATUS,
  CheckstatusResponse.JSON_PROPERTY_PERCENT_DONE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CheckstatusResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_JOB_I_D = "jobID";
  private String jobID;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_PERCENT_DONE = "percentDone";
  private Integer percentDone;


  public CheckstatusResponse jobID(String jobID) {
    this.jobID = jobID;
    return this;
  }

   /**
   * Unique id to get the xml files for the requested date
   * @return jobID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique id to get the xml files for the requested date")
  @JsonProperty(JSON_PROPERTY_JOB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobID() {
    return jobID;
  }


  @JsonProperty(JSON_PROPERTY_JOB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobID(String jobID) {
    this.jobID = jobID;
  }


  public CheckstatusResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Returns any of the 2 results Submitted -&gt;Running-&gt;Completed and Failed
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns any of the 2 results Submitted ->Running->Completed and Failed")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public CheckstatusResponse percentDone(Integer percentDone) {
    this.percentDone = percentDone;
    return this;
  }

   /**
   * Returns how much percentage of  task is completed for the requested jobID
   * @return percentDone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns how much percentage of  task is completed for the requested jobID")
  @JsonProperty(JSON_PROPERTY_PERCENT_DONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPercentDone() {
    return percentDone;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT_DONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentDone(Integer percentDone) {
    this.percentDone = percentDone;
  }


  /**
   * Return true if this checkstatusResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckstatusResponse checkstatusResponse = (CheckstatusResponse) o;
    return Objects.equals(this.jobID, checkstatusResponse.jobID) &&
        Objects.equals(this.status, checkstatusResponse.status) &&
        Objects.equals(this.percentDone, checkstatusResponse.percentDone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobID, status, percentDone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckstatusResponse {\n");
    sb.append("    jobID: ").append(toIndentedString(jobID)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    percentDone: ").append(toIndentedString(percentDone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

