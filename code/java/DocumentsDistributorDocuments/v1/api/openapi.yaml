openapi: 3.0.0
info:
  description: "Documents APIs that provide filings such as Global Filings and XML\
    \ files such as StreetAccount\n\n  Global Filings API provides the capability\
    \ to search and download filings documents from various exchanges around the world.\
    \ The API also provides relevant metadata such as document source, company identifiers\
    \ and form type around each filings document. Filings providers currently include\
    \ EDGAR and SYMEX WebDisclosure.\n  \n  StreetAccount XML API provides access\
    \ to historical StreetAccount (SA) news. SA provides a summary for various corporate\
    \ and market news written by journalist with background in financial markets.\n\
    \n  The API delivers SA stories in XML format based on user-specified date input\
    \ parameters. When the API request is completed, output files will be made available\
    \ back to the users through a secure URL. This API has three endpoints (1) Request\
    \ Files (2) Check Status (3) Get Files.\n\n Files delivered contain both metadata\
    \ and content body in each file. This eliminates the need to make multiple requests\
    \ through multiple services to get all the information.\n "
  title: Documents Distributor - Documents API
  version: 1.0.0
servers:
- url: https://api.factset.com/bulk-documents
security:
- FactSetApiKey: []
- FactSetOAuth2: []
paths:
  /global-filings/v1/form-types:
    get:
      description: Gets all available form types for the filings sources. Source parameter
        can be used to filter the results.
      parameters:
      - description: This parameter filters the results based on the source of the
          filings document.
        explode: true
        in: query
        name: source
        required: true
        schema:
          enum:
          - EDG
          - SWD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default200ResponseExample:
                  $ref: '#/components/examples/200ftdefaultExample'
              schema:
                $ref: '#/components/schemas/response'
          description: Form Types data items
        "400":
          content:
            application/json:
              examples:
                "400defaultExample":
                  $ref: '#/components/examples/400ftdefaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Bad request- invalid or missing parameter
        "401":
          content:
            application/json:
              examples:
                "401defaultExample":
                  $ref: '#/components/examples/401defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                "403defaultExample":
                  $ref: '#/components/examples/403defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Entitlements Not Found
        "500":
          content:
            application/json:
              examples:
                "500defaultExample":
                  $ref: '#/components/examples/500defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Internal Service Error
      summary: Retrieve form types for each available Filings Source
      tags:
      - Global Filings API
      x-accepts: application/json
  /global-filings/v1/list-files:
    get:
      description: Gets the latest 25 filings files. Parameters can be used to filter
        and narrow down the results
      parameters:
      - description: This parameter filters the results based on the source of the
          filings documents.
        explode: true
        in: query
        name: source
        required: true
        schema:
          enum:
          - EDG
          - SWD
          type: string
        style: form
      - description: Enables to get the data in ascending or descending order based
          on startTime. Results are in reverse chronological order if this parameter
          is not used
        explode: true
        in: query
        name: _sort
        required: false
        schema:
          default: -startDate
          enum:
          - startDate
          - -startDate
          type: string
        style: form
      - description: The earliest date the API should fetch for. Dates can be YYYY-MM-DD
          format
        examples:
          Filings documents published on or after July 1st 2020:
            value: 2020-07-01
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - description: The latest date the API should fetch for. Dates can be YYYY-MM-DD
          format
        examples:
          Filings documents published on or before December 1st 2020:
            value: 2020-12-01
          Filings documents published over one year ago:
            value: -365
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the maximum number of results to return per result
          (max. 25)
        explode: true
        in: query
        name: _paginationLimit
        required: true
        schema:
          enum:
          - 5
          type: integer
        style: form
      - description: Specifies the starting point for pagination. This parameter is
          used to identify the beginning of next set of results
        explode: true
        in: query
        name: _paginationOffset
        required: true
        schema:
          enum:
          - 0
          type: integer
        style: form
      - description: This parameter filters the results based on ticker ID.
        examples:
          AAPL - Apple Inc. - EDG ONLY:
            value: AAPL
          AALEC - Cogelec - SWD ONLY:
            value: ALLEC
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
      - description: This parameter filters the results based on filings formType.
          Use the form-types endpoint to view the formTypes available by filings source.
        examples:
          "10-Q - Quarterly Report - EDG ONLY":
            value: 10-Q
          Q - Quarterly Report - SWD ONLY:
            value: Q
        explode: true
        in: query
        name: formType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default200ResponseExample:
                  $ref: '#/components/examples/200lfdefaultExample'
              schema:
                $ref: '#/components/schemas/response'
          description: Global Filings data items
        "400":
          content:
            application/json:
              examples:
                "400defaultExample":
                  $ref: '#/components/examples/400lfdefaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Bad request- invalid or missing parameter
        "401":
          content:
            application/json:
              examples:
                "401defaultExample":
                  $ref: '#/components/examples/401defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                "403defaultExample":
                  $ref: '#/components/examples/403defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Entitlements Not Found
        "500":
          content:
            application/json:
              examples:
                "500defaultExample":
                  $ref: '#/components/examples/500defaultExample'
              schema:
                $ref: '#/components/schemas/status'
          description: Internal Service Error
      summary: Retrieve filings and metadata within FactSet coverage
      tags:
      - Global Filings API
      x-accepts: application/json
  /asynch/streetaccount/v1/request-files:
    get:
      description: |-
        Give the startDate and endDate parameters as request parameters in the /request-files endpoint, it returns the jobID. startDate and endDate should be in YYYY-MM-DDTHH:MM:SSZ format

        This API only supports adhoc requests to retrieve historical files and does not support real-time       files and if you interested in require real-time push should consider the other three methods         (pushed via SFTP, to QNT account, or your Azure Storage) and Due to technical limitation, FactSet can only send out 10,000 files per request
      parameters:
      - description: Date from which data is required. Should be YYYY-MM-DDTHH:MM:SSZ
          format
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The date until which the data is to be fetched. Should be YYYY-MM-DDTHH:MM:SSZ
          format
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default200ResponseExample:
                  $ref: '#/components/examples/200RequestFilesExample'
              schema:
                $ref: '#/components/schemas/requestfilesResponse'
          description: success
        "400":
          content:
            application/json:
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/StreetAccountExample'
              schema:
                $ref: '#/components/schemas/StreetAccountStatus'
          description: Bad request
      summary: Returns the jobID
      tags:
      - StreetAccount XML API
      x-accepts: application/json
  /asynch/streetaccount/v1/check-status:
    get:
      description: Need to plug-in the jobID got from /request-files into /check-status
        endpoint
      parameters:
      - description: jobID returned by the request-files endpoint to know the status
          and percentDone
        explode: true
        in: query
        name: jobID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default200ResponseExample:
                  $ref: '#/components/examples/200CheckStatusExample'
              schema:
                $ref: '#/components/schemas/checkstatusResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/StreetAccountExample'
              schema:
                $ref: '#/components/schemas/StreetAccountStatus'
          description: Bad request
      summary: Returns the status and percentDone of the requested jobID
      tags:
      - StreetAccount XML API
      x-accepts: application/json
  /asynch/streetaccount/v1/get-files:
    get:
      description: Need to plug-in the jobID got from /request-files into /check-status
        endpoint
      parameters:
      - description: jobID returned by the request-files endpoint to collect the results
          of the query
        explode: true
        in: query
        name: jobID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default200ResponseExample:
                  $ref: '#/components/examples/200GetFilesExample'
              schema:
                $ref: '#/components/schemas/getfilesResponse'
          description: success
        "400":
          content:
            application/json:
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/StreetAccountExample'
              schema:
                $ref: '#/components/schemas/StreetAccountStatus'
          description: Bad request
      summary: Returns the SA XML files for the specified daterange
      tags:
      - StreetAccount XML API
      x-accepts: application/json
components:
  examples:
    "200ftdefaultExample":
      summary: (example output)
      value:
        formTypes:
        - "4"
        - 8K
        - 8-K
        - 8-K/A
        - 10-K
        - 10-K/A
        - 10-KT
        - 10-Q
        - 13F-HR
        - IQ
        - SC 13G
        - SC 13G/A
    "400ftdefaultExample":
      summary: (sample error response)
      value:
        response:
          code: 400
          description: parameterError:Missing required parameter source
          id: 78592649209
          details:
            validparameters:
              _source:
              - SWD
              - EDG
    "200lfdefaultExample":
      summary: (example output)
      value:
        data:
          publishDate: 2020-11-17 08:23:24
          fileSize: 4519
          formType: 10-K
          period: 2020-09-26 00:00:00
          file_name: 38f96e14-d828-eb11-8110-8cdcd4af21e4
          companyName: Hologic, Inc.
          headline: HOLOGIC INC files (10-K) Basic annual filing, for period end 26-Sep-20
            (HOLX-US)
          fileName: 38f96e14-d828-eb11-8110-8cdcd4af21e4.html
          identifier: HOLX-US
          url: https://fdss3-unstructured-data-delivery-globalfilings-prod.s3.amazonaws.com/2020/11/38f96e14-d828-eb11-8110-8cdcd4af21e4.html?X-Amz-Algorithm=AWS4-HMAC
        meta:
          sort: startDate
          pagination:
            total: 4730
            isEstimatedTotal: false
            limit: 25
            offset: 25
          partial:
            isPartial: true
    "400lfdefaultExample":
      summary: (sample error response)
      value:
        response:
          code: 400
          description: parameterError:Missing required parameter source
          id: 78592649209
          details:
            validparameters:
              _sort:
              - startDate
              - -startDate
              _paginationLimit:
              - integer from 1 to 500
              _paginationOffset:
              - positive integer
              startDate:
              - integer offset less than 0
              - date
              - datetime
              endDate:
              - integer offset less than 0
              - date
              - datetime
              ids:
              - ticker
              form_type:
              - Must be 10-K, 10-K/A, 10-KT or 10-Q
              source:
              - Must be EDG, SWD
    "401defaultExample":
      summary: (sample error response)
      value:
        response:
          code: 401
          description: Authentication Failed
          id: 78592649209
    "403defaultExample":
      summary: (sample error response)
      value:
        response:
          code: 403
          description: Entitlements Not Found
          id: 78592649209
    "500defaultExample":
      summary: (sample error response)
      value:
        response:
          code: 500
          description: Internal Service Error
          id: 78592649209
    "200RequestFilesExample":
      summary: Sample Response
      value:
        jobID: 23ee0d2f-83be-42b4-8ccc-5edd0ba9f7b2
        status: submitted
    "200CheckStatusExample":
      summary: Sample Response
      value:
        jobID: 23ee0d2f-83be-42b4-8ccc-5edd0ba9f7b2
        status: completed
        percentDone: "100"
    "200GetFilesExample":
      summary: Sample Response
      value:
        data:
        - product: SA
          startDate: 2022-01-11T00:00:00Z
          endDate: 22-01-12T23:59:59Z
          'jobID:': 23ee0d2f-83be-42b4-8ccc-5edd0ba9f7b2
          status: completed
          url: https://fdss3-unstructured-data-delivery-async-prod.s3.amazonaws.com/content_engineering_user/sa_mustang_history/c843257f-59cd-45f9-bd5e-d9c13cc5719d.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA6B6XG7VEXONRNFZ4%2F20220120%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220120T195145Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJHMEUCIA3YSsUdeI06ACp5AZkubpgojbJuIyhgWuhgdp0iiT3EAiEA24kOY5TE3T1LjMNznM%2FJsLbWmhagNr%2BHaSF2FgiGSBgqkgIIHRABGgw5NjYyODIxMTY0MjUiDJkfiyi91Q0sGri9qyrvAeGwhxXHxyOeoFd9H%2ByHI5sk%2FDl%2FYVwUl3RET2CMEm2VegZy1pQwZmkbOcgtbraTplZwZRlxELpBQV72Antvusd2v7qWY7PzDwOWMSz8DNt6u0tbimKLAAx0uHEuG%2F%2FVWpeU9%2FZLuWkMqUKVhyzji7H%2FeRzh4wIY%2FyzxeHIJ8bbEgUf0qFbpGZKTgWjhSIFXftia8n2s0U6W%2BcDSZJpCmk2Py%2Bai%2FMlCWxJnDlHqJ5J9xfEymDQm21c4SUUnxr1kHcoNthp3toEzMjE%2Bz%2Fw5OgMn1thTEDtHKsPZU8ZFQjQMEr4ShPEyrszLEprPMVi1MMP6po8GOpoBwkbUPSQqDztB8F%2BUvx1tdXGZ2qMps2DeHEmenMmlkA40IrvC9tLri9LBepgxKoIxpl48vgcbjgH2OJ5kLY2gNszHbqeimvVNtmY%2F5MgJ6oGqAy%2FCO%2FnfRLj6vfuVscdcAalpr6jBmPWYgGGdWoHyZ2%2B2wW4q3MneePNW1lUz47%2Ff40nRQBeORzCfp9mc8jXQLmOJP90RSBlFGQ%3D%3D&X-Amz-Signature=6f2edcfabc86072c3431f38cd5df5fc20a8f0b56dbd58573ee94b77958ca9af9
    StreetAccountExample:
      summary: Sample error Response
      value:
        id: 0ad3e09c-d8a2-4223-a1a3-0244d1247351
        error_message: parameterError:Missing required parameter jobID
  schemas:
    response:
      example:
        data:
        - identifier: identifier
          formType: formType
          period: period
          fileSize: fileSize
          file_name: file_name
          companyName: companyName
          publishDate: publishDate
          source: source
          headline: headline
          fileFormat: fileFormat
          url: url
        - identifier: identifier
          formType: formType
          period: period
          fileSize: fileSize
          file_name: file_name
          companyName: companyName
          publishDate: publishDate
          source: source
          headline: headline
          fileFormat: fileFormat
          url: url
        meta:
          pagination:
            total: 0
            offset: 1
            limit: 6
            isEstimatedTotal: true
          sort:
          - sort
          - sort
          partial:
            isPartial: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/filings'
          type: array
        meta:
          $ref: '#/components/schemas/meta'
      type: object
    filings:
      example:
        identifier: identifier
        formType: formType
        period: period
        fileSize: fileSize
        file_name: file_name
        companyName: companyName
        publishDate: publishDate
        source: source
        headline: headline
        fileFormat: fileFormat
        url: url
      properties:
        file_name:
          description: Unique ID of the filings document.
          type: string
        headline:
          description: Headline of the filings document.
          type: string
        source:
          description: Source of the filings document.
          type: string
        publishDate:
          description: Date the filings document was made published.
          type: string
        companyName:
          description: Company name.
          type: string
        identifier:
          description: Company ticker.
          type: string
        fileSize:
          description: File size in KB.
          type: string
        fileFormat:
          description: File format of the filings document.
          type: string
        formType:
          description: Form type of the filings document, specific to the document
            source.
          type: string
        period:
          description: End date of the company's filing period.
          type: string
        url:
          description: Download link for the filings document.
          type: string
      type: object
    meta:
      description: Array of metadata objects
      example:
        pagination:
          total: 0
          offset: 1
          limit: 6
          isEstimatedTotal: true
        sort:
        - sort
        - sort
        partial:
          isPartial: true
      properties:
        sort:
          description: The value in _sort parameter if used in the request
          items:
            type: string
          type: array
        pagination:
          $ref: '#/components/schemas/paginationItems'
        partial:
          $ref: '#/components/schemas/isPartialitems'
      type: object
    paginationItems:
      description: List of pagination objects
      example:
        total: 0
        offset: 1
        limit: 6
        isEstimatedTotal: true
      properties:
        total:
          description: Total number of files the API returns for a particular query
          type: integer
        isEstimatedTotal:
          description: Boolean value that represents whether the total count of files
            returned is exact or an estimate. This is defaulted to False as the API
            should always return the exact count
          type: boolean
        limit:
          description: Number of results returned per page
          type: integer
        offset:
          description: The flag indicating the position in the results array if additional
            results are available beyond the default value or the value in paginationLimit
            parameter (if used). Thiis value is passed in the _paginationOffset parameter
            to retreieve subsequent results
          type: integer
      type: object
    isPartialitems:
      description: Indicates if additional results are available (False -> when the
        API returns the last set of results,True -> when additional results are available.
        Pass the value from offset in metadata to the _paginationOffset parameter
        in subsequent request)
      example:
        isPartial: true
      properties:
        isPartial:
          type: boolean
      type: object
    requestfilesResponse:
      example:
        jobID: jobID
        status: status
      properties:
        jobID:
          description: Unique id to get the xml files for the requested date
          type: string
        status:
          description: Returns the value as submitted. Tells the request has been
            submitted
          type: string
      type: object
    checkstatusResponse:
      example:
        jobID: jobID
        percentDone: 0
        status: status
      properties:
        jobID:
          description: Unique id to get the xml files for the requested date
          type: string
        status:
          description: Returns any of the 2 results Submitted ->Running->Completed
            and Failed
          type: string
        percentDone:
          description: Returns how much percentage of  task is completed for the requested
            jobID
          type: integer
      type: object
    getfilesResponse:
      example:
        data:
        - jobID: jobID
          product: product
          endDate: 2000-01-23
          startDate: 2000-01-23
          url: url
          status: status
        - jobID: jobID
          product: product
          endDate: 2000-01-23
          startDate: 2000-01-23
          url: url
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/getResponse'
          type: array
      type: object
    getResponse:
      example:
        jobID: jobID
        product: product
        endDate: 2000-01-23
        startDate: 2000-01-23
        url: url
        status: status
      properties:
        product:
          description: Defines the name of the product
          type: string
        startDate:
          description: The startDate from which the data is required in YYYY-MM-DDTHH:MM:SSZ
            format
          format: date
          type: string
        endDate:
          description: The endDate until which the data is fetched in YYYY-MM-DDTHH:MM:SSZ
            format
          format: date
          type: string
        jobID:
          description: Unique id to get the xml files for the requested date
          type: string
        status:
          description: Defines the status of the request
          type: string
        url:
          description: Link to download the zip file which contains xml files
          type: string
      type: object
    status:
      description: Status reponse object returned
      properties:
        code:
          description: Status code
          type: string
        description:
          description: Textual error message
          type: string
        id:
          description: Unique status ID
          type: string
        details:
          $ref: '#/components/schemas/error_detail'
      title: Reponse Status
      type: object
    error_detail:
      properties:
        validparameters:
          $ref: '#/components/schemas/valid_parameter_details'
      title: Error Details
      type: object
    valid_parameter_details:
      properties:
        _sort:
          example:
          - startDate
          - -startDate
        _paginationLimit:
          example:
          - integer from 1 to 500
        _paginationOffset:
          example:
          - positive integer
        startDate:
          example:
          - integer offset less than 0
          - date
          - datetime
        endDate:
          example:
          - integer offset less than 0
          - date
          - datetime
        ids:
          example:
          - string representing a company ticker
        source:
          example:
          - EDG,SWD
      title: Error Detail Items
      type: object
    StreetAccountStatus:
      properties:
        id:
          type: string
        error_message:
          description: Textual error message
          type: string
      title: Response Status
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

