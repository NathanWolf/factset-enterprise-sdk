openapi: 3.0.1
info:
  description: Consume FactSet-collected company logos through an API that seamlessly
    integrates with company fundamentals and estimates data (listed equities data
    available via the stocks API), quotes, time series, and other Functional APIs.
  title: Company Logo API For Digital Portals
  version: "2"
servers:
- url: //api.factset.com/wealth/v1
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: company endpoints
  name: company
paths:
  /company/logo/get:
    get:
      description: "List of URLs for transparent company logos in different sizes\
        \ and formats.   The different sizes for the rectangular and square formats\
        \ are: \n\n **Small**:\n * rectangular:  maximum width of 88 pixels and maximum\
        \ height of 31 pixels.\n * square:  31 x 31 pixels.\n\n\n **Medium**: small\
        \ logo scaled up by 200%.\n\n **Large**: small logo scaled up by 300%.\n\n\
        \ **Vector**: can be rendered at any size."
      operationId: get/company/logo/get
      parameters:
      - description: 'Identifier that resolves to a company. '
        in: query
        name: identifier
        required: true
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maxLength: 50
          minLength: 4
          pattern: ^(([0-9A-Z]{6}-[SLR])|([0-9A-Z.]{1,47}-[A-Z]{2,4})|([0-9]{1,20}))$
          type: string
      - description: The type of the identifier.
        in: query
        name: identifierType
        required: true
        schema:
          enum:
          - idInstrument
          - tickerExchange
          type: string
          x-enum-description:
          - MDG identifier of an instrument.
          - 'FactSet market symbol of the notation, usually consisting of the ticker
            (e.g. "FDS" for FactSet Research Systems Inc.) and the three-character
            code of the exchange on which the listing is traded (example: FDS-NYS).'
        x-enum-description:
        - MDG identifier of an instrument.
        - 'FactSet market symbol of the notation, usually consisting of the ticker
          (e.g. "FDS" for FactSet Research Systems Inc.) and the three-character code
          of the exchange on which the listing is traded (example: FDS-NYS).'
      - description: Format of the logos.
        in: query
        name: format
        schema:
          default: rectangular
          enum:
          - rectangular
          - square
          type: string
          x-enum-description:
          - Logos in rectangular format
          - Logos in square format
        x-enum-description:
        - Logos in rectangular format
        - Logos in square format
      - description: Limit the attributes returned in the response to the specified
          set.
        explode: false
        in: query
        name: _attributes
        schema:
          items:
            maxLength: 100
            type: string
          maxItems: 50
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful Response
      summary: List of URLs of company logos.
      tags:
      - company
      x-supportsOffsetBasedPaging: false
      x-supportsOffsetBasedPagingWithoutTotal: false
      x-supportsCursorBasedPaging: false
      x-supportsCursorBasedPagingWithoutTotal: false
      x-supportsPush: false
      x-requiresUser: false
      x-requiresInternalClient: false
      x-disallowUser: false
      x-no-merge: false
      x-maxSortParameterCount: 10
      x-supportsPermissionDeniedResponse: false
      x-accepts: application/json
components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            properties:
              meta:
                $ref: '#/components/schemas/ErrorMetaObject'
              errors:
                $ref: '#/components/schemas/ErrorObject'
            type: object
      description: Generic error response for all errors (400 ... 599 error codes)
  schemas:
    ErrorMetaObject:
      properties:
        status:
          $ref: '#/components/schemas/StatusObject'
      type: object
    ErrorObject:
      description: The errors member contains additional information about a failed
        request.
      items:
        properties:
          details:
            description: A human-readable, unstructured explanation specific to this
              occurrence of the failure.
            type: string
          encryptedDetails:
            description: Base64-encoded, internal details about the error, in addition
              to "details".
            type: string
          type:
            description: Internal error type of the Foundation API protocol.
            format: int32
            type: number
          attribute:
            description: For a validation error, a reference to the request parameter
              that failed validation; otherwise, an empty array.
            items:
              properties:
                name:
                  description: Element of the path denoting the request parameter.
                  type: string
                index:
                  description: If the attribute "name" designates an array, index
                    of the array element; otherwise the special value -1.
                  format: int32
                  type: number
              type: object
              x-property-sort:
              - name
              - index
            type: array
        type: object
        x-property-sort:
        - detail
        - encryptedDetails
        - type
        - attribute
      type: array
    AttributesMember:
      description: Limit the attributes returned in the response to the specified
        set.
      items:
        maxLength: 100
        type: string
      maxItems: 50
      type: array
      uniqueItems: true
    LanguageMember:
      description: ISO 639-1 code of the language.
      exclusiveMaximum: false
      exclusiveMinimum: false
      format: isoLanguage
      maxLength: 2
      minLength: 2
      type: string
    StatusObject:
      description: The status member contains the status code of the response.
      example:
        code: 0.8008281904610115
      properties:
        code:
          description: The HTTP status code of the response, mirroring the code from
            the Status-Line of the HTTP response message (see [RFC2616] section 6.1).
          format: int32
          type: number
      required:
      - code
      type: object
    CursorBasedPaginationOutputObject:
      description: Pagination attributes for the cursor-based pagination strategy.
      properties:
        total:
          description: Total number of entries in the result set.
          format: int32
          type: number
        isEstimatedTotal:
          description: Flag indicating that the value of `total` is estimated.
          type: boolean
        next:
          description: The next cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination, otherwise `null`.
          type: string
        previous:
          description: The previous cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination. If a previous cursor
            position is not supported or available, `previous` is `null`.
          type: string
      required:
      - isEstimatedTotal
      - next
      - previous
      - total
      type: object
      x-property-sort:
      - total
      - isEstimatedTotal
      - next
      - previous
    CursorBasedPaginationOutputObjectWithoutTotal:
      description: Pagination attributes for the cursor-based pagination strategy;
        a total element count is not supported.
      properties:
        next:
          description: The next cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination, otherwise `null`.
          type: string
        previous:
          description: The previous cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination. If a previous cursor
            position is not supported or available, `previous` is `null`.
          type: string
      required:
      - next
      - previous
      type: object
      x-property-sort:
      - next
      - previous
    OffsetBasedPaginationOutputObject:
      description: Pagination attributes for the offset-based pagination strategy.
      properties:
        total:
          description: Total number of entries in the result set.
          format: int32
          type: number
        isEstimatedTotal:
          description: Flag indicating that the value of "total" is estimated.
          type: boolean
      required:
      - isEstimatedTotal
      - total
      type: object
      x-property-sort:
      - total
      - isEstimatedTotal
    OffsetBasedPaginationOutputObjectWithoutTotal:
      description: Pagination attributes for the offset-based pagination strategy;
        a total element count is not supported.
      properties:
        hasNext:
          description: Flag indicating that a subsequent request with the same parameters,
            except that the parameter `pagination.offset` is incremented by `pagination.limit`,
            would yield additional results.
          type: boolean
      required:
      - hasNext
      type: object
      x-property-sort:
      - hasNext
    PartialOutputObject:
      description: Object denoting that the endpoint response is possibly incomplete.
      properties:
        isPartial:
          description: Flag indicating that the response is a possibly incomplete
            array or an object containing a possibly incomplete array, due to hitting
            a processing time limit. If `true`, some matching results might be missing
            from the array, or elements for matching results might be incorrectly
            included (for example, when priority sorting would have removed the element).
            Depending on the use case, such a response may be unsuitable.
          type: boolean
      required:
      - isPartial
      type: object
      x-property-sort:
      - isPartial
    inline_response_200_data_small:
      description: Small logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      properties:
        url:
          description: URL of the logo.
          format: url
          type: string
        mimeType:
          description: MIME type of the logo.
          type: string
      type: object
      x-property-sort:
      - url
      - mimeType
    inline_response_200_data_medium:
      description: Medium logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      properties:
        url:
          description: URL of the logo.
          format: url
          type: string
        mimeType:
          description: MIME type of the logo.
          type: string
      type: object
      x-property-sort:
      - url
      - mimeType
    inline_response_200_data_large:
      description: Large logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      properties:
        url:
          description: URL of the logo.
          format: url
          type: string
        mimeType:
          description: MIME type of the logo.
          type: string
      type: object
      x-property-sort:
      - url
      - mimeType
    inline_response_200_data_vector:
      description: Vector logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      properties:
        url:
          description: URL of the logo.
          format: url
          type: string
        mimeType:
          description: MIME type of the logo.
          type: string
      type: object
      x-property-sort:
      - url
      - mimeType
    inline_response_200_data:
      description: URLs of company logos. All URLs are publicly available via HTTPS
        and hosted by FactSet with a top-level domain `mdgms.com`. For possible values
        of the attribute `mimeType`, see endpoint `/basic/media/type/list` with parameter
        `filter.ids=1 (image)`.
      example:
        small:
          mimeType: mimeType
          url: http://example.com/aeiou
        large:
          mimeType: mimeType
          url: http://example.com/aeiou
        vector:
          mimeType: mimeType
          url: http://example.com/aeiou
        medium:
          mimeType: mimeType
          url: http://example.com/aeiou
      properties:
        small:
          $ref: '#/components/schemas/inline_response_200_data_small'
        medium:
          $ref: '#/components/schemas/inline_response_200_data_medium'
        large:
          $ref: '#/components/schemas/inline_response_200_data_large'
        vector:
          $ref: '#/components/schemas/inline_response_200_data_vector'
      type: object
      x-property-sort:
      - small
      - medium
      - large
      - vector
    inline_response_200_meta:
      description: The meta member contains the meta information of the response.
      example:
        status:
          code: 0.8008281904610115
      properties:
        status:
          $ref: '#/components/schemas/StatusObject'
      type: object
      x-property-sort:
      - status
    inline_response_200:
      example:
        data:
          small:
            mimeType: mimeType
            url: http://example.com/aeiou
          large:
            mimeType: mimeType
            url: http://example.com/aeiou
          vector:
            mimeType: mimeType
            url: http://example.com/aeiou
          medium:
            mimeType: mimeType
            url: http://example.com/aeiou
        meta:
          status:
            code: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_data'
        meta:
          $ref: '#/components/schemas/inline_response_200_meta'
      type: object
  securitySchemes:
    FactSetApiKey:
      scheme: basic
      type: http
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
x-interface-version: 1
x-documenter-version: 5.38.1
x-api-version: 3.1.0
x-original-swagger-version: "2.0"

