/*
 * ID Lookup API
 * The Factset Identifier Lookup API provides the ability to search for various identifier types based on keyword. The API returns tickers, entity names and other identifiers that Factset supports. In addition, the API offers filters that allows users to refine the results. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IDLookup.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IDLookup.JSON;


/**
 * returns the count of assest classes
 */
@ApiModel(description = "returns the count of assest classes")
@JsonPropertyOrder({
  LookupAssettype.JSON_PROPERTY_PEOPLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LookupAssettype implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PEOPLE = "people";
  private Integer people;

  public LookupAssettype() { 
  }

  public LookupAssettype people(Integer people) {
    this.people = people;
    return this;
  }

   /**
   * Get people
   * @return people
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")
  @JsonProperty(JSON_PROPERTY_PEOPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPeople() {
    return people;
  }


  @JsonProperty(JSON_PROPERTY_PEOPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeople(Integer people) {
    this.people = people;
  }


  /**
   * Return true if this lookup_assettype object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LookupAssettype lookupAssettype = (LookupAssettype) o;
    return Objects.equals(this.people, lookupAssettype.people);
  }

  @Override
  public int hashCode() {
    return Objects.hash(people);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LookupAssettype {\n");
    sb.append("    people: ").append(toIndentedString(people)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

