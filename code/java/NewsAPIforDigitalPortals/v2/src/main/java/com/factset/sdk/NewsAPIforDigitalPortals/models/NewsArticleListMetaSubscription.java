/*
 * News API For Digital Portals
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with quotes, time series, watchlists, and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * Midnight Trader * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the Quotes API for Digital Portals for access to detailed price and performance information, plus basic support for security identifier cross-reference.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.NewsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.NewsAPIforDigitalPortals.JSON;


/**
 * Object defining the subscription attributes.
 */
@ApiModel(description = "Object defining the subscription attributes.")
@JsonPropertyOrder({
  NewsArticleListMetaSubscription.JSON_PROPERTY_MINIMUM_INTERVAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NewsArticleListMetaSubscription implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MINIMUM_INTERVAL = "minimumInterval";
  private BigDecimal minimumInterval = new BigDecimal("0");

  public NewsArticleListMetaSubscription() { 
  }

  @JsonCreator
  public NewsArticleListMetaSubscription(
    @JsonProperty(value=JSON_PROPERTY_MINIMUM_INTERVAL, required=true) BigDecimal minimumInterval
  ) {
    this();
    this.minimumInterval = minimumInterval;
  }

  public NewsArticleListMetaSubscription minimumInterval(BigDecimal minimumInterval) {
    this.minimumInterval = minimumInterval;
    return this;
  }

   /**
   * Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.
   * minimum: 0
   * maximum: 5000
   * @return minimumInterval
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.")
  @JsonProperty(JSON_PROPERTY_MINIMUM_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMinimumInterval() {
    return minimumInterval;
  }


  @JsonProperty(JSON_PROPERTY_MINIMUM_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinimumInterval(BigDecimal minimumInterval) {
    this.minimumInterval = minimumInterval;
  }


  /**
   * Return true if this _news_article_list_meta_subscription object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewsArticleListMetaSubscription newsArticleListMetaSubscription = (NewsArticleListMetaSubscription) o;
    return Objects.equals(this.minimumInterval, newsArticleListMetaSubscription.minimumInterval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minimumInterval);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewsArticleListMetaSubscription {\n");
    sb.append("    minimumInterval: ").append(toIndentedString(minimumInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

