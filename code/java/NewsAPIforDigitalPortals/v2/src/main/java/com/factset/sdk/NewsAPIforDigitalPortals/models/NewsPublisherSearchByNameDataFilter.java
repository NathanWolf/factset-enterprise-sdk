/*
 * News API For Digital Portals
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with quotes, time series, watchlists, and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * Midnight Trader * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the Quotes API for Digital Portals for access to detailed price and performance information, plus basic support for security identifier cross-reference.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.NewsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.NewsAPIforDigitalPortals.models.NewsPublisherSearchByNameDataFilterDelivery;
import com.factset.sdk.NewsAPIforDigitalPortals.models.NewsPublisherSearchByNameDataFilterDistributor;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.NewsAPIforDigitalPortals.JSON;


/**
 * Criteria that filter the items in the response list; only items that match all of the criteria are returned.
 */
@ApiModel(description = "Criteria that filter the items in the response list; only items that match all of the criteria are returned.")
@JsonPropertyOrder({
  NewsPublisherSearchByNameDataFilter.JSON_PROPERTY_DISTRIBUTOR,
  NewsPublisherSearchByNameDataFilter.JSON_PROPERTY_DELIVERY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NewsPublisherSearchByNameDataFilter implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DISTRIBUTOR = "distributor";
  private NewsPublisherSearchByNameDataFilterDistributor distributor;

  public static final String JSON_PROPERTY_DELIVERY = "delivery";
  private NewsPublisherSearchByNameDataFilterDelivery delivery;

  public NewsPublisherSearchByNameDataFilter() { 
  }

  public NewsPublisherSearchByNameDataFilter distributor(NewsPublisherSearchByNameDataFilterDistributor distributor) {
    this.distributor = distributor;
    return this;
  }

   /**
   * Get distributor
   * @return distributor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NewsPublisherSearchByNameDataFilterDistributor getDistributor() {
    return distributor;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributor(NewsPublisherSearchByNameDataFilterDistributor distributor) {
    this.distributor = distributor;
  }


  public NewsPublisherSearchByNameDataFilter delivery(NewsPublisherSearchByNameDataFilterDelivery delivery) {
    this.delivery = delivery;
    return this;
  }

   /**
   * Get delivery
   * @return delivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NewsPublisherSearchByNameDataFilterDelivery getDelivery() {
    return delivery;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelivery(NewsPublisherSearchByNameDataFilterDelivery delivery) {
    this.delivery = delivery;
  }


  /**
   * Return true if this _news_publisher_searchByName_data_filter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewsPublisherSearchByNameDataFilter newsPublisherSearchByNameDataFilter = (NewsPublisherSearchByNameDataFilter) o;
    return Objects.equals(this.distributor, newsPublisherSearchByNameDataFilter.distributor) &&
        Objects.equals(this.delivery, newsPublisherSearchByNameDataFilter.delivery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distributor, delivery);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewsPublisherSearchByNameDataFilter {\n");
    sb.append("    distributor: ").append(toIndentedString(distributor)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

