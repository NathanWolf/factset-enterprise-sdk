/*
 * S&P Global Fixed Income Evaluated Prices & Analytics API
 * Gain access to evaluated pricing and analytics data for Corporate Bonds, Municipal Bonds and Asset Backed Securities provided by S&P Global (formerly IHS Markit) .  Data returned through multiple endpoints like prices, spread, yield, yield curve, sensitivity, coupon information, securities metadata and details specific to the Asset Backed Securities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.JSON;


/**
 * BondSensitivity
 */
@JsonPropertyOrder({
  BondSensitivity.JSON_PROPERTY_REQUEST_ID,
  BondSensitivity.JSON_PROPERTY_FSYM_ID,
  BondSensitivity.JSON_PROPERTY_DATE,
  BondSensitivity.JSON_PROPERTY_BID_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_MID_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_ASK_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_BID_EFFECTIVE_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_MID_EFFECTIVE_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_ASK_EFFECTIVE_CONVEXITY,
  BondSensitivity.JSON_PROPERTY_BID_EFFECTIVE_DURATION,
  BondSensitivity.JSON_PROPERTY_MID_EFFECTIVE_DURATION,
  BondSensitivity.JSON_PROPERTY_ASK_EFFECTIVE_DURATION,
  BondSensitivity.JSON_PROPERTY_BID_MACAULAY_DURATION,
  BondSensitivity.JSON_PROPERTY_MID_MACAULAY_DURATION,
  BondSensitivity.JSON_PROPERTY_ASK_MACAULAY_DURATION,
  BondSensitivity.JSON_PROPERTY_BID_MODIFIED_DURATION,
  BondSensitivity.JSON_PROPERTY_MID_MODIFIED_DURATION,
  BondSensitivity.JSON_PROPERTY_ASK_MODIFIED_DURATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BondSensitivity implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_BID_CONVEXITY = "bidConvexity";
  private JsonNullable<Double> bidConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_CONVEXITY = "midConvexity";
  private JsonNullable<Double> midConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_CONVEXITY = "askConvexity";
  private JsonNullable<Double> askConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_EFFECTIVE_CONVEXITY = "bidEffectiveConvexity";
  private JsonNullable<Double> bidEffectiveConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_EFFECTIVE_CONVEXITY = "midEffectiveConvexity";
  private JsonNullable<Double> midEffectiveConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_EFFECTIVE_CONVEXITY = "askEffectiveConvexity";
  private JsonNullable<Double> askEffectiveConvexity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_EFFECTIVE_DURATION = "bidEffectiveDuration";
  private JsonNullable<Double> bidEffectiveDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_EFFECTIVE_DURATION = "midEffectiveDuration";
  private JsonNullable<Double> midEffectiveDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_EFFECTIVE_DURATION = "askEffectiveDuration";
  private JsonNullable<Double> askEffectiveDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_MACAULAY_DURATION = "bidMacaulayDuration";
  private JsonNullable<Double> bidMacaulayDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_MACAULAY_DURATION = "midMacaulayDuration";
  private JsonNullable<Double> midMacaulayDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_MACAULAY_DURATION = "askMacaulayDuration";
  private JsonNullable<Double> askMacaulayDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_MODIFIED_DURATION = "bidModifiedDuration";
  private JsonNullable<Double> bidModifiedDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_MODIFIED_DURATION = "midModifiedDuration";
  private JsonNullable<Double> midModifiedDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_MODIFIED_DURATION = "askModifiedDuration";
  private JsonNullable<Double> askModifiedDuration = JsonNullable.<Double>undefined();

  public BondSensitivity() { 
  }

  public BondSensitivity requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "US45905URL07", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public BondSensitivity fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CJQZQ0-S", value = "FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public BondSensitivity date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * The date on which the price is calculated.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Jan 26 00:00:00 UTC 2023", value = "The date on which the price is calculated.")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public BondSensitivity bidConvexity(Double bidConvexity) {
    this.bidConvexity = JsonNullable.<Double>of(bidConvexity);
    return this;
  }

   /**
   * Measures the change of Duration with the change in yield,based on the bid price .Available only  for &#x60;corporate bonds&#x60; and &#x60;municipal bonds&#x60;.
   * @return bidConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.83", value = "Measures the change of Duration with the change in yield,based on the bid price .Available only  for `corporate bonds` and `municipal bonds`.")
  @JsonIgnore

  public Double getBidConvexity() {
        return bidConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidConvexity_JsonNullable() {
    return bidConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_CONVEXITY)
  public void setBidConvexity_JsonNullable(JsonNullable<Double> bidConvexity) {
    this.bidConvexity = bidConvexity;
  }

  public void setBidConvexity(Double bidConvexity) {
    this.bidConvexity = JsonNullable.<Double>of(bidConvexity);
  }


  public BondSensitivity midConvexity(Double midConvexity) {
    this.midConvexity = JsonNullable.<Double>of(midConvexity);
    return this;
  }

   /**
   * Measures the change of duration with the change in yield,based on the mid price .Available only  for &#x60;corporate bonds&#x60;
   * @return midConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.83", value = "Measures the change of duration with the change in yield,based on the mid price .Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getMidConvexity() {
        return midConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidConvexity_JsonNullable() {
    return midConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_CONVEXITY)
  public void setMidConvexity_JsonNullable(JsonNullable<Double> midConvexity) {
    this.midConvexity = midConvexity;
  }

  public void setMidConvexity(Double midConvexity) {
    this.midConvexity = JsonNullable.<Double>of(midConvexity);
  }


  public BondSensitivity askConvexity(Double askConvexity) {
    this.askConvexity = JsonNullable.<Double>of(askConvexity);
    return this;
  }

   /**
   * Measures the change of duration with the change in yield,based on the ask price .Available only  for &#x60;corporate bonds&#x60;
   * @return askConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.83", value = "Measures the change of duration with the change in yield,based on the ask price .Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getAskConvexity() {
        return askConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskConvexity_JsonNullable() {
    return askConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_CONVEXITY)
  public void setAskConvexity_JsonNullable(JsonNullable<Double> askConvexity) {
    this.askConvexity = askConvexity;
  }

  public void setAskConvexity(Double askConvexity) {
    this.askConvexity = JsonNullable.<Double>of(askConvexity);
  }


  public BondSensitivity bidEffectiveConvexity(Double bidEffectiveConvexity) {
    this.bidEffectiveConvexity = JsonNullable.<Double>of(bidEffectiveConvexity);
    return this;
  }

   /**
   * The effective convexity based on the bid price .Available only  for &#x60;corporate bonds&#x60;.
   * @return bidEffectiveConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.86286", value = "The effective convexity based on the bid price .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidEffectiveConvexity() {
        return bidEffectiveConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_EFFECTIVE_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidEffectiveConvexity_JsonNullable() {
    return bidEffectiveConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_EFFECTIVE_CONVEXITY)
  public void setBidEffectiveConvexity_JsonNullable(JsonNullable<Double> bidEffectiveConvexity) {
    this.bidEffectiveConvexity = bidEffectiveConvexity;
  }

  public void setBidEffectiveConvexity(Double bidEffectiveConvexity) {
    this.bidEffectiveConvexity = JsonNullable.<Double>of(bidEffectiveConvexity);
  }


  public BondSensitivity midEffectiveConvexity(Double midEffectiveConvexity) {
    this.midEffectiveConvexity = JsonNullable.<Double>of(midEffectiveConvexity);
    return this;
  }

   /**
   * The effective convexity based on the mid price .Available only  for &#x60;corporate bonds&#x60;.
   * @return midEffectiveConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.86481", value = "The effective convexity based on the mid price .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidEffectiveConvexity() {
        return midEffectiveConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_EFFECTIVE_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidEffectiveConvexity_JsonNullable() {
    return midEffectiveConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_EFFECTIVE_CONVEXITY)
  public void setMidEffectiveConvexity_JsonNullable(JsonNullable<Double> midEffectiveConvexity) {
    this.midEffectiveConvexity = midEffectiveConvexity;
  }

  public void setMidEffectiveConvexity(Double midEffectiveConvexity) {
    this.midEffectiveConvexity = JsonNullable.<Double>of(midEffectiveConvexity);
  }


  public BondSensitivity askEffectiveConvexity(Double askEffectiveConvexity) {
    this.askEffectiveConvexity = JsonNullable.<Double>of(askEffectiveConvexity);
    return this;
  }

   /**
   *  The effective convexity based on the ask price. Available only  for &#x60;corporate bonds&#x60;.
   * @return askEffectiveConvexity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.86676", value = " The effective convexity based on the ask price. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskEffectiveConvexity() {
        return askEffectiveConvexity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_EFFECTIVE_CONVEXITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskEffectiveConvexity_JsonNullable() {
    return askEffectiveConvexity;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_EFFECTIVE_CONVEXITY)
  public void setAskEffectiveConvexity_JsonNullable(JsonNullable<Double> askEffectiveConvexity) {
    this.askEffectiveConvexity = askEffectiveConvexity;
  }

  public void setAskEffectiveConvexity(Double askEffectiveConvexity) {
    this.askEffectiveConvexity = JsonNullable.<Double>of(askEffectiveConvexity);
  }


  public BondSensitivity bidEffectiveDuration(Double bidEffectiveDuration) {
    this.bidEffectiveDuration = JsonNullable.<Double>of(bidEffectiveDuration);
    return this;
  }

   /**
   * A duration calculation for bonds with embedded options,based on the bid price. Effective duration takes into account that expected cash flows fluctuate as interest rates change. Available only  for &#x60;corporate bonds&#x60;
   * @return bidEffectiveDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.9278", value = "A duration calculation for bonds with embedded options,based on the bid price. Effective duration takes into account that expected cash flows fluctuate as interest rates change. Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getBidEffectiveDuration() {
        return bidEffectiveDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_EFFECTIVE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidEffectiveDuration_JsonNullable() {
    return bidEffectiveDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_EFFECTIVE_DURATION)
  public void setBidEffectiveDuration_JsonNullable(JsonNullable<Double> bidEffectiveDuration) {
    this.bidEffectiveDuration = bidEffectiveDuration;
  }

  public void setBidEffectiveDuration(Double bidEffectiveDuration) {
    this.bidEffectiveDuration = JsonNullable.<Double>of(bidEffectiveDuration);
  }


  public BondSensitivity midEffectiveDuration(Double midEffectiveDuration) {
    this.midEffectiveDuration = JsonNullable.<Double>of(midEffectiveDuration);
    return this;
  }

   /**
   * A duration calculation for bonds with embedded options,based on the mid price. Effective duration takes into account that expected cash flows fluctuate as interest rates change .Available only  for &#x60;corporate bonds&#x60;.
   * @return midEffectiveDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.92845", value = "A duration calculation for bonds with embedded options,based on the mid price. Effective duration takes into account that expected cash flows fluctuate as interest rates change .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidEffectiveDuration() {
        return midEffectiveDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_EFFECTIVE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidEffectiveDuration_JsonNullable() {
    return midEffectiveDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_EFFECTIVE_DURATION)
  public void setMidEffectiveDuration_JsonNullable(JsonNullable<Double> midEffectiveDuration) {
    this.midEffectiveDuration = midEffectiveDuration;
  }

  public void setMidEffectiveDuration(Double midEffectiveDuration) {
    this.midEffectiveDuration = JsonNullable.<Double>of(midEffectiveDuration);
  }


  public BondSensitivity askEffectiveDuration(Double askEffectiveDuration) {
    this.askEffectiveDuration = JsonNullable.<Double>of(askEffectiveDuration);
    return this;
  }

   /**
   * A duration calculation for bonds with embedded options,based on the ask price. Effective duration takes into account that expected cash flows fluctuate as interest rates change. Available only  for &#x60;corporate bonds&#x60;
   * @return askEffectiveDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.9291", value = "A duration calculation for bonds with embedded options,based on the ask price. Effective duration takes into account that expected cash flows fluctuate as interest rates change. Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getAskEffectiveDuration() {
        return askEffectiveDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_EFFECTIVE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskEffectiveDuration_JsonNullable() {
    return askEffectiveDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_EFFECTIVE_DURATION)
  public void setAskEffectiveDuration_JsonNullable(JsonNullable<Double> askEffectiveDuration) {
    this.askEffectiveDuration = askEffectiveDuration;
  }

  public void setAskEffectiveDuration(Double askEffectiveDuration) {
    this.askEffectiveDuration = JsonNullable.<Double>of(askEffectiveDuration);
  }


  public BondSensitivity bidMacaulayDuration(Double bidMacaulayDuration) {
    this.bidMacaulayDuration = JsonNullable.<Double>of(bidMacaulayDuration);
    return this;
  }

   /**
   * The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the bid price .Available only  for &#x60;corporate bonds&#x60;.
   * @return bidMacaulayDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.04", value = "The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the bid price .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidMacaulayDuration() {
        return bidMacaulayDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_MACAULAY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidMacaulayDuration_JsonNullable() {
    return bidMacaulayDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_MACAULAY_DURATION)
  public void setBidMacaulayDuration_JsonNullable(JsonNullable<Double> bidMacaulayDuration) {
    this.bidMacaulayDuration = bidMacaulayDuration;
  }

  public void setBidMacaulayDuration(Double bidMacaulayDuration) {
    this.bidMacaulayDuration = JsonNullable.<Double>of(bidMacaulayDuration);
  }


  public BondSensitivity midMacaulayDuration(Double midMacaulayDuration) {
    this.midMacaulayDuration = JsonNullable.<Double>of(midMacaulayDuration);
    return this;
  }

   /**
   * The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the mid price .Available only  for &#x60;corporate bonds&#x60;.
   * @return midMacaulayDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.04", value = "The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the mid price .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidMacaulayDuration() {
        return midMacaulayDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_MACAULAY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidMacaulayDuration_JsonNullable() {
    return midMacaulayDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_MACAULAY_DURATION)
  public void setMidMacaulayDuration_JsonNullable(JsonNullable<Double> midMacaulayDuration) {
    this.midMacaulayDuration = midMacaulayDuration;
  }

  public void setMidMacaulayDuration(Double midMacaulayDuration) {
    this.midMacaulayDuration = JsonNullable.<Double>of(midMacaulayDuration);
  }


  public BondSensitivity askMacaulayDuration(Double askMacaulayDuration) {
    this.askMacaulayDuration = JsonNullable.<Double>of(askMacaulayDuration);
    return this;
  }

   /**
   * The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the ask price .Available only  for &#x60;corporate bonds&#x60;.
   * @return askMacaulayDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.04", value = "The weighted average maturity of bond, where the weights are relative discounted cash flows in each period,based on the ask price .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskMacaulayDuration() {
        return askMacaulayDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_MACAULAY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskMacaulayDuration_JsonNullable() {
    return askMacaulayDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_MACAULAY_DURATION)
  public void setAskMacaulayDuration_JsonNullable(JsonNullable<Double> askMacaulayDuration) {
    this.askMacaulayDuration = askMacaulayDuration;
  }

  public void setAskMacaulayDuration(Double askMacaulayDuration) {
    this.askMacaulayDuration = JsonNullable.<Double>of(askMacaulayDuration);
  }


  public BondSensitivity bidModifiedDuration(Double bidModifiedDuration) {
    this.bidModifiedDuration = JsonNullable.<Double>of(bidModifiedDuration);
    return this;
  }

   /**
   * The first derivative of the bond price, with respect to yield,based on the bid price.
   * @return bidModifiedDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The first derivative of the bond price, with respect to yield,based on the bid price.")
  @JsonIgnore

  public Double getBidModifiedDuration() {
        return bidModifiedDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_MODIFIED_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidModifiedDuration_JsonNullable() {
    return bidModifiedDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_MODIFIED_DURATION)
  public void setBidModifiedDuration_JsonNullable(JsonNullable<Double> bidModifiedDuration) {
    this.bidModifiedDuration = bidModifiedDuration;
  }

  public void setBidModifiedDuration(Double bidModifiedDuration) {
    this.bidModifiedDuration = JsonNullable.<Double>of(bidModifiedDuration);
  }


  public BondSensitivity midModifiedDuration(Double midModifiedDuration) {
    this.midModifiedDuration = JsonNullable.<Double>of(midModifiedDuration);
    return this;
  }

   /**
   * The first derivative of the bond price, with respect to yield,based on the mid price. Available only  for &#x60;corporate bonds&#x60;.
   * @return midModifiedDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The first derivative of the bond price, with respect to yield,based on the mid price. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidModifiedDuration() {
        return midModifiedDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_MODIFIED_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidModifiedDuration_JsonNullable() {
    return midModifiedDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_MODIFIED_DURATION)
  public void setMidModifiedDuration_JsonNullable(JsonNullable<Double> midModifiedDuration) {
    this.midModifiedDuration = midModifiedDuration;
  }

  public void setMidModifiedDuration(Double midModifiedDuration) {
    this.midModifiedDuration = JsonNullable.<Double>of(midModifiedDuration);
  }


  public BondSensitivity askModifiedDuration(Double askModifiedDuration) {
    this.askModifiedDuration = JsonNullable.<Double>of(askModifiedDuration);
    return this;
  }

   /**
   * The first derivative of the bond price, with respect to yield,based on the ask price. Available only  for &#x60;corporate bonds&#x60;.
   * @return askModifiedDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The first derivative of the bond price, with respect to yield,based on the ask price. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskModifiedDuration() {
        return askModifiedDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_MODIFIED_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskModifiedDuration_JsonNullable() {
    return askModifiedDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_MODIFIED_DURATION)
  public void setAskModifiedDuration_JsonNullable(JsonNullable<Double> askModifiedDuration) {
    this.askModifiedDuration = askModifiedDuration;
  }

  public void setAskModifiedDuration(Double askModifiedDuration) {
    this.askModifiedDuration = JsonNullable.<Double>of(askModifiedDuration);
  }


  /**
   * Return true if this bondSensitivity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BondSensitivity bondSensitivity = (BondSensitivity) o;
    return Objects.equals(this.requestId, bondSensitivity.requestId) &&
        equalsNullable(this.fsymId, bondSensitivity.fsymId) &&
        equalsNullable(this.date, bondSensitivity.date) &&
        equalsNullable(this.bidConvexity, bondSensitivity.bidConvexity) &&
        equalsNullable(this.midConvexity, bondSensitivity.midConvexity) &&
        equalsNullable(this.askConvexity, bondSensitivity.askConvexity) &&
        equalsNullable(this.bidEffectiveConvexity, bondSensitivity.bidEffectiveConvexity) &&
        equalsNullable(this.midEffectiveConvexity, bondSensitivity.midEffectiveConvexity) &&
        equalsNullable(this.askEffectiveConvexity, bondSensitivity.askEffectiveConvexity) &&
        equalsNullable(this.bidEffectiveDuration, bondSensitivity.bidEffectiveDuration) &&
        equalsNullable(this.midEffectiveDuration, bondSensitivity.midEffectiveDuration) &&
        equalsNullable(this.askEffectiveDuration, bondSensitivity.askEffectiveDuration) &&
        equalsNullable(this.bidMacaulayDuration, bondSensitivity.bidMacaulayDuration) &&
        equalsNullable(this.midMacaulayDuration, bondSensitivity.midMacaulayDuration) &&
        equalsNullable(this.askMacaulayDuration, bondSensitivity.askMacaulayDuration) &&
        equalsNullable(this.bidModifiedDuration, bondSensitivity.bidModifiedDuration) &&
        equalsNullable(this.midModifiedDuration, bondSensitivity.midModifiedDuration) &&
        equalsNullable(this.askModifiedDuration, bondSensitivity.askModifiedDuration);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(date), hashCodeNullable(bidConvexity), hashCodeNullable(midConvexity), hashCodeNullable(askConvexity), hashCodeNullable(bidEffectiveConvexity), hashCodeNullable(midEffectiveConvexity), hashCodeNullable(askEffectiveConvexity), hashCodeNullable(bidEffectiveDuration), hashCodeNullable(midEffectiveDuration), hashCodeNullable(askEffectiveDuration), hashCodeNullable(bidMacaulayDuration), hashCodeNullable(midMacaulayDuration), hashCodeNullable(askMacaulayDuration), hashCodeNullable(bidModifiedDuration), hashCodeNullable(midModifiedDuration), hashCodeNullable(askModifiedDuration));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BondSensitivity {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    bidConvexity: ").append(toIndentedString(bidConvexity)).append("\n");
    sb.append("    midConvexity: ").append(toIndentedString(midConvexity)).append("\n");
    sb.append("    askConvexity: ").append(toIndentedString(askConvexity)).append("\n");
    sb.append("    bidEffectiveConvexity: ").append(toIndentedString(bidEffectiveConvexity)).append("\n");
    sb.append("    midEffectiveConvexity: ").append(toIndentedString(midEffectiveConvexity)).append("\n");
    sb.append("    askEffectiveConvexity: ").append(toIndentedString(askEffectiveConvexity)).append("\n");
    sb.append("    bidEffectiveDuration: ").append(toIndentedString(bidEffectiveDuration)).append("\n");
    sb.append("    midEffectiveDuration: ").append(toIndentedString(midEffectiveDuration)).append("\n");
    sb.append("    askEffectiveDuration: ").append(toIndentedString(askEffectiveDuration)).append("\n");
    sb.append("    bidMacaulayDuration: ").append(toIndentedString(bidMacaulayDuration)).append("\n");
    sb.append("    midMacaulayDuration: ").append(toIndentedString(midMacaulayDuration)).append("\n");
    sb.append("    askMacaulayDuration: ").append(toIndentedString(askMacaulayDuration)).append("\n");
    sb.append("    bidModifiedDuration: ").append(toIndentedString(bidModifiedDuration)).append("\n");
    sb.append("    midModifiedDuration: ").append(toIndentedString(midModifiedDuration)).append("\n");
    sb.append("    askModifiedDuration: ").append(toIndentedString(askModifiedDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

