/*
 * S&P Global Fixed Income Evaluated Prices & Analytics API
 * Gain access to evaluated pricing and analytics data for Corporate Bonds, Municipal Bonds and Asset Backed Securities provided by S&P Global (formerly IHS Markit) .  Data returned through multiple endpoints like prices, spread, yield, yield curve, sensitivity, coupon information, securities metadata and details specific to the Asset Backed Securities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.JSON;


/**
 * BondSpread
 */
@JsonPropertyOrder({
  BondSpread.JSON_PROPERTY_REQUEST_ID,
  BondSpread.JSON_PROPERTY_FSYM_ID,
  BondSpread.JSON_PROPERTY_DATE,
  BondSpread.JSON_PROPERTY_ACTUAL_C_D_S_BOND_BASIS_MID,
  BondSpread.JSON_PROPERTY_ACTUAL_I_M_M_C_D_S_BOND_BASIS,
  BondSpread.JSON_PROPERTY_CD_S_BOND_BASIS_DATE,
  BondSpread.JSON_PROPERTY_BID_DISCOUNT_MARGIN,
  BondSpread.JSON_PROPERTY_MID_DISCOUNT_MARGIN,
  BondSpread.JSON_PROPERTY_ASK_DISCOUNT_MARGIN,
  BondSpread.JSON_PROPERTY_BID_O_A_S,
  BondSpread.JSON_PROPERTY_MID_O_A_S,
  BondSpread.JSON_PROPERTY_ASK_O_A_S,
  BondSpread.JSON_PROPERTY_BID_ASSET_SWAP_SPREAD,
  BondSpread.JSON_PROPERTY_MID_ASSET_SWAP_SPREAD,
  BondSpread.JSON_PROPERTY_ASK_ASSET_SWAP_SPREAD,
  BondSpread.JSON_PROPERTY_BID_Z_SPREAD,
  BondSpread.JSON_PROPERTY_MID_Z_SPREAD,
  BondSpread.JSON_PROPERTY_ASK_Z_SPREAD,
  BondSpread.JSON_PROPERTY_BID_G_SPREAD,
  BondSpread.JSON_PROPERTY_MID_G_SPREAD,
  BondSpread.JSON_PROPERTY_ASK_G_SPREAD,
  BondSpread.JSON_PROPERTY_BID_YIELD_SPREADV_BENCHMARK,
  BondSpread.JSON_PROPERTY_MID_YIELD_SPREADV_BENCHMARK,
  BondSpread.JSON_PROPERTY_ASK_YIELD_SPREADV_BENCHMARK,
  BondSpread.JSON_PROPERTY_BID_ASK_PRICE_SPREAD,
  BondSpread.JSON_PROPERTY_BID_ASK_YIELD_SPREAD,
  BondSpread.JSON_PROPERTY_BID_S_T_W_SPREAD,
  BondSpread.JSON_PROPERTY_MID_I_SPREAD,
  BondSpread.JSON_PROPERTY_MID_W_A_L_TREASURY_SPREAD,
  BondSpread.JSON_PROPERTY_MID_E_D_S_F_SPREAD,
  BondSpread.JSON_PROPERTY_TREASURY_SWAP_SPREAD,
  BondSpread.JSON_PROPERTY_MID_SWAP_SPREAD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BondSpread implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_ACTUAL_C_D_S_BOND_BASIS_MID = "actualCDSBondBasisMid";
  private JsonNullable<Double> actualCDSBondBasisMid = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ACTUAL_I_M_M_C_D_S_BOND_BASIS = "actualIMMCDSBondBasis";
  private JsonNullable<Double> actualIMMCDSBondBasis = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CD_S_BOND_BASIS_DATE = "CDSBondBasisDate";
  private JsonNullable<LocalDate> cdSBondBasisDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_BID_DISCOUNT_MARGIN = "bidDiscountMargin";
  private JsonNullable<Double> bidDiscountMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_DISCOUNT_MARGIN = "midDiscountMargin";
  private JsonNullable<Double> midDiscountMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_DISCOUNT_MARGIN = "askDiscountMargin";
  private JsonNullable<Double> askDiscountMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_O_A_S = "bidOAS";
  private JsonNullable<Double> bidOAS = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_O_A_S = "midOAS";
  private JsonNullable<Double> midOAS = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_O_A_S = "askOAS";
  private JsonNullable<Double> askOAS = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_ASSET_SWAP_SPREAD = "bidAssetSwapSpread";
  private JsonNullable<Double> bidAssetSwapSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_ASSET_SWAP_SPREAD = "midAssetSwapSpread";
  private JsonNullable<Double> midAssetSwapSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_ASSET_SWAP_SPREAD = "askAssetSwapSpread";
  private JsonNullable<Double> askAssetSwapSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_Z_SPREAD = "bidZSpread";
  private JsonNullable<Double> bidZSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_Z_SPREAD = "midZSpread";
  private JsonNullable<Double> midZSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_Z_SPREAD = "askZSpread";
  private JsonNullable<Double> askZSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_G_SPREAD = "bidGSpread";
  private JsonNullable<Double> bidGSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_G_SPREAD = "midGSpread";
  private JsonNullable<Double> midGSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_G_SPREAD = "askGSpread";
  private JsonNullable<Double> askGSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_YIELD_SPREADV_BENCHMARK = "bidYieldSpreadvBenchmark";
  private JsonNullable<Double> bidYieldSpreadvBenchmark = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_YIELD_SPREADV_BENCHMARK = "midYieldSpreadvBenchmark";
  private JsonNullable<Double> midYieldSpreadvBenchmark = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ASK_YIELD_SPREADV_BENCHMARK = "askYieldSpreadvBenchmark";
  private JsonNullable<Double> askYieldSpreadvBenchmark = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_ASK_PRICE_SPREAD = "bidAskPriceSpread";
  private JsonNullable<Double> bidAskPriceSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_ASK_YIELD_SPREAD = "bidAskYieldSpread";
  private JsonNullable<Double> bidAskYieldSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BID_S_T_W_SPREAD = "bidSTWSpread";
  private JsonNullable<Double> bidSTWSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_I_SPREAD = "midISpread";
  private JsonNullable<Double> midISpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_W_A_L_TREASURY_SPREAD = "midWALTreasurySpread";
  private JsonNullable<Double> midWALTreasurySpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_E_D_S_F_SPREAD = "midEDSFSpread";
  private JsonNullable<Double> midEDSFSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TREASURY_SWAP_SPREAD = "treasurySwapSpread";
  private JsonNullable<Double> treasurySwapSpread = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MID_SWAP_SPREAD = "midSwapSpread";
  private JsonNullable<Double> midSwapSpread = JsonNullable.<Double>undefined();

  public BondSpread() { 
  }

  public BondSpread requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US45905URL07", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public BondSpread fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CJQZQ0-S", value = "FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public BondSpread date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * The date on which the price is calculated.
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Thu Jan 26 00:00:00 UTC 2023", value = "The date on which the price is calculated.")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public BondSpread actualCDSBondBasisMid(Double actualCDSBondBasisMid) {
    this.actualCDSBondBasisMid = JsonNullable.<Double>of(actualCDSBondBasisMid);
    return this;
  }

   /**
   * The difference between the CDS spread interpolated to the bond maturity and the asset swap spread of the bond .Available only  for &#x60;corporate bonds&#x60;
   * @return actualCDSBondBasisMid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The difference between the CDS spread interpolated to the bond maturity and the asset swap spread of the bond .Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getActualCDSBondBasisMid() {
        return actualCDSBondBasisMid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTUAL_C_D_S_BOND_BASIS_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getActualCDSBondBasisMid_JsonNullable() {
    return actualCDSBondBasisMid;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTUAL_C_D_S_BOND_BASIS_MID)
  public void setActualCDSBondBasisMid_JsonNullable(JsonNullable<Double> actualCDSBondBasisMid) {
    this.actualCDSBondBasisMid = actualCDSBondBasisMid;
  }

  public void setActualCDSBondBasisMid(Double actualCDSBondBasisMid) {
    this.actualCDSBondBasisMid = JsonNullable.<Double>of(actualCDSBondBasisMid);
  }


  public BondSpread actualIMMCDSBondBasis(Double actualIMMCDSBondBasis) {
    this.actualIMMCDSBondBasis = JsonNullable.<Double>of(actualIMMCDSBondBasis);
    return this;
  }

   /**
   * The difference between the CDS spread interpolated to the IMM date immediately following the bond maturity,and the asset swap spread of the bond .Available only  for &#x60;corporate bonds&#x60;
   * @return actualIMMCDSBondBasis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The difference between the CDS spread interpolated to the IMM date immediately following the bond maturity,and the asset swap spread of the bond .Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getActualIMMCDSBondBasis() {
        return actualIMMCDSBondBasis.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTUAL_I_M_M_C_D_S_BOND_BASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getActualIMMCDSBondBasis_JsonNullable() {
    return actualIMMCDSBondBasis;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTUAL_I_M_M_C_D_S_BOND_BASIS)
  public void setActualIMMCDSBondBasis_JsonNullable(JsonNullable<Double> actualIMMCDSBondBasis) {
    this.actualIMMCDSBondBasis = actualIMMCDSBondBasis;
  }

  public void setActualIMMCDSBondBasis(Double actualIMMCDSBondBasis) {
    this.actualIMMCDSBondBasis = JsonNullable.<Double>of(actualIMMCDSBondBasis);
  }


  public BondSpread cdSBondBasisDate(LocalDate cdSBondBasisDate) {
    this.cdSBondBasisDate = JsonNullable.<LocalDate>of(cdSBondBasisDate);
    return this;
  }

   /**
   * The date of the CDS Bond Basis .Available only  for &#x60;corporate bonds&#x60;
   * @return cdSBondBasisDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of the CDS Bond Basis .Available only  for `corporate bonds`")
  @JsonIgnore

  public LocalDate getCdSBondBasisDate() {
        return cdSBondBasisDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CD_S_BOND_BASIS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getCdSBondBasisDate_JsonNullable() {
    return cdSBondBasisDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CD_S_BOND_BASIS_DATE)
  public void setCdSBondBasisDate_JsonNullable(JsonNullable<LocalDate> cdSBondBasisDate) {
    this.cdSBondBasisDate = cdSBondBasisDate;
  }

  public void setCdSBondBasisDate(LocalDate cdSBondBasisDate) {
    this.cdSBondBasisDate = JsonNullable.<LocalDate>of(cdSBondBasisDate);
  }


  public BondSpread bidDiscountMargin(Double bidDiscountMargin) {
    this.bidDiscountMargin = JsonNullable.<Double>of(bidDiscountMargin);
    return this;
  }

   /**
   * The discount margin of a Floating Rate Note,denominated in basis points, based on the evaluated bid price. Discount margin is the return earned in addition to the index underlying the floating rate security .Available only  for &#x60;corporate bonds&#x60; and &#x60;asset-backed security bonds&#x60;.
   * @return bidDiscountMargin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discount margin of a Floating Rate Note,denominated in basis points, based on the evaluated bid price. Discount margin is the return earned in addition to the index underlying the floating rate security .Available only  for `corporate bonds` and `asset-backed security bonds`.")
  @JsonIgnore

  public Double getBidDiscountMargin() {
        return bidDiscountMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_DISCOUNT_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidDiscountMargin_JsonNullable() {
    return bidDiscountMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_DISCOUNT_MARGIN)
  public void setBidDiscountMargin_JsonNullable(JsonNullable<Double> bidDiscountMargin) {
    this.bidDiscountMargin = bidDiscountMargin;
  }

  public void setBidDiscountMargin(Double bidDiscountMargin) {
    this.bidDiscountMargin = JsonNullable.<Double>of(bidDiscountMargin);
  }


  public BondSpread midDiscountMargin(Double midDiscountMargin) {
    this.midDiscountMargin = JsonNullable.<Double>of(midDiscountMargin);
    return this;
  }

   /**
   * The discount margin of a Floating RateNote, denominate in basis points, based on the evaluated mid price. Discount margin is the return earned in addition to the index underlying the floating rate security .Available only  for &#x60;corporate bonds&#x60; and &#x60;asset-backed security bonds&#x60;.
   * @return midDiscountMargin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discount margin of a Floating RateNote, denominate in basis points, based on the evaluated mid price. Discount margin is the return earned in addition to the index underlying the floating rate security .Available only  for `corporate bonds` and `asset-backed security bonds`.")
  @JsonIgnore

  public Double getMidDiscountMargin() {
        return midDiscountMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_DISCOUNT_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidDiscountMargin_JsonNullable() {
    return midDiscountMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_DISCOUNT_MARGIN)
  public void setMidDiscountMargin_JsonNullable(JsonNullable<Double> midDiscountMargin) {
    this.midDiscountMargin = midDiscountMargin;
  }

  public void setMidDiscountMargin(Double midDiscountMargin) {
    this.midDiscountMargin = JsonNullable.<Double>of(midDiscountMargin);
  }


  public BondSpread askDiscountMargin(Double askDiscountMargin) {
    this.askDiscountMargin = JsonNullable.<Double>of(askDiscountMargin);
    return this;
  }

   /**
   * The discount margin of a Floating Rate Note, denominated in basis points, based on the evaluated ask price. Discount margin is the return earned in addition to the index underlying the floating rate security. Available only  for &#x60;corporate bonds&#x60; and &#x60;asset-backed security bonds&#x60;.
   * @return askDiscountMargin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discount margin of a Floating Rate Note, denominated in basis points, based on the evaluated ask price. Discount margin is the return earned in addition to the index underlying the floating rate security. Available only  for `corporate bonds` and `asset-backed security bonds`.")
  @JsonIgnore

  public Double getAskDiscountMargin() {
        return askDiscountMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_DISCOUNT_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskDiscountMargin_JsonNullable() {
    return askDiscountMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_DISCOUNT_MARGIN)
  public void setAskDiscountMargin_JsonNullable(JsonNullable<Double> askDiscountMargin) {
    this.askDiscountMargin = askDiscountMargin;
  }

  public void setAskDiscountMargin(Double askDiscountMargin) {
    this.askDiscountMargin = JsonNullable.<Double>of(askDiscountMargin);
  }


  public BondSpread bidOAS(Double bidOAS) {
    this.bidOAS = JsonNullable.<Double>of(bidOAS);
    return this;
  }

   /**
   * The Option Adjusted Spread (OAS), based on the bid price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price. Available only  for &#x60;corporate bonds&#x60;
   * @return bidOAS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Option Adjusted Spread (OAS), based on the bid price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price. Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getBidOAS() {
        return bidOAS.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_O_A_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidOAS_JsonNullable() {
    return bidOAS;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_O_A_S)
  public void setBidOAS_JsonNullable(JsonNullable<Double> bidOAS) {
    this.bidOAS = bidOAS;
  }

  public void setBidOAS(Double bidOAS) {
    this.bidOAS = JsonNullable.<Double>of(bidOAS);
  }


  public BondSpread midOAS(Double midOAS) {
    this.midOAS = JsonNullable.<Double>of(midOAS);
    return this;
  }

   /**
   * The Option Adjusted Spread (OAS), based on the mid price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price .Available only  for &#x60;corporate bonds&#x60; and &#x60;asset-backed security bonds&#x60;.
   * @return midOAS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Option Adjusted Spread (OAS), based on the mid price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price .Available only  for `corporate bonds` and `asset-backed security bonds`.")
  @JsonIgnore

  public Double getMidOAS() {
        return midOAS.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_O_A_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidOAS_JsonNullable() {
    return midOAS;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_O_A_S)
  public void setMidOAS_JsonNullable(JsonNullable<Double> midOAS) {
    this.midOAS = midOAS;
  }

  public void setMidOAS(Double midOAS) {
    this.midOAS = JsonNullable.<Double>of(midOAS);
  }


  public BondSpread askOAS(Double askOAS) {
    this.askOAS = JsonNullable.<Double>of(askOAS);
    return this;
  }

   /**
   * The Option Adjusted Spread (OAS), based on the ask price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price. Available only  for &#x60;corporate bonds&#x60;
   * @return askOAS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Option Adjusted Spread (OAS), based on the ask price. OAS is the flat spread which has to be added to the treasury yield curve in a pricing model (that accounts for embedded options) to discount a security payment to match its market price. Available only  for `corporate bonds`")
  @JsonIgnore

  public Double getAskOAS() {
        return askOAS.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_O_A_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskOAS_JsonNullable() {
    return askOAS;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_O_A_S)
  public void setAskOAS_JsonNullable(JsonNullable<Double> askOAS) {
    this.askOAS = askOAS;
  }

  public void setAskOAS(Double askOAS) {
    this.askOAS = JsonNullable.<Double>of(askOAS);
  }


  public BondSpread bidAssetSwapSpread(Double bidAssetSwapSpread) {
    this.bidAssetSwapSpread = JsonNullable.<Double>of(bidAssetSwapSpread);
    return this;
  }

   /**
   * The bid asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for &#x60;corporate bonds&#x60; and &#x60;asset-backed security bonds&#x60;.
   * @return bidAssetSwapSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-14.02804", value = "The bid asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for `corporate bonds` and `asset-backed security bonds`.")
  @JsonIgnore

  public Double getBidAssetSwapSpread() {
        return bidAssetSwapSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_ASSET_SWAP_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidAssetSwapSpread_JsonNullable() {
    return bidAssetSwapSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_ASSET_SWAP_SPREAD)
  public void setBidAssetSwapSpread_JsonNullable(JsonNullable<Double> bidAssetSwapSpread) {
    this.bidAssetSwapSpread = bidAssetSwapSpread;
  }

  public void setBidAssetSwapSpread(Double bidAssetSwapSpread) {
    this.bidAssetSwapSpread = JsonNullable.<Double>of(bidAssetSwapSpread);
  }


  public BondSpread midAssetSwapSpread(Double midAssetSwapSpread) {
    this.midAssetSwapSpread = JsonNullable.<Double>of(midAssetSwapSpread);
    return this;
  }

   /**
   * The mid asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for &#x60;corporate bonds&#x60;.
   * @return midAssetSwapSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-15.30298", value = "The mid asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidAssetSwapSpread() {
        return midAssetSwapSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_ASSET_SWAP_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidAssetSwapSpread_JsonNullable() {
    return midAssetSwapSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_ASSET_SWAP_SPREAD)
  public void setMidAssetSwapSpread_JsonNullable(JsonNullable<Double> midAssetSwapSpread) {
    this.midAssetSwapSpread = midAssetSwapSpread;
  }

  public void setMidAssetSwapSpread(Double midAssetSwapSpread) {
    this.midAssetSwapSpread = JsonNullable.<Double>of(midAssetSwapSpread);
  }


  public BondSpread askAssetSwapSpread(Double askAssetSwapSpread) {
    this.askAssetSwapSpread = JsonNullable.<Double>of(askAssetSwapSpread);
    return this;
  }

   /**
   * The ask asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for &#x60;corporate bonds&#x60;.
   * @return askAssetSwapSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-16.57834", value = "The ask asset swap spread in the currency of the instrument. Asset Swap Spread is the difference between the yield of an instrument and the LIBOR curve .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskAssetSwapSpread() {
        return askAssetSwapSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_ASSET_SWAP_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskAssetSwapSpread_JsonNullable() {
    return askAssetSwapSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_ASSET_SWAP_SPREAD)
  public void setAskAssetSwapSpread_JsonNullable(JsonNullable<Double> askAssetSwapSpread) {
    this.askAssetSwapSpread = askAssetSwapSpread;
  }

  public void setAskAssetSwapSpread(Double askAssetSwapSpread) {
    this.askAssetSwapSpread = JsonNullable.<Double>of(askAssetSwapSpread);
  }


  public BondSpread bidZSpread(Double bidZSpread) {
    this.bidZSpread = JsonNullable.<Double>of(bidZSpread);
    return this;
  }

   /**
   * The bid Z spread of the instrument, based on the bid price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received. Available only  for &#x60;corporate bonds&#x60;.
   * @return bidZSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-14.33783", value = "The bid Z spread of the instrument, based on the bid price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidZSpread() {
        return bidZSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_Z_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidZSpread_JsonNullable() {
    return bidZSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_Z_SPREAD)
  public void setBidZSpread_JsonNullable(JsonNullable<Double> bidZSpread) {
    this.bidZSpread = bidZSpread;
  }

  public void setBidZSpread(Double bidZSpread) {
    this.bidZSpread = JsonNullable.<Double>of(bidZSpread);
  }


  public BondSpread midZSpread(Double midZSpread) {
    this.midZSpread = JsonNullable.<Double>of(midZSpread);
    return this;
  }

   /**
   * The bid Z spread of the instrument, based on the mid price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received .Available only  for &#x60;corporate bonds&#x60;.
   * @return midZSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-15.63881", value = "The bid Z spread of the instrument, based on the mid price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidZSpread() {
        return midZSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_Z_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidZSpread_JsonNullable() {
    return midZSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_Z_SPREAD)
  public void setMidZSpread_JsonNullable(JsonNullable<Double> midZSpread) {
    this.midZSpread = midZSpread;
  }

  public void setMidZSpread(Double midZSpread) {
    this.midZSpread = JsonNullable.<Double>of(midZSpread);
  }


  public BondSpread askZSpread(Double askZSpread) {
    this.askZSpread = JsonNullable.<Double>of(askZSpread);
    return this;
  }

   /**
   * The bid Z spread of the instrument, based on the ask price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received .Available only  for &#x60;corporate bonds&#x60;.
   * @return askZSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-16.93988", value = "The bid Z spread of the instrument, based on the ask price. Z spread is the constant spread that will make the price of an instrument equal to the present value of its cash flows, when added to the yield at each point on the spot rate treasury curve, where a cash flow is received .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskZSpread() {
        return askZSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_Z_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskZSpread_JsonNullable() {
    return askZSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_Z_SPREAD)
  public void setAskZSpread_JsonNullable(JsonNullable<Double> askZSpread) {
    this.askZSpread = askZSpread;
  }

  public void setAskZSpread(Double askZSpread) {
    this.askZSpread = JsonNullable.<Double>of(askZSpread);
  }


  public BondSpread bidGSpread(Double bidGSpread) {
    this.bidGSpread = JsonNullable.<Double>of(bidGSpread);
    return this;
  }

   /**
   * The G spread of the instrument, based on the bid price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for &#x60;corporate bonds&#x60;.
   * @return bidGSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7.76769", value = "The G spread of the instrument, based on the bid price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidGSpread() {
        return bidGSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_G_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidGSpread_JsonNullable() {
    return bidGSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_G_SPREAD)
  public void setBidGSpread_JsonNullable(JsonNullable<Double> bidGSpread) {
    this.bidGSpread = bidGSpread;
  }

  public void setBidGSpread(Double bidGSpread) {
    this.bidGSpread = JsonNullable.<Double>of(bidGSpread);
  }


  public BondSpread midGSpread(Double midGSpread) {
    this.midGSpread = JsonNullable.<Double>of(midGSpread);
    return this;
  }

   /**
   * The G spread of the instrument, based on the mid price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for &#x60;corporate bonds&#x60;.
   * @return midGSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6.8439", value = "The G spread of the instrument, based on the mid price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidGSpread() {
        return midGSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_G_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidGSpread_JsonNullable() {
    return midGSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_G_SPREAD)
  public void setMidGSpread_JsonNullable(JsonNullable<Double> midGSpread) {
    this.midGSpread = midGSpread;
  }

  public void setMidGSpread(Double midGSpread) {
    this.midGSpread = JsonNullable.<Double>of(midGSpread);
  }


  public BondSpread askGSpread(Double askGSpread) {
    this.askGSpread = JsonNullable.<Double>of(askGSpread);
    return this;
  }

   /**
   * The G spread of the instrument, based on the ask price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for &#x60;corporate bonds&#x60;.
   * @return askGSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5.92011", value = "The G spread of the instrument, based on the ask price. G spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate government curve. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskGSpread() {
        return askGSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_G_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskGSpread_JsonNullable() {
    return askGSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_G_SPREAD)
  public void setAskGSpread_JsonNullable(JsonNullable<Double> askGSpread) {
    this.askGSpread = askGSpread;
  }

  public void setAskGSpread(Double askGSpread) {
    this.askGSpread = JsonNullable.<Double>of(askGSpread);
  }


  public BondSpread bidYieldSpreadvBenchmark(Double bidYieldSpreadvBenchmark) {
    this.bidYieldSpreadvBenchmark = JsonNullable.<Double>of(bidYieldSpreadvBenchmark);
    return this;
  }

   /**
   * The spread of the instrument bid yield against the assigned benchmark bid yield. Available only  for &#x60;corporate bonds&#x60;.
   * @return bidYieldSpreadvBenchmark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.8", value = "The spread of the instrument bid yield against the assigned benchmark bid yield. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidYieldSpreadvBenchmark() {
        return bidYieldSpreadvBenchmark.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_YIELD_SPREADV_BENCHMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidYieldSpreadvBenchmark_JsonNullable() {
    return bidYieldSpreadvBenchmark;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_YIELD_SPREADV_BENCHMARK)
  public void setBidYieldSpreadvBenchmark_JsonNullable(JsonNullable<Double> bidYieldSpreadvBenchmark) {
    this.bidYieldSpreadvBenchmark = bidYieldSpreadvBenchmark;
  }

  public void setBidYieldSpreadvBenchmark(Double bidYieldSpreadvBenchmark) {
    this.bidYieldSpreadvBenchmark = JsonNullable.<Double>of(bidYieldSpreadvBenchmark);
  }


  public BondSpread midYieldSpreadvBenchmark(Double midYieldSpreadvBenchmark) {
    this.midYieldSpreadvBenchmark = JsonNullable.<Double>of(midYieldSpreadvBenchmark);
    return this;
  }

   /**
   * The spread of the instrument mid yield against the assigned benchmark mid yield. Available only  for &#x60;corporate bonds&#x60;.
   * @return midYieldSpreadvBenchmark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.9", value = "The spread of the instrument mid yield against the assigned benchmark mid yield. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidYieldSpreadvBenchmark() {
        return midYieldSpreadvBenchmark.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_YIELD_SPREADV_BENCHMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidYieldSpreadvBenchmark_JsonNullable() {
    return midYieldSpreadvBenchmark;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_YIELD_SPREADV_BENCHMARK)
  public void setMidYieldSpreadvBenchmark_JsonNullable(JsonNullable<Double> midYieldSpreadvBenchmark) {
    this.midYieldSpreadvBenchmark = midYieldSpreadvBenchmark;
  }

  public void setMidYieldSpreadvBenchmark(Double midYieldSpreadvBenchmark) {
    this.midYieldSpreadvBenchmark = JsonNullable.<Double>of(midYieldSpreadvBenchmark);
  }


  public BondSpread askYieldSpreadvBenchmark(Double askYieldSpreadvBenchmark) {
    this.askYieldSpreadvBenchmark = JsonNullable.<Double>of(askYieldSpreadvBenchmark);
    return this;
  }

   /**
   * The spread of the instrument ask yield against the assigned benchmark ask yield. Available only  for &#x60;corporate bonds&#x60;.
   * @return askYieldSpreadvBenchmark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "The spread of the instrument ask yield against the assigned benchmark ask yield. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getAskYieldSpreadvBenchmark() {
        return askYieldSpreadvBenchmark.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASK_YIELD_SPREADV_BENCHMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAskYieldSpreadvBenchmark_JsonNullable() {
    return askYieldSpreadvBenchmark;
  }
  
  @JsonProperty(JSON_PROPERTY_ASK_YIELD_SPREADV_BENCHMARK)
  public void setAskYieldSpreadvBenchmark_JsonNullable(JsonNullable<Double> askYieldSpreadvBenchmark) {
    this.askYieldSpreadvBenchmark = askYieldSpreadvBenchmark;
  }

  public void setAskYieldSpreadvBenchmark(Double askYieldSpreadvBenchmark) {
    this.askYieldSpreadvBenchmark = JsonNullable.<Double>of(askYieldSpreadvBenchmark);
  }


  public BondSpread bidAskPriceSpread(Double bidAskPriceSpread) {
    this.bidAskPriceSpread = JsonNullable.<Double>of(bidAskPriceSpread);
    return this;
  }

   /**
   * The difference between the ask price and the bid price.
   * @return bidAskPriceSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.05119", value = "The difference between the ask price and the bid price.")
  @JsonIgnore

  public Double getBidAskPriceSpread() {
        return bidAskPriceSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_ASK_PRICE_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidAskPriceSpread_JsonNullable() {
    return bidAskPriceSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_ASK_PRICE_SPREAD)
  public void setBidAskPriceSpread_JsonNullable(JsonNullable<Double> bidAskPriceSpread) {
    this.bidAskPriceSpread = bidAskPriceSpread;
  }

  public void setBidAskPriceSpread(Double bidAskPriceSpread) {
    this.bidAskPriceSpread = JsonNullable.<Double>of(bidAskPriceSpread);
  }


  public BondSpread bidAskYieldSpread(Double bidAskYieldSpread) {
    this.bidAskYieldSpread = JsonNullable.<Double>of(bidAskYieldSpread);
    return this;
  }

   /**
   * The difference between the ask yield and bid yield .Available only  for &#x60;corporate bonds&#x60;.
   * @return bidAskYieldSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2.65437", value = "The difference between the ask yield and bid yield .Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidAskYieldSpread() {
        return bidAskYieldSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_ASK_YIELD_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidAskYieldSpread_JsonNullable() {
    return bidAskYieldSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_ASK_YIELD_SPREAD)
  public void setBidAskYieldSpread_JsonNullable(JsonNullable<Double> bidAskYieldSpread) {
    this.bidAskYieldSpread = bidAskYieldSpread;
  }

  public void setBidAskYieldSpread(Double bidAskYieldSpread) {
    this.bidAskYieldSpread = JsonNullable.<Double>of(bidAskYieldSpread);
  }


  public BondSpread bidSTWSpread(Double bidSTWSpread) {
    this.bidSTWSpread = JsonNullable.<Double>of(bidSTWSpread);
    return this;
  }

   /**
   * The difference, in terms of spread, between the bid yield to worst and the yield to maturity of the treasury bond with the closest maturity to the yieldToWorstDate. Available only  for &#x60;corporate bonds&#x60;.
   * @return bidSTWSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The difference, in terms of spread, between the bid yield to worst and the yield to maturity of the treasury bond with the closest maturity to the yieldToWorstDate. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getBidSTWSpread() {
        return bidSTWSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BID_S_T_W_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBidSTWSpread_JsonNullable() {
    return bidSTWSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_BID_S_T_W_SPREAD)
  public void setBidSTWSpread_JsonNullable(JsonNullable<Double> bidSTWSpread) {
    this.bidSTWSpread = bidSTWSpread;
  }

  public void setBidSTWSpread(Double bidSTWSpread) {
    this.bidSTWSpread = JsonNullable.<Double>of(bidSTWSpread);
  }


  public BondSpread midISpread(Double midISpread) {
    this.midISpread = JsonNullable.<Double>of(midISpread);
    return this;
  }

   /**
   * The I spread of the bond, based on the mid price. I spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate reference curve. Available only  for &#x60;corporate bonds&#x60;.
   * @return midISpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-15.93663", value = "The I spread of the bond, based on the mid price. I spread is the difference between the yield to maturity of the bond and the linearly interpolated yield to the same maturity on an appropriate reference curve. Available only  for `corporate bonds`.")
  @JsonIgnore

  public Double getMidISpread() {
        return midISpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_I_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidISpread_JsonNullable() {
    return midISpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_I_SPREAD)
  public void setMidISpread_JsonNullable(JsonNullable<Double> midISpread) {
    this.midISpread = midISpread;
  }

  public void setMidISpread(Double midISpread) {
    this.midISpread = JsonNullable.<Double>of(midISpread);
  }


  public BondSpread midWALTreasurySpread(Double midWALTreasurySpread) {
    this.midWALTreasurySpread = JsonNullable.<Double>of(midWALTreasurySpread);
    return this;
  }

   /**
   * The value of Mid Spread to treasuries at same WAL of the bond. Available only  for &#x60;asset-backed security bonds&#x60;.
   * @return midWALTreasurySpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of Mid Spread to treasuries at same WAL of the bond. Available only  for `asset-backed security bonds`.")
  @JsonIgnore

  public Double getMidWALTreasurySpread() {
        return midWALTreasurySpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_W_A_L_TREASURY_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidWALTreasurySpread_JsonNullable() {
    return midWALTreasurySpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_W_A_L_TREASURY_SPREAD)
  public void setMidWALTreasurySpread_JsonNullable(JsonNullable<Double> midWALTreasurySpread) {
    this.midWALTreasurySpread = midWALTreasurySpread;
  }

  public void setMidWALTreasurySpread(Double midWALTreasurySpread) {
    this.midWALTreasurySpread = JsonNullable.<Double>of(midWALTreasurySpread);
  }


  public BondSpread midEDSFSpread(Double midEDSFSpread) {
    this.midEDSFSpread = JsonNullable.<Double>of(midEDSFSpread);
    return this;
  }

   /**
   * The mid spread to the Euro Dollar Synthetic Futures(EDSF) curve used in evaluated price of the instrument. Available only  for &#x60;asset-backed security bonds&#x60;.
   * @return midEDSFSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The mid spread to the Euro Dollar Synthetic Futures(EDSF) curve used in evaluated price of the instrument. Available only  for `asset-backed security bonds`.")
  @JsonIgnore

  public Double getMidEDSFSpread() {
        return midEDSFSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_E_D_S_F_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidEDSFSpread_JsonNullable() {
    return midEDSFSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_E_D_S_F_SPREAD)
  public void setMidEDSFSpread_JsonNullable(JsonNullable<Double> midEDSFSpread) {
    this.midEDSFSpread = midEDSFSpread;
  }

  public void setMidEDSFSpread(Double midEDSFSpread) {
    this.midEDSFSpread = JsonNullable.<Double>of(midEDSFSpread);
  }


  public BondSpread treasurySwapSpread(Double treasurySwapSpread) {
    this.treasurySwapSpread = JsonNullable.<Double>of(treasurySwapSpread);
    return this;
  }

   /**
   * Swap spread to treasuries for same maturity of the treasury bond and swap. Available only  for &#x60;asset-backed security bonds&#x60;.
   * @return treasurySwapSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Swap spread to treasuries for same maturity of the treasury bond and swap. Available only  for `asset-backed security bonds`.")
  @JsonIgnore

  public Double getTreasurySwapSpread() {
        return treasurySwapSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREASURY_SWAP_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTreasurySwapSpread_JsonNullable() {
    return treasurySwapSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_TREASURY_SWAP_SPREAD)
  public void setTreasurySwapSpread_JsonNullable(JsonNullable<Double> treasurySwapSpread) {
    this.treasurySwapSpread = treasurySwapSpread;
  }

  public void setTreasurySwapSpread(Double treasurySwapSpread) {
    this.treasurySwapSpread = JsonNullable.<Double>of(treasurySwapSpread);
  }


  public BondSpread midSwapSpread(Double midSwapSpread) {
    this.midSwapSpread = JsonNullable.<Double>of(midSwapSpread);
    return this;
  }

   /**
   * The mid spread to swaps .Available only  for &#x60;asset-backed security bonds&#x60;.
   * @return midSwapSpread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The mid spread to swaps .Available only  for `asset-backed security bonds`.")
  @JsonIgnore

  public Double getMidSwapSpread() {
        return midSwapSpread.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MID_SWAP_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMidSwapSpread_JsonNullable() {
    return midSwapSpread;
  }
  
  @JsonProperty(JSON_PROPERTY_MID_SWAP_SPREAD)
  public void setMidSwapSpread_JsonNullable(JsonNullable<Double> midSwapSpread) {
    this.midSwapSpread = midSwapSpread;
  }

  public void setMidSwapSpread(Double midSwapSpread) {
    this.midSwapSpread = JsonNullable.<Double>of(midSwapSpread);
  }


  /**
   * Return true if this bondSpread object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BondSpread bondSpread = (BondSpread) o;
    return Objects.equals(this.requestId, bondSpread.requestId) &&
        equalsNullable(this.fsymId, bondSpread.fsymId) &&
        equalsNullable(this.date, bondSpread.date) &&
        equalsNullable(this.actualCDSBondBasisMid, bondSpread.actualCDSBondBasisMid) &&
        equalsNullable(this.actualIMMCDSBondBasis, bondSpread.actualIMMCDSBondBasis) &&
        equalsNullable(this.cdSBondBasisDate, bondSpread.cdSBondBasisDate) &&
        equalsNullable(this.bidDiscountMargin, bondSpread.bidDiscountMargin) &&
        equalsNullable(this.midDiscountMargin, bondSpread.midDiscountMargin) &&
        equalsNullable(this.askDiscountMargin, bondSpread.askDiscountMargin) &&
        equalsNullable(this.bidOAS, bondSpread.bidOAS) &&
        equalsNullable(this.midOAS, bondSpread.midOAS) &&
        equalsNullable(this.askOAS, bondSpread.askOAS) &&
        equalsNullable(this.bidAssetSwapSpread, bondSpread.bidAssetSwapSpread) &&
        equalsNullable(this.midAssetSwapSpread, bondSpread.midAssetSwapSpread) &&
        equalsNullable(this.askAssetSwapSpread, bondSpread.askAssetSwapSpread) &&
        equalsNullable(this.bidZSpread, bondSpread.bidZSpread) &&
        equalsNullable(this.midZSpread, bondSpread.midZSpread) &&
        equalsNullable(this.askZSpread, bondSpread.askZSpread) &&
        equalsNullable(this.bidGSpread, bondSpread.bidGSpread) &&
        equalsNullable(this.midGSpread, bondSpread.midGSpread) &&
        equalsNullable(this.askGSpread, bondSpread.askGSpread) &&
        equalsNullable(this.bidYieldSpreadvBenchmark, bondSpread.bidYieldSpreadvBenchmark) &&
        equalsNullable(this.midYieldSpreadvBenchmark, bondSpread.midYieldSpreadvBenchmark) &&
        equalsNullable(this.askYieldSpreadvBenchmark, bondSpread.askYieldSpreadvBenchmark) &&
        equalsNullable(this.bidAskPriceSpread, bondSpread.bidAskPriceSpread) &&
        equalsNullable(this.bidAskYieldSpread, bondSpread.bidAskYieldSpread) &&
        equalsNullable(this.bidSTWSpread, bondSpread.bidSTWSpread) &&
        equalsNullable(this.midISpread, bondSpread.midISpread) &&
        equalsNullable(this.midWALTreasurySpread, bondSpread.midWALTreasurySpread) &&
        equalsNullable(this.midEDSFSpread, bondSpread.midEDSFSpread) &&
        equalsNullable(this.treasurySwapSpread, bondSpread.treasurySwapSpread) &&
        equalsNullable(this.midSwapSpread, bondSpread.midSwapSpread);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(date), hashCodeNullable(actualCDSBondBasisMid), hashCodeNullable(actualIMMCDSBondBasis), hashCodeNullable(cdSBondBasisDate), hashCodeNullable(bidDiscountMargin), hashCodeNullable(midDiscountMargin), hashCodeNullable(askDiscountMargin), hashCodeNullable(bidOAS), hashCodeNullable(midOAS), hashCodeNullable(askOAS), hashCodeNullable(bidAssetSwapSpread), hashCodeNullable(midAssetSwapSpread), hashCodeNullable(askAssetSwapSpread), hashCodeNullable(bidZSpread), hashCodeNullable(midZSpread), hashCodeNullable(askZSpread), hashCodeNullable(bidGSpread), hashCodeNullable(midGSpread), hashCodeNullable(askGSpread), hashCodeNullable(bidYieldSpreadvBenchmark), hashCodeNullable(midYieldSpreadvBenchmark), hashCodeNullable(askYieldSpreadvBenchmark), hashCodeNullable(bidAskPriceSpread), hashCodeNullable(bidAskYieldSpread), hashCodeNullable(bidSTWSpread), hashCodeNullable(midISpread), hashCodeNullable(midWALTreasurySpread), hashCodeNullable(midEDSFSpread), hashCodeNullable(treasurySwapSpread), hashCodeNullable(midSwapSpread));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BondSpread {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    actualCDSBondBasisMid: ").append(toIndentedString(actualCDSBondBasisMid)).append("\n");
    sb.append("    actualIMMCDSBondBasis: ").append(toIndentedString(actualIMMCDSBondBasis)).append("\n");
    sb.append("    cdSBondBasisDate: ").append(toIndentedString(cdSBondBasisDate)).append("\n");
    sb.append("    bidDiscountMargin: ").append(toIndentedString(bidDiscountMargin)).append("\n");
    sb.append("    midDiscountMargin: ").append(toIndentedString(midDiscountMargin)).append("\n");
    sb.append("    askDiscountMargin: ").append(toIndentedString(askDiscountMargin)).append("\n");
    sb.append("    bidOAS: ").append(toIndentedString(bidOAS)).append("\n");
    sb.append("    midOAS: ").append(toIndentedString(midOAS)).append("\n");
    sb.append("    askOAS: ").append(toIndentedString(askOAS)).append("\n");
    sb.append("    bidAssetSwapSpread: ").append(toIndentedString(bidAssetSwapSpread)).append("\n");
    sb.append("    midAssetSwapSpread: ").append(toIndentedString(midAssetSwapSpread)).append("\n");
    sb.append("    askAssetSwapSpread: ").append(toIndentedString(askAssetSwapSpread)).append("\n");
    sb.append("    bidZSpread: ").append(toIndentedString(bidZSpread)).append("\n");
    sb.append("    midZSpread: ").append(toIndentedString(midZSpread)).append("\n");
    sb.append("    askZSpread: ").append(toIndentedString(askZSpread)).append("\n");
    sb.append("    bidGSpread: ").append(toIndentedString(bidGSpread)).append("\n");
    sb.append("    midGSpread: ").append(toIndentedString(midGSpread)).append("\n");
    sb.append("    askGSpread: ").append(toIndentedString(askGSpread)).append("\n");
    sb.append("    bidYieldSpreadvBenchmark: ").append(toIndentedString(bidYieldSpreadvBenchmark)).append("\n");
    sb.append("    midYieldSpreadvBenchmark: ").append(toIndentedString(midYieldSpreadvBenchmark)).append("\n");
    sb.append("    askYieldSpreadvBenchmark: ").append(toIndentedString(askYieldSpreadvBenchmark)).append("\n");
    sb.append("    bidAskPriceSpread: ").append(toIndentedString(bidAskPriceSpread)).append("\n");
    sb.append("    bidAskYieldSpread: ").append(toIndentedString(bidAskYieldSpread)).append("\n");
    sb.append("    bidSTWSpread: ").append(toIndentedString(bidSTWSpread)).append("\n");
    sb.append("    midISpread: ").append(toIndentedString(midISpread)).append("\n");
    sb.append("    midWALTreasurySpread: ").append(toIndentedString(midWALTreasurySpread)).append("\n");
    sb.append("    midEDSFSpread: ").append(toIndentedString(midEDSFSpread)).append("\n");
    sb.append("    treasurySwapSpread: ").append(toIndentedString(treasurySwapSpread)).append("\n");
    sb.append("    midSwapSpread: ").append(toIndentedString(midSwapSpread)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

