/*
 * FactSet Options API
 * The Option Prices database provides pricing data such as mid bid-ask price, reference data (e.g., strike price), and risk measures (e.g., Greeks and implied volatility). Visit [Options Overview OA Page # 14925](https://my.apps.factset.com/oa/pages/14925) for details on database coverage. U.S. exchange-traded option bid and ask quotes are continuously updated throughout the day even when no trades have occurred on the option (zero volume). The end-of-day closing bid and ask quotes are always in line with the underlying closing price.  **Note** * Currently in Beta only **OPRA** exchanges are supported. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetOptions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetOptions.JSON;


/**
 * Options Volume Response Object
 */
@ApiModel(description = "Options Volume Response Object")
@JsonPropertyOrder({
  OptionsVolume.JSON_PROPERTY_FSYM_ID,
  OptionsVolume.JSON_PROPERTY_DATE,
  OptionsVolume.JSON_PROPERTY_EXCHANGE,
  OptionsVolume.JSON_PROPERTY_OPEN_INTEREST,
  OptionsVolume.JSON_PROPERTY_VOLUME,
  OptionsVolume.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class OptionsVolume implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EXCHANGE = "exchange";
  private JsonNullable<String> exchange = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPEN_INTEREST = "openInterest";
  private JsonNullable<BigDecimal> openInterest = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_VOLUME = "volume";
  private JsonNullable<Double> volume = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public OptionsVolume() { 
  }

  public OptionsVolume fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet&#39;s Option Symbol. For more detail, visit [OA 12636](https://my.apps.factset.com/oa/pages/12636#options)
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TSLA.US#PYG8L", value = "FactSet's Option Symbol. For more detail, visit [OA 12636](https://my.apps.factset.com/oa/pages/12636#options)")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public OptionsVolume date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * The date of the data in YYYY-MM-DD format
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu May 06 00:00:00 UTC 2021", value = "The date of the data in YYYY-MM-DD format")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public OptionsVolume exchange(String exchange) {
    this.exchange = JsonNullable.<String>of(exchange);
    return this;
  }

   /**
   * Option Exchange ISO. Visit [OA 14925](https://my.apps.factset.com/oa/pages/14925) for a list of Exchange ISOs.
   * @return exchange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USA", value = "Option Exchange ISO. Visit [OA 14925](https://my.apps.factset.com/oa/pages/14925) for a list of Exchange ISOs.")
  @JsonIgnore

  public String getExchange() {
        return exchange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExchange_JsonNullable() {
    return exchange;
  }
  
  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  public void setExchange_JsonNullable(JsonNullable<String> exchange) {
    this.exchange = exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = JsonNullable.<String>of(exchange);
  }


  public OptionsVolume openInterest(BigDecimal openInterest) {
    this.openInterest = JsonNullable.<BigDecimal>of(openInterest);
    return this;
  }

   /**
   * The total number of options and/or futures contracts that are not closed or delivered on a particular day.
   * @return openInterest
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "92", value = "The total number of options and/or futures contracts that are not closed or delivered on a particular day.")
  @JsonIgnore

  public BigDecimal getOpenInterest() {
        return openInterest.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPEN_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOpenInterest_JsonNullable() {
    return openInterest;
  }
  
  @JsonProperty(JSON_PROPERTY_OPEN_INTEREST)
  public void setOpenInterest_JsonNullable(JsonNullable<BigDecimal> openInterest) {
    this.openInterest = openInterest;
  }

  public void setOpenInterest(BigDecimal openInterest) {
    this.openInterest = JsonNullable.<BigDecimal>of(openInterest);
  }


  public OptionsVolume volume(Double volume) {
    this.volume = JsonNullable.<Double>of(volume);
    return this;
  }

   /**
   * Volume of the option
   * @return volume
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3017", value = "Volume of the option")
  @JsonIgnore

  public Double getVolume() {
        return volume.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getVolume_JsonNullable() {
    return volume;
  }
  
  @JsonProperty(JSON_PROPERTY_VOLUME)
  public void setVolume_JsonNullable(JsonNullable<Double> volume) {
    this.volume = volume;
  }

  public void setVolume(Double volume) {
    this.volume = JsonNullable.<Double>of(volume);
  }


  public OptionsVolume requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The requested identifier submitted in the query.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TSLA.US#PYG8L-USA", value = "The requested identifier submitted in the query.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this optionsVolume object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionsVolume optionsVolume = (OptionsVolume) o;
    return equalsNullable(this.fsymId, optionsVolume.fsymId) &&
        equalsNullable(this.date, optionsVolume.date) &&
        equalsNullable(this.exchange, optionsVolume.exchange) &&
        equalsNullable(this.openInterest, optionsVolume.openInterest) &&
        equalsNullable(this.volume, optionsVolume.volume) &&
        Objects.equals(this.requestId, optionsVolume.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(date), hashCodeNullable(exchange), hashCodeNullable(openInterest), hashCodeNullable(volume), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionsVolume {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    openInterest: ").append(toIndentedString(openInterest)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

