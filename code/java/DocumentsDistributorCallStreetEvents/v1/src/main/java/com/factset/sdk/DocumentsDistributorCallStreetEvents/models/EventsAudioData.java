/*
 * Documents Distributor - CallStreet Events
 * CallStreet Events contains all the Documents Distributor APIs that offer events data such as Events Audio and Near Real-Time Transcripts.  The  Events Audio API provides access to historical as well as latest audio recordings of various company events covered by FactSet. The events include, but are not limited to: earnings calls, conferences, and investor days.   This API also provides relevant metadata such as timestamps and identifiers around each audio file.  The Documents Distributor - Near Real-time Transcripts API enables access to Near Real-time Transcripts provided by CallStreet to time-sensitive clients. This API also provides the relevant speaker metadata along with their confidence scores. This data caters to quant clients interested in building machine learning models.  Clients can leverage this API to perform sentiment analysis through natural language processing or machine learning. It can also be used to complement analysis using FactSet's transcripts service. 
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.DocumentsDistributorCallStreetEvents.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.DocumentsDistributorCallStreetEvents.JSON;


/**
 * EventsAudioData
 */
@JsonPropertyOrder({
  EventsAudioData.JSON_PROPERTY_URL,
  EventsAudioData.JSON_PROPERTY_FILE_NAME,
  EventsAudioData.JSON_PROPERTY_DURATION_SECS,
  EventsAudioData.JSON_PROPERTY_END_OFFSET_SECONDS,
  EventsAudioData.JSON_PROPERTY_START_OFFSET_SECONDS,
  EventsAudioData.JSON_PROPERTY_SOURCE_CODE,
  EventsAudioData.JSON_PROPERTY_START_TIME,
  EventsAudioData.JSON_PROPERTY_END_TIME,
  EventsAudioData.JSON_PROPERTY_UPLOAD_TIME,
  EventsAudioData.JSON_PROPERTY_FILE_SIZE,
  EventsAudioData.JSON_PROPERTY_REPORT_ID,
  EventsAudioData.JSON_PROPERTY_TICKER,
  EventsAudioData.JSON_PROPERTY_ENTITY_ID,
  EventsAudioData.JSON_PROPERTY_TRIMMED,
  EventsAudioData.JSON_PROPERTY_SAMPLE_RATE,
  EventsAudioData.JSON_PROPERTY_BITRATE,
  EventsAudioData.JSON_PROPERTY_AUDIO_SOURCE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EventsAudioData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_DURATION_SECS = "durationSecs";
  private JsonNullable<BigDecimal> durationSecs = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_END_OFFSET_SECONDS = "endOffsetSeconds";
  private JsonNullable<BigDecimal> endOffsetSeconds = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_START_OFFSET_SECONDS = "startOffsetSeconds";
  private JsonNullable<BigDecimal> startOffsetSeconds = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SOURCE_CODE = "sourceCode";
  private String sourceCode;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private JsonNullable<String> startTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private JsonNullable<String> endTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPLOAD_TIME = "uploadTime";
  private JsonNullable<String> uploadTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private BigDecimal fileSize;

  public static final String JSON_PROPERTY_REPORT_ID = "reportId";
  private Integer reportId;

  public static final String JSON_PROPERTY_TICKER = "ticker";
  private JsonNullable<String> ticker = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_TRIMMED = "trimmed";
  private Boolean trimmed;

  public static final String JSON_PROPERTY_SAMPLE_RATE = "sampleRate";
  private JsonNullable<BigDecimal> sampleRate = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_BITRATE = "bitrate";
  private JsonNullable<BigDecimal> bitrate = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_AUDIO_SOURCE_ID = "audioSourceId";
  private JsonNullable<Integer> audioSourceId = JsonNullable.<Integer>undefined();

  public EventsAudioData() { 
  }

  public EventsAudioData url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Download link for the audio file.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Download link for the audio file.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public EventsAudioData fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The filename of the audio file.
   * @return fileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The filename of the audio file.")
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public EventsAudioData durationSecs(BigDecimal durationSecs) {
    this.durationSecs = JsonNullable.<BigDecimal>of(durationSecs);
    return this;
  }

   /**
   * Total duration of the recording in seconds based on startOffsetSeconds to endOffsetSeconds.
   * @return durationSecs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total duration of the recording in seconds based on startOffsetSeconds to endOffsetSeconds.")
  @JsonIgnore

  public BigDecimal getDurationSecs() {
        return durationSecs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION_SECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getDurationSecs_JsonNullable() {
    return durationSecs;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION_SECS)
  public void setDurationSecs_JsonNullable(JsonNullable<BigDecimal> durationSecs) {
    this.durationSecs = durationSecs;
  }

  public void setDurationSecs(BigDecimal durationSecs) {
    this.durationSecs = JsonNullable.<BigDecimal>of(durationSecs);
  }


  public EventsAudioData endOffsetSeconds(BigDecimal endOffsetSeconds) {
    this.endOffsetSeconds = JsonNullable.<BigDecimal>of(endOffsetSeconds);
    return this;
  }

   /**
   * The delta in seconds between startTime to when FactSet marks the end of the call.
   * @return endOffsetSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The delta in seconds between startTime to when FactSet marks the end of the call.")
  @JsonIgnore

  public BigDecimal getEndOffsetSeconds() {
        return endOffsetSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_OFFSET_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEndOffsetSeconds_JsonNullable() {
    return endOffsetSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_END_OFFSET_SECONDS)
  public void setEndOffsetSeconds_JsonNullable(JsonNullable<BigDecimal> endOffsetSeconds) {
    this.endOffsetSeconds = endOffsetSeconds;
  }

  public void setEndOffsetSeconds(BigDecimal endOffsetSeconds) {
    this.endOffsetSeconds = JsonNullable.<BigDecimal>of(endOffsetSeconds);
  }


  public EventsAudioData startOffsetSeconds(BigDecimal startOffsetSeconds) {
    this.startOffsetSeconds = JsonNullable.<BigDecimal>of(startOffsetSeconds);
    return this;
  }

   /**
   * The delta in seconds between start of audio file to when FactSet marks the beginning of the call.
   * @return startOffsetSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The delta in seconds between start of audio file to when FactSet marks the beginning of the call.")
  @JsonIgnore

  public BigDecimal getStartOffsetSeconds() {
        return startOffsetSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_OFFSET_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getStartOffsetSeconds_JsonNullable() {
    return startOffsetSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_START_OFFSET_SECONDS)
  public void setStartOffsetSeconds_JsonNullable(JsonNullable<BigDecimal> startOffsetSeconds) {
    this.startOffsetSeconds = startOffsetSeconds;
  }

  public void setStartOffsetSeconds(BigDecimal startOffsetSeconds) {
    this.startOffsetSeconds = JsonNullable.<BigDecimal>of(startOffsetSeconds);
  }


  public EventsAudioData sourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
    return this;
  }

   /**
   * Identifies the method of how the event is recorded Below are the descriptions for each Source Code - * P &#x3D; Phone * W &#x3D; Webcast * V &#x3D; Vendor * I &#x3D; Webcast Replay * F &#x3D; Flash - identical to webcast; can merge with \&quot;W\&quot; in the future * R &#x3D; Replay (Phone Replay)
   * @return sourceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the method of how the event is recorded Below are the descriptions for each Source Code - * P = Phone * W = Webcast * V = Vendor * I = Webcast Replay * F = Flash - identical to webcast; can merge with \"W\" in the future * R = Replay (Phone Replay)")
  @JsonProperty(JSON_PROPERTY_SOURCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceCode() {
    return sourceCode;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
  }


  public EventsAudioData startTime(String startTime) {
    this.startTime = JsonNullable.<String>of(startTime);
    return this;
  }

   /**
   * The official timestamp when FactSet begins the recording.  Note:- All the vendor and trimmed files would have default 1900-0101T00:00:00Z time stamp.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The official timestamp when FactSet begins the recording.  Note:- All the vendor and trimmed files would have default 1900-0101T00:00:00Z time stamp.")
  @JsonIgnore

  public String getStartTime() {
        return startTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTime_JsonNullable() {
    return startTime;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME)
  public void setStartTime_JsonNullable(JsonNullable<String> startTime) {
    this.startTime = startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = JsonNullable.<String>of(startTime);
  }


  public EventsAudioData endTime(String endTime) {
    this.endTime = JsonNullable.<String>of(endTime);
    return this;
  }

   /**
   * The official timestamp when FactSet ends the recording.  Note:- All the vendor and trimmed files would have default 1900-0101T00:00:00Z time stamp.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The official timestamp when FactSet ends the recording.  Note:- All the vendor and trimmed files would have default 1900-0101T00:00:00Z time stamp.")
  @JsonIgnore

  public String getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<String> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = JsonNullable.<String>of(endTime);
  }


  public EventsAudioData uploadTime(String uploadTime) {
    this.uploadTime = JsonNullable.<String>of(uploadTime);
    return this;
  }

   /**
   * The official timestamp when FactSet publishes the audio file externally.
   * @return uploadTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The official timestamp when FactSet publishes the audio file externally.")
  @JsonIgnore

  public String getUploadTime() {
        return uploadTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPLOAD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUploadTime_JsonNullable() {
    return uploadTime;
  }
  
  @JsonProperty(JSON_PROPERTY_UPLOAD_TIME)
  public void setUploadTime_JsonNullable(JsonNullable<String> uploadTime) {
    this.uploadTime = uploadTime;
  }

  public void setUploadTime(String uploadTime) {
    this.uploadTime = JsonNullable.<String>of(uploadTime);
  }


  public EventsAudioData fileSize(BigDecimal fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Size of the Audio file, in bytes.
   * @return fileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Size of the Audio file, in bytes.")
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(BigDecimal fileSize) {
    this.fileSize = fileSize;
  }


  public EventsAudioData reportId(Integer reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * The unique ID of the audio file for an event. The same ID is used for the transcript of the same event. This report ID can also be used to map to the Event details in SDF tables.
   * @return reportId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the audio file for an event. The same ID is used for the transcript of the same event. This report ID can also be used to map to the Event details in SDF tables.")
  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getReportId() {
    return reportId;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportId(Integer reportId) {
    this.reportId = reportId;
  }


  public EventsAudioData ticker(String ticker) {
    this.ticker = JsonNullable.<String>of(ticker);
    return this;
  }

   /**
   * Ticker-region identifier for the company hosting the event.  Note:- This field can have N/A value when the company is a private(non-equity company)
   * @return ticker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ticker-region identifier for the company hosting the event.  Note:- This field can have N/A value when the company is a private(non-equity company)")
  @JsonIgnore

  public String getTicker() {
        return ticker.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TICKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTicker_JsonNullable() {
    return ticker;
  }
  
  @JsonProperty(JSON_PROPERTY_TICKER)
  public void setTicker_JsonNullable(JsonNullable<String> ticker) {
    this.ticker = ticker;
  }

  public void setTicker(String ticker) {
    this.ticker = JsonNullable.<String>of(ticker);
  }


  public EventsAudioData entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Factset entity level identifier for the company hosting the event.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Factset entity level identifier for the company hosting the event.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public EventsAudioData trimmed(Boolean trimmed) {
    this.trimmed = trimmed;
    return this;
  }

   /**
   * The trimmed attribute helps identify if the audio is the trimmed version.
   * @return trimmed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The trimmed attribute helps identify if the audio is the trimmed version.")
  @JsonProperty(JSON_PROPERTY_TRIMMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrimmed() {
    return trimmed;
  }


  @JsonProperty(JSON_PROPERTY_TRIMMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrimmed(Boolean trimmed) {
    this.trimmed = trimmed;
  }


  public EventsAudioData sampleRate(BigDecimal sampleRate) {
    this.sampleRate = JsonNullable.<BigDecimal>of(sampleRate);
    return this;
  }

   /**
   * The number of samples of audio carried per second in Kbps.  Note:- The field can have value as -1 for the audio files without sampleRate metadata
   * @return sampleRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of samples of audio carried per second in Kbps.  Note:- The field can have value as -1 for the audio files without sampleRate metadata")
  @JsonIgnore

  public BigDecimal getSampleRate() {
        return sampleRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAMPLE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getSampleRate_JsonNullable() {
    return sampleRate;
  }
  
  @JsonProperty(JSON_PROPERTY_SAMPLE_RATE)
  public void setSampleRate_JsonNullable(JsonNullable<BigDecimal> sampleRate) {
    this.sampleRate = sampleRate;
  }

  public void setSampleRate(BigDecimal sampleRate) {
    this.sampleRate = JsonNullable.<BigDecimal>of(sampleRate);
  }


  public EventsAudioData bitrate(BigDecimal bitrate) {
    this.bitrate = JsonNullable.<BigDecimal>of(bitrate);
    return this;
  }

   /**
   * The total number of bits of information stored per second of sound in Kbps.  Note:- The field can have value as -1 for the audio files without bitrate metadata
   * @return bitrate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of bits of information stored per second of sound in Kbps.  Note:- The field can have value as -1 for the audio files without bitrate metadata")
  @JsonIgnore

  public BigDecimal getBitrate() {
        return bitrate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BITRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getBitrate_JsonNullable() {
    return bitrate;
  }
  
  @JsonProperty(JSON_PROPERTY_BITRATE)
  public void setBitrate_JsonNullable(JsonNullable<BigDecimal> bitrate) {
    this.bitrate = bitrate;
  }

  public void setBitrate(BigDecimal bitrate) {
    this.bitrate = JsonNullable.<BigDecimal>of(bitrate);
  }


  public EventsAudioData audioSourceId(Integer audioSourceId) {
    this.audioSourceId = JsonNullable.<Integer>of(audioSourceId);
    return this;
  }

   /**
   * Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (Phone or Webcast or Vendor or Replay). One ReportID can have multiple AudioSourceIDs.
   * @return audioSourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (Phone or Webcast or Vendor or Replay). One ReportID can have multiple AudioSourceIDs.")
  @JsonIgnore

  public Integer getAudioSourceId() {
        return audioSourceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUDIO_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getAudioSourceId_JsonNullable() {
    return audioSourceId;
  }
  
  @JsonProperty(JSON_PROPERTY_AUDIO_SOURCE_ID)
  public void setAudioSourceId_JsonNullable(JsonNullable<Integer> audioSourceId) {
    this.audioSourceId = audioSourceId;
  }

  public void setAudioSourceId(Integer audioSourceId) {
    this.audioSourceId = JsonNullable.<Integer>of(audioSourceId);
  }


  /**
   * Return true if this Events_Audio_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventsAudioData eventsAudioData = (EventsAudioData) o;
    return Objects.equals(this.url, eventsAudioData.url) &&
        Objects.equals(this.fileName, eventsAudioData.fileName) &&
        equalsNullable(this.durationSecs, eventsAudioData.durationSecs) &&
        equalsNullable(this.endOffsetSeconds, eventsAudioData.endOffsetSeconds) &&
        equalsNullable(this.startOffsetSeconds, eventsAudioData.startOffsetSeconds) &&
        Objects.equals(this.sourceCode, eventsAudioData.sourceCode) &&
        equalsNullable(this.startTime, eventsAudioData.startTime) &&
        equalsNullable(this.endTime, eventsAudioData.endTime) &&
        equalsNullable(this.uploadTime, eventsAudioData.uploadTime) &&
        Objects.equals(this.fileSize, eventsAudioData.fileSize) &&
        Objects.equals(this.reportId, eventsAudioData.reportId) &&
        equalsNullable(this.ticker, eventsAudioData.ticker) &&
        Objects.equals(this.entityId, eventsAudioData.entityId) &&
        Objects.equals(this.trimmed, eventsAudioData.trimmed) &&
        equalsNullable(this.sampleRate, eventsAudioData.sampleRate) &&
        equalsNullable(this.bitrate, eventsAudioData.bitrate) &&
        equalsNullable(this.audioSourceId, eventsAudioData.audioSourceId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, fileName, hashCodeNullable(durationSecs), hashCodeNullable(endOffsetSeconds), hashCodeNullable(startOffsetSeconds), sourceCode, hashCodeNullable(startTime), hashCodeNullable(endTime), hashCodeNullable(uploadTime), fileSize, reportId, hashCodeNullable(ticker), entityId, trimmed, hashCodeNullable(sampleRate), hashCodeNullable(bitrate), hashCodeNullable(audioSourceId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventsAudioData {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    durationSecs: ").append(toIndentedString(durationSecs)).append("\n");
    sb.append("    endOffsetSeconds: ").append(toIndentedString(endOffsetSeconds)).append("\n");
    sb.append("    startOffsetSeconds: ").append(toIndentedString(startOffsetSeconds)).append("\n");
    sb.append("    sourceCode: ").append(toIndentedString(sourceCode)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    uploadTime: ").append(toIndentedString(uploadTime)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    trimmed: ").append(toIndentedString(trimmed)).append("\n");
    sb.append("    sampleRate: ").append(toIndentedString(sampleRate)).append("\n");
    sb.append("    bitrate: ").append(toIndentedString(bitrate)).append("\n");
    sb.append("    audioSourceId: ").append(toIndentedString(audioSourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

