/*
 * Documents Distributor - CallStreet Events
 * CallStreet Events contains all the Documents Distributor APIs that offer events data such as Events Audio and Near Real-Time Transcripts.  The  Events Audio API provides access to historical as well as the latest audio recordings of various company events covered by FactSet. The events include, but are not limited to: earnings calls, conferences, and investor days.   This API also provides relevant metadata such as timestamps and identifiers around each audio file.  The Documents Distributor - Near Real-time Transcripts API enables access to Near Real-time Transcripts provided by CallStreet to time-sensitive clients. This API also provides the relevant speaker metadata along with their confidence scores. This data caters to quant clients interested in building machine learning models.  Clients can leverage this API to perform sentiment analysis through natural language processing or machine learning. It can also be used to complement analysis using FactSet's transcripts service. 
 *
 * The version of the OpenAPI document: 1.8.3
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.DocumentsDistributorCallStreetEvents.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.DocumentsDistributorCallStreetEvents.JSON;


/**
 * NRTSpeakerids400ResponseDetailsValidParameters
 */
@JsonPropertyOrder({
  NRTSpeakerids400ResponseDetailsValidParameters.JSON_PROPERTY_SORT,
  NRTSpeakerids400ResponseDetailsValidParameters.JSON_PROPERTY_PAGINATION_LIMIT,
  NRTSpeakerids400ResponseDetailsValidParameters.JSON_PROPERTY_PAGINATION_OFFSET,
  NRTSpeakerids400ResponseDetailsValidParameters.JSON_PROPERTY_AUDIO_SOURCE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class NRTSpeakerids400ResponseDetailsValidParameters implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SORT = "_sort";
  private java.util.List<String> sort = null;

  public static final String JSON_PROPERTY_PAGINATION_LIMIT = "_paginationLimit";
  private java.util.List<String> paginationLimit = null;

  public static final String JSON_PROPERTY_PAGINATION_OFFSET = "_paginationOffset";
  private java.util.List<String> paginationOffset = null;

  public static final String JSON_PROPERTY_AUDIO_SOURCE_ID = "audioSourceId";
  private java.util.List<String> audioSourceId = null;

  public NRTSpeakerids400ResponseDetailsValidParameters() { 
  }

  public NRTSpeakerids400ResponseDetailsValidParameters sort(java.util.List<String> sort) {
    this.sort = sort;
    return this;
  }

  public NRTSpeakerids400ResponseDetailsValidParameters addSortItem(String sortItem) {
    if (this.sort == null) {
      this.sort = new java.util.ArrayList<>();
    }
    this.sort.add(sortItem);
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(java.util.List<String> sort) {
    this.sort = sort;
  }


  public NRTSpeakerids400ResponseDetailsValidParameters paginationLimit(java.util.List<String> paginationLimit) {
    this.paginationLimit = paginationLimit;
    return this;
  }

  public NRTSpeakerids400ResponseDetailsValidParameters addPaginationLimitItem(String paginationLimitItem) {
    if (this.paginationLimit == null) {
      this.paginationLimit = new java.util.ArrayList<>();
    }
    this.paginationLimit.add(paginationLimitItem);
    return this;
  }

   /**
   * Get paginationLimit
   * @return paginationLimit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAGINATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getPaginationLimit() {
    return paginationLimit;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaginationLimit(java.util.List<String> paginationLimit) {
    this.paginationLimit = paginationLimit;
  }


  public NRTSpeakerids400ResponseDetailsValidParameters paginationOffset(java.util.List<String> paginationOffset) {
    this.paginationOffset = paginationOffset;
    return this;
  }

  public NRTSpeakerids400ResponseDetailsValidParameters addPaginationOffsetItem(String paginationOffsetItem) {
    if (this.paginationOffset == null) {
      this.paginationOffset = new java.util.ArrayList<>();
    }
    this.paginationOffset.add(paginationOffsetItem);
    return this;
  }

   /**
   * Get paginationOffset
   * @return paginationOffset
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAGINATION_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getPaginationOffset() {
    return paginationOffset;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaginationOffset(java.util.List<String> paginationOffset) {
    this.paginationOffset = paginationOffset;
  }


  public NRTSpeakerids400ResponseDetailsValidParameters audioSourceId(java.util.List<String> audioSourceId) {
    this.audioSourceId = audioSourceId;
    return this;
  }

  public NRTSpeakerids400ResponseDetailsValidParameters addAudioSourceIdItem(String audioSourceIdItem) {
    if (this.audioSourceId == null) {
      this.audioSourceId = new java.util.ArrayList<>();
    }
    this.audioSourceId.add(audioSourceIdItem);
    return this;
  }

   /**
   * Get audioSourceId
   * @return audioSourceId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUDIO_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getAudioSourceId() {
    return audioSourceId;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudioSourceId(java.util.List<String> audioSourceId) {
    this.audioSourceId = audioSourceId;
  }


  /**
   * Return true if this NRT_Speakerids_400_Response_details_validParameters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NRTSpeakerids400ResponseDetailsValidParameters nrTSpeakerids400ResponseDetailsValidParameters = (NRTSpeakerids400ResponseDetailsValidParameters) o;
    return Objects.equals(this.sort, nrTSpeakerids400ResponseDetailsValidParameters.sort) &&
        Objects.equals(this.paginationLimit, nrTSpeakerids400ResponseDetailsValidParameters.paginationLimit) &&
        Objects.equals(this.paginationOffset, nrTSpeakerids400ResponseDetailsValidParameters.paginationOffset) &&
        Objects.equals(this.audioSourceId, nrTSpeakerids400ResponseDetailsValidParameters.audioSourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sort, paginationLimit, paginationOffset, audioSourceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NRTSpeakerids400ResponseDetailsValidParameters {\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    paginationLimit: ").append(toIndentedString(paginationLimit)).append("\n");
    sb.append("    paginationOffset: ").append(toIndentedString(paginationOffset)).append("\n");
    sb.append("    audioSourceId: ").append(toIndentedString(audioSourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

