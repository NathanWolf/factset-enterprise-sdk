/*
 * Natural Language Processing API
 * APIs that leverage Natural Language Processing to help extract meaningful data from unstructured text
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.NaturalLanguageProcessing.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.NaturalLanguageProcessing.models.QnAHTTPError;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.NaturalLanguageProcessing.JSON;


/**
 * Schema that defines HTTP error(s).
 */
@ApiModel(description = "Schema that defines HTTP error(s).")
@JsonPropertyOrder({
  QnAHTTPErrorRoot.JSON_PROPERTY_ERRORS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QnAHTTPErrorRoot implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private java.util.List<QnAHTTPError> errors = new java.util.ArrayList<>();

  public QnAHTTPErrorRoot() { 
  }

  @JsonCreator
  public QnAHTTPErrorRoot(
    @JsonProperty(value=JSON_PROPERTY_ERRORS, required=true) java.util.List<QnAHTTPError> errors
  ) {
    this();
    this.errors = errors;
  }

  public QnAHTTPErrorRoot errors(java.util.List<QnAHTTPError> errors) {
    this.errors = errors;
    return this;
  }

  public QnAHTTPErrorRoot addErrorsItem(QnAHTTPError errorsItem) {
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * List of errors
   * @return errors
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of errors")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<QnAHTTPError> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrors(java.util.List<QnAHTTPError> errors) {
    this.errors = errors;
  }


  /**
   * Return true if this QnAHTTPErrorRoot object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QnAHTTPErrorRoot qnAHTTPErrorRoot = (QnAHTTPErrorRoot) o;
    return Objects.equals(this.errors, qnAHTTPErrorRoot.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QnAHTTPErrorRoot {\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

