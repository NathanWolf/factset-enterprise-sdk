/*
 * fpo_mp_input
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OptimizationEngineAPIMultiperiod.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OptimizationEngineAPIMultiperiod.JSON;


/**
 * OptimizerInputsRawRiskModelSimulations
 */
@JsonPropertyOrder({
  OptimizerInputsRawRiskModelSimulations.JSON_PROPERTY_ID,
  OptimizerInputsRawRiskModelSimulations.JSON_PROPERTY_SIMULATED_RETURNS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class OptimizerInputsRawRiskModelSimulations implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_SIMULATED_RETURNS = "simulatedReturns";
  private java.util.List<Double> simulatedReturns = null;

  public OptimizerInputsRawRiskModelSimulations() { 
  }

  public OptimizerInputsRawRiskModelSimulations id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public OptimizerInputsRawRiskModelSimulations simulatedReturns(java.util.List<Double> simulatedReturns) {
    this.simulatedReturns = simulatedReturns;
    return this;
  }

  public OptimizerInputsRawRiskModelSimulations addSimulatedReturnsItem(Double simulatedReturnsItem) {
    if (this.simulatedReturns == null) {
      this.simulatedReturns = new java.util.ArrayList<>();
    }
    this.simulatedReturns.add(simulatedReturnsItem);
    return this;
  }

   /**
   * Get simulatedReturns
   * @return simulatedReturns
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIMULATED_RETURNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Double> getSimulatedReturns() {
    return simulatedReturns;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATED_RETURNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulatedReturns(java.util.List<Double> simulatedReturns) {
    this.simulatedReturns = simulatedReturns;
  }


  /**
   * Return true if this optimizer.inputs.RawRiskModel.Simulations object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizerInputsRawRiskModelSimulations optimizerInputsRawRiskModelSimulations = (OptimizerInputsRawRiskModelSimulations) o;
    return Objects.equals(this.id, optimizerInputsRawRiskModelSimulations.id) &&
        Objects.equals(this.simulatedReturns, optimizerInputsRawRiskModelSimulations.simulatedReturns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, simulatedReturns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizerInputsRawRiskModelSimulations {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    simulatedReturns: ").append(toIndentedString(simulatedReturns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

