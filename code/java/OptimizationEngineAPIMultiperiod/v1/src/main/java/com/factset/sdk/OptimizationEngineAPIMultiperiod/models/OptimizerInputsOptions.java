/*
 * fpo_mp_input
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OptimizationEngineAPIMultiperiod.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OptimizationEngineAPIMultiperiod.models.OptimizerInputsValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OptimizationEngineAPIMultiperiod.JSON;


/**
 * OptimizerInputsOptions
 */
@JsonPropertyOrder({
  OptimizerInputsOptions.JSON_PROPERTY_MAX_RUN_TIME,
  OptimizerInputsOptions.JSON_PROPERTY_CONVERGENCE_TOLERANCE,
  OptimizerInputsOptions.JSON_PROPERTY_CASH_FLOW_FORMULA,
  OptimizerInputsOptions.JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_IP,
  OptimizerInputsOptions.JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_BMK,
  OptimizerInputsOptions.JSON_PROPERTY_COMPOSITE_ASSET_LOOKTHROUGH_LEVEL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class OptimizerInputsOptions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MAX_RUN_TIME = "maxRunTime";
  private Integer maxRunTime;

  public static final String JSON_PROPERTY_CONVERGENCE_TOLERANCE = "ConvergenceTolerance";
  private Double convergenceTolerance;

  public static final String JSON_PROPERTY_CASH_FLOW_FORMULA = "cash_flow_formula";
  private OptimizerInputsValue cashFlowFormula;

  public static final String JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_IP = "convert_weights_to_cash_for_ip";
  private Boolean convertWeightsToCashForIp;

  public static final String JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_BMK = "convert_weights_to_cash_for_bmk";
  private Boolean convertWeightsToCashForBmk;

  public static final String JSON_PROPERTY_COMPOSITE_ASSET_LOOKTHROUGH_LEVEL = "composite_asset_lookthrough_level";
  private Integer compositeAssetLookthroughLevel;

  public OptimizerInputsOptions() { 
  }

  public OptimizerInputsOptions maxRunTime(Integer maxRunTime) {
    this.maxRunTime = maxRunTime;
    return this;
  }

   /**
   * Get maxRunTime
   * @return maxRunTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX_RUN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxRunTime() {
    return maxRunTime;
  }


  @JsonProperty(JSON_PROPERTY_MAX_RUN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxRunTime(Integer maxRunTime) {
    this.maxRunTime = maxRunTime;
  }


  public OptimizerInputsOptions convergenceTolerance(Double convergenceTolerance) {
    this.convergenceTolerance = convergenceTolerance;
    return this;
  }

   /**
   * Get convergenceTolerance
   * @return convergenceTolerance
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERGENCE_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getConvergenceTolerance() {
    return convergenceTolerance;
  }


  @JsonProperty(JSON_PROPERTY_CONVERGENCE_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvergenceTolerance(Double convergenceTolerance) {
    this.convergenceTolerance = convergenceTolerance;
  }


  public OptimizerInputsOptions cashFlowFormula(OptimizerInputsValue cashFlowFormula) {
    this.cashFlowFormula = cashFlowFormula;
    return this;
  }

   /**
   * Get cashFlowFormula
   * @return cashFlowFormula
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CASH_FLOW_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptimizerInputsValue getCashFlowFormula() {
    return cashFlowFormula;
  }


  @JsonProperty(JSON_PROPERTY_CASH_FLOW_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashFlowFormula(OptimizerInputsValue cashFlowFormula) {
    this.cashFlowFormula = cashFlowFormula;
  }


  public OptimizerInputsOptions convertWeightsToCashForIp(Boolean convertWeightsToCashForIp) {
    this.convertWeightsToCashForIp = convertWeightsToCashForIp;
    return this;
  }

   /**
   * Get convertWeightsToCashForIp
   * @return convertWeightsToCashForIp
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConvertWeightsToCashForIp() {
    return convertWeightsToCashForIp;
  }


  @JsonProperty(JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvertWeightsToCashForIp(Boolean convertWeightsToCashForIp) {
    this.convertWeightsToCashForIp = convertWeightsToCashForIp;
  }


  public OptimizerInputsOptions convertWeightsToCashForBmk(Boolean convertWeightsToCashForBmk) {
    this.convertWeightsToCashForBmk = convertWeightsToCashForBmk;
    return this;
  }

   /**
   * Get convertWeightsToCashForBmk
   * @return convertWeightsToCashForBmk
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_BMK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConvertWeightsToCashForBmk() {
    return convertWeightsToCashForBmk;
  }


  @JsonProperty(JSON_PROPERTY_CONVERT_WEIGHTS_TO_CASH_FOR_BMK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvertWeightsToCashForBmk(Boolean convertWeightsToCashForBmk) {
    this.convertWeightsToCashForBmk = convertWeightsToCashForBmk;
  }


  public OptimizerInputsOptions compositeAssetLookthroughLevel(Integer compositeAssetLookthroughLevel) {
    this.compositeAssetLookthroughLevel = compositeAssetLookthroughLevel;
    return this;
  }

   /**
   * Get compositeAssetLookthroughLevel
   * @return compositeAssetLookthroughLevel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPOSITE_ASSET_LOOKTHROUGH_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompositeAssetLookthroughLevel() {
    return compositeAssetLookthroughLevel;
  }


  @JsonProperty(JSON_PROPERTY_COMPOSITE_ASSET_LOOKTHROUGH_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompositeAssetLookthroughLevel(Integer compositeAssetLookthroughLevel) {
    this.compositeAssetLookthroughLevel = compositeAssetLookthroughLevel;
  }


  /**
   * Return true if this optimizer.inputs.Options object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizerInputsOptions optimizerInputsOptions = (OptimizerInputsOptions) o;
    return Objects.equals(this.maxRunTime, optimizerInputsOptions.maxRunTime) &&
        Objects.equals(this.convergenceTolerance, optimizerInputsOptions.convergenceTolerance) &&
        Objects.equals(this.cashFlowFormula, optimizerInputsOptions.cashFlowFormula) &&
        Objects.equals(this.convertWeightsToCashForIp, optimizerInputsOptions.convertWeightsToCashForIp) &&
        Objects.equals(this.convertWeightsToCashForBmk, optimizerInputsOptions.convertWeightsToCashForBmk) &&
        Objects.equals(this.compositeAssetLookthroughLevel, optimizerInputsOptions.compositeAssetLookthroughLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxRunTime, convergenceTolerance, cashFlowFormula, convertWeightsToCashForIp, convertWeightsToCashForBmk, compositeAssetLookthroughLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizerInputsOptions {\n");
    sb.append("    maxRunTime: ").append(toIndentedString(maxRunTime)).append("\n");
    sb.append("    convergenceTolerance: ").append(toIndentedString(convergenceTolerance)).append("\n");
    sb.append("    cashFlowFormula: ").append(toIndentedString(cashFlowFormula)).append("\n");
    sb.append("    convertWeightsToCashForIp: ").append(toIndentedString(convertWeightsToCashForIp)).append("\n");
    sb.append("    convertWeightsToCashForBmk: ").append(toIndentedString(convertWeightsToCashForBmk)).append("\n");
    sb.append("    compositeAssetLookthroughLevel: ").append(toIndentedString(compositeAssetLookthroughLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

