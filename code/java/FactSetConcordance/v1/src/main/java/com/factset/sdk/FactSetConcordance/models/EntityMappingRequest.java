/*
 * FactSet Concordance API
 * The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p> 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * EntityMappingRequest
 */
@JsonPropertyOrder({
  EntityMappingRequest.JSON_PROPERTY_CLIENT_ID,
  EntityMappingRequest.JSON_PROPERTY_ENTITY_ID,
  EntityMappingRequest.JSON_PROPERTY_CLIENT_NAME,
  EntityMappingRequest.JSON_PROPERTY_CLIENT_COUNTRY,
  EntityMappingRequest.JSON_PROPERTY_CLIENT_STATE,
  EntityMappingRequest.JSON_PROPERTY_CLIENT_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntityMappingRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private String clientId;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_CLIENT_NAME = "clientName";
  private String clientName;

  public static final String JSON_PROPERTY_CLIENT_COUNTRY = "clientCountry";
  private String clientCountry;

  public static final String JSON_PROPERTY_CLIENT_STATE = "clientState";
  private String clientState;

  public static final String JSON_PROPERTY_CLIENT_URL = "clientUrl";
  private String clientUrl;

  public EntityMappingRequest() { 
  }

  @JsonCreator
  public EntityMappingRequest(
    @JsonProperty(value=JSON_PROPERTY_CLIENT_ID, required=true) String clientId, 
    @JsonProperty(value=JSON_PROPERTY_CLIENT_NAME, required=true) String clientName
  ) {
    this();
    this.clientId = clientId;
    this.clientName = clientName;
  }

  public EntityMappingRequest clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * A unique identifier supplied by the user. ClientId is saved to the user&#39;s Concordance universe and will be used as the identifier for that entity within the universe.
   * @return clientId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FDS-USA", required = true, value = "A unique identifier supplied by the user. ClientId is saved to the user's Concordance universe and will be used as the identifier for that entity within the universe.")
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public EntityMappingRequest entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * FactSet Entity Identifier mapped to the submitted entity.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0016YD-E", value = "FactSet Entity Identifier mapped to the submitted entity.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public EntityMappingRequest clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * Name of entity to match.
   * @return clientName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FactSet", required = true, value = "Name of entity to match.")
  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientName() {
    return clientName;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public EntityMappingRequest clientCountry(String clientCountry) {
    this.clientCountry = clientCountry;
    return this;
  }

   /**
   * ISO2 country code corresponding to the Entity name.
   * @return clientCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "ISO2 country code corresponding to the Entity name.")
  @JsonProperty(JSON_PROPERTY_CLIENT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientCountry() {
    return clientCountry;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientCountry(String clientCountry) {
    this.clientCountry = clientCountry;
  }


  public EntityMappingRequest clientState(String clientState) {
    this.clientState = clientState;
    return this;
  }

   /**
   * ISO Code of State or Province location to map Entity.
   * @return clientState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CT", value = "ISO Code of State or Province location to map Entity.")
  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientState() {
    return clientState;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientState(String clientState) {
    this.clientState = clientState;
  }


  public EntityMappingRequest clientUrl(String clientUrl) {
    this.clientUrl = clientUrl;
    return this;
  }

   /**
   * URL corresponding to the entity name.
   * @return clientUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "www.factset.com", value = "URL corresponding to the entity name.")
  @JsonProperty(JSON_PROPERTY_CLIENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientUrl() {
    return clientUrl;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientUrl(String clientUrl) {
    this.clientUrl = clientUrl;
  }


  /**
   * Return true if this EntityMappingRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityMappingRequest entityMappingRequest = (EntityMappingRequest) o;
    return Objects.equals(this.clientId, entityMappingRequest.clientId) &&
        Objects.equals(this.entityId, entityMappingRequest.entityId) &&
        Objects.equals(this.clientName, entityMappingRequest.clientName) &&
        Objects.equals(this.clientCountry, entityMappingRequest.clientCountry) &&
        Objects.equals(this.clientState, entityMappingRequest.clientState) &&
        Objects.equals(this.clientUrl, entityMappingRequest.clientUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, entityId, clientName, clientCountry, clientState, clientUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityMappingRequest {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientCountry: ").append(toIndentedString(clientCountry)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    clientUrl: ").append(toIndentedString(clientUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

