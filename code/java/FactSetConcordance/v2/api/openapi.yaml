openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems, Inc.
  description: |
    The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a "concorded" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p>
  title: FactSet Concordance API
  version: 2.0.0
servers:
- description: Production Server
  url: https://api.factset.com/content
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: Retrieve a list of Entity Matches and Candidates for up to 25 names.
  name: Entity Match
- description: Submit a file with a large list of entity names and attributes and
    retrieve decisions once mapped.
  name: Entity Match - Bulk
- description: Create, View, and Manage Universes where mappings are saved.
  name: Universes
- description: View all Saved Mappings in a Universe or update and save mappings made
    of ClientIds and Names to FactSet Entity Ids
  name: Mappings
- description: The response is formatted specifically for Snowflake environment and
    not used by consumers outside of Snowflake.
  name: Snowflake
- description: Retrieve a list of People Matches.
  name: People Match
- description: Used to save a single People Mapping to a given universe
  name: People Mapping
paths:
  /factset-concordance/v2/entity-match:
    get:
      description: |
        Finds the best candidate entities matching the given entity name. Additional attributes can be supplied to narrow the search, such as State, URL, and Entity Types. <p>**Max of 1 Name permitted in a single GET request.** Use the POST method for /entity-match to fetch up to 25 names. Otherwise, use the "Entity Match - Bulk" workflow to submit larger universes of names to be concorded via a file.</p><p>
      operationId: getEntityMatch
      parameters:
      - description: Name of Entity to match.
        example: FactSet
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: ISO2 country code corresponding to the entity name that is used
          when evaluating candidates for a match. For a list of ISO2 Country codes,
          visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).
        example: US
        explode: true
        in: query
        name: country
        required: false
        schema:
          maxLength: 2
          minLength: 2
          type: string
        style: form
      - description: Two-character state code corresponding to the entity name that
          is used when evaluating candidates for a match. Currently, only US state
          codes are supported.
        example: CT
        explode: true
        in: query
        name: state
        required: false
        schema:
          maxLength: 2
          minLength: 2
          type: string
        style: form
      - description: URL corresponding to the entity name that is used when evaluating
          candidates for a match.
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: |
          Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas.
            |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
            |---|---|---|---|
            |ABS|Asset-Backed||MED|Broadcast Call Sign|
            |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
            |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
            |CMD|Commodity||MUT|Mutual Fd-Open End|
            |COL|College/University||NPO|Non-Profit Organization|
            |CUR|Currency||OPD|Operating Division|
            |ESP|Emp Stk Ownership Plan||OTH|Other|
            |EXT|Extinct||PEF|Pension Fund|
            |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
            |FND|Foundation/Endowment||PUB|Public Company|
            |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
            |FRX|ForEx||PVT|Private Company|
            |GOV|Government||SOV|Sovereign Wealth Fund|
            |HED|Hedge Fund||SUB|Subsidiary|
            |HOL|Holding Company||TRU|Trust/Trustee|
            |IDX|Index||UMB|Umbrella Fund|
            |VEN|Venture Capital Fund||JVT|Joint Venture|
        explode: true
        in: query
        name: includeEntityType
        required: false
        schema:
          items:
            example: PUB
            maxLength: 3
            minLength: 3
            type: string
          type: array
        style: form
      - description: |
          Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.
            |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
            |---|---|---|---|
          |ABS|Asset-Backed||MED|Broadcast Call Sign|
          |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
          |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
          |CMD|Commodity||MUT|Mutual Fd-Open End|
          |COL|College/University||NPO|Non-Profit Organization|
          |CUR|Currency||OPD|Operating Division|
          |ESP|Emp Stk Ownership Plan||OTH|Other|
          |EXT|Extinct||PEF|Pension Fund|
          |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
          |FND|Foundation/Endowment||PUB|Public Company|
          |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
          |FRX|ForEx||PVT|Private Company|
          |GOV|Government||SOV|Sovereign Wealth Fund|
          |HED|Hedge Fund||SUB|Subsidiary|
          |HOL|Holding Company||TRU|Trust/Trustee|
          |IDX|Index||UMB|Umbrella Fund|
          |VEN|Venture Capital Fund||JVT|Joint Venture|
        explode: true
        in: query
        name: excludeEntityType
        required: false
        schema:
          items:
            example: EXT
            maxLength: 3
            minLength: 3
            type: string
          type: array
        style: form
      - description: |
          Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.
            |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
            |---|---|---|---|
            |AR|Arbitrage|IC|Investment Company|
            |BM|Bank Investment Division|IN|Insurance Company|
            |BR|Broker|MF|Mutual Fund Manager|
            |CP|Corporate|ML|Master Ltd Part|
            |CU|Custodial|MM|Market Maker|
            |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
            |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
            |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
            |FS|Fund Distributor|RE|Research Firm|
            |FU|Fund|SB|Subsidiary Branch|
            |FY|Family Office|ST|Stock Borrowing/Lending|
            |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
            |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
            |IA|Investment Adviser|
            |IB|Investment Banking|
        explode: true
        in: query
        name: includeEntitySubType
        required: false
        schema:
          items:
            example: PR
            maxLength: 2
            minLength: 2
            type: string
          type: array
        style: form
      - description: |
          Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.
          |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
          |---|---|---|---|
          |AR|Arbitrage|IC|Investment Company|
          |BM|Bank Investment Division|IN|Insurance Company|
          |BR|Broker|MF|Mutual Fund Manager|
          |CP|Corporate|ML|Master Ltd Part|
          |CU|Custodial|MM|Market Maker|
          |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
          |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
          |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
          |FS|Fund Distributor|RE|Research Firm|
          |FU|Fund|SB|Subsidiary Branch|
          |FY|Family Office|ST|Stock Borrowing/Lending|
          |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
          |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
          |IA|Investment Adviser|
          |IB|Investment Banking|
        explode: true
        in: query
        name: excludeEntitySubType
        required: false
        schema:
          items:
            example: HF
            maxLength: 2
            minLength: 2
            type: string
          type: array
        style: form
      - description: Flag to include parent entities in the list of candidates. This
          parameter does not influence the match result.
        explode: true
        in: query
        name: includeParent
        required: false
        schema:
          default: false
          example: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Entity Matches:
                  $ref: '#/components/examples/EntityMatches'
              schema:
                $ref: '#/components/schemas/EntityMatchesResponse'
          description: Response containing Entity Match results.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Get Entity Candidates and Matches for a single name and attributes.
      tags:
      - Entity Match
      x-accepts: application/json
    post:
      description: |
        Finds the best candidate entities matching the given entity name. If a `universeId` is provided, any match for an input including a `clientId` will be saved to that universe. Additional attributes can be supplied to narrow the search, such as State, URL, and Entity Types. Finds the best candidate entities matching the given company name. Additional attributes can be supplied to narrow the search.  <p>**Max of 25 Names inputted.** Use the "Entity Match - Bulk" workflow to submit larger universes of names to be concorded via a file.</p><p> Supported types of Entities in which the names can match to include -
          * Corporations, Joint Ventures, and Holding Companies
          * Fund Managers and various Fund Types (Open-end, Closed End, Hedge, Soverign Wealth, Pension, Exchange Traded, and more).</p>
      operationId: getEntityMatchForList
      requestBody:
        $ref: '#/components/requestBodies/EntityMatchRequestV2'
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Entity Matches:
                  $ref: '#/components/examples/EntityMatches'
              schema:
                $ref: '#/components/schemas/EntityMatchesResponse'
          description: Response containing Entity Match results.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Get a list of Entity Candidates and Matches for a requested list of
        up to 25 names and attributes.
      tags:
      - Entity Match
      x-contentType: application/json;charset=utf-8
      x-accepts: application/json
  /factset-concordance/v2/entity-task:
    post:
      description: |
        Upload a Comma-Separated List file (.csv / UTF-8 encoding) with a list of names and attributes and receive a `taskId`. The taskId is then used for reference in the */entity-task-status* and */entity-decisions* endpoints to receive results once the task is successful.<p>This is the first step in the overall "Bulk" workflow. Use the /entity-task-status endpoint to check the status.</p> <p> A universeId must be included in request. If you do not have a universe created, reference the `/universe` endpoint.
      operationId: getEntityTaskForList
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                universeId:
                  description: The id of the universe that entities should be mapped
                    to. Reference the `/universe` endpoint to create a universe, or
                    view available universes via `/universes`.
                  example: 1
                  type: integer
                taskName:
                  description: User defined name for the task that will be used to
                    name the output files.
                  example: test31
                  type: string
                inputFile:
                  description: |
                    The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.
                  format: binary
                  type: string
                clientIdColumn:
                  description: |
                    Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a "clientId". This clientId can be used to create custom mappings or references.
                  example: ClientId
                  type: string
                nameColumn:
                  description: |
                    Header name of the column in the input file that contains the Entity Name to be matched.
                  example: NAME
                  type: string
                countryColumn:
                  description: |
                    Header Name of the column in the input file that contains the country's ISO Code. This is used to filter the candidates before taking a match decision.
                  example: COUNTRY
                  type: string
                urlColumn:
                  description: |
                    Header Name of the column in the input file that contains the Entity's URL. URL corresponding to the entity name that is used when evaluating candidates for a match.
                  example: URL
                  type: string
                stateColumn:
                  description: |
                    Header Name of the column in the input file that contains the two letter State Code of the state or province where the Entity is located. Currently, only US state codes are supported.
                  example: STATE
                  type: string
                includeEntityType:
                  description: |
                    Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**
                  items:
                    example: PUB
                    maxLength: 3
                    minLength: 3
                    type: string
                  type: array
                excludeEntityType:
                  description: |
                    Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Entities with these types will be excluded from the decisions.
                    It is a global option used to filter the candidates before taking a match decision.
                    Candidates with an entity type specified will *not* be considered for the final match result.
                    **Do not include within `inputFile`.**
                  items:
                    example: EXT
                    maxLength: 3
                    minLength: 3
                    type: string
                  type: array
                includeEntitySubType:
                  description: |
                    Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**
                  items:
                    example: PR
                    maxLength: 2
                    minLength: 2
                    type: string
                  type: array
                excludeEntitySubType:
                  description: |
                    Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.
                    **Do not include within `inputFile`.**
                  items:
                    example: IB
                    maxLength: 2
                    minLength: 2
                    type: string
                  type: array
              required:
              - clientIdColumn
              - inputFile
              - nameColumn
              - taskName
              - universeId
              type: object
        description: Entity Request object. Used to create an Entity Task.
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Pending Task:
                  $ref: '#/components/examples/PendingTask'
              schema:
                $ref: '#/components/schemas/EntityTaskResponse'
          description: OK. The Entity Task creation is submitted.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Input a file with names and attributes, creating a taskId.
      tags:
      - Entity Match - Bulk
      x-contentType: multipart/form-data
      x-accepts: application/json
  /factset-concordance/v2/entity-task-status:
    get:
      description: |
        Pulls the **status** for ALL the Entity Tasks submitted by a client within the last 30 days, and related details such as task duration and decision rates. Specific Tasks can also be retrieved by using the _taskId_ parameter.<p>Status types include -
          * PENDING - The task has not yet started.
          * IN_PROGRESS - The task is submitted and decisions are in progress.
          * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.
          * FAILURE - The task failed. Reach out to FactSet Support for assistance.
          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
          * ABORTED - The task was aborted.
      operationId: getEntityTaskStatus
      parameters:
      - description: Concordance Task Identifier. The taskId is created in response
          from the /entity-task endpoint.
        example: 31589
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          type: integer
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Filter on the status of the Concordance Tasks. Default is no filter.
            * PENDING - The task has not yet started
            * IN_PROGRESS - The task is submitted and decisions are in progress.
            * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.
            * FAILURE - The task failed. Reach out to FactSet Support for assistance.
            * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
            * ABORTED - The task was aborted.
        explode: false
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - PENDING
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
            - BAD_REQUEST
            - ABORTED
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Successful Entity Task:
                  $ref: '#/components/examples/SuccessfulEntityTasks'
                Pending Task:
                  $ref: '#/components/examples/PendingTasks'
                Bad Task:
                  $ref: '#/components/examples/BadTasks'
                Failed Task:
                  $ref: '#/components/examples/FailedTasks'
              schema:
                $ref: '#/components/schemas/EntityTaskStatusResponse'
          description: Response object for Task Status endpoint.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Gets the status of the requested taskId or all tasks for a User
      tags:
      - Entity Match - Bulk
      x-accepts: application/json
  /factset-concordance/v2/entity-decisions:
    get:
      description: |
        Retrieves the `Decision` objects for an Entity Task (taskId). The decisions do not include all candidates, but rather the results of concording the requested list of names included in the input file. Mapped entities will include a FactSet Entity Identifier (-E). Results will be saved to the `universeId` specified in the input file.
      operationId: getEntityDecisions
      parameters:
      - description: Concordance Task Identifier. The taskId is created in response
          from the /entity-task endpoint.
        example: 31589
        explode: true
        in: query
        name: taskId
        required: true
        schema:
          type: integer
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Entity Decisions:
                  $ref: '#/components/examples/EntityDecisions'
              schema:
                $ref: '#/components/schemas/EntityDecisionsResponse'
          description: Response object for Entity Decisions endpoint.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Get the decisions of matches for the requested taskId.
      tags:
      - Entity Match - Bulk
      x-accepts: application/json
  /factset-concordance/v2/universe:
    post:
      description: |
        Create a new universe that is distinct from any existing universe
      operationId: getUniverseForList
      requestBody:
        $ref: '#/components/requestBodies/CreateUniverseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseMetaResponse'
          description: Metadata on a single universe
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
        default:
          content:
            application/json:
              examples:
                Not Found:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: Create a new universe
      tags:
      - Universes
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/entity-universe:
    get:
      description: |
        Retrieves all entity mappings within a requested universe.
      operationId: getEntityUniverse
      parameters:
      - description: Universe identifier. *To create a universe, use the `/universe'
          endpoint.*
        example: 1
        explode: true
        in: query
        name: universeId
        required: true
        schema:
          type: integer
        style: form
      - description: |
          Filter by the clientId(s) created by the user in a previous mapping.
        example:
        - abc-123
        - def-456
        explode: false
        in: query
        name: clientId
        required: false
        schema:
          items:
            example: EXT
            type: string
          type: array
        style: form
      - description: |
          Filter by the Entity Decisions that have the specified mapStatus, where -
            * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)
            * UNMAPPED - The requested Entity Name is unmapped by FactSet.
            * INDETERMINATE - The requested Entity Name was unable to make a mapping.
        explode: true
        in: query
        name: mapStatus
        required: false
        schema:
          example: MAPPED
          items:
            enum:
            - MAPPED
            - UNMAPPED
            - INDETERMINATE
            type: string
          type: array
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CompanyUniverse:
                  $ref: '#/components/examples/EntityUniverse'
              schema:
                $ref: '#/components/schemas/EntityUniverseResponse'
          description: Response object for FactSet Concordance Universe detail.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Retrieve all saved mappings within a requested universe
      tags:
      - Mappings
      x-accepts: application/json
    post:
      description: |
        Retrieves all entity mappings that were saved in a given universe. Supports filtering by a large number of `clientId`s
      operationId: getEntityUniverseForList
      requestBody:
        $ref: '#/components/requestBodies/EntityUniverseRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                CompanyUniverse:
                  $ref: '#/components/examples/EntityUniverse'
              schema:
                $ref: '#/components/schemas/EntityUniverseResponse'
          description: Response object for FactSet Concordance Universe detail.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Retrieve all saved mappings within a requested universe or large list
        of client ids
      tags:
      - Mappings
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/people-universe:
    get:
      description: |
        Retrieves all people mappings within a requested universe.
      operationId: getPeopleUniverse
      parameters:
      - description: Universe identifier. *To create a universe, use the `/universe'
          endpoint.*
        example: 1
        explode: true
        in: query
        name: universeId
        required: true
        schema:
          type: integer
        style: form
      - description: |
          Filter by the clientId(s) created by the user in a previous mapping.
        example:
        - abc-123
        - def-456
        explode: false
        in: query
        name: clientId
        required: false
        schema:
          items:
            example: EXT
            type: string
          type: array
        style: form
      - description: |
          Filter by the Entity Decisions that have the specified mapStatus, where -
            * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)
            * UNMAPPED - The requested Entity Name is unmapped by FactSet.
            * INDETERMINATE - The requested Entity Name was unable to make a mapping.
        explode: true
        in: query
        name: mapStatus
        required: false
        schema:
          example: MAPPED
          items:
            enum:
            - MAPPED
            - UNMAPPED
            - INDETERMINATE
            type: string
          type: array
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CompanyUniverse:
                  $ref: '#/components/examples/PeopleUniverse'
              schema:
                $ref: '#/components/schemas/PeopleUniverseResponse'
          description: Response object for FactSet Concordance Universe detail.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Retrieve all saved mappings within a requested universe
      tags:
      - People Mapping
      x-accepts: application/json
    post:
      description: |
        Retrieves all people mappings that were saved in a given universe. Supports filtering by a large number of `clientId`s
      operationId: getPeopleUniverseForList
      requestBody:
        $ref: '#/components/requestBodies/PeopleUniverseRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                CompanyUniverse:
                  $ref: '#/components/examples/PeopleUniverse'
              schema:
                $ref: '#/components/schemas/PeopleUniverseResponse'
          description: Response object for FactSet Concordance Universe detail.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Retrieve all saved mappings within a requested universe or large list
        of client ids
      tags:
      - People Mapping
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/update-universe:
    post:
      description: |
        Update metadata for an existing universe
      operationId: getUpdateUniverseForList
      requestBody:
        $ref: '#/components/requestBodies/UpdateUniverseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseMetaResponse'
          description: Metadata on a single universe
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
        default:
          content:
            application/json:
              examples:
                Not Found:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: Update metadata for an existing universe
      tags:
      - Universes
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/universes:
    get:
      description: |
        Fetch information on active universes for the current user. Optionally filter for a specific universe given a `universeId`
      operationId: getUniverses
      parameters:
      - description: Universe identifier. *To create a universe, use the `/universe'
          endpoint.*
        example: 1
        explode: true
        in: query
        name: universeId
        required: false
        schema:
          type: integer
        style: form
      - description: Universe Type.
        example: ENTITY
        explode: false
        in: query
        name: universeType
        required: false
        schema:
          enum:
          - ENTITY
          - PEOPLE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversesResponse'
          description: Metadata on multiple universes
        default:
          content:
            application/json:
              examples:
                Not Found:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: Fetch metadata for universes
      tags:
      - Universes
      x-accepts: application/json
  /factset-concordance/v2/entity-universe-statistics:
    get:
      description: |
        Get the total number of mappings in a universe, as well as the number of mapped, unmapped and indeterminate mappings
      operationId: getEntityUniverseStatistics
      parameters:
      - description: Universe identifier. *To create a universe, use the `/universe'
          endpoint.*
        example: 1
        explode: true
        in: query
        name: universeId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUniverseStatisticsResponse'
          description: Response object for mapping statistics for a universe
        default:
          content:
            application/json:
              examples:
                Not Found:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: Get statistics on a given universe
      tags:
      - Universes
      x-accepts: application/json
  /factset-concordance/v2/universe-statistics:
    get:
      description: |
        Get the total number of mappings in a universe, as well as the number of mapped, unmapped and indeterminate mappings
      operationId: getUniverseStatistics
      parameters:
      - description: Universe identifier. *To create a universe, use the `/universe'
          endpoint.*
        example: 1
        explode: true
        in: query
        name: universeId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/universeStatisticsResponse'
          description: Response object for mapping statistics for a universe
        default:
          content:
            application/json:
              examples:
                Not Found:
                  $ref: '#/components/examples/NotFound'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: Get statistics on a given universe
      tags:
      - Universes
      x-accepts: application/json
  /factset-concordance/v2/entity-mapping:
    post:
      description: |
        Saves a Concordance Mapping to the client universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and clientName are required.
      operationId: getEntityMappingForList
      requestBody:
        $ref: '#/components/requestBodies/EntityMappingRequestV2'
      responses:
        "200":
          content:
            application/json:
              examples:
                EntityResponse:
                  $ref: '#/components/examples/EntityResponse'
              schema:
                $ref: '#/components/schemas/EntityResponse'
          description: Response object for FactSet Concordance Entity.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Saves a single-mapping specified by the client.
      tags:
      - Mappings
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/people-mapping:
    post:
      description: |
        Saves a single Concordance People Mapping to a given universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and clientName are required.
      operationId: getPeopleMappingForList
      requestBody:
        $ref: '#/components/requestBodies/PeopleMappingRequestV2'
      responses:
        "200":
          content:
            application/json:
              examples:
                PeopleResponse:
                  $ref: '#/components/examples/PeopleResponse'
              schema:
                $ref: '#/components/schemas/PeopleMappingResponse'
          description: Single people mapping
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Saves a single-mapping specified by the client.
      tags:
      - People Mapping
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/entity-mapping-delete:
    post:
      description: |
        Delete a Concordance Mapping to the client universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and universeId are required.
      operationId: getEntityMappingDeleteForList
      requestBody:
        $ref: '#/components/requestBodies/EntityMappingDeleteRequestV2'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityMappingDeleteResponse'
          description: Response object for the entity-match object in a snowflake
            friendly response model.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Deletes mapping specified by the client.
      tags:
      - Mappings
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/people-mapping-delete:
    post:
      description: |
        Delete a Concordance Mapping to the client universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and universeId are required.
      operationId: getPeopleMappingDeleteForList
      requestBody:
        $ref: '#/components/requestBodies/PeopleMappingDeleteRequestV2'
      responses:
        "200":
          content:
            application/json:
              examples:
                PeopleResponse:
                  $ref: '#/components/examples/PeopleResponse'
              schema:
                $ref: '#/components/schemas/PeopleMappingDeleteResponse'
          description: Response object for the entity-match object in a snowflake
            friendly response model.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Deletes mapping specified by the client.
      tags:
      - People Mapping
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/snowflake-entity-match:
    post:
      description: |
        Finds the best candidate entities matching the given company name. Additional attributes can be supplied to narrow the search. *This endpoint is used natively within Snowflake and is not to be consumed directly by users. Reach out to your FactSet Account team to learn more about Concordance in Snowflake.*
      operationId: getSnowflakeEntityMatchForList
      requestBody:
        $ref: '#/components/requestBodies/SnowflakeEntityMatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnowflakeEntityMatchResponse'
          description: Response object for the entity-match object in a snowflake
            friendly response model.
      summary: Perform an entity search and return a snowflake-friendly response.
        Up to 25 Names per request.
      tags:
      - Snowflake
      x-contentType: application/json
      x-accepts: application/json
  /factset-concordance/v2/people-match:
    get:
      description: |
        Finds the best people candidates matching the given name. <p>**Max of 1 Name permitted in a single GET request.** Use the POST method for /people-match to fetch up to  names. Otherwise, use the "People Match - Bulk" workflow to submit larger universes of names to be concorded via a file.</p><p>
      operationId: getPeopleMatch
      parameters:
      - description: Name of Person to match.
        example: Bill Gates
        explode: true
        in: query
        name: personName
        required: false
        schema:
          type: string
        style: form
      - description: Title in person's name. This parameter should not be provided
          when the person name is provided as the input.
        example: Mr
        explode: true
        in: query
        name: salutation
        required: false
        schema:
          type: string
        style: form
      - description: First name of person. This parameter should not be provided when
          the person name is provided as the input.
        example: Bill
        explode: true
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - description: Middle name of person.This parameter should not be provided when
          the person name is provided as the input.
        example: Henry
        explode: true
        in: query
        name: middleName
        required: false
        schema:
          type: string
        style: form
      - description: Last name of person. This parameter should not be provided when
          the person name is provided as the input.
        example: Gates
        explode: true
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - description: Suffix in person's name. This parameter should not be provided
          when the person name is provided as the input.
        example: III
        explode: true
        in: query
        name: suffix
        required: false
        schema:
          type: string
        style: form
      - description: Entity the person is associated with. It is used to filter the
          candidates before taking a match decision. Can be entity ID or name. The
          supported entity types match the what is supported via the /company match.
        example: Microsoft
        explode: true
        in: query
        name: entity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                People Matches:
                  $ref: '#/components/examples/PeopleMatches'
              schema:
                $ref: '#/components/schemas/PeopleMatchesResponse'
          description: Response containing People Match results.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Find potential people matches given a person's name.People matches
        can be retrieved using person's name and other attributes like firstname,
        middlename and lastname.
      tags:
      - People Match
      x-accepts: application/json
    post:
      description: |
        Finds the best candidate people matching the given people names. Additional attributes can be supplied to narrow the search. If a `universeId` is provided, any match for an input including a `clientId` will be saved to that universe.
      operationId: getPeopleMatchForList
      requestBody:
        $ref: '#/components/requestBodies/PeopleMatchRequestV2'
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                People Matches:
                  $ref: '#/components/examples/PeopleMatches'
              schema:
                $ref: '#/components/schemas/PeopleMatchesResponse'
          description: Response containing People Match results.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Find potential people matches given a person's name.
      tags:
      - People Match
      x-contentType: application/json;charset=utf-8
      x-accepts: application/json
  /factset-concordance/v2/people-task:
    post:
      description: |
        The "Bulk" workflow allows the user to create a People Concordance Task. Uploading of a Comma-Separated List file (.csv / UTF-8 encoding) with a list of names and attributes and creation of a task id is mandatory to start the process.
           The taskId is then used for reference in the /people-task-status and /people-decisions endpoints to receive results once the task is successful.The /people-task-status endpoint is to check the status of the Tasks as per the ids.
            A universeId must be included in request. If you do not have a universe created, reference the /universe endpoint.The bulk workflow supports a two way approach for the user.
          **The user can use these parameters in the following ways.**
            1.Filling all the required fields including the `personNameColumn`.(do not include `firstNameColumn`,`lastNameColumn` & `middleNameColumn`)
            2.Filling all the required fields excluding the `personNameColumn`.(Ensure atleast the `lastNameColumn` is filled)
      operationId: getPeopleTaskForList
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          multipart/form-data:
            schema:
              properties:
                universeId:
                  description: The id of the universe that entities should be mapped
                    to. Reference the `/universe` endpoint to create a universe, or
                    view available universes via `/universes`.
                  example: 1
                  type: integer
                taskName:
                  description: User defined name for the task that will be used to
                    name the output files.
                  example: test31
                  type: string
                inputFile:
                  description: |
                    The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.
                  format: binary
                  type: string
                clientIdColumn:
                  description: |
                    Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a "clientId". This clientId can be used to create custom mappings or references.
                  example: ClientId
                  type: string
                entityColumn:
                  description: |
                    Header name of the column in the input file that contains the Entity Name to be matched.
                  example: Microsoft
                  type: string
                firstNameColumn:
                  description: "First name of the person.**Do not include with `personNameColumn`**.\
                    \ \n"
                  example: Bill
                  type: string
                lastNameColumn:
                  description: |
                    Lat name of the person.**Do not include with `personNameColumn`**.
                  example: Gates
                  type: string
                middleNameColumn:
                  description: |
                    Middle name of the person.**Do not include within `personNameColumn`**.
                  example: Henry
                  type: string
                personNameColumn:
                  description: |
                    Header name of the column in the input file that contains the name of the person to be matched. **Do not include with `firstNameColumn` and `lastNameColumn`.**
                  example: Bill Gates
                  type: string
                priorityColumn:
                  description: |
                    Priority associated to the clientId. Used for manual mapping.
                  example: HIGH
                  type: string
                salutationColumn:
                  description: |
                    The salutation of the person.**Do not include with `personNameColumn`**.
                  example: Mr.
                  type: string
                suffixColumn:
                  description: |
                    A name suffix, that follows a person's full name and provides additional information about the person.**Do not include with `personNameColumn`**.
                  example: HIGH
                  type: string
              required:
              - clientIdColumn
              - entityColumn
              - inputFile
              - taskName
              - universeId
              type: object
        description: People Request object. Used to create an People Task.
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Pending Task:
                  $ref: '#/components/examples/PeopleTask'
              schema:
                $ref: '#/components/schemas/PeopleTaskResponse'
          description: OK. The People Task creation is submitted.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Create a People Concordance Task.
      tags:
      - People Match - Bulk
      x-contentType: multipart/form-data
      x-accepts: application/json
  /factset-concordance/v2/people-task-status:
    get:
      description: |
        Pulls the **status** for ALL the People Tasks submitted by a client within the last 30 days, and related details such as task duration and decision rates. Specific Tasks can also be retrieved by using the _taskId_ parameter.<p>Status types include -
          * PENDING - The task has not yet started.
          * IN_PROGRESS - The task is submitted and decisions are in progress.
          * SUCCESS - The task was successful! Move to the /people-decisions endpoint to retrieve decisions.
          * FAILURE - The task failed. Reach out to FactSet Support for assistance.
          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
          * ABORTED - The task was aborted.
      operationId: getPeopleTaskStatus
      parameters:
      - description: Concordance Task Identifier. The taskId is created in response
          from the /people-task endpoint.
        example: 31589
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          type: integer
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Filter on the status of the Concordance Tasks. Default is no filter.
            * PENDING - The task has not yet started
            * IN_PROGRESS - The task is submitted and decisions are in progress.
            * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.
            * FAILURE - The task failed. Reach out to FactSet Support for assistance.
            * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
            * ABORTED - The task was aborted.
        explode: false
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - PENDING
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
            - BAD_REQUEST
            - ABORTED
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                Successful Entity Task:
                  $ref: '#/components/examples/SuccessfulPeopleTasks'
                Pending Task:
                  $ref: '#/components/examples/PendingTask1'
                Bad Task:
                  $ref: '#/components/examples/BadTasks1'
                Failed Task:
                  $ref: '#/components/examples/FailedTasks1'
              schema:
                $ref: '#/components/schemas/PeopleTaskStatusResponse'
          description: Response object for People Task Status endpoint.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Get the Status of the People Tasks.
      tags:
      - People Match - Bulk
      x-accepts: application/json
  /factset-concordance/v2/people-decisions:
    get:
      description: |
        Retrieves the `Decision` objects for an People Task (taskId). The decisions do not include all candidates, but rather the results of concording the requested list of names included in the input file. Mapped entities will include a FactSet Entity Identifier (-E). Results will be saved to the `universeId` specified in the input file.
      operationId: getPeopleDecisions
      parameters:
      - description: Concordance Task Identifier. The taskId is created in response
          from the /people-task endpoint.
        example: 31589
        explode: true
        in: query
        name: taskId
        required: true
        schema:
          type: integer
        style: form
      - description: Starting row for records to return or rows to skip.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limits the number of records in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                People Decisions:
                  $ref: '#/components/examples/PeopleDecisions'
              schema:
                $ref: '#/components/schemas/PeopleDecisionsResponse'
          description: Response object for Entity Decisions endpoint.
        "400":
          content:
            application/json:
              examples:
                Bad Request - Missing Required Parameter:
                  $ref: '#/components/examples/badRequestRequiredParameter'
                Bad Request - Invalid Parameter:
                  $ref: '#/components/examples/badRequestInvalidParameters'
                Bad Request - Malformed JSON:
                  $ref: '#/components/examples/badRequestMalformedJSON'
                Bad Request - Read Timeout:
                  $ref: '#/components/examples/badRequestReadTimeout'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request. This can occur for several reasons. Please review
            the "message" for more details.
        "401":
          content:
            application/json:
              examples:
                Bad Request - Date Format:
                  $ref: '#/components/examples/unauthenticated'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and
            have successfully generated an API KEY for the IP range you are connecting
            from. For more help, select the **Report Issue** in the top right corner
            of this Developer Portal specification card and choose Connectivity 401
            or 403 Responses.
        "403":
          content:
            application/json:
              examples:
                Bad Request - forbidden:
                  $ref: '#/components/examples/forbidden'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: The USERNAME-SERIAL attempted to request the endpoint is not
            authorized to access. The request was a legal request, but the server
            is refusing to respond. Please reach out to FactSet Account Team for assistance
            with authorization.
        "415":
          content:
            application/json:
              examples:
                Bad Request - Unsupported Media Type:
                  $ref: '#/components/examples/unsupportedMediaType'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unsupported Media Type. This error may be returned when the
            caller sends a resource in a format that is not accepted by the server.
            This can be fixed by ensuring that Content-Type header is set to the correct
            value. In this instance, "application/json" would be the appropriate value.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error - Not Writable:
                  $ref: '#/components/examples/notWritable'
                Internal Server Error - General Exception:
                  $ref: '#/components/examples/generalException'
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      summary: Get the decisions of matches for the requested taskId.
      tags:
      - People Match - Bulk
      x-accepts: application/json
components:
  examples:
    EntityRequests:
      description: Example of a request to find a match for a list of Companies.
      summary: Entity Match Request
      value:
        input:
        - clientId: abc-123
          name: FactSet
          country: US
          state: CT
          url: www.factset.com
        - clientId: def-453
          name: FactSet
          country: DE
        includeEntityType:
        - SUB
        excludeEntityType:
        - PVT
        includeParent: true
    EntityMatches:
      description: Entity Matches
      value:
        data:
        - taskId: null
          rowIndex: 0
          matchFlag: true
          entityId: 0016YD-E
          entityName: FactSet Research Systems, Inc.
          url: www.factset.com
          mapStatus: MAPPED
          similarityScore: 1
          confidenceScore: 1
          countryCode: US
          countryName: United States
          stateProvinceCode: CT
          stateName: Connecticut
          sicCode: 7374
          entityTypeCode: PUB
          entityTypeDescription: Public Company
          entitySubTypeCode: CP
          locationCity: Norwalk
          regionName: North America
          factsetIndustryCode: 3305
          factsetIndustryName: Data Processing Services
          factsetSectorCode: 3300
          factsetSectorName: Technology Services
          parentName: null,
          parentMatchFlag: null
          clientId: abc-123
          clientName: factset
          clientCountry: US
          clientState: CT
          clientUrl: www.factset.com
          nameMatchString: factset
          nameMatchSource: Domain Name
    SuccessfulEntityTasks:
      description: Example of the status of a successful Entity Concordance Task.
      summary: Successful Entity Task
      value:
        data:
        - taskId: 31
          taskName: test
          taskAction: processfile
          status: SUCCESS
          inputFile: test_427608.csv
          clientIdColumn: id
          nameColumn: name
          countryColumn: country
          stateColumn: state
          urlColumn: url
          includeEntityType:
          - PUB
          excludeEntityType: null
          includeEntitySubType:
          - CP
          excludeEntitySubType: null
          hasResult: true
          taskSubmitTime: 2020-12-16T16:22:06Z
          message: null
          inputCount: 4
          mappedCount: 3
          unmappedCount: 1
          indeterminateCount: 0
          processStartTime: 2020-12-16T16:22:09Z
          processDuration: 38.68899
          tryCount: null
          decisionRate: 0.75
          error: null
          errorTitle: null
          userSerial: FDSQAR_C-000000
          userFullName: Jane Smith
          universeId: 1
          universeName: My Universe
    SuccessfulPeopleTasks:
      description: Example of the status of a successful People Concordance Task.
      summary: Successful People Task
      value:
        data:
        - clientColumn: ClientId
          decisionRate: 0.3334
          entityColumn: Company1
          firstNameColumn: null
          hasResult: true
          inputCount: 6
          inputFile: test31.csv
          lastNameColumn: null
          mappedCount: 5
          middleNameColumn: null
          personNameColumn: PersonName
          priorityColumn: null
          processDuration: 0.98598
          processStartTime: 2020-07-03T15:12:06.722000+00:00
          salutationColumn: null
          status: SUCCESS
          suffixColumn: null
          taskAction: processfile
          taskId: 31
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21+00:00
          userFullName: Jane Smith
          userSerial: FDSQAR_C-000000
    PeopleTask:
      value:
        data:
          clientIdColumn: id1,
          entityColumn: Company,
          firstNameColumn: null
          hasResult: true
          inputFile: Analysis14
          lastNameColumn: null
          middleNameColumn: null
          personNameColumn: Bill Gates
          priorityColumn: null
          salutationColumn: Mr
          status: PENDING
          suffixColumn: null
          taskAction: processfile
          taskId: 354840
          taskName: Analysis14
          taskSubmitTime: 2022-03-01T04:27:32.000+00:00
          universeId: 735
          universeName: Jane Smith
          userSerial: FDSQAR_C-000000
    PendingTask:
      description: Example of the status of a Task pending input file.
      summary: Status pending input file
      value:
        data:
          taskId: 31
          taskName: test
          taskAction: processfile
          status: PENDING
          inputFile: test_427608.csv
          clientIdColumn: id
          nameColumn: name
          countryColumn: country
          stateColumn: state
          urlColumn: url
          includeEntityType:
          - PUB
          excludeEntityType: null
          includeEntitySubType:
          - CP
          excludeEntitySubType: null
          hasResult: false
          taskSubmitTime: 2020-12-16T16:22:06Z
          message: null
          inputCount: null
          mappedCount: null
          unmappedCount: null
          indeterminateCount: null
          processStartTime: null
          processDuration: null
          tryCount: null
          decisionRate: null
          error: null
          errorTitle: null
          userSerial: FDSQAR_C-000000
          userFullName: Jane Smith
          universeId: 1
          universeName: My Universe
    PendingTasks:
      description: Example of the status of a Task pending input file.
      summary: Status pending input file
      value:
        data:
        - taskId: 31
          taskName: test
          taskAction: processfile
          status: PENDING
          inputFile: test_427608.csv
          clientIdColumn: id
          nameColumn: name
          countryColumn: country
          stateColumn: state
          urlColumn: url
          includeEntityType:
          - PUB
          excludeEntityType: null
          includeEntitySubType:
          - CP
          excludeEntitySubType: null
          hasResult: false
          taskSubmitTime: 2020-12-16T16:22:06Z
          message: null
          inputCount: null
          mappedCount: null
          unmappedCount: null
          indeterminateCount: null
          processStartTime: null
          processDuration: null
          tryCount: null
          decisionRate: null
          error: null
          errorTitle: null
          userSerial: FDSQAR_C-000000
          userFullName: Jane Smith
          universeId: 1
          universeName: My Universe
    PendingTask1:
      description: Example of the status of a Task pending input file.
      summary: Status pending input file
      value:
        data:
        - clientColumn: ClientId
          decisionRate: null
          entityColumn: Entity
          error: null
          errorTitle: null
          firstNameColumn: firstName
          hasResult": true
          indeterminateCount: 1
          inputCount: 11
          inputFile: test31.csv
          lastNameColumn: Lastname
          mappedCount: 8
          message: Waiting for the input file
          middleNameColumn: Middlename
          personNameColumn: PersonName
          priorityColumn: Priority
          processDuration: 1.51603
          processStartTime: 2020-07-03T15:12:06.722000+00:00
          salutationColumn: Salutation
          status: PENDING
          suffixColumn: Suffix
          taskAction: processfile
          taskId: 31
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21+00:00
          tryCount: 3
          universeId: 1
          universeName: My Universe
          unmappedCount: 2
          userFullName: Jane Smith
          userSerial: FDSQAR_C-000000
    BadTasks:
      description: Example of the status of a Task with a bad request.
      summary: Status for bad request
      value:
        data:
        - taskId: 31
          taskName: test
          taskAction: processfile
          status: BAD_REQUEST
          inputFile: test_427608.csv
          clientIdColumn: id
          nameColumn: name
          countryColumn: country
          stateColumn: state
          urlColumn: url
          includeEntityType:
          - PUB
          excludeEntityType: null
          includeEntitySubType:
          - CP
          excludeEntitySubType: null
          hasResult: false
          taskSubmitTime: 2020-12-17T20:43:42Z
          message: null
          inputCount: null
          mappedCount: null
          unmappedCount: null
          indeterminateCount: null
          processStartTime: 2020-12-17T20:44:00Z
          processDuration: 0
          tryCount: null
          decisionRate: null
          error: The Name column "name", passed as parameter, does not exist in the
            input file.
          errorTitle: Wrong parameter
          userSerial: FDSQAR_C-000000
          userFullName: Jane Smith
          universeId: 1
          universeName: My Universe
    BadTasks1:
      description: Example of the status of a Task with a bad request.
      summary: Status for bad request
      value:
        data:
          clientColumn: ClientId
          decisionRate: null
          entityColumn: Entity
          error: null
          errorTitle: null
          firstNameColumn: firstName
          hasResult": true
          indeterminateCount: 1
          inputCount: 11
          inputFile: test31.csv
          lastNameColumn: Lastname
          mappedCount: 8
          message: Waiting for the input file
          middleNameColumn: Middlename
          personNameColumn: PersonName
          priorityColumn: Priority
          processDuration: 1.51603
          processStartTime: 2020-07-03T15:12:06.722000+00:00
          salutationColumn: Salutation
          status: PENDING
          suffixColumn: Suffix
          taskAction: processfile
          taskId: 31
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21+00:00
          tryCount: 3
          universeId: 1
          universeName: My Universe
          unmappedCount: 2
          userFullName: Jane Smith
          userSerial: FDSQAR_C-000000
    FailedTasks:
      description: Example of the status of a Task with a failed request.
      summary: Status for failed request
      value:
        data:
        - taskId: 31
          taskName: test
          taskAction: processfile
          status: FAILURE
          inputFile: test_427608.csv
          clientIdColumn: id
          nameColumn: name
          countryColumn: country
          stateColumn: state
          urlColumn: url
          includeEntityType:
          - PUB
          excludeEntityType: null
          includeEntitySubType:
          - CP
          excludeEntitySubType: null
          hasResult: false
          taskSubmitTime: 2020-12-17T20:43:42Z
          message: null
          inputCount: null
          mappedCount: null
          unmappedCount: null
          indeterminateCount: null
          processStartTime: 2020-12-17T20:44:00Z
          processDuration: 0
          tryCount: null
          decisionRate: null
          error: different refererence used by concordance service
          errorTitle: compute_candidates
          userSerial: FDSQAR_C-000000
          userFullName: Jane Smith
          universeId: 1
          universeName: My Universe
    FailedTasks1:
      description: Example of the status of a Task with a failed request.
      summary: Status for failed request
      value:
        data:
          clientColumn: ClientId
          decisionRate: null
          entityColumn: Entity
          error: null
          errorTitle: null
          firstNameColumn: firstName
          hasResult": false
          indeterminateCount: 1
          inputCount: 11
          inputFile: test31.csv
          lastNameColumn: Lastname
          mappedCount: null
          message: Waiting for the input file
          middleNameColumn: Middlename
          personNameColumn: PersonName
          priorityColumn: Priority
          processDuration: 1.51603
          processStartTime: 2020-07-03T15:12:06.722000+00:00
          salutationColumn: Salutation
          status: PENDING
          suffixColumn: Suffix
          taskAction: processfile
          taskId: 31
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21+00:00
          tryCount: 3
          universeId: 1
          universeName: My Universe
          unmappedCount: 2
          userFullName: Jane Smith
          userSerial: FDSQAR_C-000000
    EntityDecisionsFile:
      description: An Entity Concordance Task Decision File.
      value: |
        rowIndex,clientId,requestName,requestCountry,name,requestUrl,entityType,mapStatus,similarityScore,confidenceScore
        0,FDS-US,FactSet,"FactSet Research Systems, Inc.",US,www.factset.com,PUB,MATCHED,1.0,1.0
        1,FDS-DE,FactSet,FactSet GmbH,DE,,SUB,MATCHED,1.0,1.0
    EntityDecisions:
      description: Entity Decisions
      value:
        data:
        - taskId: 427749
          rowIndex: 0
          matchFlag: null
          entityId: 0016YD-E
          entityName: FactSet Research Systems, Inc.
          url: www.factset.com
          mapStatus: MAPPED
          similarityScore: 1
          confidenceScore: 1
          countryCode: US
          countryName: United States
          stateProvinceCode: CT
          stateName: Connecticut
          sicCode: 7374
          entityTypeCode: PUB
          entityTypeDescription: Public Company
          entitySubTypeCode: CP
          locationCity: Norwalk
          regionName: North America
          factsetIndustryCode: 3305
          factsetIndustryName: Data Processing Services
          factsetSectorCode: 3300
          factsetSectorName: Technology Services
          parentName: null,
          parentMatchFlag: null
          clientId: abc-123
          clientName: factset
          clientCountry: US
          clientState: CT
          clientUrl: www.factset.com
          nameMatchString: factset
          nameMatchSource: Domain Name
    NotFound:
      description: 404 - Not Found
      value:
        status: Not Found
        timestamp: 2019-11-01T11:09:41.918Z
        path: /factset-concordance/v2/fakeendpoint
        message: '''/factset-concordance/v2/fake-endpoint'' is not a valid endpoint'
        subErrors: null
    EntityUniverse:
      description: Entity Universe response from v2 endpoint
      value:
        data:
        - entityId: 00345-E
          entityName: FactSet Inc.
          clientId: abc-123
          clientName: factset
          clientCountry: us
          clientState: ct
          clientUrl: www.factset.com
          createdTime: 2020-09-04T20:14:13.123Z
          updatedTime: 2020-10-04T20:14:13.123Z
          mapStatus: MAPPED
          universeId: 1
        - entityId: null
          entityName: null
          clientId: def-456
          clientName: apple
          clientCountry: us
          clientState: ca
          clientUrl: www.apple.com
          createdTime: 2020-07-04T20:14:13.123Z
          updatedTime: 2020-08-04T20:14:13.123Z
          mapStatus: UNMAPPED
          universeId: 1
    PeopleUniverse:
      description: People Universe response from v2 endpoint
      value:
        data:
        - clientEntity: Microsoft
          clientFirstName: William
          clientId: BGA-123
          clientLastName: Gates
          clientMiddleName: Henry
          clientPersonName: Bill Gates
          clientPriority: HIGH
          clientSalutation: Mr
          clientSuffix: III
          createdTime: 2020-06-24T22:02:21.000Z
          mapStatus: MAPPED
          personId: 00118X-E
          personName: GATES WILLIAM H III
          universeId: 1
          updatedTime: 2020-06-24T22:02:21.000Z
        - clientEntity: Microsoft
          clientFirstName: William
          clientId: BGA-123
          clientLastName: Gates
          clientMiddleName: Henry
          clientPersonName: Bill Gates
          clientPriority: HIGH
          clientSalutation: Mr
          clientSuffix: III
          createdTime: 2020-06-24T22:02:21.000Z
          mapStatus: MAPPED
          personId: 00118X-E
          personName: GATES WILLIAM H III
          universeId: 1
          updatedTime: 2020-06-24T22:02:21.000Z
    EntityResponse:
      description: Entity Response
      value:
        data:
          entityId: 00345-E
          entityName: FactSet Inc.
          clientId: abc-123
          clientName: factset
          clientCountry: US
          clientState: CT
          clientUrl: www.factset.com
          createdTime: 2020:09:04T20:14:13.123
          updatedTime: 2020:10:04T20:14:13.123
          mapStatus: MAPPED
          universeId: 1
    EntityMappingRequest:
      description: Entity Mapping Request
      value:
        clientId: abc-123
        entityId: 0016YD-E
        clientName: FactSet
        clientCountry: US
        clientState: CT
        clientUrl: www.factset.com
    PeopleResponse:
      description: People Response
      value:
        data:
          clientEntity: Microsoft
          clientFirstName: William
          clientId: BGA-123
          clientLastName: Gates
          clientMiddleName: Henry
          clientPersonName: Bill Gates
          clientPriority: HIGH
          clientSalutation: Mr
          clientSuffix: III
          createdTime: 2020:09:04T20:14:13.123
          mapStatus: MAPPED
          personId: 00118X-E
          personName: GATES WILLIAM H III
          universeId: 1
          updatedTime: 2020:09:04T20:14:13.123
    PeopleMappingRequest:
      description: People Mapping Request
      value:
        clientEntity: Microsoft
        clientFirstName: William
        clientId: BGA-123
        clientLastName: Gates
        clientMiddleName: Henry
        clientPriority: HIGH
        clientSalutation: Mr
        clientSuffix: III
        personId: 00118X-E
        universeId: 1
    EntityUniverseStatsResponse:
      description: |
        Statistics on a universe
      value:
        data:
          totalCount: 10
          unmappedCount: 1
          mappedCount: 8
          indeterminateCount: 1
          universeId: 1
    PeopleMatches:
      description: People Matches
      value:
        data:
        - activeRole: true,
          clientEntity: Microsoft,
          clientPersonName: Phil Snow
          entity: FACTSET RESEARCH SYSTEMS INC
          firstName: Frederick
          lastName: Snow
          mapStatus: MAPPED
          matchFlag: true
          middleName: Philip
          nameMatchSource: Presentation Name
          nameMatchString: philip snow
          personId: 0DPHLH-E
          personName: SNOW FREDERICK PHILIP
          rowIndex: 0
          similarityScore: 1
          universeId: 1
    PeopleDecisions:
      description: People Decisions
      value:
        data:
          activeRole: false
          clientEntity: Tesla
          clientId: M7
          clientPersonName: Elon Musk
          email: ""
          entity: TESLA INC
          firstName: Elon
          lastName: Musk
          mapStatus: MAPPED
          middleName: Reeve
          nameMatchSource: Institutional Affliation
          nameMatchString: Elon Reeve Musk
          personId: 05H8B8-E
          personName: MUSK ELON REEVE
          rowIndex: 0
          similarityScore: 1
          suffix: ""
          taskId: 353453
          title: Technoking of Tesla
    badRequestRequiredParameter:
      description: This error message occurs when the request does not include the
        required parameters. Required parameters are indicated with a red asterisks
        symbol in the specification file.
      summary: Bad Request - Required Parameter Missing
      value:
        status: Bad Request
        timestamp: 2020-06-30 13:22:09.053
        path: /factset-concordance/v2/{endpoint}
        message: The parameter 'name' is required and may not be empty.
        subErrors: null
    badRequestInvalidParameters:
      description: This error message occurs when a request parameter is not recognized
        by the service. Please revise your request to include only the parameters
        listed in the specification. Typical errors are spelling mistakes and use
        of improper casing.
      summary: Bad Request - Passing Invalid Parameter
      value:
        status: Bad Request
        timestamp: 2020-07-23 11:03:40.765
        path: /factset-concordance/v2/{endpoint}
        message: 'Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please
          modify your request to use parameters outlined in the specification for
          this endpoint.'
        subErrors: null
    badRequestMalformedJSON:
      description: This error may be returned when the request body is specified as
        JSON. But is not in proper JSON format.
      summary: Bad Request - Malformed JSON Request
      value:
        status: Bad Request
        timestamp: 2020-07-02 11:59:09.649
        path: /factset-concordance/v2/{endpoint}
        message: Malformed JSON Request
        subErrors: null
    badRequestReadTimeout:
      description: This error may be returned if it takes more than 29 seconds to
        complete.
      summary: Bad Request - Read Timeout
      value:
        status: Bad Request
        timestamp: 2020-07-02 16:18:38.949
        path: /factset-concordance/v2/{endpoint}
        message: The request took too long. Try again with a smaller request.
        subErrors: null
    unauthenticated:
      description: This occurs when a user is not properly authenticated or recognized
        by the service. Please double check the USERNAME-SERIAL and API-Key used to
        request and ensure you are within the IP range specified for the Key. Report
        Issue under 401 error for help with troubleshooting.
      summary: User Authentication Failed
      value:
        status: User Authentication Failed
        timestamp: 2020-07-02 16:08:07.945
        path: /factset-concordance/v2/{endpoint}
        message: User Authentication Failed.
        subErrors: null
    forbidden:
      description: The USERNAME-SERIAL attempted to request the endpoint which is
        not authorized to access. The request was a legal request, but the server
        is refusing to respond. Please reach out to FactSet Account Team for assistance
        with authorization.
      summary: Forbidden
      value:
        status: Forbidden
        timestamp: 2020-07-02 17:21:52.197
        path: /factset-concordance/v2/{endpoint}
        message: User is not authorized for the id requested, please reach out to
          FactSet for support
        subErrors: null
    unsupportedMediaType:
      description: This bad request occurs when the media type passed in the request
        is not supported. Currently the APIs only support 'application/json'.
      summary: Unsupported Media Type
      value:
        status: Unsupported Media Type
        timestamp: 2020-07-02 09:42:27.237
        path: /factset-concordance/v2/{endpoint}
        message: text/html media type is not supported. Supported media types are
          application/json.
        subErrors: null
    notWritable:
      description: This error may be returned when the server encounters an error
        writing the JSON response.
      summary: Internal Server Error - Not Writable
      value:
        status: Internal Server Error
        timestamp: 2020-07-02 09:48:29.18
        path: /factset-concordance/v2/{endpoint}
        message: Error writing JSON output
        subErrors: null
    generalException:
      description: This is the most general error that can be returned to by the service.
        Please `Report Issue` to FactSet.
      summary: Internal Server Error - General Exception
      value:
        status: Internal Server Error
        timestamp: 2020-07-02 10:36:01.944
        path: /factset-concordance/v2/{endpoint}
        message: Unexpected error
        subErrors: null
  parameters:
    name:
      description: Name of Entity to match.
      example: FactSet
      explode: true
      in: query
      name: name
      required: true
      schema:
        type: string
      style: form
    country:
      description: ISO2 country code corresponding to the entity name that is used
        when evaluating candidates for a match. For a list of ISO2 Country codes,
        visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).
      example: US
      explode: true
      in: query
      name: country
      required: false
      schema:
        maxLength: 2
        minLength: 2
        type: string
      style: form
    state:
      description: Two-character state code corresponding to the entity name that
        is used when evaluating candidates for a match. Currently, only US state codes
        are supported.
      example: CT
      explode: true
      in: query
      name: state
      required: false
      schema:
        maxLength: 2
        minLength: 2
        type: string
      style: form
    url:
      description: URL corresponding to the entity name that is used when evaluating
        candidates for a match.
      explode: true
      in: query
      name: url
      required: false
      schema:
        type: string
      style: form
    includeEntityType:
      description: |
        Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas.
          |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
          |---|---|---|---|
          |ABS|Asset-Backed||MED|Broadcast Call Sign|
          |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
          |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
          |CMD|Commodity||MUT|Mutual Fd-Open End|
          |COL|College/University||NPO|Non-Profit Organization|
          |CUR|Currency||OPD|Operating Division|
          |ESP|Emp Stk Ownership Plan||OTH|Other|
          |EXT|Extinct||PEF|Pension Fund|
          |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
          |FND|Foundation/Endowment||PUB|Public Company|
          |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
          |FRX|ForEx||PVT|Private Company|
          |GOV|Government||SOV|Sovereign Wealth Fund|
          |HED|Hedge Fund||SUB|Subsidiary|
          |HOL|Holding Company||TRU|Trust/Trustee|
          |IDX|Index||UMB|Umbrella Fund|
          |VEN|Venture Capital Fund||JVT|Joint Venture|
      explode: true
      in: query
      name: includeEntityType
      required: false
      schema:
        items:
          example: PUB
          maxLength: 3
          minLength: 3
          type: string
        type: array
      style: form
    excludeEntityType:
      description: |
        Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.
          |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
          |---|---|---|---|
        |ABS|Asset-Backed||MED|Broadcast Call Sign|
        |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
        |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
        |CMD|Commodity||MUT|Mutual Fd-Open End|
        |COL|College/University||NPO|Non-Profit Organization|
        |CUR|Currency||OPD|Operating Division|
        |ESP|Emp Stk Ownership Plan||OTH|Other|
        |EXT|Extinct||PEF|Pension Fund|
        |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
        |FND|Foundation/Endowment||PUB|Public Company|
        |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
        |FRX|ForEx||PVT|Private Company|
        |GOV|Government||SOV|Sovereign Wealth Fund|
        |HED|Hedge Fund||SUB|Subsidiary|
        |HOL|Holding Company||TRU|Trust/Trustee|
        |IDX|Index||UMB|Umbrella Fund|
        |VEN|Venture Capital Fund||JVT|Joint Venture|
      explode: true
      in: query
      name: excludeEntityType
      required: false
      schema:
        items:
          example: EXT
          maxLength: 3
          minLength: 3
          type: string
        type: array
      style: form
    includeEntitySubType:
      description: |
        Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.
          |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
          |---|---|---|---|
          |AR|Arbitrage|IC|Investment Company|
          |BM|Bank Investment Division|IN|Insurance Company|
          |BR|Broker|MF|Mutual Fund Manager|
          |CP|Corporate|ML|Master Ltd Part|
          |CU|Custodial|MM|Market Maker|
          |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
          |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
          |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
          |FS|Fund Distributor|RE|Research Firm|
          |FU|Fund|SB|Subsidiary Branch|
          |FY|Family Office|ST|Stock Borrowing/Lending|
          |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
          |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
          |IA|Investment Adviser|
          |IB|Investment Banking|
      explode: true
      in: query
      name: includeEntitySubType
      required: false
      schema:
        items:
          example: PR
          maxLength: 2
          minLength: 2
          type: string
        type: array
      style: form
    excludeEntitySubType:
      description: |
        Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.
        |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
        |---|---|---|---|
        |AR|Arbitrage|IC|Investment Company|
        |BM|Bank Investment Division|IN|Insurance Company|
        |BR|Broker|MF|Mutual Fund Manager|
        |CP|Corporate|ML|Master Ltd Part|
        |CU|Custodial|MM|Market Maker|
        |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
        |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
        |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
        |FS|Fund Distributor|RE|Research Firm|
        |FU|Fund|SB|Subsidiary Branch|
        |FY|Family Office|ST|Stock Borrowing/Lending|
        |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
        |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
        |IA|Investment Adviser|
        |IB|Investment Banking|
      explode: true
      in: query
      name: excludeEntitySubType
      required: false
      schema:
        items:
          example: HF
          maxLength: 2
          minLength: 2
          type: string
        type: array
      style: form
    addParent:
      description: Flag to include parent entities in the list of candidates. This
        parameter does not influence the match result.
      explode: true
      in: query
      name: includeParent
      required: false
      schema:
        default: false
        example: false
        type: boolean
      style: form
    taskDecisionId:
      description: Concordance Task Identifier. The taskId is created in response
        from the /entity-task endpoint.
      example: 31589
      explode: true
      in: query
      name: taskId
      required: true
      schema:
        type: integer
      style: form
    taskStatusId:
      description: Concordance Task Identifier. The taskId is created in response
        from the /entity-task endpoint.
      example: 31589
      explode: true
      in: query
      name: taskId
      required: false
      schema:
        type: integer
      style: form
    offset:
      description: Starting row for records to return or rows to skip.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
      style: form
    limit:
      description: Limits the number of records in the response.
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    status:
      description: |
        Filter on the status of the Concordance Tasks. Default is no filter.
          * PENDING - The task has not yet started
          * IN_PROGRESS - The task is submitted and decisions are in progress.
          * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.
          * FAILURE - The task failed. Reach out to FactSet Support for assistance.
          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
          * ABORTED - The task was aborted.
      explode: false
      in: query
      name: status
      required: false
      schema:
        items:
          enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
          - BAD_REQUEST
          - ABORTED
          type: string
        type: array
      style: form
    mapStatus:
      description: |
        Filter by the Entity Decisions that have the specified mapStatus, where -
          * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)
          * UNMAPPED - The requested Entity Name is unmapped by FactSet.
          * INDETERMINATE - The requested Entity Name was unable to make a mapping.
      explode: true
      in: query
      name: mapStatus
      required: false
      schema:
        example: MAPPED
        items:
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          type: string
        type: array
      style: form
    clientIdFilter:
      description: |
        Filter by the clientId(s) created by the user in a previous mapping.
      example:
      - abc-123
      - def-456
      explode: false
      in: query
      name: clientId
      required: false
      schema:
        items:
          example: EXT
          type: string
        type: array
      style: form
    clientId:
      description: |
        Filter by the clientId(s) created by the user in a previous mapping.
      example:
      - abc-123
      - def-456
      explode: false
      in: query
      name: clientId
      required: false
      schema:
        items:
          example: EXT
          type: string
        type: array
      style: form
    universeId:
      description: Universe identifier. *To create a universe, use the `/universe'
        endpoint.*
      example: 1
      explode: true
      in: query
      name: universeId
      required: false
      schema:
        type: integer
      style: form
    universeType:
      description: Universe Type.
      example: ENTITY
      explode: false
      in: query
      name: universeType
      required: false
      schema:
        enum:
        - ENTITY
        - PEOPLE
        type: string
      style: form
    universeIdRequired:
      description: Universe identifier. *To create a universe, use the `/universe'
        endpoint.*
      example: 1
      explode: true
      in: query
      name: universeId
      required: true
      schema:
        type: integer
      style: form
    universeStatisticsRequired:
      description: Universe identifier. *To create a universe, use the `/universe'
        endpoint.*
      example: 1
      explode: true
      in: query
      name: universeId
      required: true
      schema:
        type: integer
      style: form
    personName:
      description: Name of Person to match.
      example: Bill Gates
      explode: true
      in: query
      name: personName
      required: false
      schema:
        type: string
      style: form
    salutation:
      description: Title in person's name. This parameter should not be provided when
        the person name is provided as the input.
      example: Mr
      explode: true
      in: query
      name: salutation
      required: false
      schema:
        type: string
      style: form
    firstName:
      description: First name of person. This parameter should not be provided when
        the person name is provided as the input.
      example: Bill
      explode: true
      in: query
      name: firstName
      required: false
      schema:
        type: string
      style: form
    middleName:
      description: Middle name of person.This parameter should not be provided when
        the person name is provided as the input.
      example: Henry
      explode: true
      in: query
      name: middleName
      required: false
      schema:
        type: string
      style: form
    lastName:
      description: Last name of person. This parameter should not be provided when
        the person name is provided as the input.
      example: Gates
      explode: true
      in: query
      name: lastName
      required: false
      schema:
        type: string
      style: form
    suffix:
      description: Suffix in person's name. This parameter should not be provided
        when the person name is provided as the input.
      example: III
      explode: true
      in: query
      name: suffix
      required: false
      schema:
        type: string
      style: form
    entity:
      description: Entity the person is associated with. It is used to filter the
        candidates before taking a match decision. Can be entity ID or name. The supported
        entity types match the what is supported via the /company match.
      example: Microsoft
      explode: true
      in: query
      name: entity
      required: true
      schema:
        type: string
      style: form
    peopleTaskDecisionId:
      description: Concordance Task Identifier. The taskId is created in response
        from the /people-task endpoint.
      example: 31589
      explode: true
      in: query
      name: taskId
      required: true
      schema:
        type: integer
      style: form
    peopleTaskStatusId:
      description: Concordance Task Identifier. The taskId is created in response
        from the /people-task endpoint.
      example: 31589
      explode: true
      in: query
      name: taskId
      required: false
      schema:
        type: integer
      style: form
    peopleOffset:
      description: Starting row for records to return or rows to skip.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
      style: form
    peopleLimit:
      description: Limits the number of records in the response.
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    peopleStatus:
      description: |
        Filter on the status of the Concordance Tasks. Default is no filter.
          * PENDING - The task has not yet started
          * IN_PROGRESS - The task is submitted and decisions are in progress.
          * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.
          * FAILURE - The task failed. Reach out to FactSet Support for assistance.
          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.
          * ABORTED - The task was aborted.
      explode: false
      in: query
      name: status
      required: false
      schema:
        items:
          enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
          - BAD_REQUEST
          - ABORTED
          type: string
        type: array
      style: form
  requestBodies:
    EntityMatchRequestV2:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/EntityMatchRequest'
      description: A request to match a Entity.
      required: true
    EntityMappingRequestV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityMappingRequest'
      description: A request to create a single mapping.
      required: true
    PeopleMappingRequestV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleMappingRequest'
      description: A request to create a single mapping.
      required: true
    EntityMappingDeleteRequestV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityMappingDeleteRequest'
      description: A request to delete entity mappings specified by the client
      required: true
    PeopleMappingDeleteRequestV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityMappingDeleteRequest'
      description: A request to delete entity mappings specified by the client
      required: true
    EntityUniverseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityUniverseRequest'
      description: A request to fetch all entities of a given universe
      required: true
    CreateUniverseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUniverseRequest'
      description: A request to create a user's universe
      required: true
    UpdateUniverseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUniverseRequest'
      description: A request to update a user's universe
      required: true
    PeopleUniverseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleUniverseRequest'
      description: A request to fetch all entities of a given universe
      required: true
    SnowflakeEntityMatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnowflakeEntityMatchRequest'
      description: A request to match an entity name and its attributes within Snowflake.
      required: true
    PeopleMatchRequestV2:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/PeopleMatchRequest'
      description: A request to People match.
      required: true
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
  responses:
    "400":
      content:
        application/json:
          examples:
            Bad Request - Missing Required Parameter:
              $ref: '#/components/examples/badRequestRequiredParameter'
            Bad Request - Invalid Parameter:
              $ref: '#/components/examples/badRequestInvalidParameters'
            Bad Request - Malformed JSON:
              $ref: '#/components/examples/badRequestMalformedJSON'
            Bad Request - Read Timeout:
              $ref: '#/components/examples/badRequestReadTimeout'
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Bad Request. This can occur for several reasons. Please review
        the "message" for more details.
    "401":
      content:
        application/json:
          examples:
            Bad Request - Date Format:
              $ref: '#/components/examples/unauthenticated'
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have
        successfully generated an API KEY for the IP range you are connecting from.
        For more help, select the **Report Issue** in the top right corner of this
        Developer Portal specification card and choose Connectivity 401 or 403 Responses.
    "403":
      content:
        application/json:
          examples:
            Bad Request - forbidden:
              $ref: '#/components/examples/forbidden'
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized
        to access. The request was a legal request, but the server is refusing to
        respond. Please reach out to FactSet Account Team for assistance with authorization.
    "415":
      content:
        application/json:
          examples:
            Bad Request - Unsupported Media Type:
              $ref: '#/components/examples/unsupportedMediaType'
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Unsupported Media Type. This error may be returned when the caller
        sends a resource in a format that is not accepted by the server. This can
        be fixed by ensuring that Content-Type header is set to the correct value.
        In this instance, "application/json" would be the appropriate value.
    "500":
      content:
        application/json:
          examples:
            Internal Server Error - Not Writable:
              $ref: '#/components/examples/notWritable'
            Internal Server Error - General Exception:
              $ref: '#/components/examples/generalException'
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Internal Server Error.
    EntityMatchResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Entity Matches:
              $ref: '#/components/examples/EntityMatches'
          schema:
            $ref: '#/components/schemas/EntityMatchesResponse'
      description: Response containing Entity Match results.
    EntityTaskResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Pending Task:
              $ref: '#/components/examples/PendingTask'
          schema:
            $ref: '#/components/schemas/EntityTaskResponse'
      description: OK. The Entity Task creation is submitted.
    EntityTaskStatusResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Successful Entity Task:
              $ref: '#/components/examples/SuccessfulEntityTasks'
            Pending Task:
              $ref: '#/components/examples/PendingTasks'
            Bad Task:
              $ref: '#/components/examples/BadTasks'
            Failed Task:
              $ref: '#/components/examples/FailedTasks'
          schema:
            $ref: '#/components/schemas/EntityTaskStatusResponse'
      description: Response object for Task Status endpoint.
    EntityDecisionsResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Entity Decisions:
              $ref: '#/components/examples/EntityDecisions'
          schema:
            $ref: '#/components/schemas/EntityDecisionsResponse'
      description: Response object for Entity Decisions endpoint.
    EntityUniverseResponse:
      content:
        application/json:
          examples:
            CompanyUniverse:
              $ref: '#/components/examples/EntityUniverse'
          schema:
            $ref: '#/components/schemas/EntityUniverseResponse'
      description: Response object for FactSet Concordance Universe detail.
    PeopleUniverseResponse:
      content:
        application/json:
          examples:
            CompanyUniverse:
              $ref: '#/components/examples/PeopleUniverse'
          schema:
            $ref: '#/components/schemas/PeopleUniverseResponse'
      description: Response object for FactSet Concordance Universe detail.
    EntityUniverseStatisticsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityUniverseStatisticsResponse'
      description: Response object for mapping statistics for a universe
    universeStatisticsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/universeStatisticsResponse'
      description: Response object for mapping statistics for a universe
    UniversesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversesResponse'
      description: Metadata on multiple universes
    UniverseMetaResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniverseMetaResponse'
      description: Metadata on a single universe
    EntityMappingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityMappingResponse'
      description: Single entity mapping
    PeopleMappingResponse:
      content:
        application/json:
          examples:
            PeopleResponse:
              $ref: '#/components/examples/PeopleResponse'
          schema:
            $ref: '#/components/schemas/PeopleMappingResponse'
      description: Single people mapping
    EntityResponse:
      content:
        application/json:
          examples:
            EntityResponse:
              $ref: '#/components/examples/EntityResponse'
          schema:
            $ref: '#/components/schemas/EntityResponse'
      description: Response object for FactSet Concordance Entity.
    SnowflakeEntityMatchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnowflakeEntityMatchResponse'
      description: Response object for the entity-match object in a snowflake friendly
        response model.
    PeopleMatchResponse:
      content:
        application/json;charset=utf-8:
          examples:
            People Matches:
              $ref: '#/components/examples/PeopleMatches'
          schema:
            $ref: '#/components/schemas/PeopleMatchesResponse'
      description: Response containing People Match results.
    EntityMappingDeleteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityMappingDeleteResponse'
      description: Response object for the entity-match object in a snowflake friendly
        response model.
    PeopleMappingDeleteResponse:
      content:
        application/json:
          examples:
            PeopleResponse:
              $ref: '#/components/examples/PeopleResponse'
          schema:
            $ref: '#/components/schemas/PeopleMappingDeleteResponse'
      description: Response object for the entity-match object in a snowflake friendly
        response model.
    PeopleTaskResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Pending Task:
              $ref: '#/components/examples/PeopleTask'
          schema:
            $ref: '#/components/schemas/PeopleTaskResponse'
      description: OK. The People Task creation is submitted.
    PeopleTaskStatusResponse:
      content:
        application/json;charset=utf-8:
          examples:
            Successful Entity Task:
              $ref: '#/components/examples/SuccessfulPeopleTasks'
            Pending Task:
              $ref: '#/components/examples/PendingTask1'
            Bad Task:
              $ref: '#/components/examples/BadTasks1'
            Failed Task:
              $ref: '#/components/examples/FailedTasks1'
          schema:
            $ref: '#/components/schemas/PeopleTaskStatusResponse'
      description: Response object for People Task Status endpoint.
    PeopleDecisionsResponse:
      content:
        application/json;charset=utf-8:
          examples:
            People Decisions:
              $ref: '#/components/examples/PeopleDecisions'
          schema:
            $ref: '#/components/schemas/PeopleDecisionsResponse'
      description: Response object for Entity Decisions endpoint.
    ErrorResponse:
      content:
        application/json:
          examples:
            Not Found:
              $ref: '#/components/examples/NotFound'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Error Response
  schemas:
    EntityMatchRequest:
      description: Request object for a requesting multiple Entity Matches.
      example:
        input:
        - country: US
          clientId: abc-123
          name: Amazon
          state: CT
          url: www.amazon.com
        - country: US
          clientId: abc-123
          name: Amazon
          state: CT
          url: www.amazon.com
        - country: US
          clientId: abc-123
          name: Amazon
          state: CT
          url: www.amazon.com
        - country: US
          clientId: abc-123
          name: Amazon
          state: CT
          url: www.amazon.com
        - country: US
          clientId: abc-123
          name: Amazon
          state: CT
          url: www.amazon.com
        includeParent: false
        includeEntitySubType:
        - PR
        - PR
        excludeEntitySubType:
        - HF
        - HF
        includeEntityType:
        - PUB
        - PUB
        universeId: 1
        excludeEntityType:
        - EXT
        - EXT
      properties:
        input:
          items:
            $ref: '#/components/schemas/EntityMatchRequest_input'
          maxItems: 25
          minItems: 1
          type: array
        includeEntityType:
          description: |
            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas
              |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
              |---|---|---|---|
              |ABS|Asset-Backed||MED|Broadcast Call Sign|
              |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
              |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
              |CMD|Commodity||MUT|Mutual Fd-Open End|
              |COL|College/University||NPO|Non-Profit Organization|
              |CUR|Currency||OPD|Operating Division|
              |ESP|Emp Stk Ownership Plan||OTH|Other|
              |EXT|Extinct||PEF|Pension Fund|
              |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
              |FND|Foundation/Endowment||PUB|Public Company|
              |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
              |FRX|ForEx||PVT|Private Company|
              |GOV|Government||SOV|Sovereign Wealth Fund|
              |HED|Hedge Fund||SUB|Subsidiary|
              |HOL|Holding Company||TRU|Trust/Trustee|
              |IDX|Index||UMB|Umbrella Fund|
              |VEN|Venture Capital Fund||JVT|Joint Venture|
          items:
            example: PUB
            maxLength: 3
            minLength: 3
            type: string
          type: array
        excludeEntityType:
          description: |
            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will not be considered for the final match result. Multiple types can be entered separated by commas.
              |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|
              |---|---|---|---|
              |ABS|Asset-Backed||MED|Broadcast Call Sign|
              |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|
              |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|
              |CMD|Commodity||MUT|Mutual Fd-Open End|
              |COL|College/University||NPO|Non-Profit Organization|
              |CUR|Currency||OPD|Operating Division|
              |ESP|Emp Stk Ownership Plan||OTH|Other|
              |EXT|Extinct||PEF|Pension Fund|
              |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|
              |FND|Foundation/Endowment||PUB|Public Company|
              |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|
              |FRX|ForEx||PVT|Private Company|
              |GOV|Government||SOV|Sovereign Wealth Fund|
              |HED|Hedge Fund||SUB|Subsidiary|
              |HOL|Holding Company||TRU|Trust/Trustee|
              |IDX|Index||UMB|Umbrella Fund|
              |VEN|Venture Capital Fund||JVT|Joint Venture|
          items:
            example: EXT
            maxLength: 3
            minLength: 3
            type: string
          type: array
        includeEntitySubType:
          description: |
            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.
              |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
              |---|---|---|---|
              |AR|Arbitrage|IC|Investment Company|
              |BM|Bank Investment Division|IN|Insurance Company|
              |BR|Broker|MF|Mutual Fund Manager|
              |CP|Corporate|ML|Master Ltd Part|
              |CU|Custodial|MM|Market Maker|
              |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
              |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
              |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
              |FS|Fund Distributor|RE|Research Firm|
              |FU|Fund|SB|Subsidiary Branch|
              |FY|Family Office|ST|Stock Borrowing/Lending|
              |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
              |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
              |IA|Investment Adviser|
              |IB|Investment Banking|
          items:
            example: PR
            maxLength: 2
            minLength: 2
            type: string
          type: array
        excludeEntitySubType:
          description: |
            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.
              |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|
              |---|---|---|---|
              |AR|Arbitrage|IC|Investment Company|
              |BM|Bank Investment Division|IN|Insurance Company|
              |BR|Broker|MF|Mutual Fund Manager|
              |CP|Corporate|ML|Master Ltd Part|
              |CU|Custodial|MM|Market Maker|
              |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|
              |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|
              |FO|Foundation/Endowment Manager|PP|Real Estate Manager|
              |FS|Fund Distributor|RE|Research Firm|
              |FU|Fund|SB|Subsidiary Branch|
              |FY|Family Office|ST|Stock Borrowing/Lending|
              |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|
              |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|
              |IA|Investment Adviser|
              |IB|Investment Banking|
          items:
            example: HF
            maxLength: 2
            minLength: 2
            type: string
          type: array
        includeParent:
          default: false
          description: |
            Flag to include parent entities in the list of candidates. This parameter does not influence the match result.
          type: boolean
        universeId:
          description: |
            The universeId to save this set of inputs to
          example: 1
          type: integer
      required:
      - input
      title: Entity Match Request
      type: object
    EntityMappingRequest:
      example:
        clientId: FDS-USA
        clientName: FactSet
        clientUrl: www.factset.com
        universeId: 1
        entityId: 0016YD-E
        clientState: CT
        clientCountry: US
      properties:
        universeId:
          description: The universe to save this mapping to.
          example: 1
          type: integer
        clientId:
          description: A unique identifier supplied by the user. ClientId is saved
            to the user's Concordance universe and will be used as the identifier
            for that entity within the universe.
          example: FDS-USA
          type: string
        entityId:
          description: FactSet Entity Identifier mapped to the submitted entity.
          example: 0016YD-E
          type: string
        clientName:
          description: Name of entity to match.
          example: FactSet
          type: string
        clientCountry:
          description: ISO2 country code corresponding to the Entity name.
          example: US
          maxLength: 2
          minLength: 2
          type: string
        clientState:
          description: ISO Code of State or Province location to map Entity.
          example: CT
          maxLength: 2
          minLength: 2
          type: string
        clientUrl:
          description: URL corresponding to the entity name.
          example: www.factset.com
          type: string
      required:
      - clientId
      - clientName
      - universeId
      type: object
    PeopleMappingRequest:
      example:
        clientPersonName: Bill Gates
        clientLastName: Gates
        clientId: BGA-123
        clientFirstName: William
        clientSuffix: III
        universeId: 1
        clientPriority: HIGH
        clientEntity: Microsoft
        personId: 00118X-E
        clientSalutation: Mr
        clientMiddleName: Henry
      properties:
        clientEntity:
          description: Used to describe the company of the person
          example: Microsoft
          type: string
        clientFirstName:
          description: Used to describe the first name of the person
          example: William
          type: string
        clientId:
          description: A unique identifier supplied by the user. ClientId is saved
            to the user's Concordance universe and will be used as the identifier
            for that entity within the universe.
          example: BGA-123
          type: string
        clientLastName:
          description: Used to describe the last name of the person.
          example: Gates
          type: string
        clientMiddleName:
          description: Used to describe the middle name of the person.
          example: Henry
          type: string
        clientPersonName:
          description: Used to describe the name of the person
          example: Bill Gates
          type: string
        clientPriority:
          description: Used to indicate the priority of the person
          example: HIGH
          type: string
        clientSalutation:
          description: Used to indicate the salutation of the person
          example: Mr
          type: string
        clientSuffix:
          description: Used to indicate the suffix for the person's name
          example: III
          type: string
        personId:
          description: A unique identifier used to identify a person.
          example: 00118X-E
          type: string
        universeId:
          description: A unique identifier supplied to a person to save the data into
            his/her universe.
          example: 1
          type: integer
      required:
      - clientId
      - clientName
      - universeId
      type: object
    EntityMappingDeleteRequest:
      example:
        clientId:
        - abc-123
        - dfg-456
        universeId: 1
      properties:
        universeId:
          description: The universe to save this mapping to.
          example: 1
          type: integer
        clientId:
          description: A unique identifier supplied by the user. ClientId is saved
            to the user's Concordance universe and will be used as the identifier
            for that entity within the universe.
          example:
          - abc-123
          - dfg-456
          items:
            type: string
          type: array
      required:
      - clientId
      - universeId
      type: object
    EntityUniverseRequest:
      example:
        clientId:
        - abc-123
        - dfg-456
        offset: 0
        universeId: 1
        limit: 10
        mapStatus: MAPPED
      properties:
        universeId:
          description: the id of the universe that entities come from
          example: 1
          type: integer
        offset:
          description: starting row of the universe
          example: 0
          type: integer
        limit:
          description: Limits the number of records in the response.
          example: 10
          type: integer
        mapStatus:
          description: |
            Filter by the EPeople Decisions that have the specified mapStatus, where -
                  * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)
                  * UNMAPPED - The requested Entity Name is unmapped by FactSet.
                  * INDETERMINATE - The requested Entity Name was unable to make a mapping.
          example: MAPPED
          items:
            enum:
            - MAPPED
            - UNMAPPED
            - INDETERMINATE
            type: string
          type: array
        clientId:
          description: fetch only the mappings that has client id included in the
            specified list.
          example:
          - abc-123
          - dfg-456
          items:
            type: string
          type: array
      required:
      - universeId
      type: object
    CreateUniverseRequest:
      example:
        universeDescription: This is my universe
        universeName: My Universe
        universeType: ENTITY
      properties:
        universeName:
          description: Universe name
          example: My Universe
          type: string
        universeDescription:
          description: Universe description
          example: This is my universe
          type: string
        universeType:
          description: Universe type
          example: ENTITY
          type: string
      required:
      - universeName
      type: object
    UpdateUniverseRequest:
      example:
        universeId: 1
        universeDescription: This is my universe
        universeName: My Universe
      properties:
        universeName:
          description: Universe name
          example: My Universe
          type: string
        universeDescription:
          description: Universe description
          example: This is my universe
          type: string
        universeId:
          description: Universe identifier
          example: 1
          type: integer
      required:
      - universeId
      type: object
    PeopleUniverseRequest:
      example:
        clientId:
        - abc-123
        - dfg-456
        offset: 0
        universeId: 1
        limit: 10
        mapStatus:
        - MAPPED
      properties:
        universeId:
          description: the id of the universe that entities come from
          example: 1
          type: integer
        offset:
          description: starting row of the universe
          example: 0
          type: integer
        limit:
          description: Limits the number of records in the response.
          example: 10
          type: integer
        mapStatus:
          description: |
            Filter by the People Decisions that have the specified mapStatus, where -
                  * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)
                  * UNMAPPED - The requested Entity Name is unmapped by FactSet.
                  * INDETERMINATE - The requested Entity Name was unable to make a mapping.
          example:
          - MAPPED
          items:
            enum:
            - MAPPED
            - UNMAPPED
            - INDETERMINATE
            type: string
          type: array
        clientId:
          description: fetch only the mappings that has client id included in the
            specified list.
          example:
          - abc-123
          - dfg-456
          items:
            type: string
          type: array
      required:
      - universeId
      type: object
    SnowflakeEntityMatchRequest:
      example:
        data:
        - - 0
          - FactSet
          - US
          - CT
          - www.factset.com
          - 1
        - - 0
          - FactSet
          - US
          - CT
          - www.factset.com
          - 1
        - - 0
          - FactSet
          - US
          - CT
          - www.factset.com
          - 1
        - - 0
          - FactSet
          - US
          - CT
          - www.factset.com
          - 1
        - - 0
          - FactSet
          - US
          - CT
          - www.factset.com
          - 1
      properties:
        data:
          description: Array of input rows
          items:
            description: One search row from Snowflake
            example:
            - 0
            - FactSet
            - US
            - CT
            - www.factset.com
            - 1
            items:
              example: 0
              type: object
            maxItems: 7
            minItems: 7
            type: array
          maxItems: 25
          minItems: 1
          type: array
      required:
      - data
      title: Snowflake Company Match Request
      type: object
    PeopleMatchRequest:
      description: Request object for a requesting multiple People Matches.
      example:
        input:
        - personName: Bill Gates
          firstName: Bill
          lastName: Gates
          clientId: abc-123
          middleName: Henry
          salutation: Mr
          suffix: III
          entity: Microsoft
        - personName: Bill Gates
          firstName: Bill
          lastName: Gates
          clientId: abc-123
          middleName: Henry
          salutation: Mr
          suffix: III
          entity: Microsoft
        universeId: 1
      properties:
        input:
          items:
            $ref: '#/components/schemas/PeopleMatchRequest_input'
          type: array
        universeId:
          description: |
            The universeId to save this set of inputs to
          example: 1
          type: integer
      title: People Match Request
      type: object
    EntityMatchesResponse:
      description: Response object for Entity Matches.
      example:
        data:
        - matchFlag: true
          clientName: factset
          regionName: North America
          universeId: 1
          factsetIndustryName: Data Processing Services
          factsetSectorName: Technology Services
          nameMatchString: factset
          entityTypeDescription: Public Company
          mapStatus: MAPPED
          similarityScore: 1
          parentMatchFlag: false
          confidenceScore: 1
          entitySubTypeCode: PR
          factsetIndustryCode: "3305"
          stateName: Connecticut
          entityName: FactSet Research Systems, Inc.
          countryCode: US
          nameMatchSource: Domain Name
          clientId: abc-123
          clientUrl: www.factset.com
          entityId: entityId
          url: www.factset.com
          factsetSectorCode: "3300"
          clientCountry: US
          parentName: parentName
          sicCode: "7374"
          entityTypeCode: PUB
          rowIndex: 0
          stateCode: CT
          clientState: CT
          countryName: United States
          taskId: 31
          locationCity: Norwalk
        - matchFlag: true
          clientName: factset
          regionName: North America
          universeId: 1
          factsetIndustryName: Data Processing Services
          factsetSectorName: Technology Services
          nameMatchString: factset
          entityTypeDescription: Public Company
          mapStatus: MAPPED
          similarityScore: 1
          parentMatchFlag: false
          confidenceScore: 1
          entitySubTypeCode: PR
          factsetIndustryCode: "3305"
          stateName: Connecticut
          entityName: FactSet Research Systems, Inc.
          countryCode: US
          nameMatchSource: Domain Name
          clientId: abc-123
          clientUrl: www.factset.com
          entityId: entityId
          url: www.factset.com
          factsetSectorCode: "3300"
          clientCountry: US
          parentName: parentName
          sicCode: "7374"
          entityTypeCode: PUB
          rowIndex: 0
          stateCode: CT
          clientState: CT
          countryName: United States
          taskId: 31
          locationCity: Norwalk
      properties:
        data:
          description: Candidate list of `Entity Match` objects.
          items:
            $ref: '#/components/schemas/EntityMatch'
          type: array
      title: Entity Matches Response
      type: object
    EntityTaskResponse:
      example:
        data:
          clientIdColumn: ClientId
          countryColumn: Country
          universeId: 1
          excludeEntityType:
          - EXT
          - EXT
          error: error
          userSerial: FDSQAR_C-000000
          inputFile: test31.csv
          nameColumn: Name
          processStartTime: 2020-07-03T15:12:06.722Z
          includeEntitySubType:
          - PR
          - PR
          errorTitle: errorTitle
          decisionRate: 0.7272727272727273
          mappedCount: 8
          unmappedCount: 2
          universeName: My Universe
          indeterminateCount: 1
          excludeEntitySubType:
          - IB
          - IB
          userFullName: Jane Smith
          hasResult: true
          message: Waiting for the input file
          taskAction: processfile
          stateColumn: State
          urlColumn: URL
          includeEntityType:
          - PUB
          - PUB
          tryCount: 3
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21Z
          processDuration: 1.51603
          taskId: 31
          status: PENDING
          inputCount: 11
      properties:
        data:
          $ref: '#/components/schemas/EntityTaskStatus'
      title: Entity Task Response
      type: object
    PeopleTaskResponse:
      example:
        data:
          clientIdColumn: id1
          personNameColumn: Phil Snow
          suffixColumn: Suffix
          firstNameColumn: Frederick
          entityColumn: FACTSET RESEARCH SYSTEMS INC.
          universeId: 1
          middleNameColumn: Philip
          hasResult: true
          userSerial: FDSQAR_C-000000
          taskAction: processfile
          priorityColumn: priorityColumn
          inputFile: test31.csv
          taskSubmitTime: 2020-06-24T22:02:21Z
          taskName: Analysis1
          lastNameColumn: Snow
          salutationColumn: Mr
          taskId: 31
          universeName: Jane Smith
          status: PENDING
      properties:
        data:
          $ref: '#/components/schemas/PeopleTask'
      title: People Task Response
      type: object
    EntityTaskStatusResponse:
      example:
        data:
        - clientIdColumn: ClientId
          countryColumn: Country
          universeId: 1
          excludeEntityType:
          - EXT
          - EXT
          error: error
          userSerial: FDSQAR_C-000000
          inputFile: test31.csv
          nameColumn: Name
          processStartTime: 2020-07-03T15:12:06.722Z
          includeEntitySubType:
          - PR
          - PR
          errorTitle: errorTitle
          decisionRate: 0.7272727272727273
          mappedCount: 8
          unmappedCount: 2
          universeName: My Universe
          indeterminateCount: 1
          excludeEntitySubType:
          - IB
          - IB
          userFullName: Jane Smith
          hasResult: true
          message: Waiting for the input file
          taskAction: processfile
          stateColumn: State
          urlColumn: URL
          includeEntityType:
          - PUB
          - PUB
          tryCount: 3
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21Z
          processDuration: 1.51603
          taskId: 31
          status: PENDING
          inputCount: 11
        - clientIdColumn: ClientId
          countryColumn: Country
          universeId: 1
          excludeEntityType:
          - EXT
          - EXT
          error: error
          userSerial: FDSQAR_C-000000
          inputFile: test31.csv
          nameColumn: Name
          processStartTime: 2020-07-03T15:12:06.722Z
          includeEntitySubType:
          - PR
          - PR
          errorTitle: errorTitle
          decisionRate: 0.7272727272727273
          mappedCount: 8
          unmappedCount: 2
          universeName: My Universe
          indeterminateCount: 1
          excludeEntitySubType:
          - IB
          - IB
          userFullName: Jane Smith
          hasResult: true
          message: Waiting for the input file
          taskAction: processfile
          stateColumn: State
          urlColumn: URL
          includeEntityType:
          - PUB
          - PUB
          tryCount: 3
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21Z
          processDuration: 1.51603
          taskId: 31
          status: PENDING
          inputCount: 11
      properties:
        data:
          description: Array of Concordance Entity Task `Status` objects.
          items:
            $ref: '#/components/schemas/EntityTaskStatus'
          type: array
      title: Entity Task Status Response
      type: object
    EntityDecisionsResponse:
      example:
        data:
        - matchFlag: true
          clientName: factset
          regionName: North America
          universeId: 1
          factsetIndustryName: Data Processing Services
          factsetSectorName: Technology Services
          nameMatchString: factset
          entityTypeDescription: Public Company
          mapStatus: MAPPED
          similarityScore: 1
          parentMatchFlag: false
          confidenceScore: 1
          entitySubTypeCode: PR
          factsetIndustryCode: "3305"
          stateName: Connecticut
          entityName: FactSet Research Systems, Inc.
          countryCode: US
          nameMatchSource: Domain Name
          clientId: abc-123
          clientUrl: www.factset.com
          entityId: entityId
          url: www.factset.com
          factsetSectorCode: "3300"
          clientCountry: US
          parentName: parentName
          sicCode: "7374"
          entityTypeCode: PUB
          rowIndex: 0
          stateCode: CT
          clientState: CT
          countryName: United States
          taskId: 31
          locationCity: Norwalk
        - matchFlag: true
          clientName: factset
          regionName: North America
          universeId: 1
          factsetIndustryName: Data Processing Services
          factsetSectorName: Technology Services
          nameMatchString: factset
          entityTypeDescription: Public Company
          mapStatus: MAPPED
          similarityScore: 1
          parentMatchFlag: false
          confidenceScore: 1
          entitySubTypeCode: PR
          factsetIndustryCode: "3305"
          stateName: Connecticut
          entityName: FactSet Research Systems, Inc.
          countryCode: US
          nameMatchSource: Domain Name
          clientId: abc-123
          clientUrl: www.factset.com
          entityId: entityId
          url: www.factset.com
          factsetSectorCode: "3300"
          clientCountry: US
          parentName: parentName
          sicCode: "7374"
          entityTypeCode: PUB
          rowIndex: 0
          stateCode: CT
          clientState: CT
          countryName: United States
          taskId: 31
          locationCity: Norwalk
      properties:
        data:
          description: Array of `Entity Match` objects.
          items:
            $ref: '#/components/schemas/EntityMatch'
          type: array
      title: Entity Decisions Response
      type: object
    PeopleDecisionsResponse:
      example:
        data:
        - lastName: lastName
          clientLastName: Musk
          clientId: M7
          clientEntity: Tesla
          nameMatchString: factset
          suffix: Suffix
          title: Director.
          clientSalutation: Mr
          clientMiddleName: Federick
          activeRole: true
          mapStatus: MAPPED
          similarityScore: 1
          clientPersonName: Elon Musk
          personName: personName
          firstName: firstName
          clientFirstName: Elon
          clientSuffix: Sir
          clientPriority: HIGH
          middleName: middleName
          personId: 0DPHLH-E
          rowIndex: 0
          email: abc@email.com
          entity: FACTSET RESEARCH SYSTEMS INC.
          taskId: 31
        - lastName: lastName
          clientLastName: Musk
          clientId: M7
          clientEntity: Tesla
          nameMatchString: factset
          suffix: Suffix
          title: Director.
          clientSalutation: Mr
          clientMiddleName: Federick
          activeRole: true
          mapStatus: MAPPED
          similarityScore: 1
          clientPersonName: Elon Musk
          personName: personName
          firstName: firstName
          clientFirstName: Elon
          clientSuffix: Sir
          clientPriority: HIGH
          middleName: middleName
          personId: 0DPHLH-E
          rowIndex: 0
          email: abc@email.com
          entity: FACTSET RESEARCH SYSTEMS INC.
          taskId: 31
      properties:
        data:
          description: Array of `People Match` objects.
          items:
            $ref: '#/components/schemas/PeopleDecisions'
          type: array
      title: People Decisions Response
      type: object
    EntityUniverseResponse:
      example:
        data:
        - updatedTime: 2020-06-24T22:02:21Z
          clientId: abc-1234
          clientName: factset
          clientUrl: www.factset.com
          entityName: FactSet Inc.
          universeId: 1
          createdTime: 2020-06-24T22:02:21Z
          entityId: 00456-E
          clientState: ct
          clientCountry: us
          mapStatus: MAPPED
        - updatedTime: 2020-06-24T22:02:21Z
          clientId: abc-1234
          clientName: factset
          clientUrl: www.factset.com
          entityName: FactSet Inc.
          universeId: 1
          createdTime: 2020-06-24T22:02:21Z
          entityId: 00456-E
          clientState: ct
          clientCountry: us
          mapStatus: MAPPED
      properties:
        data:
          items:
            $ref: '#/components/schemas/EntityMapping'
          type: array
      title: Entity Universe Response
      type: object
    PeopleUniverseResponse:
      example:
        data:
        - updatedTime: 2020-06-24T22:02:21Z
          clientLastName: Gates
          clientId: BGA-123
          universeId: 1
          clientEntity: Microsoft
          clientSalutation: Mr
          clientMiddleName: Henry
          mapStatus: MAPPED
          clientPersonName: Bill Gates
          personName: GATES WILLIAM H III
          clientFirstName: William
          clientSuffix: III
          clientPriority: HIGH
          createdTime: 2020-06-24T22:02:21Z
          personId: 00118X-E
        - updatedTime: 2020-06-24T22:02:21Z
          clientLastName: Gates
          clientId: BGA-123
          universeId: 1
          clientEntity: Microsoft
          clientSalutation: Mr
          clientMiddleName: Henry
          mapStatus: MAPPED
          clientPersonName: Bill Gates
          personName: GATES WILLIAM H III
          clientFirstName: William
          clientSuffix: III
          clientPriority: HIGH
          createdTime: 2020-06-24T22:02:21Z
          personId: 00118X-E
      properties:
        data:
          items:
            $ref: '#/components/schemas/PeopleMapping'
          type: array
      title: People Universe Response
      type: object
    EntityResponse:
      example:
        data:
          updatedTime: 2020-06-24T22:02:21Z
          clientId: abc-1234
          clientName: factset
          clientUrl: www.factset.com
          entityName: FactSet Inc.
          universeId: 1
          createdTime: 2020-06-24T22:02:21Z
          entityId: 00456-E
          clientState: ct
          clientCountry: us
          mapStatus: MAPPED
      properties:
        data:
          $ref: '#/components/schemas/EntityMapping'
      title: Entity Response
      type: object
    EntityMappingResponse:
      properties:
        data:
          $ref: '#/components/schemas/EntityMapping'
      title: Entity Mapping Response
      type: object
    PeopleMappingResponse:
      example:
        data:
          updatedTime: 2020-06-24T22:02:21Z
          clientLastName: Gates
          clientId: BGA-123
          universeId: 1
          clientEntity: Microsoft
          clientSalutation: Mr
          clientMiddleName: Henry
          mapStatus: MAPPED
          clientPersonName: Bill Gates
          personName: GATES WILLIAM H III
          clientFirstName: William
          clientSuffix: III
          clientPriority: HIGH
          createdTime: 2020-06-24T22:02:21Z
          personId: 00118X-E
      properties:
        data:
          $ref: '#/components/schemas/PeopleMapping'
      title: People Mapping Response
      type: object
    UniverseMetaResponse:
      example:
        data:
          updatedBy: FDSQAR_C-000000
          createdBy: FDSQAR_C-000000
          universeId: 1
          universeDescription: This is a universe
          updatedOn: 2000-01-23T04:56:07.000+00:00
          selfManaged: true
          createdOn: 2000-01-23T04:56:07.000+00:00
          universeName: My Universe
          universeType: ENTITY
      properties:
        data:
          $ref: '#/components/schemas/Universe'
      title: Metadata for a single universe
      type: object
    EntityUniverseStatisticsResponse:
      example:
        data:
        - indeterminateCount: 1
          universeId: 1
          mappedCount: 8
          totalCount: 10
          unmappedCount: 1
        - indeterminateCount: 1
          universeId: 1
          mappedCount: 8
          totalCount: 10
          unmappedCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/UniverseStatistics'
          type: array
      title: Entity Mapping Statistics Response
      type: object
    universeStatisticsResponse:
      example:
        data:
        - indeterminateCount: 1
          universeId: 1
          mappedCount: 8
          totalCount: 10
          unmappedCount: 1
        - indeterminateCount: 1
          universeId: 1
          mappedCount: 8
          totalCount: 10
          unmappedCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/universeStatistics'
          type: array
      title: Universe Statistics Response
      type: object
    UniversesResponse:
      example:
        data:
        - updatedBy: FDSQAR_C-000000
          createdBy: FDSQAR_C-000000
          universeId: 1
          universeDescription: This is a universe
          updatedOn: 2000-01-23T04:56:07.000+00:00
          selfManaged: true
          createdOn: 2000-01-23T04:56:07.000+00:00
          universeName: My Universe
          universeType: ENTITY
        - updatedBy: FDSQAR_C-000000
          createdBy: FDSQAR_C-000000
          universeId: 1
          universeDescription: This is a universe
          updatedOn: 2000-01-23T04:56:07.000+00:00
          selfManaged: true
          createdOn: 2000-01-23T04:56:07.000+00:00
          universeName: My Universe
          universeType: ENTITY
      properties:
        data:
          items:
            $ref: '#/components/schemas/UniverseMeta'
          type: array
      title: Metadata on multiple universes
      type: object
    SnowflakeEntityMatchResponse:
      example:
        data:
        - clientCountry: us,
          clientId: null,
          clientName: apple,
          clientState: ca,
          clientUrl: www.apple.com,
          confidenceScore: 1.0,
          countryCode: us,
          countryName: United States,
          entityId: 000C7F-E,
          entityName: Apple, Inc.,
          entitySubTypeCode: CP,
          entityTypeCode: PUB,
          entityTypeDescription: Public Company,
          factsetIndustryCode: 1320,
          factsetIndustryName: Telecommunications Equipment,
          factsetSectorCode: 1300,
          factsetSectorName: Electronic Technology,
          locationCity: Cupertino,
          mapStatus: MAPPED,
          matchFlag: true,
          nameMatchSource: Proper/ Legal Name,
          nameMatchString: apple inc,
          parentMatchFlag: false,
          parentName: null,
          regionName: North America,
          rowIndex: 0,
          sicCode: 3663,
          similarityScore: 1.0,
          stateCode: ca,
          stateName: California,
          taskId: null,
          url: www.apple.com,
        - clientCountry: null,
          clientId: null,
          clientName: factset,
          clientState: null,
          clientUrl: null,
          confidenceScore: 1.0,
          countryCode: us,
          countryName: United States,
          entityId: 0016YD-E,
          entityName: FactSet Research Systems, Inc.,
          entitySubTypeCode: CP,
          entityTypeCode: PUB,
          entityTypeDescription: Public Company,
          factsetIndustryCode: 3305,
          factsetIndustryName: Data Processing Services,
          factsetSectorCode: 3300,
          factsetSectorName: Technology Services,
          locationCity: Norwalk,
          mapStatus: MAPPED,
          matchFlag: true,
          nameMatchSource: Domain Name,
          nameMatchString: factset,
          parentMatchFlag: false,
          parentName: null,
          regionName: North America,
          rowIndex: 1,
          sicCode: 7374,
          similarityScore: 1.0,
          stateCode: ct,
          stateName: Connecticut,
          taskId: null,
          url: www.factset.com
      properties:
        data:
          description: JSON body to be parsed by snowflake
          items:
            items:
              type: object
            type: array
          type: array
      title: Snowflake Entity Search Response
      type: object
    EntityMappingDeleteResponse:
      example:
        data:
        - updatedTime: 2020-06-24T22:02:21Z
          clientId: abc-1234
          clientName: factset
          clientUrl: www.factset.com
          entityName: FactSet Inc.
          universeId: 1
          createdTime: 2020-06-24T22:02:21Z
          entityId: 00456-E
          clientState: ct
          clientCountry: us
          mapStatus: MAPPED
        - updatedTime: 2020-06-24T22:02:21Z
          clientId: abc-1234
          clientName: factset
          clientUrl: www.factset.com
          entityName: FactSet Inc.
          universeId: 1
          createdTime: 2020-06-24T22:02:21Z
          entityId: 00456-E
          clientState: ct
          clientCountry: us
          mapStatus: MAPPED
      properties:
        data:
          description: Array of `Entity Mapping` objects that have been successfully
            deleted.
          items:
            $ref: '#/components/schemas/EntityMapping'
          type: array
      title: Entity Delete Mapping Response
      type: object
    PeopleMappingDeleteResponse:
      example:
        data:
        - updatedTime: 2020-06-24T22:02:21Z
          clientLastName: Gates
          clientId: BGA-123
          universeId: 1
          clientEntity: Microsoft
          clientSalutation: Mr
          clientMiddleName: Henry
          mapStatus: MAPPED
          clientPersonName: Bill Gates
          personName: GATES WILLIAM H III
          clientFirstName: William
          clientSuffix: III
          clientPriority: HIGH
          createdTime: 2020-06-24T22:02:21Z
          personId: 00118X-E
        - updatedTime: 2020-06-24T22:02:21Z
          clientLastName: Gates
          clientId: BGA-123
          universeId: 1
          clientEntity: Microsoft
          clientSalutation: Mr
          clientMiddleName: Henry
          mapStatus: MAPPED
          clientPersonName: Bill Gates
          personName: GATES WILLIAM H III
          clientFirstName: William
          clientSuffix: III
          clientPriority: HIGH
          createdTime: 2020-06-24T22:02:21Z
          personId: 00118X-E
      properties:
        data:
          description: Array of `Entity Mapping` objects that have been successfully
            deleted.
          items:
            $ref: '#/components/schemas/PeopleMapping'
          type: array
      title: Entity Delete Mapping Response
      type: object
    PeopleMatchesResponse:
      description: Response object for People Matches.
      example:
        data:
        - lastName: Snow
          clientLastName: Musk
          matchFlag: "true"
          universeId: 1
          clientEntity: Factset
          nameMatchString: philip snow
          title: Chief Executive Officer & Director
          clientSalutation: Mr
          clientMiddleName: Federick
          activeRole: "true"
          mapStatus: MAPPED
          similarityScore: 1
          clientPersonName: Phil Snow
          firstName: Frederick
          nameMatchSource: Presentation Name
          clientFirstName: Elon
          clientSuffix: Sir
          clientPriority: HIGH
          personId: 0DPHLH-E
          middleName: Philip
          rowIndex: 0
          entity: FACTSET RESEARCH SYSTEMS INC.
        - lastName: Snow
          clientLastName: Musk
          matchFlag: "true"
          universeId: 1
          clientEntity: Factset
          nameMatchString: philip snow
          title: Chief Executive Officer & Director
          clientSalutation: Mr
          clientMiddleName: Federick
          activeRole: "true"
          mapStatus: MAPPED
          similarityScore: 1
          clientPersonName: Phil Snow
          firstName: Frederick
          nameMatchSource: Presentation Name
          clientFirstName: Elon
          clientSuffix: Sir
          clientPriority: HIGH
          personId: 0DPHLH-E
          middleName: Philip
          rowIndex: 0
          entity: FACTSET RESEARCH SYSTEMS INC.
      properties:
        data:
          description: Candidate list of `People Match` objects.
          items:
            $ref: '#/components/schemas/PeopleMatch'
          type: array
      title: People Matches Response
      type: object
    PeopleTaskStatusResponse:
      example:
        data:
        - clientIdColumn: ClientId
          personNameColumn: personName
          suffixColumn: Suffix
          firstNameColumn: firstName
          universeId: 1
          middleNameColumn: middleName
          userSerial: FDSQAR_C-000000
          inputFile: test31.csv
          processStartTime: 2020-07-03T15:12:06.722Z
          decisionRate: 0
          mappedCount: 8
          salutationColumn: Salutation
          universeName: Jane Smith
          entityColumn: Entity
          userFullName: Jane Smith
          hasResult: true
          taskAction: processfile
          priorityColumn: Priority
          processDuration: 1.51603
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21Z
          lastNameColumn: lastName
          taskId: 31
          inputCount: 11
          status: PENDING
        - clientIdColumn: ClientId
          personNameColumn: personName
          suffixColumn: Suffix
          firstNameColumn: firstName
          universeId: 1
          middleNameColumn: middleName
          userSerial: FDSQAR_C-000000
          inputFile: test31.csv
          processStartTime: 2020-07-03T15:12:06.722Z
          decisionRate: 0
          mappedCount: 8
          salutationColumn: Salutation
          universeName: Jane Smith
          entityColumn: Entity
          userFullName: Jane Smith
          hasResult: true
          taskAction: processfile
          priorityColumn: Priority
          processDuration: 1.51603
          taskName: test31
          taskSubmitTime: 2020-06-24T22:02:21Z
          lastNameColumn: lastName
          taskId: 31
          inputCount: 11
          status: PENDING
      properties:
        data:
          description: Array of Concordance People Task `Status` objects.
          items:
            $ref: '#/components/schemas/PeopleTaskStatus'
          type: array
      title: People Task Status Response
      type: object
    ErrorResponse:
      properties:
        status:
          description: Status.
          example: Bad Request
          type: string
        timestamp:
          description: Timestamp in yyyy-mm-ddThh:mm:ss.sss format.
          format: date-time
          type: string
        path:
          description: The Endpoint path {package}/version/{endpoint}
          example: /factset-concordance/v2/entity-match
          type: string
        message:
          description: The plain text error message.
          example: Validation Error
          type: string
        subErrors:
          $ref: '#/components/schemas/ErrorResponse_subErrors'
      title: Error Response
      type: object
    EntityMatch:
      description: |
        Entity Match object showing the decision reached for each Entity.
      example:
        matchFlag: true
        clientName: factset
        regionName: North America
        universeId: 1
        factsetIndustryName: Data Processing Services
        factsetSectorName: Technology Services
        nameMatchString: factset
        entityTypeDescription: Public Company
        mapStatus: MAPPED
        similarityScore: 1
        parentMatchFlag: false
        confidenceScore: 1
        entitySubTypeCode: PR
        factsetIndustryCode: "3305"
        stateName: Connecticut
        entityName: FactSet Research Systems, Inc.
        countryCode: US
        nameMatchSource: Domain Name
        clientId: abc-123
        clientUrl: www.factset.com
        entityId: entityId
        url: www.factset.com
        factsetSectorCode: "3300"
        clientCountry: US
        parentName: parentName
        sicCode: "7374"
        entityTypeCode: PUB
        rowIndex: 0
        stateCode: CT
        clientState: CT
        countryName: United States
        taskId: 31
        locationCity: Norwalk
      properties:
        universeId:
          description: The id of the universe that entities should be mapped to
          example: 1
          nullable: true
          type: integer
        taskId:
          description: |
            Identifier denoting a specific Concordance task submitted by the user. This value will be null for /entity-match endpoint responses and is only available when using the "Bulk" workflow.
          example: 31
          nullable: true
          type: integer
        rowIndex:
          description: Row number for match in the request or input file.
          nullable: true
          type: integer
        matchFlag:
          description: Flag denoting if the row is a match.
          nullable: true
          type: boolean
        entityId:
          description: |
            FactSet Entity Identifier of the entity matched respective to the requested Name submitted. For more detail, visit [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)
          nullable: true
          type: string
        entityName:
          description: Full name corresponding to the matched entity.
          example: FactSet Research Systems, Inc.
          nullable: true
          type: string
        url:
          description: URL of the matched entity.
          example: www.factset.com
          nullable: true
          type: string
        mapStatus:
          description: "Concordance status of the submitted, where - \n  * MAPPED\
            \ - The requested Entity Name is successfully mapped to a FactSet Entity\
            \ Id (-E)\n  * UNMAPPED - The requested Entity Name is unmapped by FactSet.\n\
            \  * INDETERMINATE - The requested Entity Name has unable to make a mapping.\n"
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          example: MAPPED
          nullable: true
          type: string
        similarityScore:
          description: |
            Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity.
          example: 1
          format: double
          nullable: true
          type: number
        confidenceScore:
          description: |
            Additional statistic calculated by the algorithm that is used to ensure the validity of the match result. A confidenceScore of 1 is the highest level of confidence.
          example: 1
          format: double
          nullable: true
          type: number
        countryCode:
          description: ISO2 country code corresponding to the location of the matched
            entity.
          example: US
          nullable: true
          type: string
        countryName:
          description: Country name corresponding to the location of the matched entity
          example: United States
          nullable: true
          type: string
        stateCode:
          description: Two character state code corresponding to the location of the
            matched entity.
          example: CT
          nullable: true
          type: string
        stateName:
          description: State name corresponding to the location of the matched entity.
          example: Connecticut
          nullable: true
          type: string
        sicCode:
          description: Standard Industrial Classification (SIC) Code of the matched
            entity.
          example: "7374"
          nullable: true
          type: string
        entityTypeCode:
          description: Code representing the entity type of the matched entity. See
            the related request parameter for a table of all Codes and their respective
            descriptions.
          example: PUB
          nullable: true
          type: string
        entityTypeDescription:
          description: Description of of the matched entity's type.
          example: Public Company
          nullable: true
          type: string
        entitySubTypeCode:
          description: Code representing the entity subtype of the matched entity.
            See the related request parameter for a table of all Codes and their respective
            descriptions.
          example: PR
          nullable: true
          type: string
        locationCity:
          description: City where the matched entity is located.
          example: Norwalk
          nullable: true
          type: string
        regionName:
          description: Region where the matched entity is located.
          example: North America
          nullable: true
          type: string
        factsetIndustryCode:
          description: FactSet Industry Classification Code of the matched entity.
          example: "3305"
          nullable: true
          type: string
        factsetIndustryName:
          description: Name of the matched entity's FactSet Industry Classification.
          example: Data Processing Services
          nullable: true
          type: string
        factsetSectorCode:
          description: Name of the matched entity's FactSet Sector Classification
            Code.
          example: "3300"
          nullable: true
          type: string
        factsetSectorName:
          description: Name of the matched entity's FactSet Sector Classification.
          example: Technology Services
          nullable: true
          type: string
        parentName:
          description: Name of the matched entity's parent entity.
          nullable: true
          type: string
        parentMatchFlag:
          description: Flag denoting that the matched entity is the parent of another
            match.
          example: false
          nullable: true
          type: boolean
        clientId:
          description: Unique Identifer provided by the user in the request to represent
            the entity Name being requested.
          example: abc-123
          nullable: true
          type: string
        clientName:
          description: Name of the entity to match as specified in the request
          example: factset
          nullable: true
          type: string
        clientCountry:
          description: ISO2 country code specified in the request.
          example: US
          nullable: true
          type: string
        clientState:
          description: State code specified in the request.
          example: CT
          nullable: true
          type: string
        clientUrl:
          description: URL specified in the request.
          example: www.factset.com
          nullable: true
          type: string
        nameMatchString:
          description: String on which the Concordance algorithm mapped the submitted
            entity.
          example: factset
          nullable: true
          type: string
        nameMatchSource:
          description: Type of name that the nameMatchString matched.
          example: Domain Name
          nullable: true
          type: string
      title: Entity Match
      type: object
    EntityTaskStatus:
      description: |
        Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches.
      example:
        clientIdColumn: ClientId
        countryColumn: Country
        universeId: 1
        excludeEntityType:
        - EXT
        - EXT
        error: error
        userSerial: FDSQAR_C-000000
        inputFile: test31.csv
        nameColumn: Name
        processStartTime: 2020-07-03T15:12:06.722Z
        includeEntitySubType:
        - PR
        - PR
        errorTitle: errorTitle
        decisionRate: 0.7272727272727273
        mappedCount: 8
        unmappedCount: 2
        universeName: My Universe
        indeterminateCount: 1
        excludeEntitySubType:
        - IB
        - IB
        userFullName: Jane Smith
        hasResult: true
        message: Waiting for the input file
        taskAction: processfile
        stateColumn: State
        urlColumn: URL
        includeEntityType:
        - PUB
        - PUB
        tryCount: 3
        taskName: test31
        taskSubmitTime: 2020-06-24T22:02:21Z
        processDuration: 1.51603
        taskId: 31
        status: PENDING
        inputCount: 11
      properties:
        taskId:
          description: Identifier denoting a specific Concordance task submitted by
            the user.
          example: 31
          nullable: true
          type: integer
        taskName:
          description: User-defined name for the task used to name the output file.
          example: test31
          nullable: true
          type: string
        taskAction:
          description: Action status for the Concordance Task process.
          example: processfile
          nullable: true
          type: string
        status:
          description: Status of the Concordance Task. If the value is "SUCCESS",
            you can move to the subsequent /entity-decisions endpoint to retrieve
            the results.
          enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
          - BAD_REQUEST
          - ABORTED
          nullable: true
          type: string
        inputFile:
          description: |
            The input file is posted as a file object in the form.
          example: test31.csv
          nullable: true
          type: string
        clientIdColumn:
          description: Name of the column in the input file that contains a unique
            identifier supplied by the user.
          example: ClientId
          nullable: true
          type: string
        nameColumn:
          description: Name of the column in the input file that contains the entity
            name to be matched.
          example: Name
          nullable: true
          type: string
        countryColumn:
          description: |
            Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match.
          example: Country
          nullable: true
          type: string
        stateColumn:
          description: |
            Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match.
          example: State
          nullable: true
          type: string
        urlColumn:
          description: |
            Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match.
          example: URL
          nullable: true
          type: string
        hasResult:
          description: Flag denoting the taskId has a result.
          example: true
          nullable: true
          type: boolean
        taskSubmitTime:
          description: Time the Task was submitted in UTC.
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        message:
          description: Textual message for the status.
          example: Waiting for the input file
          nullable: true
          type: string
        inputCount:
          description: Number of records in the Input File.
          example: 11
          nullable: true
          type: integer
        mappedCount:
          description: Number of records with status of MAPPED the Input File.
          example: 8
          nullable: true
          type: integer
        unmappedCount:
          description: Number of records with status of UNMAPPED the Input File.
          example: 2
          nullable: true
          type: integer
        indeterminateCount:
          description: Number of records with status of INDETERMINATE the Input File.
          example: 1
          nullable: true
          type: integer
        processStartTime:
          description: Process start time in UTC.
          example: 2020-07-03T15:12:06.722Z
          format: date-time
          nullable: true
          type: string
        processDuration:
          description: Process duration in seconds.
          example: 1.51603
          format: double
          nullable: true
          type: number
        tryCount:
          description: Number of tries made so far for the request.
          example: 3
          nullable: true
          type: integer
        decisionRate:
          description: Percentage of mapped entities in the Input File.
          example: 0.7272727272727273
          format: double
          nullable: true
          type: number
        error:
          nullable: true
          type: string
        errorTitle:
          nullable: true
          type: string
        includeEntityType:
          description: |
            Requested Entity types to include.
          items:
            example: PUB
            nullable: true
            type: string
          type: array
        excludeEntityType:
          description: |
            Requested Entity types to exclude.
          items:
            example: EXT
            nullable: true
            type: string
          type: array
        includeEntitySubType:
          description: |
            Requested Entity subtypes to include.
          items:
            example: PR
            nullable: true
            type: string
          type: array
        excludeEntitySubType:
          description: |
            Requested Entity subtypes to exclude.
          items:
            example: IB
            nullable: true
            type: string
          type: array
        userSerial:
          description: user-serial of the person who initiated the entity task.
          example: FDSQAR_C-000000
          nullable: true
          type: string
        userFullName:
          description: |
            Full name of the person associated with the `userSerial`.
          example: Jane Smith
          nullable: true
          type: string
        universeId:
          description: |
            The universe id this task was submitted to.
          example: 1
          nullable: true
          type: integer
        universeName:
          description: |
            The name of the universe this task was submitted to.
          example: My Universe
          nullable: true
          type: string
      title: Entity Task Status
      type: object
    EntityMapping:
      description: |
        Concordance Company Entity Mapping object. Shows the mapping detail related to user's universe.
      example:
        updatedTime: 2020-06-24T22:02:21Z
        clientId: abc-1234
        clientName: factset
        clientUrl: www.factset.com
        entityName: FactSet Inc.
        universeId: 1
        createdTime: 2020-06-24T22:02:21Z
        entityId: 00456-E
        clientState: ct
        clientCountry: us
        mapStatus: MAPPED
      properties:
        entityId:
          description: FactSet Entity Identifier of the entity matched to the submitted
            entity
          example: 00456-E
          nullable: true
          type: string
        entityName:
          description: Full name corresponding to the matched entity.
          example: FactSet Inc.
          nullable: true
          type: string
        clientId:
          description: User-defined unique identifier provided by the user in the
            request
          example: abc-1234
          nullable: true
          type: string
        clientName:
          description: Name of the entity to match as specified in the request.
          example: factset
          nullable: true
          type: string
        clientCountry:
          description: ISO2 country code specified in the request
          example: us
          nullable: true
          type: string
        clientState:
          description: State code specified in the request
          example: ct
          nullable: true
          type: string
        clientUrl:
          description: URL specified in the request
          example: www.factset.com
          nullable: true
          type: string
        createdTime:
          description: Time when entity was created in UTC.
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        updatedTime:
          description: Time when the submitted entity was last updated in UTC.
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        mapStatus:
          description: Current status of the entity mapping.
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          nullable: true
          type: string
        universeId:
          description: |
            The universe this mapping belongs to. Only set in v2 endpoints
          example: 1
          nullable: true
          type: integer
      title: Entity Mapping
      type: object
    PeopleMapping:
      description: |
        Concordance People Mapping object. Shows the mapping detail related to user's universe.
      example:
        updatedTime: 2020-06-24T22:02:21Z
        clientLastName: Gates
        clientId: BGA-123
        universeId: 1
        clientEntity: Microsoft
        clientSalutation: Mr
        clientMiddleName: Henry
        mapStatus: MAPPED
        clientPersonName: Bill Gates
        personName: GATES WILLIAM H III
        clientFirstName: William
        clientSuffix: III
        clientPriority: HIGH
        createdTime: 2020-06-24T22:02:21Z
        personId: 00118X-E
      properties:
        clientEntity:
          description: It describes the name of the company
          example: Microsoft
          nullable: true
          type: string
        clientFirstName:
          description: It indicates the full name of the client.
          example: William
          nullable: true
          type: string
        clientId:
          description: User-defined unique identifier provided by the user in the
            request
          example: BGA-123
          nullable: true
          type: string
        clientLastName:
          description: It indicates last name of the client.
          example: Gates
          nullable: true
          type: string
        clientMiddleName:
          description: It indicates middle name of the client.
          example: Henry
          nullable: true
          type: string
        clientPersonName:
          description: It indiactes the name of the client
          example: Bill Gates
          nullable: true
          type: string
        clientPriority:
          description: It indiactes the priority value of the client.
          example: HIGH
          nullable: true
          type: string
        clientSalutation:
          description: It indicates the client's salutation.
          example: Mr
          nullable: true
          type: string
        clientSuffix:
          description: It indicates the suffix for the client.
          example: III
          nullable: true
          type: string
        createdTime:
          description: It indicates the time of the creation
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        mapStatus:
          description: Current status of the people mapping.
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          example: MAPPED
          nullable: true
          type: string
        personId:
          description: |
            Helps to identify a person by using an unique indiactor
          example: 00118X-E
          nullable: true
          type: string
        personName:
          description: It indiactes the full name of the client
          example: GATES WILLIAM H III
          nullable: true
          type: string
        universeId:
          description: |
            The universe this mapping belongs to. Only set in v2 endpoints
          example: 1
          nullable: true
          type: integer
        updatedTime:
          description: It indicates the time of the updation
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
      title: People Mapping
      type: object
    UniverseStatistics:
      description: Mapping statistics for a given universe
      example:
        indeterminateCount: 1
        universeId: 1
        mappedCount: 8
        totalCount: 10
        unmappedCount: 1
      properties:
        totalCount:
          example: 10
          nullable: true
          type: integer
        mappedCount:
          example: 8
          nullable: true
          type: integer
        unmappedCount:
          example: 1
          nullable: true
          type: integer
        indeterminateCount:
          example: 1
          nullable: true
          type: integer
        universeId:
          example: 1
          nullable: true
          type: integer
      title: Universe Statistics
      type: object
    universeStatistics:
      description: Mapping statistics for a given universe
      example:
        indeterminateCount: 1
        universeId: 1
        mappedCount: 8
        totalCount: 10
        unmappedCount: 1
      properties:
        totalCount:
          example: 10
          nullable: true
          type: integer
        mappedCount:
          example: 8
          nullable: true
          type: integer
        unmappedCount:
          example: 1
          nullable: true
          type: integer
        indeterminateCount:
          example: 1
          nullable: true
          type: integer
        universeId:
          example: 1
          nullable: true
          type: integer
      title: Universe Statistics
      type: object
    MapStatus:
      description: Status of an entity mapping
      enum:
      - MAPPED
      - UNMAPPED
      - INDETERMINATE
      example: MAPPED
      type: string
    UniverseMeta:
      description: Metadata about a single universe
      example:
        updatedBy: FDSQAR_C-000000
        createdBy: FDSQAR_C-000000
        universeId: 1
        universeDescription: This is a universe
        updatedOn: 2000-01-23T04:56:07.000+00:00
        selfManaged: true
        createdOn: 2000-01-23T04:56:07.000+00:00
        universeName: My Universe
        universeType: ENTITY
      properties:
        universeId:
          description: The universe identifier
          example: 1
          nullable: true
          type: integer
        universeName:
          description: The user specified universe name
          example: My Universe
          nullable: true
          type: string
        universeDescription:
          description: The user specified universe description
          example: This is a universe
          nullable: true
          type: string
        universeType:
          description: The user specified universe type.
          example: ENTITY
          nullable: true
          type: string
        selfManaged:
          description: False if the universe is managed by FactSet Managed Service,
            True otherwise
          example: true
          nullable: true
          type: boolean
        createdBy:
          description: The user who created the universe
          example: FDSQAR_C-000000
          nullable: true
          type: string
        createdOn:
          description: When the universe was created
          format: date-time
          nullable: true
          type: string
        updatedBy:
          description: The user who most recently updated the universe metadata
          example: FDSQAR_C-000000
          nullable: true
          type: string
        updatedOn:
          description: When the universe metadata was most recently updated
          format: date-time
          nullable: true
          type: string
      title: Universe Meta
      type: object
    Universe:
      description: Metadata about a single universe
      example:
        updatedBy: FDSQAR_C-000000
        createdBy: FDSQAR_C-000000
        universeId: 1
        universeDescription: This is a universe
        updatedOn: 2000-01-23T04:56:07.000+00:00
        selfManaged: true
        createdOn: 2000-01-23T04:56:07.000+00:00
        universeName: My Universe
        universeType: ENTITY
      properties:
        universeId:
          description: The universe identifier
          example: 1
          nullable: true
          type: integer
        universeName:
          description: The user specified universe name
          example: My Universe
          nullable: true
          type: string
        universeDescription:
          description: The user specified universe description
          example: This is a universe
          nullable: true
          type: string
        universeType:
          description: The user specified universe entity.
          example: ENTITY
          nullable: true
          type: string
        selfManaged:
          description: False if the universe is managed by FactSet Managed Service,
            True otherwise
          example: true
          nullable: true
          type: boolean
        createdBy:
          description: The user who created the universe
          example: FDSQAR_C-000000
          nullable: true
          type: string
        createdOn:
          description: When the universe was created
          format: date-time
          nullable: true
          type: string
        updatedBy:
          description: The user who most recently updated the universe metadata
          example: FDSQAR_C-000000
          nullable: true
          type: string
        updatedOn:
          description: When the universe metadata was most recently updated
          format: date-time
          nullable: true
          type: string
      title: Universe Meta
      type: object
    PeopleMatch:
      description: |
        People Match object showing the decision reached for each Entity.
      example:
        lastName: Snow
        clientLastName: Musk
        matchFlag: "true"
        universeId: 1
        clientEntity: Factset
        nameMatchString: philip snow
        title: Chief Executive Officer & Director
        clientSalutation: Mr
        clientMiddleName: Federick
        activeRole: "true"
        mapStatus: MAPPED
        similarityScore: 1
        clientPersonName: Phil Snow
        firstName: Frederick
        nameMatchSource: Presentation Name
        clientFirstName: Elon
        clientSuffix: Sir
        clientPriority: HIGH
        personId: 0DPHLH-E
        middleName: Philip
        rowIndex: 0
        entity: FACTSET RESEARCH SYSTEMS INC.
      properties:
        activeRole:
          description: This tells whether the person is now active in the entity
          example: "true"
          nullable: true
          type: string
        clientEntity:
          description: |
            The entity for which the person is working.
          example: Factset
          nullable: true
          type: string
        clientFirstName:
          description: First Name provided in the input file which is used in the
            `people-task` endpoint
          example: Elon
          nullable: true
          type: string
        clientLastName:
          description: Last Name provided in the input file which is used in the `people-task`
            endpoint
          example: Musk
          nullable: true
          type: string
        clientMiddleName:
          description: Middle Name provided in the input file which is used in the
            `people-task` endpoint
          example: Federick
          nullable: true
          type: string
        clientSalutation:
          description: Salutation provided in the input file which is used in the
            `people-task` endpoint
          example: Mr
          nullable: true
          type: string
        clientSuffix:
          description: Suffix provided in the input file which is used in the `people-task`
            endpoint
          example: Sir
          nullable: true
          type: string
        clientPriority:
          description: Priority provided in the input file which is used in the `people-task`
            endpoint
          example: HIGH
          nullable: true
          type: string
        clientPersonName:
          description: The person name as provided in request.
          example: Phil Snow
          nullable: true
          type: string
        firstName:
          description: The first name of the client.
          example: Frederick
          nullable: true
          type: string
        personId:
          description: The id of the person.
          example: 0DPHLH-E
          nullable: true
          type: string
        lastName:
          description: The last name of the person.
          example: Snow
          nullable: true
          type: string
        middleName:
          description: The middle name of the client.
          example: Philip
          nullable: true
          type: string
        entity:
          description: Full name corresponding to the matched entity.
          example: FACTSET RESEARCH SYSTEMS INC.
          nullable: true
          type: string
        mapStatus:
          description: "Concordance status of the submitted, where - \n  * MAPPED\
            \ - The requested Entity Name is successfully mapped to a FactSet Entity\
            \ Id (-E)\n  * UNMAPPED - The requested Entity Name is unmapped by FactSet.\n\
            \  * INDETERMINATE - The requested Entity Name has unable to make a mapping.\n"
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          example: MAPPED
          nullable: true
          type: string
        matchFlag:
          description: |
            Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity.
          example: "true"
          nullable: true
          type: string
        nameMatchSource:
          description: |
            Additional statistic calculated by the algorithm that is used to ensure the validity of the match result. A confidenceScore of 1 is the highest level of confidence.
          example: Presentation Name
          nullable: true
          type: string
        nameMatchString:
          description: String on which the Concordance algorithm mapped the submitted
            entity.
          example: philip snow
          nullable: true
          type: string
        rowIndex:
          description: Country name corresponding to the location of the matched entity
          example: 0
          format: double
          nullable: true
          type: integer
        similarityScore:
          description: |
            Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity.
          example: 1
          format: double
          nullable: true
          type: number
        title:
          description: The title that the person is holding.
          example: Chief Executive Officer & Director
          nullable: true
          type: string
        universeId:
          description: The universe identifier
          example: 1
          nullable: true
          type: integer
      title: People Match
      type: object
    PeopleTask:
      description: |
        People Match object showing the decision reached for each Entity.
      example:
        clientIdColumn: id1
        personNameColumn: Phil Snow
        suffixColumn: Suffix
        firstNameColumn: Frederick
        entityColumn: FACTSET RESEARCH SYSTEMS INC.
        universeId: 1
        middleNameColumn: Philip
        hasResult: true
        userSerial: FDSQAR_C-000000
        taskAction: processfile
        priorityColumn: priorityColumn
        inputFile: test31.csv
        taskSubmitTime: 2020-06-24T22:02:21Z
        taskName: Analysis1
        lastNameColumn: Snow
        salutationColumn: Mr
        taskId: 31
        universeName: Jane Smith
        status: PENDING
      properties:
        clientIdColumn:
          description: |
            The number of columns of client.
          example: id1
          nullable: true
          type: string
        personNameColumn:
          description: The person name as provided in request.
          example: Phil Snow
          nullable: true
          type: string
        firstNameColumn:
          description: The first name of the client.
          example: Frederick
          nullable: true
          type: string
        lastNameColumn:
          description: The last name of the person.
          example: Snow
          nullable: true
          type: string
        middleNameColumn:
          description: The middle name of the client.
          example: Philip
          nullable: true
          type: string
        priorityColumn:
          description: The middle name of the client.
          nullable: true
          type: string
        salutationColumn:
          description: The salutation of the person.
          example: Mr
          nullable: true
          type: string
        hasResult:
          description: Whether the result is available.
          example: true
          nullable: true
          type: boolean
        taskAction:
          description: Action status for the Concordance Task process.
          example: processfile
          nullable: true
          type: string
        inputFile:
          description: |
            The input file is posted as a file object in the form.
          example: test31.csv
          nullable: true
          type: string
        entityColumn:
          description: Full name corresponding to the matched entity.
          example: FACTSET RESEARCH SYSTEMS INC.
          nullable: true
          type: string
        status:
          description: Status of the Concordance Task. If the value is "SUCCESS",
            you can move to the subsequent /entity-decisions endpoint to retrieve
            the results.
          enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
          - BAD_REQUEST
          - ABORTED
          nullable: true
          type: string
        suffixColumn:
          description: |
            Name of the column in the input file that contains the person's suffix.
          example: Suffix
          nullable: true
          type: string
        taskSubmitTime:
          description: Time the Task was submitted in UTC.
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        taskId:
          description: The task identifier
          example: 31
          nullable: true
          type: integer
        taskName:
          description: The task name
          example: Analysis1
          nullable: true
          type: string
        universeId:
          description: The universe identifier
          example: 1
          nullable: true
          type: integer
        universeName:
          description: |
            Full name of the person associated with the `userSerial`.
          example: Jane Smith
          nullable: true
          type: string
        userSerial:
          description: user-serial of the person who initiated the entity task.
          example: FDSQAR_C-000000
          nullable: true
          type: string
      title: People Task
      type: object
    PeopleTaskStatus:
      description: |
        Concordance People Task Status object. Shows the settings and status of a taskId and some statistics on the matches.
      example:
        clientIdColumn: ClientId
        personNameColumn: personName
        suffixColumn: Suffix
        firstNameColumn: firstName
        universeId: 1
        middleNameColumn: middleName
        userSerial: FDSQAR_C-000000
        inputFile: test31.csv
        processStartTime: 2020-07-03T15:12:06.722Z
        decisionRate: 0
        mappedCount: 8
        salutationColumn: Salutation
        universeName: Jane Smith
        entityColumn: Entity
        userFullName: Jane Smith
        hasResult: true
        taskAction: processfile
        priorityColumn: Priority
        processDuration: 1.51603
        taskName: test31
        taskSubmitTime: 2020-06-24T22:02:21Z
        lastNameColumn: lastName
        taskId: 31
        inputCount: 11
        status: PENDING
      properties:
        clientIdColumn:
          description: Name of the column in the input file that contains a unique
            identifier supplied by the user.
          example: ClientId
          nullable: true
          type: string
        decisionRate:
          description: Percentage of mapped entities in the Input File.
          format: double
          nullable: true
          type: integer
        entityColumn:
          description: |
            Name of the column of the entity.
          example: Entity
          nullable: true
          type: string
        firstNameColumn:
          description: Name of the column in the input file that contains the first
            name.
          example: firstName
          nullable: true
          type: string
        hasResult:
          description: Whether the result is available.
          example: true
          nullable: true
          type: boolean
        inputCount:
          description: Number of records in the Input File.
          example: 11
          nullable: true
          type: integer
        inputFile:
          description: |
            The input file is posted as a file object in the form.
          example: test31.csv
          nullable: true
          type: string
        lastNameColumn:
          description: |
            Name of the column in the input file that contains the first name.
          example: lastName
          nullable: true
          type: string
        mappedCount:
          description: Number of records with status of MAPPED the Input File.
          example: 8
          nullable: true
          type: integer
        middleNameColumn:
          description: |
            Name of the column in the input file that contains the middle name.
          example: middleName
          nullable: true
          type: string
        personNameColumn:
          description: |
            Name of the column in the input file that contains the person name.
          example: personName
          nullable: true
          type: string
        priorityColumn:
          description: |
            Name of the column in the input file that contains the priority.
          example: Priority
          nullable: true
          type: string
        processStartTime:
          description: Process start time in UTC.
          example: 2020-07-03T15:12:06.722Z
          format: date-time
          nullable: true
          type: string
        processDuration:
          description: Process duration in seconds.
          example: 1.51603
          format: double
          nullable: true
          type: number
        salutationColumn:
          description: |
            Name of the column in the input file that contains the person's salutation.
          example: Salutation
          nullable: true
          type: string
        status:
          description: Status of the Concordance Task. If the value is "SUCCESS",
            you can move to the subsequent /entity-decisions endpoint to retrieve
            the results.
          enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
          - BAD_REQUEST
          - ABORTED
          nullable: true
          type: string
        suffixColumn:
          description: |
            Name of the column in the input file that contains the person's suffix.
          example: Suffix
          nullable: true
          type: string
        taskAction:
          description: Action status for the Concordance Task process.
          example: processfile
          nullable: true
          type: string
        taskId:
          description: Identifier denoting a specific Concordance task submitted by
            the user.
          example: 31
          nullable: true
          type: integer
        taskName:
          description: User-defined name for the task used to name the output file.
          example: test31
          nullable: true
          type: string
        taskSubmitTime:
          description: Time the Task was submitted in UTC.
          example: 2020-06-24T22:02:21Z
          format: date-time
          nullable: true
          type: string
        universeId:
          description: The universe identifier
          example: 1
          nullable: true
          type: integer
        universeName:
          description: |
            Full name of the person associated with the `userSerial`.
          example: Jane Smith
          nullable: true
          type: string
        userFullName:
          description: |
            Full name of the person associated with the `userSerial`.
          example: Jane Smith
          nullable: true
          type: string
        userSerial:
          description: user-serial of the person who initiated the entity task.
          example: FDSQAR_C-000000
          nullable: true
          type: string
      title: People Task Status
      type: object
    PeopleDecisions:
      description: |
        Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches.
      example:
        lastName: lastName
        clientLastName: Musk
        clientId: M7
        clientEntity: Tesla
        nameMatchString: factset
        suffix: Suffix
        title: Director.
        clientSalutation: Mr
        clientMiddleName: Federick
        activeRole: true
        mapStatus: MAPPED
        similarityScore: 1
        clientPersonName: Elon Musk
        personName: personName
        firstName: firstName
        clientFirstName: Elon
        clientSuffix: Sir
        clientPriority: HIGH
        middleName: middleName
        personId: 0DPHLH-E
        rowIndex: 0
        email: abc@email.com
        entity: FACTSET RESEARCH SYSTEMS INC.
        taskId: 31
      properties:
        activeRole:
          description: If the role is active or not of the person.
          example: true
          nullable: true
          type: boolean
        clientEntity:
          description: |
            Name of the entity of the client.
          example: Tesla
          nullable: true
          type: string
        clientId:
          description: Name of the column in the input file that contains a unique
            identifier supplied by the user.
          example: M7
          nullable: true
          type: string
        clientFirstName:
          description: First Name provided in the input file which is used in the
            `people-task` endpoint
          example: Elon
          nullable: true
          type: string
        clientLastName:
          description: Last Name provided in the input file which is used in the `people-task`
            endpoint
          example: Musk
          nullable: true
          type: string
        clientMiddleName:
          description: Middle Name provided in the input file which is used in the
            `people-task` endpoint
          example: Federick
          nullable: true
          type: string
        clientSalutation:
          description: Salutation provided in the input file which is used in the
            `people-task` endpoint
          example: Mr
          nullable: true
          type: string
        clientSuffix:
          description: Suffix provided in the input file which is used in the `people-task`
            endpoint
          example: Sir
          nullable: true
          type: string
        clientPriority:
          description: Priority provided in the input file which is used in the `people-task`
            endpoint
          example: HIGH
          nullable: true
          type: string
        clientPersonName:
          description: The name provided by the client.
          example: Elon Musk
          nullable: true
          type: string
        email:
          description: The email address of the client.
          example: abc@email.com
          nullable: true
          type: string
        entity:
          description: Full name corresponding to the matched entity.
          example: FACTSET RESEARCH SYSTEMS INC.
          nullable: true
          type: string
        mapStatus:
          description: "Concordance status of the submitted, where - \n  * MAPPED\
            \ - The requested Entity Name is successfully mapped to a FactSet Entity\
            \ Id (-E)\n  * UNMAPPED - The requested Entity Name is unmapped by FactSet.\n\
            \  * INDETERMINATE - The requested Entity Name has unable to make a mapping.\n"
          enum:
          - MAPPED
          - UNMAPPED
          - INDETERMINATE
          example: MAPPED
          nullable: true
          type: string
        firstName:
          description: Name of the column in the input file that contains the first
            name.
          example: firstName
          nullable: true
          type: string
        lastName:
          description: |
            Name of the column in the input file that contains the first name.
          example: lastName
          nullable: true
          type: string
        middleName:
          description: |
            Name of the column in the input file that contains the middle name.
          example: middleName
          nullable: true
          type: string
        personId:
          description: The id of the person.
          example: 0DPHLH-E
          nullable: true
          type: string
        nameMatchString:
          description: String on which the Concordance algorithm mapped the submitted
            entity.
          example: factset
          nullable: true
          type: string
        personName:
          description: |
            Name of the column in the input file that contains the person name.
          example: personName
          nullable: true
          type: string
        suffix:
          description: |
            Name of the column in the input file that contains the person's suffix.
          example: Suffix
          nullable: true
          type: string
        similarityScore:
          description: |
            Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity.
          example: 1
          format: double
          nullable: true
          type: number
        rowIndex:
          description: Row number for match in the request or input file.
          nullable: true
          type: integer
        taskId:
          description: Identifier denoting a specific Concordance task submitted by
            the user.
          example: 31
          nullable: true
          type: integer
        title:
          description: The title of the person.
          example: Director.
          nullable: true
          type: string
      title: Entity Task Status
      type: object
    errorResponse:
      properties:
        status:
          description: status
          example: Bad Request
          type: string
        timestamp:
          description: Timestamp in YYYY-MM-DD HH:MM:SS.SSS
          format: date-time
          type: string
        path:
          description: The Endpoint path {package}/version/{endpoint}
          example: /factset-concordance/v2/{endpoint}
          type: string
        message:
          description: The plain text error message
          example: Validation Error
          type: string
        subErrors:
          $ref: '#/components/schemas/errorResponse_subErrors'
      title: Error Response
      type: object
    inline_object:
      properties:
        universeId:
          description: The id of the universe that entities should be mapped to. Reference
            the `/universe` endpoint to create a universe, or view available universes
            via `/universes`.
          example: 1
          type: integer
        taskName:
          description: User defined name for the task that will be used to name the
            output files.
          example: test31
          type: string
        inputFile:
          description: |
            The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.
          format: binary
          type: string
        clientIdColumn:
          description: |
            Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a "clientId". This clientId can be used to create custom mappings or references.
          example: ClientId
          type: string
        nameColumn:
          description: |
            Header name of the column in the input file that contains the Entity Name to be matched.
          example: NAME
          type: string
        countryColumn:
          description: |
            Header Name of the column in the input file that contains the country's ISO Code. This is used to filter the candidates before taking a match decision.
          example: COUNTRY
          type: string
        urlColumn:
          description: |
            Header Name of the column in the input file that contains the Entity's URL. URL corresponding to the entity name that is used when evaluating candidates for a match.
          example: URL
          type: string
        stateColumn:
          description: |
            Header Name of the column in the input file that contains the two letter State Code of the state or province where the Entity is located. Currently, only US state codes are supported.
          example: STATE
          type: string
        includeEntityType:
          description: |
            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**
          items:
            example: PUB
            maxLength: 3
            minLength: 3
            type: string
          type: array
        excludeEntityType:
          description: |
            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Entities with these types will be excluded from the decisions.
            It is a global option used to filter the candidates before taking a match decision.
            Candidates with an entity type specified will *not* be considered for the final match result.
            **Do not include within `inputFile`.**
          items:
            example: EXT
            maxLength: 3
            minLength: 3
            type: string
          type: array
        includeEntitySubType:
          description: |
            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**
          items:
            example: PR
            maxLength: 2
            minLength: 2
            type: string
          type: array
        excludeEntitySubType:
          description: |
            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.
            **Do not include within `inputFile`.**
          items:
            example: IB
            maxLength: 2
            minLength: 2
            type: string
          type: array
      required:
      - clientIdColumn
      - inputFile
      - nameColumn
      - taskName
      - universeId
      type: object
    inline_object_1:
      properties:
        universeId:
          description: The id of the universe that entities should be mapped to. Reference
            the `/universe` endpoint to create a universe, or view available universes
            via `/universes`.
          example: 1
          type: integer
        taskName:
          description: User defined name for the task that will be used to name the
            output files.
          example: test31
          type: string
        inputFile:
          description: |
            The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.
          format: binary
          type: string
        clientIdColumn:
          description: |
            Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a "clientId". This clientId can be used to create custom mappings or references.
          example: ClientId
          type: string
        entityColumn:
          description: |
            Header name of the column in the input file that contains the Entity Name to be matched.
          example: Microsoft
          type: string
        firstNameColumn:
          description: "First name of the person.**Do not include with `personNameColumn`**.\
            \ \n"
          example: Bill
          type: string
        lastNameColumn:
          description: |
            Lat name of the person.**Do not include with `personNameColumn`**.
          example: Gates
          type: string
        middleNameColumn:
          description: |
            Middle name of the person.**Do not include within `personNameColumn`**.
          example: Henry
          type: string
        personNameColumn:
          description: |
            Header name of the column in the input file that contains the name of the person to be matched. **Do not include with `firstNameColumn` and `lastNameColumn`.**
          example: Bill Gates
          type: string
        priorityColumn:
          description: |
            Priority associated to the clientId. Used for manual mapping.
          example: HIGH
          type: string
        salutationColumn:
          description: |
            The salutation of the person.**Do not include with `personNameColumn`**.
          example: Mr.
          type: string
        suffixColumn:
          description: |
            A name suffix, that follows a person's full name and provides additional information about the person.**Do not include with `personNameColumn`**.
          example: HIGH
          type: string
      required:
      - clientIdColumn
      - entityColumn
      - inputFile
      - taskName
      - universeId
      type: object
    EntityMatchRequest_input:
      example:
        country: US
        clientId: abc-123
        name: Amazon
        state: CT
        url: www.amazon.com
      properties:
        name:
          description: The Name of the entity to match.
          example: Amazon
          type: string
        clientId:
          description: |
            A unique identifier supplied by the user. ClientId is saved to the user's Concordance universe and will be used as the identifier for that entity within the universe.
          example: abc-123
          type: string
        country:
          description: |
            ISO2 country code corresponding to the entity name that is used when evaluating candidates for a match. For a list of ISO Country codes, visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).
          example: US
          maxLength: 2
          minLength: 2
          type: string
        state:
          description: |
            Two-character state code corresponding to the entity name that is used when evaluating candidates for a match. Currently, only US state codes are supported.Two character state or province code to filter on.
          example: CT
          maxLength: 2
          minLength: 2
          type: string
        url:
          description: |
            URL corresponding to the entity name that is used when evaluating candidates for a match.
          example: www.amazon.com
          type: string
      required:
      - name
      type: object
    PeopleMatchRequest_input:
      example:
        personName: Bill Gates
        firstName: Bill
        lastName: Gates
        clientId: abc-123
        middleName: Henry
        salutation: Mr
        suffix: III
        entity: Microsoft
      properties:
        personName:
          description: The People name to match.
          example: Bill Gates
          type: string
        clientId:
          description: |
            A unique identifier supplied by the user. ClientId is saved to the user's Concordance universe and will be used as the identifier for that entity within the universe.
          example: abc-123
          type: string
        salutation:
          description: |
            The salutation is same as the normal salutation we use .The salutation can be Mr, Mrs.The salutation should not be given along with personName.
          example: Mr
          type: string
        firstName:
          description: |
            The first name of the person. This field should not be given along with personName.
          example: Bill
          type: string
        middleName:
          description: |
            The middle name of the person. This field should not be given along with personName.
          example: Henry
          type: string
        lastName:
          description: |
            The last name of the person. This field should not be given along with personName.
          example: Gates
          type: string
        suffix:
          description: |
            The suffix of person's name. This field should not be given along with personName.
          example: III
          type: string
        entity:
          description: |
            The enity of the Person.
          example: Microsoft
          type: string
      type: object
    ErrorResponse_subErrors:
      description: Sub-errors related to the error message. Null if not applicable.
      properties:
        object:
          description: the operation ID
          type: string
        field:
          description: Parameter Field Name
          type: string
        message:
          description: Error message
          type: string
        rejectedValue:
          description: Rejected Values in an Array
          items:
            type: string
          type: array
      type: object
    errorResponse_subErrors:
      description: Sub-Errors related to the error message. Null if not applicable.
      properties:
        object:
          description: The operation ID
          type: string
        field:
          description: Parameter Field Name
          type: string
        message:
          description: Error message
          type: string
        rejectedValue:
          description: Rejected Values in an Array
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

