/*
 * FactSet Concordance API
 * The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p> 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches. 
 */
@ApiModel(description = "Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches. ")
@JsonPropertyOrder({
  EntityTaskStatus.JSON_PROPERTY_TASK_ID,
  EntityTaskStatus.JSON_PROPERTY_TASK_NAME,
  EntityTaskStatus.JSON_PROPERTY_TASK_ACTION,
  EntityTaskStatus.JSON_PROPERTY_STATUS,
  EntityTaskStatus.JSON_PROPERTY_INPUT_FILE,
  EntityTaskStatus.JSON_PROPERTY_CLIENT_ID_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_NAME_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_COUNTRY_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_STATE_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_URL_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_HAS_RESULT,
  EntityTaskStatus.JSON_PROPERTY_TASK_SUBMIT_TIME,
  EntityTaskStatus.JSON_PROPERTY_MESSAGE,
  EntityTaskStatus.JSON_PROPERTY_INPUT_COUNT,
  EntityTaskStatus.JSON_PROPERTY_MAPPED_COUNT,
  EntityTaskStatus.JSON_PROPERTY_UNMAPPED_COUNT,
  EntityTaskStatus.JSON_PROPERTY_INDETERMINATE_COUNT,
  EntityTaskStatus.JSON_PROPERTY_PROCESS_START_TIME,
  EntityTaskStatus.JSON_PROPERTY_PROCESS_DURATION,
  EntityTaskStatus.JSON_PROPERTY_TRY_COUNT,
  EntityTaskStatus.JSON_PROPERTY_DECISION_RATE,
  EntityTaskStatus.JSON_PROPERTY_ERROR,
  EntityTaskStatus.JSON_PROPERTY_ERROR_TITLE,
  EntityTaskStatus.JSON_PROPERTY_INCLUDE_ENTITY_TYPE,
  EntityTaskStatus.JSON_PROPERTY_EXCLUDE_ENTITY_TYPE,
  EntityTaskStatus.JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE,
  EntityTaskStatus.JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE,
  EntityTaskStatus.JSON_PROPERTY_USER_SERIAL,
  EntityTaskStatus.JSON_PROPERTY_USER_FULL_NAME,
  EntityTaskStatus.JSON_PROPERTY_UNIVERSE_ID,
  EntityTaskStatus.JSON_PROPERTY_UNIVERSE_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntityTaskStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TASK_ID = "taskId";
  private Integer taskId;

  public static final String JSON_PROPERTY_TASK_NAME = "taskName";
  private String taskName;

  public static final String JSON_PROPERTY_TASK_ACTION = "taskAction";
  private String taskAction;

  /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   */
  public enum StatusEnum {
    PENDING("PENDING"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    SUCCESS("SUCCESS"),
    
    FAILURE("FAILURE"),
    
    BAD_REQUEST("BAD_REQUEST"),
    
    ABORTED("ABORTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_INPUT_FILE = "inputFile";
  private String inputFile;

  public static final String JSON_PROPERTY_CLIENT_ID_COLUMN = "clientIdColumn";
  private String clientIdColumn;

  public static final String JSON_PROPERTY_NAME_COLUMN = "nameColumn";
  private String nameColumn;

  public static final String JSON_PROPERTY_COUNTRY_COLUMN = "countryColumn";
  private String countryColumn;

  public static final String JSON_PROPERTY_STATE_COLUMN = "stateColumn";
  private String stateColumn;

  public static final String JSON_PROPERTY_URL_COLUMN = "urlColumn";
  private String urlColumn;

  public static final String JSON_PROPERTY_HAS_RESULT = "hasResult";
  private Boolean hasResult;

  public static final String JSON_PROPERTY_TASK_SUBMIT_TIME = "taskSubmitTime";
  private OffsetDateTime taskSubmitTime;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_INPUT_COUNT = "inputCount";
  private Integer inputCount;

  public static final String JSON_PROPERTY_MAPPED_COUNT = "mappedCount";
  private Integer mappedCount;

  public static final String JSON_PROPERTY_UNMAPPED_COUNT = "unmappedCount";
  private Integer unmappedCount;

  public static final String JSON_PROPERTY_INDETERMINATE_COUNT = "indeterminateCount";
  private Integer indeterminateCount;

  public static final String JSON_PROPERTY_PROCESS_START_TIME = "processStartTime";
  private OffsetDateTime processStartTime;

  public static final String JSON_PROPERTY_PROCESS_DURATION = "processDuration";
  private Double processDuration;

  public static final String JSON_PROPERTY_TRY_COUNT = "tryCount";
  private Integer tryCount;

  public static final String JSON_PROPERTY_DECISION_RATE = "decisionRate";
  private Double decisionRate;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public static final String JSON_PROPERTY_ERROR_TITLE = "errorTitle";
  private String errorTitle;

  public static final String JSON_PROPERTY_INCLUDE_ENTITY_TYPE = "includeEntityType";
  private java.util.List<String> includeEntityType = null;

  public static final String JSON_PROPERTY_EXCLUDE_ENTITY_TYPE = "excludeEntityType";
  private java.util.List<String> excludeEntityType = null;

  public static final String JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE = "includeEntitySubType";
  private java.util.List<String> includeEntitySubType = null;

  public static final String JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE = "excludeEntitySubType";
  private java.util.List<String> excludeEntitySubType = null;

  public static final String JSON_PROPERTY_USER_SERIAL = "userSerial";
  private String userSerial;

  public static final String JSON_PROPERTY_USER_FULL_NAME = "userFullName";
  private String userFullName;

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private Integer universeId;

  public static final String JSON_PROPERTY_UNIVERSE_NAME = "universeName";
  private String universeName;

  public EntityTaskStatus() { 
  }

  public EntityTaskStatus taskId(Integer taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Identifier denoting a specific Concordance task submitted by the user.
   * @return taskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "31", value = "Identifier denoting a specific Concordance task submitted by the user.")
  @JsonProperty(JSON_PROPERTY_TASK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTaskId() {
    return taskId;
  }


  @JsonProperty(JSON_PROPERTY_TASK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskId(Integer taskId) {
    this.taskId = taskId;
  }


  public EntityTaskStatus taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * User-defined name for the task used to name the output file.
   * @return taskName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test31", value = "User-defined name for the task used to name the output file.")
  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskName() {
    return taskName;
  }


  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }


  public EntityTaskStatus taskAction(String taskAction) {
    this.taskAction = taskAction;
    return this;
  }

   /**
   * Action status for the Concordance Task process.
   * @return taskAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "processfile", value = "Action status for the Concordance Task process.")
  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskAction() {
    return taskAction;
  }


  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskAction(String taskAction) {
    this.taskAction = taskAction;
  }


  public EntityTaskStatus status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the Concordance Task. If the value is \"SUCCESS\", you can move to the subsequent /entity-decisions endpoint to retrieve the results.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public EntityTaskStatus inputFile(String inputFile) {
    this.inputFile = inputFile;
    return this;
  }

   /**
   * The input file is posted as a file object in the form. 
   * @return inputFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test31.csv", value = "The input file is posted as a file object in the form. ")
  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInputFile() {
    return inputFile;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputFile(String inputFile) {
    this.inputFile = inputFile;
  }


  public EntityTaskStatus clientIdColumn(String clientIdColumn) {
    this.clientIdColumn = clientIdColumn;
    return this;
  }

   /**
   * Name of the column in the input file that contains a unique identifier supplied by the user.
   * @return clientIdColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ClientId", value = "Name of the column in the input file that contains a unique identifier supplied by the user.")
  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientIdColumn() {
    return clientIdColumn;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientIdColumn(String clientIdColumn) {
    this.clientIdColumn = clientIdColumn;
  }


  public EntityTaskStatus nameColumn(String nameColumn) {
    this.nameColumn = nameColumn;
    return this;
  }

   /**
   * Name of the column in the input file that contains the entity name to be matched.
   * @return nameColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Name", value = "Name of the column in the input file that contains the entity name to be matched.")
  @JsonProperty(JSON_PROPERTY_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNameColumn() {
    return nameColumn;
  }


  @JsonProperty(JSON_PROPERTY_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNameColumn(String nameColumn) {
    this.nameColumn = nameColumn;
  }


  public EntityTaskStatus countryColumn(String countryColumn) {
    this.countryColumn = countryColumn;
    return this;
  }

   /**
   * Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match. 
   * @return countryColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Country", value = "Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match. ")
  @JsonProperty(JSON_PROPERTY_COUNTRY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryColumn() {
    return countryColumn;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryColumn(String countryColumn) {
    this.countryColumn = countryColumn;
  }


  public EntityTaskStatus stateColumn(String stateColumn) {
    this.stateColumn = stateColumn;
    return this;
  }

   /**
   * Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match. 
   * @return stateColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "State", value = "Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match. ")
  @JsonProperty(JSON_PROPERTY_STATE_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStateColumn() {
    return stateColumn;
  }


  @JsonProperty(JSON_PROPERTY_STATE_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateColumn(String stateColumn) {
    this.stateColumn = stateColumn;
  }


  public EntityTaskStatus urlColumn(String urlColumn) {
    this.urlColumn = urlColumn;
    return this;
  }

   /**
   * Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match. 
   * @return urlColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "URL", value = "Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match. ")
  @JsonProperty(JSON_PROPERTY_URL_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrlColumn() {
    return urlColumn;
  }


  @JsonProperty(JSON_PROPERTY_URL_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlColumn(String urlColumn) {
    this.urlColumn = urlColumn;
  }


  public EntityTaskStatus hasResult(Boolean hasResult) {
    this.hasResult = hasResult;
    return this;
  }

   /**
   * Flag denoting the taskId has a result.
   * @return hasResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Flag denoting the taskId has a result.")
  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasResult() {
    return hasResult;
  }


  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasResult(Boolean hasResult) {
    this.hasResult = hasResult;
  }


  public EntityTaskStatus taskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = taskSubmitTime;
    return this;
  }

   /**
   * Time the Task was submitted in UTC.
   * @return taskSubmitTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-06-24T22:02:21Z", value = "Time the Task was submitted in UTC.")
  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTaskSubmitTime() {
    return taskSubmitTime;
  }


  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = taskSubmitTime;
  }


  public EntityTaskStatus message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Textual message for the status.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Waiting for the input file", value = "Textual message for the status.")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public EntityTaskStatus inputCount(Integer inputCount) {
    this.inputCount = inputCount;
    return this;
  }

   /**
   * Number of records in the Input File.
   * @return inputCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11", value = "Number of records in the Input File.")
  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInputCount() {
    return inputCount;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputCount(Integer inputCount) {
    this.inputCount = inputCount;
  }


  public EntityTaskStatus mappedCount(Integer mappedCount) {
    this.mappedCount = mappedCount;
    return this;
  }

   /**
   * Number of records with status of MAPPED the Input File.
   * @return mappedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "Number of records with status of MAPPED the Input File.")
  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMappedCount() {
    return mappedCount;
  }


  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMappedCount(Integer mappedCount) {
    this.mappedCount = mappedCount;
  }


  public EntityTaskStatus unmappedCount(Integer unmappedCount) {
    this.unmappedCount = unmappedCount;
    return this;
  }

   /**
   * Number of records with status of UNMAPPED the Input File.
   * @return unmappedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Number of records with status of UNMAPPED the Input File.")
  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUnmappedCount() {
    return unmappedCount;
  }


  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnmappedCount(Integer unmappedCount) {
    this.unmappedCount = unmappedCount;
  }


  public EntityTaskStatus indeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
    return this;
  }

   /**
   * Number of records with status of INDETERMINATE the Input File.
   * @return indeterminateCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Number of records with status of INDETERMINATE the Input File.")
  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndeterminateCount() {
    return indeterminateCount;
  }


  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
  }


  public EntityTaskStatus processStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = processStartTime;
    return this;
  }

   /**
   * Process start time in UTC.
   * @return processStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-07-03T15:12:06.722Z", value = "Process start time in UTC.")
  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getProcessStartTime() {
    return processStartTime;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = processStartTime;
  }


  public EntityTaskStatus processDuration(Double processDuration) {
    this.processDuration = processDuration;
    return this;
  }

   /**
   * Process duration in seconds.
   * @return processDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.51603", value = "Process duration in seconds.")
  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getProcessDuration() {
    return processDuration;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDuration(Double processDuration) {
    this.processDuration = processDuration;
  }


  public EntityTaskStatus tryCount(Integer tryCount) {
    this.tryCount = tryCount;
    return this;
  }

   /**
   * Number of tries made so far for the request.
   * @return tryCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Number of tries made so far for the request.")
  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTryCount() {
    return tryCount;
  }


  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTryCount(Integer tryCount) {
    this.tryCount = tryCount;
  }


  public EntityTaskStatus decisionRate(Double decisionRate) {
    this.decisionRate = decisionRate;
    return this;
  }

   /**
   * Percentage of mapped entities in the Input File.
   * @return decisionRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.7272727272727273", value = "Percentage of mapped entities in the Input File.")
  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDecisionRate() {
    return decisionRate;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionRate(Double decisionRate) {
    this.decisionRate = decisionRate;
  }


  public EntityTaskStatus error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
  }


  public EntityTaskStatus errorTitle(String errorTitle) {
    this.errorTitle = errorTitle;
    return this;
  }

   /**
   * Get errorTitle
   * @return errorTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorTitle() {
    return errorTitle;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorTitle(String errorTitle) {
    this.errorTitle = errorTitle;
  }


  public EntityTaskStatus includeEntityType(java.util.List<String> includeEntityType) {
    this.includeEntityType = includeEntityType;
    return this;
  }

  public EntityTaskStatus addIncludeEntityTypeItem(String includeEntityTypeItem) {
    if (this.includeEntityType == null) {
      this.includeEntityType = new java.util.ArrayList<>();
    }
    this.includeEntityType.add(includeEntityTypeItem);
    return this;
  }

   /**
   * Requested Entity types to include. 
   * @return includeEntityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity types to include. ")
  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIncludeEntityType() {
    return includeEntityType;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeEntityType(java.util.List<String> includeEntityType) {
    this.includeEntityType = includeEntityType;
  }


  public EntityTaskStatus excludeEntityType(java.util.List<String> excludeEntityType) {
    this.excludeEntityType = excludeEntityType;
    return this;
  }

  public EntityTaskStatus addExcludeEntityTypeItem(String excludeEntityTypeItem) {
    if (this.excludeEntityType == null) {
      this.excludeEntityType = new java.util.ArrayList<>();
    }
    this.excludeEntityType.add(excludeEntityTypeItem);
    return this;
  }

   /**
   * Requested Entity types to exclude. 
   * @return excludeEntityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity types to exclude. ")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getExcludeEntityType() {
    return excludeEntityType;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeEntityType(java.util.List<String> excludeEntityType) {
    this.excludeEntityType = excludeEntityType;
  }


  public EntityTaskStatus includeEntitySubType(java.util.List<String> includeEntitySubType) {
    this.includeEntitySubType = includeEntitySubType;
    return this;
  }

  public EntityTaskStatus addIncludeEntitySubTypeItem(String includeEntitySubTypeItem) {
    if (this.includeEntitySubType == null) {
      this.includeEntitySubType = new java.util.ArrayList<>();
    }
    this.includeEntitySubType.add(includeEntitySubTypeItem);
    return this;
  }

   /**
   * Requested Entity subtypes to include. 
   * @return includeEntitySubType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity subtypes to include. ")
  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIncludeEntitySubType() {
    return includeEntitySubType;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeEntitySubType(java.util.List<String> includeEntitySubType) {
    this.includeEntitySubType = includeEntitySubType;
  }


  public EntityTaskStatus excludeEntitySubType(java.util.List<String> excludeEntitySubType) {
    this.excludeEntitySubType = excludeEntitySubType;
    return this;
  }

  public EntityTaskStatus addExcludeEntitySubTypeItem(String excludeEntitySubTypeItem) {
    if (this.excludeEntitySubType == null) {
      this.excludeEntitySubType = new java.util.ArrayList<>();
    }
    this.excludeEntitySubType.add(excludeEntitySubTypeItem);
    return this;
  }

   /**
   * Requested Entity subtypes to exclude. 
   * @return excludeEntitySubType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity subtypes to exclude. ")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getExcludeEntitySubType() {
    return excludeEntitySubType;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeEntitySubType(java.util.List<String> excludeEntitySubType) {
    this.excludeEntitySubType = excludeEntitySubType;
  }


  public EntityTaskStatus userSerial(String userSerial) {
    this.userSerial = userSerial;
    return this;
  }

   /**
   * user-serial of the person who initiated the entity task.
   * @return userSerial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FDSQAR_C-000000", value = "user-serial of the person who initiated the entity task.")
  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserSerial() {
    return userSerial;
  }


  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserSerial(String userSerial) {
    this.userSerial = userSerial;
  }


  public EntityTaskStatus userFullName(String userFullName) {
    this.userFullName = userFullName;
    return this;
  }

   /**
   * Full name of the person associated with the &#x60;userSerial&#x60;. 
   * @return userFullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jane Smith", value = "Full name of the person associated with the `userSerial`. ")
  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserFullName() {
    return userFullName;
  }


  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserFullName(String userFullName) {
    this.userFullName = userFullName;
  }


  public EntityTaskStatus universeId(Integer universeId) {
    this.universeId = universeId;
    return this;
  }

   /**
   * The universe id this task was submitted to. 
   * @return universeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The universe id this task was submitted to. ")
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniverseId() {
    return universeId;
  }


  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniverseId(Integer universeId) {
    this.universeId = universeId;
  }


  public EntityTaskStatus universeName(String universeName) {
    this.universeName = universeName;
    return this;
  }

   /**
   * The name of the universe this task was submitted to. 
   * @return universeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My Universe", value = "The name of the universe this task was submitted to. ")
  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUniverseName() {
    return universeName;
  }


  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniverseName(String universeName) {
    this.universeName = universeName;
  }


  /**
   * Return true if this EntityTaskStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityTaskStatus entityTaskStatus = (EntityTaskStatus) o;
    return Objects.equals(this.taskId, entityTaskStatus.taskId) &&
        Objects.equals(this.taskName, entityTaskStatus.taskName) &&
        Objects.equals(this.taskAction, entityTaskStatus.taskAction) &&
        Objects.equals(this.status, entityTaskStatus.status) &&
        Objects.equals(this.inputFile, entityTaskStatus.inputFile) &&
        Objects.equals(this.clientIdColumn, entityTaskStatus.clientIdColumn) &&
        Objects.equals(this.nameColumn, entityTaskStatus.nameColumn) &&
        Objects.equals(this.countryColumn, entityTaskStatus.countryColumn) &&
        Objects.equals(this.stateColumn, entityTaskStatus.stateColumn) &&
        Objects.equals(this.urlColumn, entityTaskStatus.urlColumn) &&
        Objects.equals(this.hasResult, entityTaskStatus.hasResult) &&
        Objects.equals(this.taskSubmitTime, entityTaskStatus.taskSubmitTime) &&
        Objects.equals(this.message, entityTaskStatus.message) &&
        Objects.equals(this.inputCount, entityTaskStatus.inputCount) &&
        Objects.equals(this.mappedCount, entityTaskStatus.mappedCount) &&
        Objects.equals(this.unmappedCount, entityTaskStatus.unmappedCount) &&
        Objects.equals(this.indeterminateCount, entityTaskStatus.indeterminateCount) &&
        Objects.equals(this.processStartTime, entityTaskStatus.processStartTime) &&
        Objects.equals(this.processDuration, entityTaskStatus.processDuration) &&
        Objects.equals(this.tryCount, entityTaskStatus.tryCount) &&
        Objects.equals(this.decisionRate, entityTaskStatus.decisionRate) &&
        Objects.equals(this.error, entityTaskStatus.error) &&
        Objects.equals(this.errorTitle, entityTaskStatus.errorTitle) &&
        Objects.equals(this.includeEntityType, entityTaskStatus.includeEntityType) &&
        Objects.equals(this.excludeEntityType, entityTaskStatus.excludeEntityType) &&
        Objects.equals(this.includeEntitySubType, entityTaskStatus.includeEntitySubType) &&
        Objects.equals(this.excludeEntitySubType, entityTaskStatus.excludeEntitySubType) &&
        Objects.equals(this.userSerial, entityTaskStatus.userSerial) &&
        Objects.equals(this.userFullName, entityTaskStatus.userFullName) &&
        Objects.equals(this.universeId, entityTaskStatus.universeId) &&
        Objects.equals(this.universeName, entityTaskStatus.universeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskId, taskName, taskAction, status, inputFile, clientIdColumn, nameColumn, countryColumn, stateColumn, urlColumn, hasResult, taskSubmitTime, message, inputCount, mappedCount, unmappedCount, indeterminateCount, processStartTime, processDuration, tryCount, decisionRate, error, errorTitle, includeEntityType, excludeEntityType, includeEntitySubType, excludeEntitySubType, userSerial, userFullName, universeId, universeName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityTaskStatus {\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskAction: ").append(toIndentedString(taskAction)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    clientIdColumn: ").append(toIndentedString(clientIdColumn)).append("\n");
    sb.append("    nameColumn: ").append(toIndentedString(nameColumn)).append("\n");
    sb.append("    countryColumn: ").append(toIndentedString(countryColumn)).append("\n");
    sb.append("    stateColumn: ").append(toIndentedString(stateColumn)).append("\n");
    sb.append("    urlColumn: ").append(toIndentedString(urlColumn)).append("\n");
    sb.append("    hasResult: ").append(toIndentedString(hasResult)).append("\n");
    sb.append("    taskSubmitTime: ").append(toIndentedString(taskSubmitTime)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    inputCount: ").append(toIndentedString(inputCount)).append("\n");
    sb.append("    mappedCount: ").append(toIndentedString(mappedCount)).append("\n");
    sb.append("    unmappedCount: ").append(toIndentedString(unmappedCount)).append("\n");
    sb.append("    indeterminateCount: ").append(toIndentedString(indeterminateCount)).append("\n");
    sb.append("    processStartTime: ").append(toIndentedString(processStartTime)).append("\n");
    sb.append("    processDuration: ").append(toIndentedString(processDuration)).append("\n");
    sb.append("    tryCount: ").append(toIndentedString(tryCount)).append("\n");
    sb.append("    decisionRate: ").append(toIndentedString(decisionRate)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    errorTitle: ").append(toIndentedString(errorTitle)).append("\n");
    sb.append("    includeEntityType: ").append(toIndentedString(includeEntityType)).append("\n");
    sb.append("    excludeEntityType: ").append(toIndentedString(excludeEntityType)).append("\n");
    sb.append("    includeEntitySubType: ").append(toIndentedString(includeEntitySubType)).append("\n");
    sb.append("    excludeEntitySubType: ").append(toIndentedString(excludeEntitySubType)).append("\n");
    sb.append("    userSerial: ").append(toIndentedString(userSerial)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("    universeName: ").append(toIndentedString(universeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

