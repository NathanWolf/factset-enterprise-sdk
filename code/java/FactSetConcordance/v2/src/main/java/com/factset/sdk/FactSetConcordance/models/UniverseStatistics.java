/*
 * FactSet Concordance API
 * The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p> 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * Mapping statistics for a given universe
 */
@ApiModel(description = "Mapping statistics for a given universe")
@JsonPropertyOrder({
  UniverseStatistics.JSON_PROPERTY_TOTAL_COUNT,
  UniverseStatistics.JSON_PROPERTY_MAPPED_COUNT,
  UniverseStatistics.JSON_PROPERTY_UNMAPPED_COUNT,
  UniverseStatistics.JSON_PROPERTY_INDETERMINATE_COUNT,
  UniverseStatistics.JSON_PROPERTY_UNIVERSE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UniverseStatistics implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public static final String JSON_PROPERTY_MAPPED_COUNT = "mappedCount";
  private Integer mappedCount;

  public static final String JSON_PROPERTY_UNMAPPED_COUNT = "unmappedCount";
  private Integer unmappedCount;

  public static final String JSON_PROPERTY_INDETERMINATE_COUNT = "indeterminateCount";
  private Integer indeterminateCount;

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private Integer universeId;

  public UniverseStatistics() { 
  }

  public UniverseStatistics totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public UniverseStatistics mappedCount(Integer mappedCount) {
    this.mappedCount = mappedCount;
    return this;
  }

   /**
   * Get mappedCount
   * @return mappedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "")
  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMappedCount() {
    return mappedCount;
  }


  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMappedCount(Integer mappedCount) {
    this.mappedCount = mappedCount;
  }


  public UniverseStatistics unmappedCount(Integer unmappedCount) {
    this.unmappedCount = unmappedCount;
    return this;
  }

   /**
   * Get unmappedCount
   * @return unmappedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUnmappedCount() {
    return unmappedCount;
  }


  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnmappedCount(Integer unmappedCount) {
    this.unmappedCount = unmappedCount;
  }


  public UniverseStatistics indeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
    return this;
  }

   /**
   * Get indeterminateCount
   * @return indeterminateCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndeterminateCount() {
    return indeterminateCount;
  }


  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
  }


  public UniverseStatistics universeId(Integer universeId) {
    this.universeId = universeId;
    return this;
  }

   /**
   * Get universeId
   * @return universeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUniverseId() {
    return universeId;
  }


  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniverseId(Integer universeId) {
    this.universeId = universeId;
  }


  /**
   * Return true if this UniverseStatistics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UniverseStatistics universeStatistics = (UniverseStatistics) o;
    return Objects.equals(this.totalCount, universeStatistics.totalCount) &&
        Objects.equals(this.mappedCount, universeStatistics.mappedCount) &&
        Objects.equals(this.unmappedCount, universeStatistics.unmappedCount) &&
        Objects.equals(this.indeterminateCount, universeStatistics.indeterminateCount) &&
        Objects.equals(this.universeId, universeStatistics.universeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, mappedCount, unmappedCount, indeterminateCount, universeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UniverseStatistics {\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    mappedCount: ").append(toIndentedString(mappedCount)).append("\n");
    sb.append("    unmappedCount: ").append(toIndentedString(unmappedCount)).append("\n");
    sb.append("    indeterminateCount: ").append(toIndentedString(indeterminateCount)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

