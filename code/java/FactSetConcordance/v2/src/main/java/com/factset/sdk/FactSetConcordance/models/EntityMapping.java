/*
 * FactSet Concordance API
 * The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p> 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * Concordance Company Entity Mapping object. Shows the mapping detail related to user&#39;s universe. 
 */
@ApiModel(description = "Concordance Company Entity Mapping object. Shows the mapping detail related to user's universe. ")
@JsonPropertyOrder({
  EntityMapping.JSON_PROPERTY_ENTITY_ID,
  EntityMapping.JSON_PROPERTY_ENTITY_NAME,
  EntityMapping.JSON_PROPERTY_CLIENT_ID,
  EntityMapping.JSON_PROPERTY_CLIENT_NAME,
  EntityMapping.JSON_PROPERTY_CLIENT_COUNTRY,
  EntityMapping.JSON_PROPERTY_CLIENT_STATE,
  EntityMapping.JSON_PROPERTY_CLIENT_URL,
  EntityMapping.JSON_PROPERTY_CREATED_TIME,
  EntityMapping.JSON_PROPERTY_UPDATED_TIME,
  EntityMapping.JSON_PROPERTY_MAP_STATUS,
  EntityMapping.JSON_PROPERTY_UNIVERSE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntityMapping implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private JsonNullable<String> entityId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_NAME = "entityName";
  private JsonNullable<String> entityName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private JsonNullable<String> clientId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_NAME = "clientName";
  private JsonNullable<String> clientName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_COUNTRY = "clientCountry";
  private JsonNullable<String> clientCountry = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_STATE = "clientState";
  private JsonNullable<String> clientState = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_URL = "clientUrl";
  private JsonNullable<String> clientUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_TIME = "createdTime";
  private JsonNullable<OffsetDateTime> createdTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_UPDATED_TIME = "updatedTime";
  private JsonNullable<OffsetDateTime> updatedTime = JsonNullable.<OffsetDateTime>undefined();

  /**
   * Current status of the entity mapping.
   */
  public enum MapStatusEnum {
    MAPPED("MAPPED"),
    
    UNMAPPED("UNMAPPED"),
    
    INDETERMINATE("INDETERMINATE");

    private String value;

    MapStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MapStatusEnum fromValue(String value) {
      for (MapStatusEnum b : MapStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_MAP_STATUS = "mapStatus";
  private JsonNullable<MapStatusEnum> mapStatus = JsonNullable.<MapStatusEnum>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private JsonNullable<Integer> universeId = JsonNullable.<Integer>undefined();

  public EntityMapping() { 
  }

  public EntityMapping entityId(String entityId) {
    this.entityId = JsonNullable.<String>of(entityId);
    return this;
  }

   /**
   * FactSet Entity Identifier of the entity matched to the submitted entity
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00456-E", value = "FactSet Entity Identifier of the entity matched to the submitted entity")
  @JsonIgnore

  public String getEntityId() {
        return entityId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEntityId_JsonNullable() {
    return entityId;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  public void setEntityId_JsonNullable(JsonNullable<String> entityId) {
    this.entityId = entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = JsonNullable.<String>of(entityId);
  }


  public EntityMapping entityName(String entityName) {
    this.entityName = JsonNullable.<String>of(entityName);
    return this;
  }

   /**
   * Full name corresponding to the matched entity.
   * @return entityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FactSet Inc.", value = "Full name corresponding to the matched entity.")
  @JsonIgnore

  public String getEntityName() {
        return entityName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEntityName_JsonNullable() {
    return entityName;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  public void setEntityName_JsonNullable(JsonNullable<String> entityName) {
    this.entityName = entityName;
  }

  public void setEntityName(String entityName) {
    this.entityName = JsonNullable.<String>of(entityName);
  }


  public EntityMapping clientId(String clientId) {
    this.clientId = JsonNullable.<String>of(clientId);
    return this;
  }

   /**
   * User-defined unique identifier provided by the user in the request
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "abc-1234", value = "User-defined unique identifier provided by the user in the request")
  @JsonIgnore

  public String getClientId() {
        return clientId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientId_JsonNullable() {
    return clientId;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  public void setClientId_JsonNullable(JsonNullable<String> clientId) {
    this.clientId = clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = JsonNullable.<String>of(clientId);
  }


  public EntityMapping clientName(String clientName) {
    this.clientName = JsonNullable.<String>of(clientName);
    return this;
  }

   /**
   * Name of the entity to match as specified in the request.
   * @return clientName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "factset", value = "Name of the entity to match as specified in the request.")
  @JsonIgnore

  public String getClientName() {
        return clientName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientName_JsonNullable() {
    return clientName;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  public void setClientName_JsonNullable(JsonNullable<String> clientName) {
    this.clientName = clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = JsonNullable.<String>of(clientName);
  }


  public EntityMapping clientCountry(String clientCountry) {
    this.clientCountry = JsonNullable.<String>of(clientCountry);
    return this;
  }

   /**
   * ISO2 country code specified in the request
   * @return clientCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "us", value = "ISO2 country code specified in the request")
  @JsonIgnore

  public String getClientCountry() {
        return clientCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientCountry_JsonNullable() {
    return clientCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_COUNTRY)
  public void setClientCountry_JsonNullable(JsonNullable<String> clientCountry) {
    this.clientCountry = clientCountry;
  }

  public void setClientCountry(String clientCountry) {
    this.clientCountry = JsonNullable.<String>of(clientCountry);
  }


  public EntityMapping clientState(String clientState) {
    this.clientState = JsonNullable.<String>of(clientState);
    return this;
  }

   /**
   * State code specified in the request
   * @return clientState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ct", value = "State code specified in the request")
  @JsonIgnore

  public String getClientState() {
        return clientState.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientState_JsonNullable() {
    return clientState;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  public void setClientState_JsonNullable(JsonNullable<String> clientState) {
    this.clientState = clientState;
  }

  public void setClientState(String clientState) {
    this.clientState = JsonNullable.<String>of(clientState);
  }


  public EntityMapping clientUrl(String clientUrl) {
    this.clientUrl = JsonNullable.<String>of(clientUrl);
    return this;
  }

   /**
   * URL specified in the request
   * @return clientUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "www.factset.com", value = "URL specified in the request")
  @JsonIgnore

  public String getClientUrl() {
        return clientUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientUrl_JsonNullable() {
    return clientUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_URL)
  public void setClientUrl_JsonNullable(JsonNullable<String> clientUrl) {
    this.clientUrl = clientUrl;
  }

  public void setClientUrl(String clientUrl) {
    this.clientUrl = JsonNullable.<String>of(clientUrl);
  }


  public EntityMapping createdTime(OffsetDateTime createdTime) {
    this.createdTime = JsonNullable.<OffsetDateTime>of(createdTime);
    return this;
  }

   /**
   * Time when entity was created in UTC.
   * @return createdTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-06-24T22:02:21Z", value = "Time when entity was created in UTC.")
  @JsonIgnore

  public OffsetDateTime getCreatedTime() {
        return createdTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreatedTime_JsonNullable() {
    return createdTime;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  public void setCreatedTime_JsonNullable(JsonNullable<OffsetDateTime> createdTime) {
    this.createdTime = createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = JsonNullable.<OffsetDateTime>of(createdTime);
  }


  public EntityMapping updatedTime(OffsetDateTime updatedTime) {
    this.updatedTime = JsonNullable.<OffsetDateTime>of(updatedTime);
    return this;
  }

   /**
   * Time when the submitted entity was last updated in UTC.
   * @return updatedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-06-24T22:02:21Z", value = "Time when the submitted entity was last updated in UTC.")
  @JsonIgnore

  public OffsetDateTime getUpdatedTime() {
        return updatedTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getUpdatedTime_JsonNullable() {
    return updatedTime;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_TIME)
  public void setUpdatedTime_JsonNullable(JsonNullable<OffsetDateTime> updatedTime) {
    this.updatedTime = updatedTime;
  }

  public void setUpdatedTime(OffsetDateTime updatedTime) {
    this.updatedTime = JsonNullable.<OffsetDateTime>of(updatedTime);
  }


  public EntityMapping mapStatus(MapStatusEnum mapStatus) {
    this.mapStatus = JsonNullable.<MapStatusEnum>of(mapStatus);
    return this;
  }

   /**
   * Current status of the entity mapping.
   * @return mapStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current status of the entity mapping.")
  @JsonIgnore

  public MapStatusEnum getMapStatus() {
        return mapStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAP_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MapStatusEnum> getMapStatus_JsonNullable() {
    return mapStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_MAP_STATUS)
  public void setMapStatus_JsonNullable(JsonNullable<MapStatusEnum> mapStatus) {
    this.mapStatus = mapStatus;
  }

  public void setMapStatus(MapStatusEnum mapStatus) {
    this.mapStatus = JsonNullable.<MapStatusEnum>of(mapStatus);
  }


  public EntityMapping universeId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
    return this;
  }

   /**
   * The universe this mapping belongs to. Only set in v2 endpoints 
   * @return universeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The universe this mapping belongs to. Only set in v2 endpoints ")
  @JsonIgnore

  public Integer getUniverseId() {
        return universeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUniverseId_JsonNullable() {
    return universeId;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  public void setUniverseId_JsonNullable(JsonNullable<Integer> universeId) {
    this.universeId = universeId;
  }

  public void setUniverseId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
  }


  /**
   * Return true if this EntityMapping object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityMapping entityMapping = (EntityMapping) o;
    return equalsNullable(this.entityId, entityMapping.entityId) &&
        equalsNullable(this.entityName, entityMapping.entityName) &&
        equalsNullable(this.clientId, entityMapping.clientId) &&
        equalsNullable(this.clientName, entityMapping.clientName) &&
        equalsNullable(this.clientCountry, entityMapping.clientCountry) &&
        equalsNullable(this.clientState, entityMapping.clientState) &&
        equalsNullable(this.clientUrl, entityMapping.clientUrl) &&
        equalsNullable(this.createdTime, entityMapping.createdTime) &&
        equalsNullable(this.updatedTime, entityMapping.updatedTime) &&
        equalsNullable(this.mapStatus, entityMapping.mapStatus) &&
        equalsNullable(this.universeId, entityMapping.universeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(entityId), hashCodeNullable(entityName), hashCodeNullable(clientId), hashCodeNullable(clientName), hashCodeNullable(clientCountry), hashCodeNullable(clientState), hashCodeNullable(clientUrl), hashCodeNullable(createdTime), hashCodeNullable(updatedTime), hashCodeNullable(mapStatus), hashCodeNullable(universeId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityMapping {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityName: ").append(toIndentedString(entityName)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientCountry: ").append(toIndentedString(clientCountry)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    clientUrl: ").append(toIndentedString(clientUrl)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("    mapStatus: ").append(toIndentedString(mapStatus)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

