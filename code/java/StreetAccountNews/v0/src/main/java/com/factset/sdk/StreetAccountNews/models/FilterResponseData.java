/*
 * StreetAccount API
 * Collection of endpoints for retrieving StreetAccount headlines and filters
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.StreetAccountNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.StreetAccountNews.models.FlattenedFilters;
import com.factset.sdk.StreetAccountNews.models.StructuredFilters;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.StreetAccountNews.JSON;


/**
 * FilterResponseData
 */
@JsonPropertyOrder({
  FilterResponseData.JSON_PROPERTY_STRUCTURED_FILTERS,
  FilterResponseData.JSON_PROPERTY_FLATTENED_FILTERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterResponseData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_STRUCTURED_FILTERS = "structuredFilters";
  private StructuredFilters structuredFilters;

  public static final String JSON_PROPERTY_FLATTENED_FILTERS = "flattenedFilters";
  private FlattenedFilters flattenedFilters;

  public FilterResponseData() { 
  }

  public FilterResponseData structuredFilters(StructuredFilters structuredFilters) {
    this.structuredFilters = structuredFilters;
    return this;
  }

   /**
   * Get structuredFilters
   * @return structuredFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STRUCTURED_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StructuredFilters getStructuredFilters() {
    return structuredFilters;
  }


  @JsonProperty(JSON_PROPERTY_STRUCTURED_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStructuredFilters(StructuredFilters structuredFilters) {
    this.structuredFilters = structuredFilters;
  }


  public FilterResponseData flattenedFilters(FlattenedFilters flattenedFilters) {
    this.flattenedFilters = flattenedFilters;
    return this;
  }

   /**
   * Get flattenedFilters
   * @return flattenedFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FLATTENED_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FlattenedFilters getFlattenedFilters() {
    return flattenedFilters;
  }


  @JsonProperty(JSON_PROPERTY_FLATTENED_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlattenedFilters(FlattenedFilters flattenedFilters) {
    this.flattenedFilters = flattenedFilters;
  }


  /**
   * Return true if this FilterResponse_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterResponseData filterResponseData = (FilterResponseData) o;
    return Objects.equals(this.structuredFilters, filterResponseData.structuredFilters) &&
        Objects.equals(this.flattenedFilters, filterResponseData.flattenedFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(structuredFilters, flattenedFilters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterResponseData {\n");
    sb.append("    structuredFilters: ").append(toIndentedString(structuredFilters)).append("\n");
    sb.append("    flattenedFilters: ").append(toIndentedString(flattenedFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

