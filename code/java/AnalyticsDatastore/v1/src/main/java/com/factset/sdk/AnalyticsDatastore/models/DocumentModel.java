/*
 * Analytics Datastore  API
 * Allow clients to fetch precalculated Analytics through predeterministic URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.AnalyticsDatastore.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.AnalyticsDatastore.models.StringOrNumberTagValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.AnalyticsDatastore.JSON;


/**
 * Document model
 */
@ApiModel(description = "Document model")
@JsonPropertyOrder({
  DocumentModel.JSON_PROPERTY_URL,
  DocumentModel.JSON_PROPERTY_PRODUCT_TYPE,
  DocumentModel.JSON_PROPERTY_TAGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentModel implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "productType";
  private String productType;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private java.util.Map<String, StringOrNumberTagValue> tags = null;

  public DocumentModel() { 
  }

  public DocumentModel url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The resolved URL pointing to the location of the underlying report
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://api.factset.com/analytics/datastore/cargo/v1/groups/a4186c50f8e74f979d271dd22298c901/objects/fe875bc4150542dea6bc237663a01a0d", value = "The resolved URL pointing to the location of the underlying report")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public DocumentModel productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * string property to denote what Product created this document.
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Publisher", value = "string property to denote what Product created this document.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductType() {
    return productType;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductType(String productType) {
    this.productType = productType;
  }


  public DocumentModel tags(java.util.Map<String, StringOrNumberTagValue> tags) {
    this.tags = tags;
    return this;
  }

  public DocumentModel putTagsItem(String key, StringOrNumberTagValue tagsItem) {
    if (this.tags == null) {
      this.tags = new java.util.HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * The documents tags, represented in a key value format with the tag name as the key; and the tag&#39;s value as the value
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"account\":\"TEST_ACCOUNT.ACCT\",\"benchmark\":\"TEST_BENCHMARK\"}", value = "The documents tags, represented in a key value format with the tag name as the key; and the tag's value as the value")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, StringOrNumberTagValue> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(java.util.Map<String, StringOrNumberTagValue> tags) {
    this.tags = tags;
  }


  /**
   * Return true if this DocumentModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentModel documentModel = (DocumentModel) o;
    return Objects.equals(this.url, documentModel.url) &&
        Objects.equals(this.productType, documentModel.productType) &&
        Objects.equals(this.tags, documentModel.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, productType, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentModel {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

