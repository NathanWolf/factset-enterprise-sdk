/*
 * Analytics Datastore  API
 * Allow clients to fetch precalculated Analytics through predeterministic URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.AnalyticsDatastore.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.AnalyticsDatastore.JSON;


/**
 * DocumentRequestData
 */
@JsonPropertyOrder({
  DocumentRequestData.JSON_PROPERTY_PATH,
  DocumentRequestData.JSON_PROPERTY_PRODUCT_TYPE,
  DocumentRequestData.JSON_PROPERTY_TAGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentRequestData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "productType";
  private String productType;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private java.util.Map<String, String> tags = null;

  public DocumentRequestData() { 
  }

  public DocumentRequestData path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The Document path to filter on. For example: path&#x3D;Client:/Test/Publisher/Example.pdf
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Client:/Publisher/TEST_ACCOUNT.ACCT", value = "The Document path to filter on. For example: path=Client:/Test/Publisher/Example.pdf")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public DocumentRequestData productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * The Document path to filter on. For example: path&#x3D;Client:/Test/Publisher/Example.pdf
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Publisher", value = "The Document path to filter on. For example: path=Client:/Test/Publisher/Example.pdf")
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductType() {
    return productType;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductType(String productType) {
    this.productType = productType;
  }


  public DocumentRequestData tags(java.util.Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public DocumentRequestData putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new java.util.HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * The documents tags, represented in a key value format with the tag name as the key; and the tag&#39;s value as the value
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"account\":\"TEST_ACCOUNT.ACCT\",\"benchmark\":\"TEST_BENCHMARK\"}", value = "The documents tags, represented in a key value format with the tag name as the key; and the tag's value as the value")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(java.util.Map<String, String> tags) {
    this.tags = tags;
  }


  /**
   * Return true if this DocumentRequest_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentRequestData documentRequestData = (DocumentRequestData) o;
    return Objects.equals(this.path, documentRequestData.path) &&
        Objects.equals(this.productType, documentRequestData.productType) &&
        Objects.equals(this.tags, documentRequestData.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, productType, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentRequestData {\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

