/*
 * OFDB API
 * OFDB API
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OFDB.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OFDB.JSON;


/**
 * InlineResponse2001Data
 */
@JsonPropertyOrder({
  InlineResponse2001Data.JSON_PROPERTY_SYMBOLS,
  InlineResponse2001Data.JSON_PROPERTY_ITERATED_FIELDS,
  InlineResponse2001Data.JSON_PROPERTY_NON_ITERATED_FIELDS,
  InlineResponse2001Data.JSON_PROPERTY_TOTAL_FIELDS,
  InlineResponse2001Data.JSON_PROPERTY_DATES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2001Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SYMBOLS = "symbols";
  private Integer symbols;

  public static final String JSON_PROPERTY_ITERATED_FIELDS = "iteratedFields";
  private Integer iteratedFields;

  public static final String JSON_PROPERTY_NON_ITERATED_FIELDS = "nonIteratedFields";
  private Integer nonIteratedFields;

  public static final String JSON_PROPERTY_TOTAL_FIELDS = "totalFields";
  private Integer totalFields;

  public static final String JSON_PROPERTY_DATES = "dates";
  private Integer dates;

  public InlineResponse2001Data() { 
  }

  public InlineResponse2001Data symbols(Integer symbols) {
    this.symbols = symbols;
    return this;
  }

   /**
   * Get symbols
   * @return symbols
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSymbols() {
    return symbols;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbols(Integer symbols) {
    this.symbols = symbols;
  }


  public InlineResponse2001Data iteratedFields(Integer iteratedFields) {
    this.iteratedFields = iteratedFields;
    return this;
  }

   /**
   * Get iteratedFields
   * @return iteratedFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")
  @JsonProperty(JSON_PROPERTY_ITERATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIteratedFields() {
    return iteratedFields;
  }


  @JsonProperty(JSON_PROPERTY_ITERATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIteratedFields(Integer iteratedFields) {
    this.iteratedFields = iteratedFields;
  }


  public InlineResponse2001Data nonIteratedFields(Integer nonIteratedFields) {
    this.nonIteratedFields = nonIteratedFields;
    return this;
  }

   /**
   * Get nonIteratedFields
   * @return nonIteratedFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_NON_ITERATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNonIteratedFields() {
    return nonIteratedFields;
  }


  @JsonProperty(JSON_PROPERTY_NON_ITERATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonIteratedFields(Integer nonIteratedFields) {
    this.nonIteratedFields = nonIteratedFields;
  }


  public InlineResponse2001Data totalFields(Integer totalFields) {
    this.totalFields = totalFields;
    return this;
  }

   /**
   * Get totalFields
   * @return totalFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalFields() {
    return totalFields;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalFields(Integer totalFields) {
    this.totalFields = totalFields;
  }


  public InlineResponse2001Data dates(Integer dates) {
    this.dates = dates;
    return this;
  }

   /**
   * Get dates
   * @return dates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDates() {
    return dates;
  }


  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDates(Integer dates) {
    this.dates = dates;
  }


  /**
   * Return true if this inline_response_200_1_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001Data inlineResponse2001Data = (InlineResponse2001Data) o;
    return Objects.equals(this.symbols, inlineResponse2001Data.symbols) &&
        Objects.equals(this.iteratedFields, inlineResponse2001Data.iteratedFields) &&
        Objects.equals(this.nonIteratedFields, inlineResponse2001Data.nonIteratedFields) &&
        Objects.equals(this.totalFields, inlineResponse2001Data.totalFields) &&
        Objects.equals(this.dates, inlineResponse2001Data.dates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbols, iteratedFields, nonIteratedFields, totalFields, dates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001Data {\n");
    sb.append("    symbols: ").append(toIndentedString(symbols)).append("\n");
    sb.append("    iteratedFields: ").append(toIndentedString(iteratedFields)).append("\n");
    sb.append("    nonIteratedFields: ").append(toIndentedString(nonIteratedFields)).append("\n");
    sb.append("    totalFields: ").append(toIndentedString(totalFields)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

