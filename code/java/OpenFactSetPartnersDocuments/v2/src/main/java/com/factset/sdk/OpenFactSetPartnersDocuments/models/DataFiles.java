/*
 * Open:FactSet - Partners
 * This service provides the capability to search and download unstructured content provided by <a href=\"https://open.factset.com/catalog/en-us\">Open:FactSet Partners</a>.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenFactSetPartnersDocuments.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenFactSetPartnersDocuments.JSON;


/**
 * Returns Data Response.
 */
@ApiModel(description = "Returns Data Response.")
@JsonPropertyOrder({
  DataFiles.JSON_PROPERTY_TRIAL_ID,
  DataFiles.JSON_PROPERTY_VERSION,
  DataFiles.JSON_PROPERTY_FILE_NAME,
  DataFiles.JSON_PROPERTY_CLINICAL_TRIAL_ID,
  DataFiles.JSON_PROPERTY_UNIQUE_PROTOCOL_ID,
  DataFiles.JSON_PROPERTY_OFFICIAL_TITLE,
  DataFiles.JSON_PROPERTY_OVERALL_STATUS,
  DataFiles.JSON_PROPERTY_PRIMARY_COMPLETION,
  DataFiles.JSON_PROPERTY_STUDY_COMPLETION,
  DataFiles.JSON_PROPERTY_FIRST_POSTED,
  DataFiles.JSON_PROPERTY_LAST_POSTED,
  DataFiles.JSON_PROPERTY_SPONSOR,
  DataFiles.JSON_PROPERTY_RESPONSIBLE_PARTY,
  DataFiles.JSON_PROPERTY_DATA_MONITORING,
  DataFiles.JSON_PROPERTY_STUDY_TYPE,
  DataFiles.JSON_PROPERTY_PRIMARY_PURPOSE,
  DataFiles.JSON_PROPERTY_STUDY_PHASE,
  DataFiles.JSON_PROPERTY_INTERVENTIONAL_MODEL,
  DataFiles.JSON_PROPERTY_NUMBER_OF_ARMS,
  DataFiles.JSON_PROPERTY_MASKING,
  DataFiles.JSON_PROPERTY_ALLOCATION,
  DataFiles.JSON_PROPERTY_ENROLLMENT,
  DataFiles.JSON_PROPERTY_MINIMUM_AGE,
  DataFiles.JSON_PROPERTY_MAXIMUM_AGE,
  DataFiles.JSON_PROPERTY_SEX,
  DataFiles.JSON_PROPERTY_GENDER_BASED,
  DataFiles.JSON_PROPERTY_ACCEPTS_VOLUNTEERS,
  DataFiles.JSON_PROPERTY_DATE,
  DataFiles.JSON_PROPERTY_RECORD_VERIFICATION,
  DataFiles.JSON_PROPERTY_STUDY_START,
  DataFiles.JSON_PROPERTY_FIRST_SUBMITTED,
  DataFiles.JSON_PROPERTY_FIRST_SUBMIT_MET_QX_CRITE,
  DataFiles.JSON_PROPERTY_LAST_SUBMIT_MET_QX_CRITE,
  DataFiles.JSON_PROPERTY_PRIMARY_COMP_DATE_TYPE,
  DataFiles.JSON_PROPERTY_STUDY_COMPLETION_DATE_TYPE,
  DataFiles.JSON_PROPERTY_FIRST_POSTED_DATE_TYPE,
  DataFiles.JSON_PROPERTY_LAST_POSTED_DATE_TYPE,
  DataFiles.JSON_PROPERTY_ENROLLMENT_TYPE,
  DataFiles.JSON_PROPERTY_BEAM_PROBABILITY_OF_TRIAL_SUCCESS,
  DataFiles.JSON_PROPERTY_BEAM_PROBABILITY_OF_LAUNCH,
  DataFiles.JSON_PROPERTY_URL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class DataFiles implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TRIAL_ID = "trialId";
  private String trialId;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_CLINICAL_TRIAL_ID = "clinicalTrialId";
  private String clinicalTrialId;

  public static final String JSON_PROPERTY_UNIQUE_PROTOCOL_ID = "uniqueProtocolId";
  private String uniqueProtocolId;

  public static final String JSON_PROPERTY_OFFICIAL_TITLE = "officialTitle";
  private String officialTitle;

  public static final String JSON_PROPERTY_OVERALL_STATUS = "overallStatus";
  private String overallStatus;

  public static final String JSON_PROPERTY_PRIMARY_COMPLETION = "primaryCompletion";
  private OffsetDateTime primaryCompletion;

  public static final String JSON_PROPERTY_STUDY_COMPLETION = "studyCompletion";
  private OffsetDateTime studyCompletion;

  public static final String JSON_PROPERTY_FIRST_POSTED = "firstPosted";
  private OffsetDateTime firstPosted;

  public static final String JSON_PROPERTY_LAST_POSTED = "lastPosted";
  private OffsetDateTime lastPosted;

  public static final String JSON_PROPERTY_SPONSOR = "sponsor";
  private String sponsor;

  public static final String JSON_PROPERTY_RESPONSIBLE_PARTY = "responsibleParty";
  private String responsibleParty;

  public static final String JSON_PROPERTY_DATA_MONITORING = "dataMonitoring";
  private String dataMonitoring;

  public static final String JSON_PROPERTY_STUDY_TYPE = "studyType";
  private String studyType;

  public static final String JSON_PROPERTY_PRIMARY_PURPOSE = "primaryPurpose";
  private String primaryPurpose;

  public static final String JSON_PROPERTY_STUDY_PHASE = "studyPhase";
  private String studyPhase;

  public static final String JSON_PROPERTY_INTERVENTIONAL_MODEL = "interventionalModel";
  private String interventionalModel;

  public static final String JSON_PROPERTY_NUMBER_OF_ARMS = "numberOfArms";
  private Integer numberOfArms;

  public static final String JSON_PROPERTY_MASKING = "masking";
  private String masking;

  public static final String JSON_PROPERTY_ALLOCATION = "allocation";
  private String allocation;

  public static final String JSON_PROPERTY_ENROLLMENT = "enrollment";
  private Integer enrollment;

  public static final String JSON_PROPERTY_MINIMUM_AGE = "minimumAge";
  private String minimumAge;

  public static final String JSON_PROPERTY_MAXIMUM_AGE = "maximumAge";
  private String maximumAge;

  public static final String JSON_PROPERTY_SEX = "sex";
  private String sex;

  public static final String JSON_PROPERTY_GENDER_BASED = "genderBased";
  private String genderBased;

  public static final String JSON_PROPERTY_ACCEPTS_VOLUNTEERS = "acceptsVolunteers";
  private String acceptsVolunteers;

  public static final String JSON_PROPERTY_DATE = "date";
  private OffsetDateTime date;

  public static final String JSON_PROPERTY_RECORD_VERIFICATION = "recordVerification";
  private OffsetDateTime recordVerification;

  public static final String JSON_PROPERTY_STUDY_START = "studyStart";
  private OffsetDateTime studyStart;

  public static final String JSON_PROPERTY_FIRST_SUBMITTED = "firstSubmitted";
  private OffsetDateTime firstSubmitted;

  public static final String JSON_PROPERTY_FIRST_SUBMIT_MET_QX_CRITE = "firstSubmitMetQxCrite";
  private OffsetDateTime firstSubmitMetQxCrite;

  public static final String JSON_PROPERTY_LAST_SUBMIT_MET_QX_CRITE = "lastSubmitMetQxCrite";
  private OffsetDateTime lastSubmitMetQxCrite;

  public static final String JSON_PROPERTY_PRIMARY_COMP_DATE_TYPE = "primaryCompDateType";
  private String primaryCompDateType;

  public static final String JSON_PROPERTY_STUDY_COMPLETION_DATE_TYPE = "studyCompletionDateType";
  private String studyCompletionDateType;

  public static final String JSON_PROPERTY_FIRST_POSTED_DATE_TYPE = "firstPostedDateType";
  private String firstPostedDateType;

  public static final String JSON_PROPERTY_LAST_POSTED_DATE_TYPE = "lastPostedDateType";
  private String lastPostedDateType;

  public static final String JSON_PROPERTY_ENROLLMENT_TYPE = "enrollmentType";
  private String enrollmentType;

  public static final String JSON_PROPERTY_BEAM_PROBABILITY_OF_TRIAL_SUCCESS = "beamProbabilityOfTrialSuccess";
  private BigDecimal beamProbabilityOfTrialSuccess;

  public static final String JSON_PROPERTY_BEAM_PROBABILITY_OF_LAUNCH = "beamProbabilityOfLaunch";
  private BigDecimal beamProbabilityOfLaunch;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public DataFiles() { 
  }

  public DataFiles trialId(String trialId) {
    this.trialId = trialId;
    return this;
  }

   /**
   * ID of the trial assigned by the trial registry.
   * @return trialId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "NCT03037385", value = "ID of the trial assigned by the trial registry.")
  @JsonProperty(JSON_PROPERTY_TRIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrialId() {
    return trialId;
  }


  @JsonProperty(JSON_PROPERTY_TRIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrialId(String trialId) {
    this.trialId = trialId;
  }


  public DataFiles version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Specifies the version of a trial.
   * @return version
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "37", value = "Specifies the version of a trial.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Integer version) {
    this.version = version;
  }


  public DataFiles fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The filename of the trial data.
   * @return fileName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "NCT03037385_037.json", value = "The filename of the trial data.")
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public DataFiles clinicalTrialId(String clinicalTrialId) {
    this.clinicalTrialId = clinicalTrialId;
    return this;
  }

   /**
   * Specifies Ozmosi unique ID for each historical version of a trial.
   * @return clinicalTrialId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "NCT03037385_037", value = "Specifies Ozmosi unique ID for each historical version of a trial.")
  @JsonProperty(JSON_PROPERTY_CLINICAL_TRIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClinicalTrialId() {
    return clinicalTrialId;
  }


  @JsonProperty(JSON_PROPERTY_CLINICAL_TRIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClinicalTrialId(String clinicalTrialId) {
    this.clinicalTrialId = clinicalTrialId;
  }


  public DataFiles uniqueProtocolId(String uniqueProtocolId) {
    this.uniqueProtocolId = uniqueProtocolId;
    return this;
  }

   /**
   * ID assigned by the sponsor of a trial.
   * @return uniqueProtocolId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "BO42863", value = "ID assigned by the sponsor of a trial.")
  @JsonProperty(JSON_PROPERTY_UNIQUE_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUniqueProtocolId() {
    return uniqueProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueProtocolId(String uniqueProtocolId) {
    this.uniqueProtocolId = uniqueProtocolId;
  }


  public DataFiles officialTitle(String officialTitle) {
    this.officialTitle = officialTitle;
    return this;
  }

   /**
   * Full scientific title of a trial.
   * @return officialTitle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "A Phase 1/2 Study of the Highly-selective RET Inhibitor, BLU-667, in Patients With Thyroid Cancer, Non-Small Cell Lung Cancer (NSCLC) and Other Advanced Solid Tumors", value = "Full scientific title of a trial.")
  @JsonProperty(JSON_PROPERTY_OFFICIAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOfficialTitle() {
    return officialTitle;
  }


  @JsonProperty(JSON_PROPERTY_OFFICIAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfficialTitle(String officialTitle) {
    this.officialTitle = officialTitle;
  }


  public DataFiles overallStatus(String overallStatus) {
    this.overallStatus = overallStatus;
    return this;
  }

   /**
   * Defines the current stage of a trial&#39;s activity.
   * @return overallStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Active", value = "Defines the current stage of a trial's activity.")
  @JsonProperty(JSON_PROPERTY_OVERALL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverallStatus() {
    return overallStatus;
  }


  @JsonProperty(JSON_PROPERTY_OVERALL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverallStatus(String overallStatus) {
    this.overallStatus = overallStatus;
  }


  public DataFiles primaryCompletion(OffsetDateTime primaryCompletion) {
    this.primaryCompletion = primaryCompletion;
    return this;
  }

   /**
   * The date where the final patient is examined or treated for the purpose of collecting data on the trial&#39;s primary outcome measures. Trial Sponsors may publicly announce the data. results after this date
   * @return primaryCompletion
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date where the final patient is examined or treated for the purpose of collecting data on the trial's primary outcome measures. Trial Sponsors may publicly announce the data. results after this date")
  @JsonProperty(JSON_PROPERTY_PRIMARY_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getPrimaryCompletion() {
    return primaryCompletion;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryCompletion(OffsetDateTime primaryCompletion) {
    this.primaryCompletion = primaryCompletion;
  }


  public DataFiles studyCompletion(OffsetDateTime studyCompletion) {
    this.studyCompletion = studyCompletion;
    return this;
  }

   /**
   * The date that treatment will complete in the trial and data will be fully collected for secondary outcome measures and adverse events.
   * @return studyCompletion
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date that treatment will complete in the trial and data will be fully collected for secondary outcome measures and adverse events.")
  @JsonProperty(JSON_PROPERTY_STUDY_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStudyCompletion() {
    return studyCompletion;
  }


  @JsonProperty(JSON_PROPERTY_STUDY_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudyCompletion(OffsetDateTime studyCompletion) {
    this.studyCompletion = studyCompletion;
  }


  public DataFiles firstPosted(OffsetDateTime firstPosted) {
    this.firstPosted = firstPosted;
    return this;
  }

   /**
   * The date on which the trial was first available on ClinicalTrials.gov. Specifically, this date refers to version 1 of a trial
   * @return firstPosted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date on which the trial was first available on ClinicalTrials.gov. Specifically, this date refers to version 1 of a trial")
  @JsonProperty(JSON_PROPERTY_FIRST_POSTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstPosted() {
    return firstPosted;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_POSTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstPosted(OffsetDateTime firstPosted) {
    this.firstPosted = firstPosted;
  }


  public DataFiles lastPosted(OffsetDateTime lastPosted) {
    this.lastPosted = lastPosted;
    return this;
  }

   /**
   * The date on which this version of a trial was officially updated and publicly visible on the registry.
   * @return lastPosted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date on which this version of a trial was officially updated and publicly visible on the registry.")
  @JsonProperty(JSON_PROPERTY_LAST_POSTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastPosted() {
    return lastPosted;
  }


  @JsonProperty(JSON_PROPERTY_LAST_POSTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPosted(OffsetDateTime lastPosted) {
    this.lastPosted = lastPosted;
  }


  public DataFiles sponsor(String sponsor) {
    this.sponsor = sponsor;
    return this;
  }

   /**
   * The primary sponsor of the trial.
   * @return sponsor
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Hoffmann-La Roche", value = "The primary sponsor of the trial.")
  @JsonProperty(JSON_PROPERTY_SPONSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSponsor() {
    return sponsor;
  }


  @JsonProperty(JSON_PROPERTY_SPONSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSponsor(String sponsor) {
    this.sponsor = sponsor;
  }


  public DataFiles responsibleParty(String responsibleParty) {
    this.responsibleParty = responsibleParty;
    return this;
  }

   /**
   * Identifies if the responsible party of the trial is the Sponsor (The entity that initiates the study), the Principal Investigator (An individual designated by the Sponsor) or Sponsor-Investigator (An individual both initiating and conduct the trial)
   * @return responsibleParty
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sponsor", value = "Identifies if the responsible party of the trial is the Sponsor (The entity that initiates the study), the Principal Investigator (An individual designated by the Sponsor) or Sponsor-Investigator (An individual both initiating and conduct the trial)")
  @JsonProperty(JSON_PROPERTY_RESPONSIBLE_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponsibleParty() {
    return responsibleParty;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSIBLE_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponsibleParty(String responsibleParty) {
    this.responsibleParty = responsibleParty;
  }


  public DataFiles dataMonitoring(String dataMonitoring) {
    this.dataMonitoring = dataMonitoring;
    return this;
  }

   /**
   * Identifies if the trial involves a group of independent scientists who monitor the safety and scientific integrity of a clinical trial.
   * @return dataMonitoring
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "scientists", value = "Identifies if the trial involves a group of independent scientists who monitor the safety and scientific integrity of a clinical trial.")
  @JsonProperty(JSON_PROPERTY_DATA_MONITORING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataMonitoring() {
    return dataMonitoring;
  }


  @JsonProperty(JSON_PROPERTY_DATA_MONITORING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataMonitoring(String dataMonitoring) {
    this.dataMonitoring = dataMonitoring;
  }


  public DataFiles studyType(String studyType) {
    this.studyType = studyType;
    return this;
  }

   /**
   * Describes the nature of a clinical study.
   * @return studyType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Interventional", value = "Describes the nature of a clinical study.")
  @JsonProperty(JSON_PROPERTY_STUDY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStudyType() {
    return studyType;
  }


  @JsonProperty(JSON_PROPERTY_STUDY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudyType(String studyType) {
    this.studyType = studyType;
  }


  public DataFiles primaryPurpose(String primaryPurpose) {
    this.primaryPurpose = primaryPurpose;
    return this;
  }

   /**
   * Describes the main reason for the clinical trial.
   * @return primaryPurpose
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Treatment", value = "Describes the main reason for the clinical trial.")
  @JsonProperty(JSON_PROPERTY_PRIMARY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryPurpose() {
    return primaryPurpose;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryPurpose(String primaryPurpose) {
    this.primaryPurpose = primaryPurpose;
  }


  public DataFiles studyPhase(String studyPhase) {
    this.studyPhase = studyPhase;
    return this;
  }

   /**
   * Specifies the stage of a clinical trial studying a drug or biological product.
   * @return studyPhase
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Phase 1/Phase 2", value = "Specifies the stage of a clinical trial studying a drug or biological product.")
  @JsonProperty(JSON_PROPERTY_STUDY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStudyPhase() {
    return studyPhase;
  }


  @JsonProperty(JSON_PROPERTY_STUDY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudyPhase(String studyPhase) {
    this.studyPhase = studyPhase;
  }


  public DataFiles interventionalModel(String interventionalModel) {
    this.interventionalModel = interventionalModel;
    return this;
  }

   /**
   * Describes the general design of the strategy for assigning interventions to participants in a clinical study.
   * @return interventionalModel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Parallel Assignment", value = "Describes the general design of the strategy for assigning interventions to participants in a clinical study.")
  @JsonProperty(JSON_PROPERTY_INTERVENTIONAL_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterventionalModel() {
    return interventionalModel;
  }


  @JsonProperty(JSON_PROPERTY_INTERVENTIONAL_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterventionalModel(String interventionalModel) {
    this.interventionalModel = interventionalModel;
  }


  public DataFiles numberOfArms(Integer numberOfArms) {
    this.numberOfArms = numberOfArms;
    return this;
  }

   /**
   * The number of clinical arms for study.
   * @return numberOfArms
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The number of clinical arms for study.")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_ARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfArms() {
    return numberOfArms;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_ARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfArms(Integer numberOfArms) {
    this.numberOfArms = numberOfArms;
  }


  public DataFiles masking(String masking) {
    this.masking = masking;
    return this;
  }

   /**
   * Defines the type of masking.
   * @return masking
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Open Label", value = "Defines the type of masking.")
  @JsonProperty(JSON_PROPERTY_MASKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMasking() {
    return masking;
  }


  @JsonProperty(JSON_PROPERTY_MASKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMasking(String masking) {
    this.masking = masking;
  }


  public DataFiles allocation(String allocation) {
    this.allocation = allocation;
    return this;
  }

   /**
   * Identifies the method used to assign participants to an arm of a clinical study.
   * @return allocation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Non-Randomized", value = "Identifies the method used to assign participants to an arm of a clinical study.")
  @JsonProperty(JSON_PROPERTY_ALLOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAllocation() {
    return allocation;
  }


  @JsonProperty(JSON_PROPERTY_ALLOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllocation(String allocation) {
    this.allocation = allocation;
  }


  public DataFiles enrollment(Integer enrollment) {
    this.enrollment = enrollment;
    return this;
  }

   /**
   * Number of patients enrolled.
   * @return enrollment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "589", value = "Number of patients enrolled.")
  @JsonProperty(JSON_PROPERTY_ENROLLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEnrollment() {
    return enrollment;
  }


  @JsonProperty(JSON_PROPERTY_ENROLLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnrollment(Integer enrollment) {
    this.enrollment = enrollment;
  }


  public DataFiles minimumAge(String minimumAge) {
    this.minimumAge = minimumAge;
    return this;
  }

   /**
   * Minimum age of participants.
   * @return minimumAge
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "18 Years", value = "Minimum age of participants.")
  @JsonProperty(JSON_PROPERTY_MINIMUM_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMinimumAge() {
    return minimumAge;
  }


  @JsonProperty(JSON_PROPERTY_MINIMUM_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimumAge(String minimumAge) {
    this.minimumAge = minimumAge;
  }


  public DataFiles maximumAge(String maximumAge) {
    this.maximumAge = maximumAge;
    return this;
  }

   /**
   * Maximum age of participants.
   * @return maximumAge
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "75 Years", value = "Maximum age of participants.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaximumAge() {
    return maximumAge;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumAge(String maximumAge) {
    this.maximumAge = maximumAge;
  }


  public DataFiles sex(String sex) {
    this.sex = sex;
    return this;
  }

   /**
   * A type of eligibility criteria that indicates the sex of people who may participate in a clinical study.
   * @return sex
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "female", value = "A type of eligibility criteria that indicates the sex of people who may participate in a clinical study.")
  @JsonProperty(JSON_PROPERTY_SEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSex() {
    return sex;
  }


  @JsonProperty(JSON_PROPERTY_SEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSex(String sex) {
    this.sex = sex;
  }


  public DataFiles genderBased(String genderBased) {
    this.genderBased = genderBased;
    return this;
  }

   /**
   * Defines if study is gender specific.
   * @return genderBased
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "All", value = "Defines if study is gender specific.")
  @JsonProperty(JSON_PROPERTY_GENDER_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGenderBased() {
    return genderBased;
  }


  @JsonProperty(JSON_PROPERTY_GENDER_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGenderBased(String genderBased) {
    this.genderBased = genderBased;
  }


  public DataFiles acceptsVolunteers(String acceptsVolunteers) {
    this.acceptsVolunteers = acceptsVolunteers;
    return this;
  }

   /**
   * A type of eligibility criteria that indicates whether people who do not have the condition/disease being studied can participate in that clinical study.
   * @return acceptsVolunteers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "sync", value = "A type of eligibility criteria that indicates whether people who do not have the condition/disease being studied can participate in that clinical study.")
  @JsonProperty(JSON_PROPERTY_ACCEPTS_VOLUNTEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcceptsVolunteers() {
    return acceptsVolunteers;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPTS_VOLUNTEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptsVolunteers(String acceptsVolunteers) {
    this.acceptsVolunteers = acceptsVolunteers;
  }


  public DataFiles date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Specifies the timestamp of each version of a trial.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the timestamp of each version of a trial.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public DataFiles recordVerification(OffsetDateTime recordVerification) {
    this.recordVerification = recordVerification;
    return this;
  }

   /**
   * The date on which the responsible party last verified the clinical study information in the entire ClinicalTrials.gov record for the clinical study, even if no additional or updated information is being submitted
   * @return recordVerification
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date on which the responsible party last verified the clinical study information in the entire ClinicalTrials.gov record for the clinical study, even if no additional or updated information is being submitted")
  @JsonProperty(JSON_PROPERTY_RECORD_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRecordVerification() {
    return recordVerification;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordVerification(OffsetDateTime recordVerification) {
    this.recordVerification = recordVerification;
  }


  public DataFiles studyStart(OffsetDateTime studyStart) {
    this.studyStart = studyStart;
    return this;
  }

   /**
   * Date that the trial becomes open for recruitment or the date on which the first patient was enrolled.
   * @return studyStart
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Date that the trial becomes open for recruitment or the date on which the first patient was enrolled.")
  @JsonProperty(JSON_PROPERTY_STUDY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStudyStart() {
    return studyStart;
  }


  @JsonProperty(JSON_PROPERTY_STUDY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudyStart(OffsetDateTime studyStart) {
    this.studyStart = studyStart;
  }


  public DataFiles firstSubmitted(OffsetDateTime firstSubmitted) {
    this.firstSubmitted = firstSubmitted;
    return this;
  }

   /**
   * The date that the trial was submitted to the registry.
   * @return firstSubmitted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date that the trial was submitted to the registry.")
  @JsonProperty(JSON_PROPERTY_FIRST_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstSubmitted() {
    return firstSubmitted;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSubmitted(OffsetDateTime firstSubmitted) {
    this.firstSubmitted = firstSubmitted;
  }


  public DataFiles firstSubmitMetQxCrite(OffsetDateTime firstSubmitMetQxCrite) {
    this.firstSubmitMetQxCrite = firstSubmitMetQxCrite;
    return this;
  }

   /**
   * The date on which a submitted study record is confirmed to be consistent with National Library of Medicine (NLM) quality control (QC) review criteria.
   * @return firstSubmitMetQxCrite
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date on which a submitted study record is confirmed to be consistent with National Library of Medicine (NLM) quality control (QC) review criteria.")
  @JsonProperty(JSON_PROPERTY_FIRST_SUBMIT_MET_QX_CRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstSubmitMetQxCrite() {
    return firstSubmitMetQxCrite;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SUBMIT_MET_QX_CRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSubmitMetQxCrite(OffsetDateTime firstSubmitMetQxCrite) {
    this.firstSubmitMetQxCrite = firstSubmitMetQxCrite;
  }


  public DataFiles lastSubmitMetQxCrite(OffsetDateTime lastSubmitMetQxCrite) {
    this.lastSubmitMetQxCrite = lastSubmitMetQxCrite;
    return this;
  }

   /**
   * The most recent date on which the study sponsor or investigator submitted changes to a study record.
   * @return lastSubmitMetQxCrite
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The most recent date on which the study sponsor or investigator submitted changes to a study record.")
  @JsonProperty(JSON_PROPERTY_LAST_SUBMIT_MET_QX_CRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastSubmitMetQxCrite() {
    return lastSubmitMetQxCrite;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SUBMIT_MET_QX_CRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSubmitMetQxCrite(OffsetDateTime lastSubmitMetQxCrite) {
    this.lastSubmitMetQxCrite = lastSubmitMetQxCrite;
  }


  public DataFiles primaryCompDateType(String primaryCompDateType) {
    this.primaryCompDateType = primaryCompDateType;
    return this;
  }

   /**
   * Designates if primary completion date is actual or anticipated.
   * @return primaryCompDateType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2025-01-09 00:00:00", value = "Designates if primary completion date is actual or anticipated.")
  @JsonProperty(JSON_PROPERTY_PRIMARY_COMP_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryCompDateType() {
    return primaryCompDateType;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_COMP_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryCompDateType(String primaryCompDateType) {
    this.primaryCompDateType = primaryCompDateType;
  }


  public DataFiles studyCompletionDateType(String studyCompletionDateType) {
    this.studyCompletionDateType = studyCompletionDateType;
    return this;
  }

   /**
   * Designates if study completion date is actual or anticipated.
   * @return studyCompletionDateType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "None", value = "Designates if study completion date is actual or anticipated.")
  @JsonProperty(JSON_PROPERTY_STUDY_COMPLETION_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStudyCompletionDateType() {
    return studyCompletionDateType;
  }


  @JsonProperty(JSON_PROPERTY_STUDY_COMPLETION_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudyCompletionDateType(String studyCompletionDateType) {
    this.studyCompletionDateType = studyCompletionDateType;
  }


  public DataFiles firstPostedDateType(String firstPostedDateType) {
    this.firstPostedDateType = firstPostedDateType;
    return this;
  }

   /**
   * Designates if the first posted date is actual or anticipated.
   * @return firstPostedDateType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Actual", value = "Designates if the first posted date is actual or anticipated.")
  @JsonProperty(JSON_PROPERTY_FIRST_POSTED_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstPostedDateType() {
    return firstPostedDateType;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_POSTED_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstPostedDateType(String firstPostedDateType) {
    this.firstPostedDateType = firstPostedDateType;
  }


  public DataFiles lastPostedDateType(String lastPostedDateType) {
    this.lastPostedDateType = lastPostedDateType;
    return this;
  }

   /**
   * Designates if the last update posted date is actual or anticipated.
   * @return lastPostedDateType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "None", value = "Designates if the last update posted date is actual or anticipated.")
  @JsonProperty(JSON_PROPERTY_LAST_POSTED_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastPostedDateType() {
    return lastPostedDateType;
  }


  @JsonProperty(JSON_PROPERTY_LAST_POSTED_DATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastPostedDateType(String lastPostedDateType) {
    this.lastPostedDateType = lastPostedDateType;
  }


  public DataFiles enrollmentType(String enrollmentType) {
    this.enrollmentType = enrollmentType;
    return this;
  }

   /**
   * Identifies if the enrollment number is the anticipated or actual amount.
   * @return enrollmentType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Anticipated", value = "Identifies if the enrollment number is the anticipated or actual amount.")
  @JsonProperty(JSON_PROPERTY_ENROLLMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEnrollmentType() {
    return enrollmentType;
  }


  @JsonProperty(JSON_PROPERTY_ENROLLMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnrollmentType(String enrollmentType) {
    this.enrollmentType = enrollmentType;
  }


  public DataFiles beamProbabilityOfTrialSuccess(BigDecimal beamProbabilityOfTrialSuccess) {
    this.beamProbabilityOfTrialSuccess = beamProbabilityOfTrialSuccess;
    return this;
  }

   /**
   * Probability of trial success.
   * @return beamProbabilityOfTrialSuccess
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "82", value = "Probability of trial success.")
  @JsonProperty(JSON_PROPERTY_BEAM_PROBABILITY_OF_TRIAL_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBeamProbabilityOfTrialSuccess() {
    return beamProbabilityOfTrialSuccess;
  }


  @JsonProperty(JSON_PROPERTY_BEAM_PROBABILITY_OF_TRIAL_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeamProbabilityOfTrialSuccess(BigDecimal beamProbabilityOfTrialSuccess) {
    this.beamProbabilityOfTrialSuccess = beamProbabilityOfTrialSuccess;
  }


  public DataFiles beamProbabilityOfLaunch(BigDecimal beamProbabilityOfLaunch) {
    this.beamProbabilityOfLaunch = beamProbabilityOfLaunch;
    return this;
  }

   /**
   * Probability of trial being launched.
   * @return beamProbabilityOfLaunch
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "61", value = "Probability of trial being launched.")
  @JsonProperty(JSON_PROPERTY_BEAM_PROBABILITY_OF_LAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBeamProbabilityOfLaunch() {
    return beamProbabilityOfLaunch;
  }


  @JsonProperty(JSON_PROPERTY_BEAM_PROBABILITY_OF_LAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeamProbabilityOfLaunch(BigDecimal beamProbabilityOfLaunch) {
    this.beamProbabilityOfLaunch = beamProbabilityOfLaunch;
  }


  public DataFiles url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Download link for the clinical trials provided by the Ozmosi feed.
   * @return url
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://fdss3-unstructured-data-delivery-ozmosi-prod.s3.amazonaws.com/ozmosi_v2/NCT04629248_022.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA6B6XG7VEYODKETS6%2F20221017%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20221017T134304Z&X-Amz-Expires=1800&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjED0aCXVzLWVhc3QtMSJIMEYCIQDzGmRWCkwvfl8WKsZ3rektfXyQa551ht8wkggj29qufwIhALaFsXrpyISV%2B6A3hASCdStEUtlzUEaBL9Bs0%2BSP3wUaKu4CCBYQARoMOTY2MjgyMTE2NDI1IgxkKPBJ4cINLlvTEkIqywKmD%2BMhpGDpCzI8LfS13Rvs%2FnCQ5S5khGdpMUk8j0kQ4%2F6xoX7SYyXjkn8VFk2OSJkfPpu6XBADJ3H6BmuJvAM5ovraQqQXjx8iuB7LPgYAHoIJNvZDivb8HV%2BmBSwbEoOyCIslX%2FFrlYNU6KmfpvKUZqJRPmpSVdb%2F2%2BwG6rw3WHO6qBxWjwPga2b9U7DvU0LCke0myB8cRhdimWuONNendFNuwm9KnvhrUbszsLT4dIxufiYQarCqQvx0FuMG21%2FPTKWXbpvHbSSG663qqBi2xYmIP%2BmvQ9JvZMkWN%2FOtVhkDqT8YcyaaLshDVv0xDvzdsP6h4YYjDohaABooNIuP1OVJ9fzzUe4F4ZlP5eZDAKKCPOU%2FfG9UitWHxm3feQDe460sVVbiGow7is85fhQsoeHQEfqqLifPXwxo2s72bwaxd2ZJOTYh7ra7MJeTtZoGOp0BJqQMDoOIol1WSTKBI02ne6rUGKfvR6ksj%2BjEQR9OURvMj843tnJketh6IUBNG%2Be0q7Y0YcV2AAKj1Q7nloa%2B6LoRFOyvKwy4SAfNh%2F1KGM8%2F%2FitZfxzOAwI%2BtlEPKuHWL3OWAyusy6VSXaw4PYtJrS9lual9O%2Brz3kK2au4JZnkeZH3KJsIefE4tJ2GcL%2FT3IOt7htI%2BGRZZDGNCHQ%3D%3D&X-Amz-Signature=f549097a39c169df9b810fa7c505f297db1f09ecbd317414e5d2d98db6fc2851", value = "Download link for the clinical trials provided by the Ozmosi feed.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  /**
   * Return true if this DataFiles object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataFiles dataFiles = (DataFiles) o;
    return Objects.equals(this.trialId, dataFiles.trialId) &&
        Objects.equals(this.version, dataFiles.version) &&
        Objects.equals(this.fileName, dataFiles.fileName) &&
        Objects.equals(this.clinicalTrialId, dataFiles.clinicalTrialId) &&
        Objects.equals(this.uniqueProtocolId, dataFiles.uniqueProtocolId) &&
        Objects.equals(this.officialTitle, dataFiles.officialTitle) &&
        Objects.equals(this.overallStatus, dataFiles.overallStatus) &&
        Objects.equals(this.primaryCompletion, dataFiles.primaryCompletion) &&
        Objects.equals(this.studyCompletion, dataFiles.studyCompletion) &&
        Objects.equals(this.firstPosted, dataFiles.firstPosted) &&
        Objects.equals(this.lastPosted, dataFiles.lastPosted) &&
        Objects.equals(this.sponsor, dataFiles.sponsor) &&
        Objects.equals(this.responsibleParty, dataFiles.responsibleParty) &&
        Objects.equals(this.dataMonitoring, dataFiles.dataMonitoring) &&
        Objects.equals(this.studyType, dataFiles.studyType) &&
        Objects.equals(this.primaryPurpose, dataFiles.primaryPurpose) &&
        Objects.equals(this.studyPhase, dataFiles.studyPhase) &&
        Objects.equals(this.interventionalModel, dataFiles.interventionalModel) &&
        Objects.equals(this.numberOfArms, dataFiles.numberOfArms) &&
        Objects.equals(this.masking, dataFiles.masking) &&
        Objects.equals(this.allocation, dataFiles.allocation) &&
        Objects.equals(this.enrollment, dataFiles.enrollment) &&
        Objects.equals(this.minimumAge, dataFiles.minimumAge) &&
        Objects.equals(this.maximumAge, dataFiles.maximumAge) &&
        Objects.equals(this.sex, dataFiles.sex) &&
        Objects.equals(this.genderBased, dataFiles.genderBased) &&
        Objects.equals(this.acceptsVolunteers, dataFiles.acceptsVolunteers) &&
        Objects.equals(this.date, dataFiles.date) &&
        Objects.equals(this.recordVerification, dataFiles.recordVerification) &&
        Objects.equals(this.studyStart, dataFiles.studyStart) &&
        Objects.equals(this.firstSubmitted, dataFiles.firstSubmitted) &&
        Objects.equals(this.firstSubmitMetQxCrite, dataFiles.firstSubmitMetQxCrite) &&
        Objects.equals(this.lastSubmitMetQxCrite, dataFiles.lastSubmitMetQxCrite) &&
        Objects.equals(this.primaryCompDateType, dataFiles.primaryCompDateType) &&
        Objects.equals(this.studyCompletionDateType, dataFiles.studyCompletionDateType) &&
        Objects.equals(this.firstPostedDateType, dataFiles.firstPostedDateType) &&
        Objects.equals(this.lastPostedDateType, dataFiles.lastPostedDateType) &&
        Objects.equals(this.enrollmentType, dataFiles.enrollmentType) &&
        Objects.equals(this.beamProbabilityOfTrialSuccess, dataFiles.beamProbabilityOfTrialSuccess) &&
        Objects.equals(this.beamProbabilityOfLaunch, dataFiles.beamProbabilityOfLaunch) &&
        Objects.equals(this.url, dataFiles.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trialId, version, fileName, clinicalTrialId, uniqueProtocolId, officialTitle, overallStatus, primaryCompletion, studyCompletion, firstPosted, lastPosted, sponsor, responsibleParty, dataMonitoring, studyType, primaryPurpose, studyPhase, interventionalModel, numberOfArms, masking, allocation, enrollment, minimumAge, maximumAge, sex, genderBased, acceptsVolunteers, date, recordVerification, studyStart, firstSubmitted, firstSubmitMetQxCrite, lastSubmitMetQxCrite, primaryCompDateType, studyCompletionDateType, firstPostedDateType, lastPostedDateType, enrollmentType, beamProbabilityOfTrialSuccess, beamProbabilityOfLaunch, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataFiles {\n");
    sb.append("    trialId: ").append(toIndentedString(trialId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    clinicalTrialId: ").append(toIndentedString(clinicalTrialId)).append("\n");
    sb.append("    uniqueProtocolId: ").append(toIndentedString(uniqueProtocolId)).append("\n");
    sb.append("    officialTitle: ").append(toIndentedString(officialTitle)).append("\n");
    sb.append("    overallStatus: ").append(toIndentedString(overallStatus)).append("\n");
    sb.append("    primaryCompletion: ").append(toIndentedString(primaryCompletion)).append("\n");
    sb.append("    studyCompletion: ").append(toIndentedString(studyCompletion)).append("\n");
    sb.append("    firstPosted: ").append(toIndentedString(firstPosted)).append("\n");
    sb.append("    lastPosted: ").append(toIndentedString(lastPosted)).append("\n");
    sb.append("    sponsor: ").append(toIndentedString(sponsor)).append("\n");
    sb.append("    responsibleParty: ").append(toIndentedString(responsibleParty)).append("\n");
    sb.append("    dataMonitoring: ").append(toIndentedString(dataMonitoring)).append("\n");
    sb.append("    studyType: ").append(toIndentedString(studyType)).append("\n");
    sb.append("    primaryPurpose: ").append(toIndentedString(primaryPurpose)).append("\n");
    sb.append("    studyPhase: ").append(toIndentedString(studyPhase)).append("\n");
    sb.append("    interventionalModel: ").append(toIndentedString(interventionalModel)).append("\n");
    sb.append("    numberOfArms: ").append(toIndentedString(numberOfArms)).append("\n");
    sb.append("    masking: ").append(toIndentedString(masking)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    enrollment: ").append(toIndentedString(enrollment)).append("\n");
    sb.append("    minimumAge: ").append(toIndentedString(minimumAge)).append("\n");
    sb.append("    maximumAge: ").append(toIndentedString(maximumAge)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    genderBased: ").append(toIndentedString(genderBased)).append("\n");
    sb.append("    acceptsVolunteers: ").append(toIndentedString(acceptsVolunteers)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    recordVerification: ").append(toIndentedString(recordVerification)).append("\n");
    sb.append("    studyStart: ").append(toIndentedString(studyStart)).append("\n");
    sb.append("    firstSubmitted: ").append(toIndentedString(firstSubmitted)).append("\n");
    sb.append("    firstSubmitMetQxCrite: ").append(toIndentedString(firstSubmitMetQxCrite)).append("\n");
    sb.append("    lastSubmitMetQxCrite: ").append(toIndentedString(lastSubmitMetQxCrite)).append("\n");
    sb.append("    primaryCompDateType: ").append(toIndentedString(primaryCompDateType)).append("\n");
    sb.append("    studyCompletionDateType: ").append(toIndentedString(studyCompletionDateType)).append("\n");
    sb.append("    firstPostedDateType: ").append(toIndentedString(firstPostedDateType)).append("\n");
    sb.append("    lastPostedDateType: ").append(toIndentedString(lastPostedDateType)).append("\n");
    sb.append("    enrollmentType: ").append(toIndentedString(enrollmentType)).append("\n");
    sb.append("    beamProbabilityOfTrialSuccess: ").append(toIndentedString(beamProbabilityOfTrialSuccess)).append("\n");
    sb.append("    beamProbabilityOfLaunch: ").append(toIndentedString(beamProbabilityOfLaunch)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

