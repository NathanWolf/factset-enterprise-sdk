/*
 * FactSet Entity API
 * Using an entity centric data model, FactSet's Entity API provides access to FactSet's complete security and entity level symbology, comprehensive entity reference data, and all of the necessary relationships and connections to create a foundation that tightly correlates disparate sources of information to a master entity identifier. Use this API to quickly understand the full entity structure and related securities. 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetEntity.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetEntity.JSON;


/**
 * EntitySecurities
 */
@JsonPropertyOrder({
  EntitySecurities.JSON_PROPERTY_FSYM_ID,
  EntitySecurities.JSON_PROPERTY_FSYM_SECURITY_ID,
  EntitySecurities.JSON_PROPERTY_FSYM_LISTING_ID,
  EntitySecurities.JSON_PROPERTY_SECURITY_TYPE,
  EntitySecurities.JSON_PROPERTY_LISTING_EXCHANGE,
  EntitySecurities.JSON_PROPERTY_SECURITY_NAME,
  EntitySecurities.JSON_PROPERTY_FSYM_ENTITY_ID,
  EntitySecurities.JSON_PROPERTY_FSYM_TICKER_EXCHANGE,
  EntitySecurities.JSON_PROPERTY_FSYM_TICKER_REGION,
  EntitySecurities.JSON_PROPERTY_ACTIVE_FLAG,
  EntitySecurities.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntitySecurities implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_FSYM_SECURITY_ID = "fsymSecurityId";
  private String fsymSecurityId;

  public static final String JSON_PROPERTY_FSYM_LISTING_ID = "fsymListingId";
  private String fsymListingId;

  /**
   * The Security Type Code. Security Type Code details and mapping are described on Online Assistant Page 15776 for Equity and Page 16014 for Fixed Income.
   */
  public enum SecurityTypeEnum {
    SHARE("SHARE"),
    
    PREFEQ("PREFEQ"),
    
    MF_C("MF_C"),
    
    MF_O("MF_O"),
    
    ETF_ETF("ETF_ETF"),
    
    ETF_UVI("ETF_UVI"),
    
    ETF_NAV("ETF_NAV"),
    
    ADR("ADR"),
    
    GDR("GDR"),
    
    NVDR("NVDR"),
    
    DR("DR"),
    
    ALIEN("ALIEN"),
    
    PREF("PREF"),
    
    WARRANT("WARRANT"),
    
    RIGHT("RIGHT"),
    
    UNIT("UNIT"),
    
    STRUCT("STRUCT"),
    
    TEMP("TEMP"),
    
    CONV("CONV"),
    
    BDNT("BDNT"),
    
    PFD("PFD"),
    
    PASS("PASS"),
    
    MM("MM"),
    
    RMBS("RMBS"),
    
    ABS("ABS"),
    
    COVR("COVR"),
    
    LKS("LKS"),
    
    LAUTH("LAUTH"),
    
    BLDN("BLDN"),
    
    CMBS("CMBS");

    private String value;

    SecurityTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SecurityTypeEnum fromValue(String value) {
      for (SecurityTypeEnum b : SecurityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SECURITY_TYPE = "securityType";
  private SecurityTypeEnum securityType;

  public static final String JSON_PROPERTY_LISTING_EXCHANGE = "listingExchange";
  private String listingExchange;

  public static final String JSON_PROPERTY_SECURITY_NAME = "securityName";
  private String securityName;

  public static final String JSON_PROPERTY_FSYM_ENTITY_ID = "fsymEntityId";
  private String fsymEntityId;

  public static final String JSON_PROPERTY_FSYM_TICKER_EXCHANGE = "fsymTickerExchange";
  private String fsymTickerExchange;

  public static final String JSON_PROPERTY_FSYM_TICKER_REGION = "fsymTickerRegion";
  private String fsymTickerRegion;

  /**
   * Indicates if security is active. 1 &#x3D; Active; 0 &#x3D; Inactive.
   */
  public enum ActiveFlagEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    ActiveFlagEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActiveFlagEnum fromValue(Integer value) {
      for (ActiveFlagEnum b : ActiveFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "activeFlag";
  private ActiveFlagEnum activeFlag;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public EntitySecurities() { 
  }

  public EntitySecurities fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * FactSet Ultimate Parent ID of the Requested Security ID
   * @return fsymId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "001MF1-E", value = "FactSet Ultimate Parent ID of the Requested Security ID")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public EntitySecurities fsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = fsymSecurityId;
    return this;
  }

   /**
   * FactSet Security ID (-S).
   * @return fsymSecurityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "F3PS31-S", value = "FactSet Security ID (-S).")
  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymSecurityId() {
    return fsymSecurityId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = fsymSecurityId;
  }


  public EntitySecurities fsymListingId(String fsymListingId) {
    this.fsymListingId = fsymListingId;
    return this;
  }

   /**
   * FactSet Listing ID (-L). Corresponds to the listing exchange for the requested security. Not applicable for FI instruments.
   * @return fsymListingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LVR478-L", value = "FactSet Listing ID (-L). Corresponds to the listing exchange for the requested security. Not applicable for FI instruments.")
  @JsonProperty(JSON_PROPERTY_FSYM_LISTING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymListingId() {
    return fsymListingId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_LISTING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymListingId(String fsymListingId) {
    this.fsymListingId = fsymListingId;
  }


  public EntitySecurities securityType(SecurityTypeEnum securityType) {
    this.securityType = securityType;
    return this;
  }

   /**
   * The Security Type Code. Security Type Code details and mapping are described on Online Assistant Page 15776 for Equity and Page 16014 for Fixed Income.
   * @return securityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BDNT", value = "The Security Type Code. Security Type Code details and mapping are described on Online Assistant Page 15776 for Equity and Page 16014 for Fixed Income.")
  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecurityTypeEnum getSecurityType() {
    return securityType;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityType(SecurityTypeEnum securityType) {
    this.securityType = securityType;
  }


  public EntitySecurities listingExchange(String listingExchange) {
    this.listingExchange = listingExchange;
    return this;
  }

   /**
   * The securities primary listing exchange.
   * @return listingExchange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NAS", value = "The securities primary listing exchange.")
  @JsonProperty(JSON_PROPERTY_LISTING_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getListingExchange() {
    return listingExchange;
  }


  @JsonProperty(JSON_PROPERTY_LISTING_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListingExchange(String listingExchange) {
    this.listingExchange = listingExchange;
  }


  public EntitySecurities securityName(String securityName) {
    this.securityName = securityName;
    return this;
  }

   /**
   * Security name
   * @return securityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Amazon.com, Inc. 1.9% 21-AUG-2020", value = "Security name")
  @JsonProperty(JSON_PROPERTY_SECURITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityName() {
    return securityName;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityName(String securityName) {
    this.securityName = securityName;
  }


  public EntitySecurities fsymEntityId(String fsymEntityId) {
    this.fsymEntityId = fsymEntityId;
    return this;
  }

   /**
   * Unique FactSet-generated identifier representing an entity.
   * @return fsymEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "001MF1-E", value = "Unique FactSet-generated identifier representing an entity.")
  @JsonProperty(JSON_PROPERTY_FSYM_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymEntityId() {
    return fsymEntityId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymEntityId(String fsymEntityId) {
    this.fsymEntityId = fsymEntityId;
  }


  public EntitySecurities fsymTickerExchange(String fsymTickerExchange) {
    this.fsymTickerExchange = fsymTickerExchange;
    return this;
  }

   /**
   * The security&#39;s ticker-exchange, representing the listing exchange symbol.
   * @return fsymTickerExchange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AMZN-NAS", value = "The security's ticker-exchange, representing the listing exchange symbol.")
  @JsonProperty(JSON_PROPERTY_FSYM_TICKER_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymTickerExchange() {
    return fsymTickerExchange;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_TICKER_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymTickerExchange(String fsymTickerExchange) {
    this.fsymTickerExchange = fsymTickerExchange;
  }


  public EntitySecurities fsymTickerRegion(String fsymTickerRegion) {
    this.fsymTickerRegion = fsymTickerRegion;
    return this;
  }

   /**
   * The security&#39;s regional ticker.
   * @return fsymTickerRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AMZN-US", value = "The security's regional ticker.")
  @JsonProperty(JSON_PROPERTY_FSYM_TICKER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymTickerRegion() {
    return fsymTickerRegion;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_TICKER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymTickerRegion(String fsymTickerRegion) {
    this.fsymTickerRegion = fsymTickerRegion;
  }


  public EntitySecurities activeFlag(ActiveFlagEnum activeFlag) {
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Indicates if security is active. 1 &#x3D; Active; 0 &#x3D; Inactive.
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Indicates if security is active. 1 = Active; 0 = Inactive.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActiveFlagEnum getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(ActiveFlagEnum activeFlag) {
    this.activeFlag = activeFlag;
  }


  public EntitySecurities requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier used in &#x60;ids&#x60; parameter.  When list of identifiers used, they will be parsed and resolved individually.
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AMZN-US", value = "Identifier used in `ids` parameter.  When list of identifiers used, they will be parsed and resolved individually.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this entitySecurities object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntitySecurities entitySecurities = (EntitySecurities) o;
    return Objects.equals(this.fsymId, entitySecurities.fsymId) &&
        Objects.equals(this.fsymSecurityId, entitySecurities.fsymSecurityId) &&
        Objects.equals(this.fsymListingId, entitySecurities.fsymListingId) &&
        Objects.equals(this.securityType, entitySecurities.securityType) &&
        Objects.equals(this.listingExchange, entitySecurities.listingExchange) &&
        Objects.equals(this.securityName, entitySecurities.securityName) &&
        Objects.equals(this.fsymEntityId, entitySecurities.fsymEntityId) &&
        Objects.equals(this.fsymTickerExchange, entitySecurities.fsymTickerExchange) &&
        Objects.equals(this.fsymTickerRegion, entitySecurities.fsymTickerRegion) &&
        Objects.equals(this.activeFlag, entitySecurities.activeFlag) &&
        Objects.equals(this.requestId, entitySecurities.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, fsymSecurityId, fsymListingId, securityType, listingExchange, securityName, fsymEntityId, fsymTickerExchange, fsymTickerRegion, activeFlag, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntitySecurities {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    fsymSecurityId: ").append(toIndentedString(fsymSecurityId)).append("\n");
    sb.append("    fsymListingId: ").append(toIndentedString(fsymListingId)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("    listingExchange: ").append(toIndentedString(listingExchange)).append("\n");
    sb.append("    securityName: ").append(toIndentedString(securityName)).append("\n");
    sb.append("    fsymEntityId: ").append(toIndentedString(fsymEntityId)).append("\n");
    sb.append("    fsymTickerExchange: ").append(toIndentedString(fsymTickerExchange)).append("\n");
    sb.append("    fsymTickerRegion: ").append(toIndentedString(fsymTickerRegion)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

