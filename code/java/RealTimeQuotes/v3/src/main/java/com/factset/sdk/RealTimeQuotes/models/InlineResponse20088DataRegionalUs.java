/*
 * Quotes API For Digital Portals
 * The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeQuotes.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeQuotes.JSON;


/**
 * Trading indicators specific to the United States.
 */
@ApiModel(description = "Trading indicators specific to the United States.")
@JsonPropertyOrder({
  InlineResponse20088DataRegionalUs.JSON_PROPERTY_CAVEAT_EMPTOR,
  InlineResponse20088DataRegionalUs.JSON_PROPERTY_PROPRIETARY_QUOTE_ELIGIBLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20088DataRegionalUs implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CAVEAT_EMPTOR = "caveatEmptor";
  private JsonNullable<Boolean> caveatEmptor = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PROPRIETARY_QUOTE_ELIGIBLE = "proprietaryQuoteEligible";
  private JsonNullable<Boolean> proprietaryQuoteEligible = JsonNullable.<Boolean>undefined();

  public InlineResponse20088DataRegionalUs() { 
  }

  public InlineResponse20088DataRegionalUs caveatEmptor(Boolean caveatEmptor) {
    this.caveatEmptor = JsonNullable.<Boolean>of(caveatEmptor);
    return this;
  }

   /**
   * Indicates whether a Caveat Emptor (Buyer Beware) warning has been applied to the security.
   * @return caveatEmptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether a Caveat Emptor (Buyer Beware) warning has been applied to the security.")
  @JsonIgnore

  public Boolean getCaveatEmptor() {
        return caveatEmptor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAVEAT_EMPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCaveatEmptor_JsonNullable() {
    return caveatEmptor;
  }
  
  @JsonProperty(JSON_PROPERTY_CAVEAT_EMPTOR)
  public void setCaveatEmptor_JsonNullable(JsonNullable<Boolean> caveatEmptor) {
    this.caveatEmptor = caveatEmptor;
  }

  public void setCaveatEmptor(Boolean caveatEmptor) {
    this.caveatEmptor = JsonNullable.<Boolean>of(caveatEmptor);
  }


  public InlineResponse20088DataRegionalUs proprietaryQuoteEligible(Boolean proprietaryQuoteEligible) {
    this.proprietaryQuoteEligible = JsonNullable.<Boolean>of(proprietaryQuoteEligible);
    return this;
  }

   /**
   * Security is eligible for proprietary quoting under SEC Rule 15c-211.
   * @return proprietaryQuoteEligible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Security is eligible for proprietary quoting under SEC Rule 15c-211.")
  @JsonIgnore

  public Boolean getProprietaryQuoteEligible() {
        return proprietaryQuoteEligible.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROPRIETARY_QUOTE_ELIGIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getProprietaryQuoteEligible_JsonNullable() {
    return proprietaryQuoteEligible;
  }
  
  @JsonProperty(JSON_PROPERTY_PROPRIETARY_QUOTE_ELIGIBLE)
  public void setProprietaryQuoteEligible_JsonNullable(JsonNullable<Boolean> proprietaryQuoteEligible) {
    this.proprietaryQuoteEligible = proprietaryQuoteEligible;
  }

  public void setProprietaryQuoteEligible(Boolean proprietaryQuoteEligible) {
    this.proprietaryQuoteEligible = JsonNullable.<Boolean>of(proprietaryQuoteEligible);
  }


  /**
   * Return true if this inline_response_200_88_data_regional_us object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20088DataRegionalUs inlineResponse20088DataRegionalUs = (InlineResponse20088DataRegionalUs) o;
    return equalsNullable(this.caveatEmptor, inlineResponse20088DataRegionalUs.caveatEmptor) &&
        equalsNullable(this.proprietaryQuoteEligible, inlineResponse20088DataRegionalUs.proprietaryQuoteEligible);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(caveatEmptor), hashCodeNullable(proprietaryQuoteEligible));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20088DataRegionalUs {\n");
    sb.append("    caveatEmptor: ").append(toIndentedString(caveatEmptor)).append("\n");
    sb.append("    proprietaryQuoteEligible: ").append(toIndentedString(proprietaryQuoteEligible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

