/*
 * Quotes API For Digital Portals
 * The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeQuotes.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.RealTimeQuotes.models.InlineResponse20050DataNotation;
import com.factset.sdk.RealTimeQuotes.models.InlineResponse20050DataValueUnit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeQuotes.JSON;


/**
 * InlineResponse20050DataComponents
 */
@JsonPropertyOrder({
  InlineResponse20050DataComponents.JSON_PROPERTY_NAME,
  InlineResponse20050DataComponents.JSON_PROPERTY_VALUE_UNIT,
  InlineResponse20050DataComponents.JSON_PROPERTY_NOTATION,
  InlineResponse20050DataComponents.JSON_PROPERTY_PARTICIPATION,
  InlineResponse20050DataComponents.JSON_PROPERTY_NUMBER_SHARES,
  InlineResponse20050DataComponents.JSON_PROPERTY_INITIAL_WEIGHT,
  InlineResponse20050DataComponents.JSON_PROPERTY_REFERENCE_LEVEL,
  InlineResponse20050DataComponents.JSON_PROPERTY_CONSTANT_LEVERAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse20050DataComponents implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private InlineResponse20050DataValueUnit valueUnit;

  public static final String JSON_PROPERTY_NOTATION = "notation";
  private InlineResponse20050DataNotation notation;

  /**
   * Indicates whether the level of the composite instrument rises or falls with a rising level of the component. The level of a basket always rises with rising level of its components and vice versa; therefore, for those the attribute is not set. The level of an alpha structure or a futures spread is calculated by subtracting the performance (price) of the short component from that of the long one. The level of a factor index rises with rising level of its component if the latter is long, and falls if it is short. For the type of composite instrument, see attribute  &#x60;typeComposite&#x60;.
   */
  public enum ParticipationEnum {
    LONG("long"),
    
    SHORT("short");

    private String value;

    ParticipationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParticipationEnum fromValue(String value) {
      for (ParticipationEnum b : ParticipationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PARTICIPATION = "participation";
  private JsonNullable<ParticipationEnum> participation = JsonNullable.<ParticipationEnum>undefined();

  public static final String JSON_PROPERTY_NUMBER_SHARES = "numberShares";
  private JsonNullable<BigDecimal> numberShares = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_INITIAL_WEIGHT = "initialWeight";
  private JsonNullable<BigDecimal> initialWeight = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_REFERENCE_LEVEL = "referenceLevel";
  private JsonNullable<BigDecimal> referenceLevel = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_CONSTANT_LEVERAGE = "constantLeverage";
  private JsonNullable<BigDecimal> constantLeverage = JsonNullable.<BigDecimal>undefined();

  public InlineResponse20050DataComponents() { 
  }

  public InlineResponse20050DataComponents name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Name of the component, provided also if there is no notation for the component.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the component, provided also if there is no notation for the component.")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public InlineResponse20050DataComponents valueUnit(InlineResponse20050DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20050DataValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(InlineResponse20050DataValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public InlineResponse20050DataComponents notation(InlineResponse20050DataNotation notation) {
    this.notation = notation;
    return this;
  }

   /**
   * Get notation
   * @return notation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20050DataNotation getNotation() {
    return notation;
  }


  @JsonProperty(JSON_PROPERTY_NOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotation(InlineResponse20050DataNotation notation) {
    this.notation = notation;
  }


  public InlineResponse20050DataComponents participation(ParticipationEnum participation) {
    this.participation = JsonNullable.<ParticipationEnum>of(participation);
    return this;
  }

   /**
   * Indicates whether the level of the composite instrument rises or falls with a rising level of the component. The level of a basket always rises with rising level of its components and vice versa; therefore, for those the attribute is not set. The level of an alpha structure or a futures spread is calculated by subtracting the performance (price) of the short component from that of the long one. The level of a factor index rises with rising level of its component if the latter is long, and falls if it is short. For the type of composite instrument, see attribute  &#x60;typeComposite&#x60;.
   * @return participation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the level of the composite instrument rises or falls with a rising level of the component. The level of a basket always rises with rising level of its components and vice versa; therefore, for those the attribute is not set. The level of an alpha structure or a futures spread is calculated by subtracting the performance (price) of the short component from that of the long one. The level of a factor index rises with rising level of its component if the latter is long, and falls if it is short. For the type of composite instrument, see attribute  `typeComposite`.")
  @JsonIgnore

  public ParticipationEnum getParticipation() {
        return participation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ParticipationEnum> getParticipation_JsonNullable() {
    return participation;
  }
  
  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  public void setParticipation_JsonNullable(JsonNullable<ParticipationEnum> participation) {
    this.participation = participation;
  }

  public void setParticipation(ParticipationEnum participation) {
    this.participation = JsonNullable.<ParticipationEnum>of(participation);
  }


  public InlineResponse20050DataComponents numberShares(BigDecimal numberShares) {
    this.numberShares = JsonNullable.<BigDecimal>of(numberShares);
    return this;
  }

   /**
   * Absolute number of shares of the component contained in the composite instrument.  The absolute number of shares can be subject to change due to corporate actions or active management of the composite instrument (see attribute &#x60;activeManagement&#x60;). If the component is an index, the number of shares is a factor which applies to the level of the index.
   * @return numberShares
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Absolute number of shares of the component contained in the composite instrument.  The absolute number of shares can be subject to change due to corporate actions or active management of the composite instrument (see attribute `activeManagement`). If the component is an index, the number of shares is a factor which applies to the level of the index.")
  @JsonIgnore

  public BigDecimal getNumberShares() {
        return numberShares.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getNumberShares_JsonNullable() {
    return numberShares;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER_SHARES)
  public void setNumberShares_JsonNullable(JsonNullable<BigDecimal> numberShares) {
    this.numberShares = numberShares;
  }

  public void setNumberShares(BigDecimal numberShares) {
    this.numberShares = JsonNullable.<BigDecimal>of(numberShares);
  }


  public InlineResponse20050DataComponents initialWeight(BigDecimal initialWeight) {
    this.initialWeight = JsonNullable.<BigDecimal>of(initialWeight);
    return this;
  }

   /**
   * Weighting of the component, valid only at initial fixing   (see attribute &#x60;initialFixing&#x60; in endpoint &#x60;/securitizedDerivative/get&#x60;). 
   * @return initialWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Weighting of the component, valid only at initial fixing   (see attribute `initialFixing` in endpoint `/securitizedDerivative/get`). ")
  @JsonIgnore

  public BigDecimal getInitialWeight() {
        return initialWeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIAL_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getInitialWeight_JsonNullable() {
    return initialWeight;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIAL_WEIGHT)
  public void setInitialWeight_JsonNullable(JsonNullable<BigDecimal> initialWeight) {
    this.initialWeight = initialWeight;
  }

  public void setInitialWeight(BigDecimal initialWeight) {
    this.initialWeight = JsonNullable.<BigDecimal>of(initialWeight);
  }


  public InlineResponse20050DataComponents referenceLevel(BigDecimal referenceLevel) {
    this.referenceLevel = JsonNullable.<BigDecimal>of(referenceLevel);
    return this;
  }

   /**
   * Level of the component on the issue date of the derivative product.  For the value unit, see attribute &#x60;valueUnit&#x60;.
   * @return referenceLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Level of the component on the issue date of the derivative product.  For the value unit, see attribute `valueUnit`.")
  @JsonIgnore

  public BigDecimal getReferenceLevel() {
        return referenceLevel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getReferenceLevel_JsonNullable() {
    return referenceLevel;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_LEVEL)
  public void setReferenceLevel_JsonNullable(JsonNullable<BigDecimal> referenceLevel) {
    this.referenceLevel = referenceLevel;
  }

  public void setReferenceLevel(BigDecimal referenceLevel) {
    this.referenceLevel = JsonNullable.<BigDecimal>of(referenceLevel);
  }


  public InlineResponse20050DataComponents constantLeverage(BigDecimal constantLeverage) {
    this.constantLeverage = JsonNullable.<BigDecimal>of(constantLeverage);
    return this;
  }

   /**
   * For a leveraged component, e.g. a component of a factor index, day-to-day leverage factor of the component&#39;s performance.
   * @return constantLeverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For a leveraged component, e.g. a component of a factor index, day-to-day leverage factor of the component's performance.")
  @JsonIgnore

  public BigDecimal getConstantLeverage() {
        return constantLeverage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONSTANT_LEVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getConstantLeverage_JsonNullable() {
    return constantLeverage;
  }
  
  @JsonProperty(JSON_PROPERTY_CONSTANT_LEVERAGE)
  public void setConstantLeverage_JsonNullable(JsonNullable<BigDecimal> constantLeverage) {
    this.constantLeverage = constantLeverage;
  }

  public void setConstantLeverage(BigDecimal constantLeverage) {
    this.constantLeverage = JsonNullable.<BigDecimal>of(constantLeverage);
  }


  /**
   * Return true if this inline_response_200_50_data_components object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20050DataComponents inlineResponse20050DataComponents = (InlineResponse20050DataComponents) o;
    return equalsNullable(this.name, inlineResponse20050DataComponents.name) &&
        Objects.equals(this.valueUnit, inlineResponse20050DataComponents.valueUnit) &&
        Objects.equals(this.notation, inlineResponse20050DataComponents.notation) &&
        equalsNullable(this.participation, inlineResponse20050DataComponents.participation) &&
        equalsNullable(this.numberShares, inlineResponse20050DataComponents.numberShares) &&
        equalsNullable(this.initialWeight, inlineResponse20050DataComponents.initialWeight) &&
        equalsNullable(this.referenceLevel, inlineResponse20050DataComponents.referenceLevel) &&
        equalsNullable(this.constantLeverage, inlineResponse20050DataComponents.constantLeverage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), valueUnit, notation, hashCodeNullable(participation), hashCodeNullable(numberShares), hashCodeNullable(initialWeight), hashCodeNullable(referenceLevel), hashCodeNullable(constantLeverage));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20050DataComponents {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    notation: ").append(toIndentedString(notation)).append("\n");
    sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
    sb.append("    numberShares: ").append(toIndentedString(numberShares)).append("\n");
    sb.append("    initialWeight: ").append(toIndentedString(initialWeight)).append("\n");
    sb.append("    referenceLevel: ").append(toIndentedString(referenceLevel)).append("\n");
    sb.append("    constantLeverage: ").append(toIndentedString(constantLeverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

