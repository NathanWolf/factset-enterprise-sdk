/*
 * FactSet Capital Structure Report Builder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.CapitalStructureReportBuilder.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.CapitalStructureReportBuilder.JSON;


/**
 * classifies the status of each debt issue since last report period. - newIssue - New debt issued by the company. - newIssueAcq - New debt assumed from an acquisition. - matured - Debt that has matured. - redeemed - Debt that has been redeemed prior to maturity. - terminated - Debt that has been terminated prior to maturity. - defaulted - Debt that the issuer has missed interest payment(s) or principal. 
 */
@ApiModel(description = "classifies the status of each debt issue since last report period. - newIssue - New debt issued by the company. - newIssueAcq - New debt assumed from an acquisition. - matured - Debt that has matured. - redeemed - Debt that has been redeemed prior to maturity. - terminated - Debt that has been terminated prior to maturity. - defaulted - Debt that the issuer has missed interest payment(s) or principal. ")
@JsonPropertyOrder({
  InterimStatusInterimStatus.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InterimStatusInterimStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets value
   */
  public enum ValueEnum {
    NEWISSUE("newIssue"),
    
    NEWISSUEACQ("newIssueAcq"),
    
    MATURED("matured"),
    
    REDEEMED("redeemed"),
    
    TERMINATED("terminated"),
    
    DEFAULTED("defaulted");

    private String value;

    ValueEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValueEnum fromValue(String value) {
      for (ValueEnum b : ValueEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VALUE = "value";
  private ValueEnum value;


  public InterimStatusInterimStatus value(ValueEnum value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ValueEnum getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(ValueEnum value) {
    this.value = value;
  }


  /**
   * Return true if this interimStatus_interimStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterimStatusInterimStatus interimStatusInterimStatus = (InterimStatusInterimStatus) o;
    return Objects.equals(this.value, interimStatusInterimStatus.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterimStatusInterimStatus {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

