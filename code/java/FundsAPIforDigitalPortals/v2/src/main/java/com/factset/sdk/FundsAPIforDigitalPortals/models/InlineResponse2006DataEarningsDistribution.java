/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataEarningsDistributionFrequency;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Distribution of the earnings.
 */
@ApiModel(description = "Distribution of the earnings.")
@JsonPropertyOrder({
  InlineResponse2006DataEarningsDistribution.JSON_PROPERTY_IS_DISTRIBUTING,
  InlineResponse2006DataEarningsDistribution.JSON_PROPERTY_FREQUENCY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2006DataEarningsDistribution implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IS_DISTRIBUTING = "isDistributing";
  private Boolean isDistributing;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private InlineResponse2006DataEarningsDistributionFrequency frequency;

  public InlineResponse2006DataEarningsDistribution() { 
  }

  public InlineResponse2006DataEarningsDistribution isDistributing(Boolean isDistributing) {
    this.isDistributing = isDistributing;
    return this;
  }

   /**
   * If true, the share class is distributing (paying out) the earnings to the inverstors; otherwise they are being reinvested.
   * @return isDistributing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the share class is distributing (paying out) the earnings to the inverstors; otherwise they are being reinvested.")
  @JsonProperty(JSON_PROPERTY_IS_DISTRIBUTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDistributing() {
    return isDistributing;
  }


  @JsonProperty(JSON_PROPERTY_IS_DISTRIBUTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDistributing(Boolean isDistributing) {
    this.isDistributing = isDistributing;
  }


  public InlineResponse2006DataEarningsDistribution frequency(InlineResponse2006DataEarningsDistributionFrequency frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2006DataEarningsDistributionFrequency getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequency(InlineResponse2006DataEarningsDistributionFrequency frequency) {
    this.frequency = frequency;
  }


  /**
   * Return true if this inline_response_200_6_data_earnings_distribution object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006DataEarningsDistribution inlineResponse2006DataEarningsDistribution = (InlineResponse2006DataEarningsDistribution) o;
    return Objects.equals(this.isDistributing, inlineResponse2006DataEarningsDistribution.isDistributing) &&
        Objects.equals(this.frequency, inlineResponse2006DataEarningsDistribution.frequency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isDistributing, frequency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006DataEarningsDistribution {\n");
    sb.append("    isDistributing: ").append(toIndentedString(isDistributing)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

