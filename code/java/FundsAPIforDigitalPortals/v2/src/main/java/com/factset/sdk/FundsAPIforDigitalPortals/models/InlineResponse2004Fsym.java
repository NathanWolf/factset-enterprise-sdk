/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2004FsymListing;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2004FsymRegional;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.
 */
@ApiModel(description = "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.")
@JsonPropertyOrder({
  InlineResponse2004Fsym.JSON_PROPERTY_LISTING,
  InlineResponse2004Fsym.JSON_PROPERTY_REGIONAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2004Fsym implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LISTING = "listing";
  private InlineResponse2004FsymListing listing;

  public static final String JSON_PROPERTY_REGIONAL = "regional";
  private InlineResponse2004FsymRegional regional;

  public InlineResponse2004Fsym() { 
  }

  public InlineResponse2004Fsym listing(InlineResponse2004FsymListing listing) {
    this.listing = listing;
    return this;
  }

   /**
   * Get listing
   * @return listing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LISTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004FsymListing getListing() {
    return listing;
  }


  @JsonProperty(JSON_PROPERTY_LISTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListing(InlineResponse2004FsymListing listing) {
    this.listing = listing;
  }


  public InlineResponse2004Fsym regional(InlineResponse2004FsymRegional regional) {
    this.regional = regional;
    return this;
  }

   /**
   * Get regional
   * @return regional
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004FsymRegional getRegional() {
    return regional;
  }


  @JsonProperty(JSON_PROPERTY_REGIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegional(InlineResponse2004FsymRegional regional) {
    this.regional = regional;
  }


  /**
   * Return true if this inline_response_200_4_fsym object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004Fsym inlineResponse2004Fsym = (InlineResponse2004Fsym) o;
    return Objects.equals(this.listing, inlineResponse2004Fsym.listing) &&
        Objects.equals(this.regional, inlineResponse2004Fsym.regional);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listing, regional);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004Fsym {\n");
    sb.append("    listing: ").append(toIndentedString(listing)).append("\n");
    sb.append("    regional: ").append(toIndentedString(regional)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

