/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataFundIssuerCountry;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataFundIssuerJuristicPerson;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Values and value ranges related to the issuers of funds.
 */
@ApiModel(description = "Values and value ranges related to the issuers of funds.")
@JsonPropertyOrder({
  InlineResponse2005DataFundIssuer.JSON_PROPERTY_JURISTIC_PERSON,
  InlineResponse2005DataFundIssuer.JSON_PROPERTY_COUNTRY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2005DataFundIssuer implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_JURISTIC_PERSON = "juristicPerson";
  private java.util.List<InlineResponse2005DataFundIssuerJuristicPerson> juristicPerson = null;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private java.util.List<InlineResponse2005DataFundIssuerCountry> country = null;

  public InlineResponse2005DataFundIssuer() { 
  }

  public InlineResponse2005DataFundIssuer juristicPerson(java.util.List<InlineResponse2005DataFundIssuerJuristicPerson> juristicPerson) {
    this.juristicPerson = juristicPerson;
    return this;
  }

  public InlineResponse2005DataFundIssuer addJuristicPersonItem(InlineResponse2005DataFundIssuerJuristicPerson juristicPersonItem) {
    if (this.juristicPerson == null) {
      this.juristicPerson = new java.util.ArrayList<>();
    }
    this.juristicPerson.add(juristicPersonItem);
    return this;
  }

   /**
   * List of juristic persons in the role of an issuer. See endpoint &#x60;/fund/issuer/search&#x60; for possible values.
   * @return juristicPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of juristic persons in the role of an issuer. See endpoint `/fund/issuer/search` for possible values.")
  @JsonProperty(JSON_PROPERTY_JURISTIC_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2005DataFundIssuerJuristicPerson> getJuristicPerson() {
    return juristicPerson;
  }


  @JsonProperty(JSON_PROPERTY_JURISTIC_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJuristicPerson(java.util.List<InlineResponse2005DataFundIssuerJuristicPerson> juristicPerson) {
    this.juristicPerson = juristicPerson;
  }


  public InlineResponse2005DataFundIssuer country(java.util.List<InlineResponse2005DataFundIssuerCountry> country) {
    this.country = country;
    return this;
  }

  public InlineResponse2005DataFundIssuer addCountryItem(InlineResponse2005DataFundIssuerCountry countryItem) {
    if (this.country == null) {
      this.country = new java.util.ArrayList<>();
    }
    this.country.add(countryItem);
    return this;
  }

   /**
   * List of countries where the issuers of the funds are registered. See endpoint &#x60;/basic/region/country/list&#x60; for possible values.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of countries where the issuers of the funds are registered. See endpoint `/basic/region/country/list` for possible values.")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2005DataFundIssuerCountry> getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(java.util.List<InlineResponse2005DataFundIssuerCountry> country) {
    this.country = country;
  }


  /**
   * Return true if this inline_response_200_5_data_fund_issuer object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005DataFundIssuer inlineResponse2005DataFundIssuer = (InlineResponse2005DataFundIssuer) o;
    return Objects.equals(this.juristicPerson, inlineResponse2005DataFundIssuer.juristicPerson) &&
        Objects.equals(this.country, inlineResponse2005DataFundIssuer.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(juristicPerson, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005DataFundIssuer {\n");
    sb.append("    juristicPerson: ").append(toIndentedString(juristicPerson)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

