/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundNotationScreenerSearchDataValidationPricesLatest;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundNotationScreenerSearchDataValidationPricesPrevious;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Price-related parameters.
 */
@ApiModel(description = "Price-related parameters.")
@JsonPropertyOrder({
  FundNotationScreenerSearchDataValidationPrices.JSON_PROPERTY_LATEST,
  FundNotationScreenerSearchDataValidationPrices.JSON_PROPERTY_PREVIOUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FundNotationScreenerSearchDataValidationPrices implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LATEST = "latest";
  private FundNotationScreenerSearchDataValidationPricesLatest latest;

  public static final String JSON_PROPERTY_PREVIOUS = "previous";
  private FundNotationScreenerSearchDataValidationPricesPrevious previous;

  public FundNotationScreenerSearchDataValidationPrices() { 
  }

  public FundNotationScreenerSearchDataValidationPrices latest(FundNotationScreenerSearchDataValidationPricesLatest latest) {
    this.latest = latest;
    return this;
  }

   /**
   * Get latest
   * @return latest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundNotationScreenerSearchDataValidationPricesLatest getLatest() {
    return latest;
  }


  @JsonProperty(JSON_PROPERTY_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatest(FundNotationScreenerSearchDataValidationPricesLatest latest) {
    this.latest = latest;
  }


  public FundNotationScreenerSearchDataValidationPrices previous(FundNotationScreenerSearchDataValidationPricesPrevious previous) {
    this.previous = previous;
    return this;
  }

   /**
   * Get previous
   * @return previous
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundNotationScreenerSearchDataValidationPricesPrevious getPrevious() {
    return previous;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrevious(FundNotationScreenerSearchDataValidationPricesPrevious previous) {
    this.previous = previous;
  }


  /**
   * Return true if this _fund_notation_screener_search_data_validation_prices object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundNotationScreenerSearchDataValidationPrices fundNotationScreenerSearchDataValidationPrices = (FundNotationScreenerSearchDataValidationPrices) o;
    return Objects.equals(this.latest, fundNotationScreenerSearchDataValidationPrices.latest) &&
        Objects.equals(this.previous, fundNotationScreenerSearchDataValidationPrices.previous);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latest, previous);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundNotationScreenerSearchDataValidationPrices {\n");
    sb.append("    latest: ").append(toIndentedString(latest)).append("\n");
    sb.append("    previous: ").append(toIndentedString(previous)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

