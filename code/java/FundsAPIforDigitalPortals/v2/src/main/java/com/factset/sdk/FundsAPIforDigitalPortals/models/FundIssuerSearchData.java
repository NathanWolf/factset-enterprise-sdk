/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundIssuerSearchDataFund;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundIssuerSearchDataIssuer;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundIssuerSearchDataMarket;
import com.factset.sdk.FundsAPIforDigitalPortals.models.FundIssuerSearchDataShareClass;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * The data member contains the request&#39;s primary data.
 */
@ApiModel(description = "The data member contains the request's primary data.")
@JsonPropertyOrder({
  FundIssuerSearchData.JSON_PROPERTY_ISSUER,
  FundIssuerSearchData.JSON_PROPERTY_FUND,
  FundIssuerSearchData.JSON_PROPERTY_SHARE_CLASS,
  FundIssuerSearchData.JSON_PROPERTY_MARKET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FundIssuerSearchData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private FundIssuerSearchDataIssuer issuer;

  public static final String JSON_PROPERTY_FUND = "fund";
  private FundIssuerSearchDataFund fund;

  public static final String JSON_PROPERTY_SHARE_CLASS = "shareClass";
  private FundIssuerSearchDataShareClass shareClass;

  public static final String JSON_PROPERTY_MARKET = "market";
  private FundIssuerSearchDataMarket market;

  public FundIssuerSearchData() { 
  }

  public FundIssuerSearchData issuer(FundIssuerSearchDataIssuer issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundIssuerSearchDataIssuer getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(FundIssuerSearchDataIssuer issuer) {
    this.issuer = issuer;
  }


  public FundIssuerSearchData fund(FundIssuerSearchDataFund fund) {
    this.fund = fund;
    return this;
  }

   /**
   * Get fund
   * @return fund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundIssuerSearchDataFund getFund() {
    return fund;
  }


  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFund(FundIssuerSearchDataFund fund) {
    this.fund = fund;
  }


  public FundIssuerSearchData shareClass(FundIssuerSearchDataShareClass shareClass) {
    this.shareClass = shareClass;
    return this;
  }

   /**
   * Get shareClass
   * @return shareClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHARE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundIssuerSearchDataShareClass getShareClass() {
    return shareClass;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareClass(FundIssuerSearchDataShareClass shareClass) {
    this.shareClass = shareClass;
  }


  public FundIssuerSearchData market(FundIssuerSearchDataMarket market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FundIssuerSearchDataMarket getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(FundIssuerSearchDataMarket market) {
    this.market = market;
  }


  /**
   * Return true if this _fund_issuer_search_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundIssuerSearchData fundIssuerSearchData = (FundIssuerSearchData) o;
    return Objects.equals(this.issuer, fundIssuerSearchData.issuer) &&
        Objects.equals(this.fund, fundIssuerSearchData.fund) &&
        Objects.equals(this.shareClass, fundIssuerSearchData.shareClass) &&
        Objects.equals(this.market, fundIssuerSearchData.market);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuer, fund, shareClass, market);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundIssuerSearchData {\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    fund: ").append(toIndentedString(fund)).append("\n");
    sb.append("    shareClass: ").append(toIndentedString(shareClass)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

