/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataFeesInitial;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataFeesManagement;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataFeesMaximumRedemption;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataFeesOngoing;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2006DataFeesPerformance;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Annualized fund fees.
 */
@ApiModel(description = "Annualized fund fees.")
@JsonPropertyOrder({
  InlineResponse2006DataFees.JSON_PROPERTY_ALL_IN,
  InlineResponse2006DataFees.JSON_PROPERTY_CUSTODIAN_BANK,
  InlineResponse2006DataFees.JSON_PROPERTY_SWITCHING,
  InlineResponse2006DataFees.JSON_PROPERTY_MAXIMUM_ADVISOR,
  InlineResponse2006DataFees.JSON_PROPERTY_MAXIMUM_ADMINISTRATION,
  InlineResponse2006DataFees.JSON_PROPERTY_MAXIMUM_DISTRIBUTION,
  InlineResponse2006DataFees.JSON_PROPERTY_MAXIMUM_HANDLING,
  InlineResponse2006DataFees.JSON_PROPERTY_ONGOING,
  InlineResponse2006DataFees.JSON_PROPERTY_PERFORMANCE,
  InlineResponse2006DataFees.JSON_PROPERTY_MANAGEMENT,
  InlineResponse2006DataFees.JSON_PROPERTY_MAXIMUM_REDEMPTION,
  InlineResponse2006DataFees.JSON_PROPERTY_INITIAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2006DataFees implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ALL_IN = "allIn";
  private BigDecimal allIn;

  public static final String JSON_PROPERTY_CUSTODIAN_BANK = "custodianBank";
  private BigDecimal custodianBank;

  public static final String JSON_PROPERTY_SWITCHING = "switching";
  private BigDecimal switching;

  public static final String JSON_PROPERTY_MAXIMUM_ADVISOR = "maximumAdvisor";
  private BigDecimal maximumAdvisor;

  public static final String JSON_PROPERTY_MAXIMUM_ADMINISTRATION = "maximumAdministration";
  private BigDecimal maximumAdministration;

  public static final String JSON_PROPERTY_MAXIMUM_DISTRIBUTION = "maximumDistribution";
  private BigDecimal maximumDistribution;

  public static final String JSON_PROPERTY_MAXIMUM_HANDLING = "maximumHandling";
  private BigDecimal maximumHandling;

  public static final String JSON_PROPERTY_ONGOING = "ongoing";
  private InlineResponse2006DataFeesOngoing ongoing;

  public static final String JSON_PROPERTY_PERFORMANCE = "performance";
  private InlineResponse2006DataFeesPerformance performance;

  public static final String JSON_PROPERTY_MANAGEMENT = "management";
  private InlineResponse2006DataFeesManagement management;

  public static final String JSON_PROPERTY_MAXIMUM_REDEMPTION = "maximumRedemption";
  private java.util.List<InlineResponse2006DataFeesMaximumRedemption> maximumRedemption = null;

  public static final String JSON_PROPERTY_INITIAL = "initial";
  private InlineResponse2006DataFeesInitial initial;

  public InlineResponse2006DataFees() { 
  }

  public InlineResponse2006DataFees allIn(BigDecimal allIn) {
    this.allIn = allIn;
    return this;
  }

   /**
   * All-in fee. It is a measure of the total costs associated with investing in the fund and includes managing and operating costs.
   * @return allIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All-in fee. It is a measure of the total costs associated with investing in the fund and includes managing and operating costs.")
  @JsonProperty(JSON_PROPERTY_ALL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAllIn() {
    return allIn;
  }


  @JsonProperty(JSON_PROPERTY_ALL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllIn(BigDecimal allIn) {
    this.allIn = allIn;
  }


  public InlineResponse2006DataFees custodianBank(BigDecimal custodianBank) {
    this.custodianBank = custodianBank;
    return this;
  }

   /**
   * Custodian bank fee. It is paid from the assets of the fund to the custodian bank (see attribute custodianBank) for holding the fund&#39;s assets.
   * @return custodianBank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custodian bank fee. It is paid from the assets of the fund to the custodian bank (see attribute custodianBank) for holding the fund's assets.")
  @JsonProperty(JSON_PROPERTY_CUSTODIAN_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCustodianBank() {
    return custodianBank;
  }


  @JsonProperty(JSON_PROPERTY_CUSTODIAN_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustodianBank(BigDecimal custodianBank) {
    this.custodianBank = custodianBank;
  }


  public InlineResponse2006DataFees switching(BigDecimal switching) {
    this.switching = switching;
    return this;
  }

   /**
   * Switching fee. It is paid for moving an investment from one fund to another within the same umbrella fund.
   * @return switching
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Switching fee. It is paid for moving an investment from one fund to another within the same umbrella fund.")
  @JsonProperty(JSON_PROPERTY_SWITCHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSwitching() {
    return switching;
  }


  @JsonProperty(JSON_PROPERTY_SWITCHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwitching(BigDecimal switching) {
    this.switching = switching;
  }


  public InlineResponse2006DataFees maximumAdvisor(BigDecimal maximumAdvisor) {
    this.maximumAdvisor = maximumAdvisor;
    return this;
  }

   /**
   * Maximum possible value of the advisor fee. It is paid from the assets of the investment fund to the fund company for advisory services.
   * @return maximumAdvisor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum possible value of the advisor fee. It is paid from the assets of the investment fund to the fund company for advisory services.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_ADVISOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaximumAdvisor() {
    return maximumAdvisor;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_ADVISOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumAdvisor(BigDecimal maximumAdvisor) {
    this.maximumAdvisor = maximumAdvisor;
  }


  public InlineResponse2006DataFees maximumAdministration(BigDecimal maximumAdministration) {
    this.maximumAdministration = maximumAdministration;
    return this;
  }

   /**
   * Maximum possible value of the administration fee. It is paid for running and administration of the fund excluding expenses for an advisor and/or a manager.
   * @return maximumAdministration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum possible value of the administration fee. It is paid for running and administration of the fund excluding expenses for an advisor and/or a manager.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_ADMINISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaximumAdministration() {
    return maximumAdministration;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_ADMINISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumAdministration(BigDecimal maximumAdministration) {
    this.maximumAdministration = maximumAdministration;
  }


  public InlineResponse2006DataFees maximumDistribution(BigDecimal maximumDistribution) {
    this.maximumDistribution = maximumDistribution;
    return this;
  }

   /**
   * Maximum possible value of the distribution fee. It s paid for distribution services provided by a distribution agent.
   * @return maximumDistribution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum possible value of the distribution fee. It s paid for distribution services provided by a distribution agent.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_DISTRIBUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaximumDistribution() {
    return maximumDistribution;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_DISTRIBUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumDistribution(BigDecimal maximumDistribution) {
    this.maximumDistribution = maximumDistribution;
  }


  public InlineResponse2006DataFees maximumHandling(BigDecimal maximumHandling) {
    this.maximumHandling = maximumHandling;
    return this;
  }

   /**
   * Maximum possible value of the handling fee. It is paid for handling services of a fund. This fee may include, but is not limited to, the administration fee, the management fee, and the distribution fee.
   * @return maximumHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum possible value of the handling fee. It is paid for handling services of a fund. This fee may include, but is not limited to, the administration fee, the management fee, and the distribution fee.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_HANDLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaximumHandling() {
    return maximumHandling;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_HANDLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumHandling(BigDecimal maximumHandling) {
    this.maximumHandling = maximumHandling;
  }


  public InlineResponse2006DataFees ongoing(InlineResponse2006DataFeesOngoing ongoing) {
    this.ongoing = ongoing;
    return this;
  }

   /**
   * Get ongoing
   * @return ongoing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ONGOING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2006DataFeesOngoing getOngoing() {
    return ongoing;
  }


  @JsonProperty(JSON_PROPERTY_ONGOING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOngoing(InlineResponse2006DataFeesOngoing ongoing) {
    this.ongoing = ongoing;
  }


  public InlineResponse2006DataFees performance(InlineResponse2006DataFeesPerformance performance) {
    this.performance = performance;
    return this;
  }

   /**
   * Get performance
   * @return performance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2006DataFeesPerformance getPerformance() {
    return performance;
  }


  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerformance(InlineResponse2006DataFeesPerformance performance) {
    this.performance = performance;
  }


  public InlineResponse2006DataFees management(InlineResponse2006DataFeesManagement management) {
    this.management = management;
    return this;
  }

   /**
   * Get management
   * @return management
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2006DataFeesManagement getManagement() {
    return management;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagement(InlineResponse2006DataFeesManagement management) {
    this.management = management;
  }


  public InlineResponse2006DataFees maximumRedemption(java.util.List<InlineResponse2006DataFeesMaximumRedemption> maximumRedemption) {
    this.maximumRedemption = maximumRedemption;
    return this;
  }

  public InlineResponse2006DataFees addMaximumRedemptionItem(InlineResponse2006DataFeesMaximumRedemption maximumRedemptionItem) {
    if (this.maximumRedemption == null) {
      this.maximumRedemption = new java.util.ArrayList<>();
    }
    this.maximumRedemption.add(maximumRedemptionItem);
    return this;
  }

   /**
   * Maximum possible value of the redemption fee. It is a proportion of the redeemed investment amount paid once by the investor to the fund company when selling fund shares of the share class. Also called selling fee or exit charge.
   * @return maximumRedemption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum possible value of the redemption fee. It is a proportion of the redeemed investment amount paid once by the investor to the fund company when selling fund shares of the share class. Also called selling fee or exit charge.")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_REDEMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2006DataFeesMaximumRedemption> getMaximumRedemption() {
    return maximumRedemption;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_REDEMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumRedemption(java.util.List<InlineResponse2006DataFeesMaximumRedemption> maximumRedemption) {
    this.maximumRedemption = maximumRedemption;
  }


  public InlineResponse2006DataFees initial(InlineResponse2006DataFeesInitial initial) {
    this.initial = initial;
    return this;
  }

   /**
   * Get initial
   * @return initial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2006DataFeesInitial getInitial() {
    return initial;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitial(InlineResponse2006DataFeesInitial initial) {
    this.initial = initial;
  }


  /**
   * Return true if this inline_response_200_6_data_fees object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006DataFees inlineResponse2006DataFees = (InlineResponse2006DataFees) o;
    return Objects.equals(this.allIn, inlineResponse2006DataFees.allIn) &&
        Objects.equals(this.custodianBank, inlineResponse2006DataFees.custodianBank) &&
        Objects.equals(this.switching, inlineResponse2006DataFees.switching) &&
        Objects.equals(this.maximumAdvisor, inlineResponse2006DataFees.maximumAdvisor) &&
        Objects.equals(this.maximumAdministration, inlineResponse2006DataFees.maximumAdministration) &&
        Objects.equals(this.maximumDistribution, inlineResponse2006DataFees.maximumDistribution) &&
        Objects.equals(this.maximumHandling, inlineResponse2006DataFees.maximumHandling) &&
        Objects.equals(this.ongoing, inlineResponse2006DataFees.ongoing) &&
        Objects.equals(this.performance, inlineResponse2006DataFees.performance) &&
        Objects.equals(this.management, inlineResponse2006DataFees.management) &&
        Objects.equals(this.maximumRedemption, inlineResponse2006DataFees.maximumRedemption) &&
        Objects.equals(this.initial, inlineResponse2006DataFees.initial);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allIn, custodianBank, switching, maximumAdvisor, maximumAdministration, maximumDistribution, maximumHandling, ongoing, performance, management, maximumRedemption, initial);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006DataFees {\n");
    sb.append("    allIn: ").append(toIndentedString(allIn)).append("\n");
    sb.append("    custodianBank: ").append(toIndentedString(custodianBank)).append("\n");
    sb.append("    switching: ").append(toIndentedString(switching)).append("\n");
    sb.append("    maximumAdvisor: ").append(toIndentedString(maximumAdvisor)).append("\n");
    sb.append("    maximumAdministration: ").append(toIndentedString(maximumAdministration)).append("\n");
    sb.append("    maximumDistribution: ").append(toIndentedString(maximumDistribution)).append("\n");
    sb.append("    maximumHandling: ").append(toIndentedString(maximumHandling)).append("\n");
    sb.append("    ongoing: ").append(toIndentedString(ongoing)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("    management: ").append(toIndentedString(management)).append("\n");
    sb.append("    maximumRedemption: ").append(toIndentedString(maximumRedemption)).append("\n");
    sb.append("    initial: ").append(toIndentedString(initial)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

