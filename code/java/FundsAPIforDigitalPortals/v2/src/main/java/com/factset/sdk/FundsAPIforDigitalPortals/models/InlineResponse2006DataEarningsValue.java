/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Monetary value of the earnings.
 */
@ApiModel(description = "Monetary value of the earnings.")
@JsonPropertyOrder({
  InlineResponse2006DataEarningsValue.JSON_PROPERTY_GROSS,
  InlineResponse2006DataEarningsValue.JSON_PROPERTY_NET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2006DataEarningsValue implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_GROSS = "gross";
  private BigDecimal gross;

  public static final String JSON_PROPERTY_NET = "net";
  private BigDecimal net;

  public InlineResponse2006DataEarningsValue() { 
  }

  public InlineResponse2006DataEarningsValue gross(BigDecimal gross) {
    this.gross = gross;
    return this;
  }

   /**
   * Gross value, i.e. before taxes.
   * @return gross
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gross value, i.e. before taxes.")
  @JsonProperty(JSON_PROPERTY_GROSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGross() {
    return gross;
  }


  @JsonProperty(JSON_PROPERTY_GROSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGross(BigDecimal gross) {
    this.gross = gross;
  }


  public InlineResponse2006DataEarningsValue net(BigDecimal net) {
    this.net = net;
    return this;
  }

   /**
   * Net value, i.e. after taxes.
   * @return net
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Net value, i.e. after taxes.")
  @JsonProperty(JSON_PROPERTY_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNet() {
    return net;
  }


  @JsonProperty(JSON_PROPERTY_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNet(BigDecimal net) {
    this.net = net;
  }


  /**
   * Return true if this inline_response_200_6_data_earnings_value object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006DataEarningsValue inlineResponse2006DataEarningsValue = (InlineResponse2006DataEarningsValue) o;
    return Objects.equals(this.gross, inlineResponse2006DataEarningsValue.gross) &&
        Objects.equals(this.net, inlineResponse2006DataEarningsValue.net);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gross, net);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006DataEarningsValue {\n");
    sb.append("    gross: ").append(toIndentedString(gross)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

