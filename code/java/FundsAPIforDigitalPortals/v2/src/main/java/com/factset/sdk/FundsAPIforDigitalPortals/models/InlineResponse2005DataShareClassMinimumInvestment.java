/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataShareClassMinimumInvestmentInitial;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataShareClassMinimumInvestmentSubsequent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Value ranges related to the minimum investment.
 */
@ApiModel(description = "Value ranges related to the minimum investment.")
@JsonPropertyOrder({
  InlineResponse2005DataShareClassMinimumInvestment.JSON_PROPERTY_INITIAL,
  InlineResponse2005DataShareClassMinimumInvestment.JSON_PROPERTY_SUBSEQUENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2005DataShareClassMinimumInvestment implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INITIAL = "initial";
  private InlineResponse2005DataShareClassMinimumInvestmentInitial initial;

  public static final String JSON_PROPERTY_SUBSEQUENT = "subsequent";
  private InlineResponse2005DataShareClassMinimumInvestmentSubsequent subsequent;

  public InlineResponse2005DataShareClassMinimumInvestment() { 
  }

  public InlineResponse2005DataShareClassMinimumInvestment initial(InlineResponse2005DataShareClassMinimumInvestmentInitial initial) {
    this.initial = initial;
    return this;
  }

   /**
   * Get initial
   * @return initial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2005DataShareClassMinimumInvestmentInitial getInitial() {
    return initial;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitial(InlineResponse2005DataShareClassMinimumInvestmentInitial initial) {
    this.initial = initial;
  }


  public InlineResponse2005DataShareClassMinimumInvestment subsequent(InlineResponse2005DataShareClassMinimumInvestmentSubsequent subsequent) {
    this.subsequent = subsequent;
    return this;
  }

   /**
   * Get subsequent
   * @return subsequent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSEQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2005DataShareClassMinimumInvestmentSubsequent getSubsequent() {
    return subsequent;
  }


  @JsonProperty(JSON_PROPERTY_SUBSEQUENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubsequent(InlineResponse2005DataShareClassMinimumInvestmentSubsequent subsequent) {
    this.subsequent = subsequent;
  }


  /**
   * Return true if this inline_response_200_5_data_shareClass_minimumInvestment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005DataShareClassMinimumInvestment inlineResponse2005DataShareClassMinimumInvestment = (InlineResponse2005DataShareClassMinimumInvestment) o;
    return Objects.equals(this.initial, inlineResponse2005DataShareClassMinimumInvestment.initial) &&
        Objects.equals(this.subsequent, inlineResponse2005DataShareClassMinimumInvestment.subsequent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initial, subsequent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005DataShareClassMinimumInvestment {\n");
    sb.append("    initial: ").append(toIndentedString(initial)).append("\n");
    sb.append("    subsequent: ").append(toIndentedString(subsequent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

