/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataCurrency;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataFund;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataMarket;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataPerformance;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2005DataShareClass;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Possible values and value ranges of the parameters.
 */
@ApiModel(description = "Possible values and value ranges of the parameters.")
@JsonPropertyOrder({
  InlineResponse2005Data.JSON_PROPERTY_TOTAL_COUNT,
  InlineResponse2005Data.JSON_PROPERTY_CURRENCY,
  InlineResponse2005Data.JSON_PROPERTY_MARKET,
  InlineResponse2005Data.JSON_PROPERTY_FUND,
  InlineResponse2005Data.JSON_PROPERTY_SHARE_CLASS,
  InlineResponse2005Data.JSON_PROPERTY_PERFORMANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2005Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private BigDecimal totalCount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private java.util.List<InlineResponse2005DataCurrency> currency = null;

  public static final String JSON_PROPERTY_MARKET = "market";
  private java.util.List<InlineResponse2005DataMarket> market = null;

  public static final String JSON_PROPERTY_FUND = "fund";
  private InlineResponse2005DataFund fund;

  public static final String JSON_PROPERTY_SHARE_CLASS = "shareClass";
  private InlineResponse2005DataShareClass shareClass;

  public static final String JSON_PROPERTY_PERFORMANCE = "performance";
  private InlineResponse2005DataPerformance performance;

  public InlineResponse2005Data() { 
  }

  public InlineResponse2005Data totalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Number of notations that satisfy the request parameters, hence have been used to retrieve the possible values and value ranges.
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of notations that satisfy the request parameters, hence have been used to retrieve the possible values and value ranges.")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
  }


  public InlineResponse2005Data currency(java.util.List<InlineResponse2005DataCurrency> currency) {
    this.currency = currency;
    return this;
  }

  public InlineResponse2005Data addCurrencyItem(InlineResponse2005DataCurrency currencyItem) {
    if (this.currency == null) {
      this.currency = new java.util.ArrayList<>();
    }
    this.currency.add(currencyItem);
    return this;
  }

   /**
   * List of currency identifiers. See endpoint &#x60;/basic/valueUnit/currency/list&#x60; for possible values.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of currency identifiers. See endpoint `/basic/valueUnit/currency/list` for possible values.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2005DataCurrency> getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(java.util.List<InlineResponse2005DataCurrency> currency) {
    this.currency = currency;
  }


  public InlineResponse2005Data market(java.util.List<InlineResponse2005DataMarket> market) {
    this.market = market;
    return this;
  }

  public InlineResponse2005Data addMarketItem(InlineResponse2005DataMarket marketItem) {
    if (this.market == null) {
      this.market = new java.util.ArrayList<>();
    }
    this.market.add(marketItem);
    return this;
  }

   /**
   * List of market identifiers.
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of market identifiers.")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<InlineResponse2005DataMarket> getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(java.util.List<InlineResponse2005DataMarket> market) {
    this.market = market;
  }


  public InlineResponse2005Data fund(InlineResponse2005DataFund fund) {
    this.fund = fund;
    return this;
  }

   /**
   * Get fund
   * @return fund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2005DataFund getFund() {
    return fund;
  }


  @JsonProperty(JSON_PROPERTY_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFund(InlineResponse2005DataFund fund) {
    this.fund = fund;
  }


  public InlineResponse2005Data shareClass(InlineResponse2005DataShareClass shareClass) {
    this.shareClass = shareClass;
    return this;
  }

   /**
   * Get shareClass
   * @return shareClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHARE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2005DataShareClass getShareClass() {
    return shareClass;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareClass(InlineResponse2005DataShareClass shareClass) {
    this.shareClass = shareClass;
  }


  public InlineResponse2005Data performance(InlineResponse2005DataPerformance performance) {
    this.performance = performance;
    return this;
  }

   /**
   * Get performance
   * @return performance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2005DataPerformance getPerformance() {
    return performance;
  }


  @JsonProperty(JSON_PROPERTY_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerformance(InlineResponse2005DataPerformance performance) {
    this.performance = performance;
  }


  /**
   * Return true if this inline_response_200_5_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005Data inlineResponse2005Data = (InlineResponse2005Data) o;
    return Objects.equals(this.totalCount, inlineResponse2005Data.totalCount) &&
        Objects.equals(this.currency, inlineResponse2005Data.currency) &&
        Objects.equals(this.market, inlineResponse2005Data.market) &&
        Objects.equals(this.fund, inlineResponse2005Data.fund) &&
        Objects.equals(this.shareClass, inlineResponse2005Data.shareClass) &&
        Objects.equals(this.performance, inlineResponse2005Data.performance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, currency, market, fund, shareClass, performance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005Data {\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    fund: ").append(toIndentedString(fund)).append("\n");
    sb.append("    shareClass: ").append(toIndentedString(shareClass)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

