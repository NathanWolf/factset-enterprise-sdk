/*
 * Funds API For Digital Portals
 * Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FundsAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2004FundStrategyLevel1;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2004FundStrategyLevel2;
import com.factset.sdk.FundsAPIforDigitalPortals.models.InlineResponse2004FundStrategyLevel3;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FundsAPIforDigitalPortals.JSON;


/**
 * Strategy of the fund.
 */
@ApiModel(description = "Strategy of the fund.")
@JsonPropertyOrder({
  InlineResponse2004FundStrategy.JSON_PROPERTY_LEVEL1,
  InlineResponse2004FundStrategy.JSON_PROPERTY_LEVEL2,
  InlineResponse2004FundStrategy.JSON_PROPERTY_LEVEL3
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2004FundStrategy implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LEVEL1 = "level1";
  private InlineResponse2004FundStrategyLevel1 level1;

  public static final String JSON_PROPERTY_LEVEL2 = "level2";
  private InlineResponse2004FundStrategyLevel2 level2;

  public static final String JSON_PROPERTY_LEVEL3 = "level3";
  private InlineResponse2004FundStrategyLevel3 level3;

  public InlineResponse2004FundStrategy() { 
  }

  public InlineResponse2004FundStrategy level1(InlineResponse2004FundStrategyLevel1 level1) {
    this.level1 = level1;
    return this;
  }

   /**
   * Get level1
   * @return level1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEVEL1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004FundStrategyLevel1 getLevel1() {
    return level1;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel1(InlineResponse2004FundStrategyLevel1 level1) {
    this.level1 = level1;
  }


  public InlineResponse2004FundStrategy level2(InlineResponse2004FundStrategyLevel2 level2) {
    this.level2 = level2;
    return this;
  }

   /**
   * Get level2
   * @return level2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEVEL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004FundStrategyLevel2 getLevel2() {
    return level2;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel2(InlineResponse2004FundStrategyLevel2 level2) {
    this.level2 = level2;
  }


  public InlineResponse2004FundStrategy level3(InlineResponse2004FundStrategyLevel3 level3) {
    this.level3 = level3;
    return this;
  }

   /**
   * Get level3
   * @return level3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEVEL3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004FundStrategyLevel3 getLevel3() {
    return level3;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel3(InlineResponse2004FundStrategyLevel3 level3) {
    this.level3 = level3;
  }


  /**
   * Return true if this inline_response_200_4_fund_strategy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004FundStrategy inlineResponse2004FundStrategy = (InlineResponse2004FundStrategy) o;
    return Objects.equals(this.level1, inlineResponse2004FundStrategy.level1) &&
        Objects.equals(this.level2, inlineResponse2004FundStrategy.level2) &&
        Objects.equals(this.level3, inlineResponse2004FundStrategy.level3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(level1, level2, level3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004FundStrategy {\n");
    sb.append("    level1: ").append(toIndentedString(level1)).append("\n");
    sb.append("    level2: ").append(toIndentedString(level2)).append("\n");
    sb.append("    level3: ").append(toIndentedString(level3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

