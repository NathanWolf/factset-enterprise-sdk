/*
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ProcuretoPayAPISCIM.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ProcuretoPayAPISCIM.models.ProductResourceReference;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ProcuretoPayAPISCIM.JSON;


/**
 * PendingProductOrder
 */
@JsonPropertyOrder({
  PendingProductOrder.JSON_PROPERTY_PRODUCT,
  PendingProductOrder.JSON_PROPERTY_TYPE,
  PendingProductOrder.JSON_PROPERTY_STATUS,
  PendingProductOrder.JSON_PROPERTY_REQUESTED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PendingProductOrder implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private ProductResourceReference product;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_REQUESTED = "requested";
  private String requested;

  public PendingProductOrder() { 
  }

  @JsonCreator
  public PendingProductOrder(
    @JsonProperty(JSON_PROPERTY_TYPE) String type, 
    @JsonProperty(JSON_PROPERTY_STATUS) String status, 
    @JsonProperty(JSON_PROPERTY_REQUESTED) String requested
  ) {
    this();
    this.type = type;
    this.status = status;
    this.requested = requested;
  }

  public PendingProductOrder product(ProductResourceReference product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProductResourceReference getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProduct(ProductResourceReference product) {
    this.product = product;
  }


   /**
   * Type of product order, e.g. &#39;Add&#39; or &#39;Remove&#39;.
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Add", required = true, value = "Type of product order, e.g. 'Add' or 'Remove'.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }




   /**
   * Status of the pending product order.
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Processing", required = true, value = "Status of the pending product order.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }




   /**
   * Date and time when product was ordered.
   * @return requested
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "2019-06-07T08:59:37+00:00", required = true, value = "Date and time when product was ordered.")
  @JsonProperty(JSON_PROPERTY_REQUESTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequested() {
    return requested;
  }




  /**
   * Return true if this PendingProductOrder object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingProductOrder pendingProductOrder = (PendingProductOrder) o;
    return Objects.equals(this.product, pendingProductOrder.product) &&
        Objects.equals(this.type, pendingProductOrder.type) &&
        Objects.equals(this.status, pendingProductOrder.status) &&
        Objects.equals(this.requested, pendingProductOrder.requested);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, type, status, requested);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingProductOrder {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    requested: ").append(toIndentedString(requested)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

