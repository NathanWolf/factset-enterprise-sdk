/*
 * IRN API v1
 * Allows users to create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNConfiguration.models.RecommendationSettingsDto;
import com.factset.sdk.IRNConfiguration.models.SentimentSettingsDto;
import com.factset.sdk.IRNConfiguration.models.SubjectSettingsDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * GroupFieldsDto
 */
@JsonPropertyOrder({
  GroupFieldsDto.JSON_PROPERTY_SUBJECT,
  GroupFieldsDto.JSON_PROPERTY_RECOMMENDATION,
  GroupFieldsDto.JSON_PROPERTY_SENTIMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GroupFieldsDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private SubjectSettingsDto subject;

  public static final String JSON_PROPERTY_RECOMMENDATION = "recommendation";
  private RecommendationSettingsDto recommendation;

  public static final String JSON_PROPERTY_SENTIMENT = "sentiment";
  private SentimentSettingsDto sentiment;


  public GroupFieldsDto subject(SubjectSettingsDto subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubjectSettingsDto getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(SubjectSettingsDto subject) {
    this.subject = subject;
  }


  public GroupFieldsDto recommendation(RecommendationSettingsDto recommendation) {
    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecommendationSettingsDto getRecommendation() {
    return recommendation;
  }


  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecommendation(RecommendationSettingsDto recommendation) {
    this.recommendation = recommendation;
  }


  public GroupFieldsDto sentiment(SentimentSettingsDto sentiment) {
    this.sentiment = sentiment;
    return this;
  }

   /**
   * Get sentiment
   * @return sentiment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SENTIMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SentimentSettingsDto getSentiment() {
    return sentiment;
  }


  @JsonProperty(JSON_PROPERTY_SENTIMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSentiment(SentimentSettingsDto sentiment) {
    this.sentiment = sentiment;
  }


  /**
   * Return true if this GroupFieldsDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupFieldsDto groupFieldsDto = (GroupFieldsDto) o;
    return Objects.equals(this.subject, groupFieldsDto.subject) &&
        Objects.equals(this.recommendation, groupFieldsDto.recommendation) &&
        Objects.equals(this.sentiment, groupFieldsDto.sentiment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, recommendation, sentiment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupFieldsDto {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

