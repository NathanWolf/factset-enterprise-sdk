/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity and fixed income instruments: See the Stocks API and the Bonds API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataCategory;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataFactorCertificates;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataMarket;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataName;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataRegistrationCountry;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeIssuerSearchDataUnderlying;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * The data member contains the request&#39;s primary data.
 */
@ApiModel(description = "The data member contains the request's primary data.")
@JsonPropertyOrder({
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_ROLE,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_NAME,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_CATEGORY,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_UNDERLYING,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_FACTOR_CERTIFICATES,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_REGISTRATION_COUNTRY,
  SecuritizedDerivativeIssuerSearchData.JSON_PROPERTY_MARKET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SecuritizedDerivativeIssuerSearchData implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Specify whether legal entities in the role of an issuer or in the role of an issuer group are returned.
   */
  public enum RoleEnum {
    ISSUERGROUP("issuerGroup"),
    
    ISSUER("issuer");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleEnum role = RoleEnum.ISSUERGROUP;

  public static final String JSON_PROPERTY_NAME = "name";
  private SecuritizedDerivativeIssuerSearchDataName name;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private SecuritizedDerivativeIssuerSearchDataCategory category;

  public static final String JSON_PROPERTY_UNDERLYING = "underlying";
  private SecuritizedDerivativeIssuerSearchDataUnderlying underlying;

  public static final String JSON_PROPERTY_FACTOR_CERTIFICATES = "factorCertificates";
  private SecuritizedDerivativeIssuerSearchDataFactorCertificates factorCertificates;

  public static final String JSON_PROPERTY_REGISTRATION_COUNTRY = "registrationCountry";
  private SecuritizedDerivativeIssuerSearchDataRegistrationCountry registrationCountry;

  public static final String JSON_PROPERTY_MARKET = "market";
  private SecuritizedDerivativeIssuerSearchDataMarket market;

  public SecuritizedDerivativeIssuerSearchData() { 
  }

  public SecuritizedDerivativeIssuerSearchData role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Specify whether legal entities in the role of an issuer or in the role of an issuer group are returned.
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify whether legal entities in the role of an issuer or in the role of an issuer group are returned.")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public SecuritizedDerivativeIssuerSearchData name(SecuritizedDerivativeIssuerSearchDataName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataName getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(SecuritizedDerivativeIssuerSearchDataName name) {
    this.name = name;
  }


  public SecuritizedDerivativeIssuerSearchData category(SecuritizedDerivativeIssuerSearchDataCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataCategory getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(SecuritizedDerivativeIssuerSearchDataCategory category) {
    this.category = category;
  }


  public SecuritizedDerivativeIssuerSearchData underlying(SecuritizedDerivativeIssuerSearchDataUnderlying underlying) {
    this.underlying = underlying;
    return this;
  }

   /**
   * Get underlying
   * @return underlying
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataUnderlying getUnderlying() {
    return underlying;
  }


  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnderlying(SecuritizedDerivativeIssuerSearchDataUnderlying underlying) {
    this.underlying = underlying;
  }


  public SecuritizedDerivativeIssuerSearchData factorCertificates(SecuritizedDerivativeIssuerSearchDataFactorCertificates factorCertificates) {
    this.factorCertificates = factorCertificates;
    return this;
  }

   /**
   * Get factorCertificates
   * @return factorCertificates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FACTOR_CERTIFICATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataFactorCertificates getFactorCertificates() {
    return factorCertificates;
  }


  @JsonProperty(JSON_PROPERTY_FACTOR_CERTIFICATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFactorCertificates(SecuritizedDerivativeIssuerSearchDataFactorCertificates factorCertificates) {
    this.factorCertificates = factorCertificates;
  }


  public SecuritizedDerivativeIssuerSearchData registrationCountry(SecuritizedDerivativeIssuerSearchDataRegistrationCountry registrationCountry) {
    this.registrationCountry = registrationCountry;
    return this;
  }

   /**
   * Get registrationCountry
   * @return registrationCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGISTRATION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataRegistrationCountry getRegistrationCountry() {
    return registrationCountry;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationCountry(SecuritizedDerivativeIssuerSearchDataRegistrationCountry registrationCountry) {
    this.registrationCountry = registrationCountry;
  }


  public SecuritizedDerivativeIssuerSearchData market(SecuritizedDerivativeIssuerSearchDataMarket market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeIssuerSearchDataMarket getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(SecuritizedDerivativeIssuerSearchDataMarket market) {
    this.market = market;
  }


  /**
   * Return true if this _securitizedDerivative_issuer_search_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecuritizedDerivativeIssuerSearchData securitizedDerivativeIssuerSearchData = (SecuritizedDerivativeIssuerSearchData) o;
    return Objects.equals(this.role, securitizedDerivativeIssuerSearchData.role) &&
        Objects.equals(this.name, securitizedDerivativeIssuerSearchData.name) &&
        Objects.equals(this.category, securitizedDerivativeIssuerSearchData.category) &&
        Objects.equals(this.underlying, securitizedDerivativeIssuerSearchData.underlying) &&
        Objects.equals(this.factorCertificates, securitizedDerivativeIssuerSearchData.factorCertificates) &&
        Objects.equals(this.registrationCountry, securitizedDerivativeIssuerSearchData.registrationCountry) &&
        Objects.equals(this.market, securitizedDerivativeIssuerSearchData.market);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, name, category, underlying, factorCertificates, registrationCountry, market);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecuritizedDerivativeIssuerSearchData {\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    underlying: ").append(toIndentedString(underlying)).append("\n");
    sb.append("    factorCertificates: ").append(toIndentedString(factorCertificates)).append("\n");
    sb.append("    registrationCountry: ").append(toIndentedString(registrationCountry)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

