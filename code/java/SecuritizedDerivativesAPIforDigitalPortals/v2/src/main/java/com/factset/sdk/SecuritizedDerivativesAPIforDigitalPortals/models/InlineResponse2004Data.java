/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Accumulated;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Categorization;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Exercise;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Fsym;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Instrument;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Issuer;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004LifeCycle;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Market;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Trade;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004Underlying;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse2004ValueUnit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * InlineResponse2004Data
 */
@JsonPropertyOrder({
  InlineResponse2004Data.JSON_PROPERTY_ID,
  InlineResponse2004Data.JSON_PROPERTY_SYMBOL,
  InlineResponse2004Data.JSON_PROPERTY_FSYM,
  InlineResponse2004Data.JSON_PROPERTY_MARKET,
  InlineResponse2004Data.JSON_PROPERTY_VALUE_UNIT,
  InlineResponse2004Data.JSON_PROPERTY_TRADE,
  InlineResponse2004Data.JSON_PROPERTY_QUALITY,
  InlineResponse2004Data.JSON_PROPERTY_ACCUMULATED,
  InlineResponse2004Data.JSON_PROPERTY_INSTRUMENT,
  InlineResponse2004Data.JSON_PROPERTY_CATEGORIZATION,
  InlineResponse2004Data.JSON_PROPERTY_LIFE_CYCLE,
  InlineResponse2004Data.JSON_PROPERTY_ISSUER,
  InlineResponse2004Data.JSON_PROPERTY_EXERCISE,
  InlineResponse2004Data.JSON_PROPERTY_PARTICIPATION,
  InlineResponse2004Data.JSON_PROPERTY_UNDERLYING,
  InlineResponse2004Data.JSON_PROPERTY_KNOCKED_OUT,
  InlineResponse2004Data.JSON_PROPERTY_KNOCKED_IN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2004Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_FSYM = "fsym";
  private InlineResponse2004Fsym fsym;

  public static final String JSON_PROPERTY_MARKET = "market";
  private InlineResponse2004Market market;

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private InlineResponse2004ValueUnit valueUnit;

  public static final String JSON_PROPERTY_TRADE = "trade";
  private InlineResponse2004Trade trade;

  /**
   * Quality of the trade-related attributes, see attributes &#x60;trade&#x60; and &#x60;accumulated&#x60;.
   */
  public enum QualityEnum {
    RLT("RLT"),
    
    DLY("DLY");

    private String value;

    QualityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QualityEnum fromValue(String value) {
      for (QualityEnum b : QualityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private QualityEnum quality;

  public static final String JSON_PROPERTY_ACCUMULATED = "accumulated";
  private InlineResponse2004Accumulated accumulated;

  public static final String JSON_PROPERTY_INSTRUMENT = "instrument";
  private InlineResponse2004Instrument instrument;

  public static final String JSON_PROPERTY_CATEGORIZATION = "categorization";
  private InlineResponse2004Categorization categorization;

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private InlineResponse2004LifeCycle lifeCycle;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private InlineResponse2004Issuer issuer;

  public static final String JSON_PROPERTY_EXERCISE = "exercise";
  private InlineResponse2004Exercise exercise;

  /**
   * Participation direction of a factor certificate at the level movement of its effective underlying.
   */
  public enum ParticipationEnum {
    LONG("long"),
    
    SHORT("short");

    private String value;

    ParticipationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParticipationEnum fromValue(String value) {
      for (ParticipationEnum b : ParticipationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PARTICIPATION = "participation";
  private ParticipationEnum participation;

  public static final String JSON_PROPERTY_UNDERLYING = "underlying";
  private InlineResponse2004Underlying underlying;

  public static final String JSON_PROPERTY_KNOCKED_OUT = "knockedOut";
  private Boolean knockedOut;

  public static final String JSON_PROPERTY_KNOCKED_IN = "knockedIn";
  private Boolean knockedIn;

  public InlineResponse2004Data() { 
  }

  public InlineResponse2004Data id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of a notation.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of a notation.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public InlineResponse2004Data symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.
   * @return symbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public InlineResponse2004Data fsym(InlineResponse2004Fsym fsym) {
    this.fsym = fsym;
    return this;
  }

   /**
   * Get fsym
   * @return fsym
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Fsym getFsym() {
    return fsym;
  }


  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsym(InlineResponse2004Fsym fsym) {
    this.fsym = fsym;
  }


  public InlineResponse2004Data market(InlineResponse2004Market market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Market getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(InlineResponse2004Market market) {
    this.market = market;
  }


  public InlineResponse2004Data valueUnit(InlineResponse2004ValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004ValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(InlineResponse2004ValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public InlineResponse2004Data trade(InlineResponse2004Trade trade) {
    this.trade = trade;
    return this;
  }

   /**
   * Get trade
   * @return trade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Trade getTrade() {
    return trade;
  }


  @JsonProperty(JSON_PROPERTY_TRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrade(InlineResponse2004Trade trade) {
    this.trade = trade;
  }


  public InlineResponse2004Data quality(QualityEnum quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Quality of the trade-related attributes, see attributes &#x60;trade&#x60; and &#x60;accumulated&#x60;.
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quality of the trade-related attributes, see attributes `trade` and `accumulated`.")
  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QualityEnum getQuality() {
    return quality;
  }


  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuality(QualityEnum quality) {
    this.quality = quality;
  }


  public InlineResponse2004Data accumulated(InlineResponse2004Accumulated accumulated) {
    this.accumulated = accumulated;
    return this;
  }

   /**
   * Get accumulated
   * @return accumulated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Accumulated getAccumulated() {
    return accumulated;
  }


  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccumulated(InlineResponse2004Accumulated accumulated) {
    this.accumulated = accumulated;
  }


  public InlineResponse2004Data instrument(InlineResponse2004Instrument instrument) {
    this.instrument = instrument;
    return this;
  }

   /**
   * Get instrument
   * @return instrument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Instrument getInstrument() {
    return instrument;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrument(InlineResponse2004Instrument instrument) {
    this.instrument = instrument;
  }


  public InlineResponse2004Data categorization(InlineResponse2004Categorization categorization) {
    this.categorization = categorization;
    return this;
  }

   /**
   * Get categorization
   * @return categorization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Categorization getCategorization() {
    return categorization;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategorization(InlineResponse2004Categorization categorization) {
    this.categorization = categorization;
  }


  public InlineResponse2004Data lifeCycle(InlineResponse2004LifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * Get lifeCycle
   * @return lifeCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004LifeCycle getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(InlineResponse2004LifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public InlineResponse2004Data issuer(InlineResponse2004Issuer issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Issuer getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(InlineResponse2004Issuer issuer) {
    this.issuer = issuer;
  }


  public InlineResponse2004Data exercise(InlineResponse2004Exercise exercise) {
    this.exercise = exercise;
    return this;
  }

   /**
   * Get exercise
   * @return exercise
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Exercise getExercise() {
    return exercise;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercise(InlineResponse2004Exercise exercise) {
    this.exercise = exercise;
  }


  public InlineResponse2004Data participation(ParticipationEnum participation) {
    this.participation = participation;
    return this;
  }

   /**
   * Participation direction of a factor certificate at the level movement of its effective underlying.
   * @return participation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Participation direction of a factor certificate at the level movement of its effective underlying.")
  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ParticipationEnum getParticipation() {
    return participation;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipation(ParticipationEnum participation) {
    this.participation = participation;
  }


  public InlineResponse2004Data underlying(InlineResponse2004Underlying underlying) {
    this.underlying = underlying;
    return this;
  }

   /**
   * Get underlying
   * @return underlying
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse2004Underlying getUnderlying() {
    return underlying;
  }


  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnderlying(InlineResponse2004Underlying underlying) {
    this.underlying = underlying;
  }


  public InlineResponse2004Data knockedOut(Boolean knockedOut) {
    this.knockedOut = knockedOut;
    return this;
  }

   /**
   * Indicates whether the securitized derivative is knocked-out (&#x60;true&#x60;) or not (&#x60;false&#x60;). Particularly relevant for knock-out certificates.
   * @return knockedOut
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the securitized derivative is knocked-out (`true`) or not (`false`). Particularly relevant for knock-out certificates.")
  @JsonProperty(JSON_PROPERTY_KNOCKED_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKnockedOut() {
    return knockedOut;
  }


  @JsonProperty(JSON_PROPERTY_KNOCKED_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKnockedOut(Boolean knockedOut) {
    this.knockedOut = knockedOut;
  }


  public InlineResponse2004Data knockedIn(Boolean knockedIn) {
    this.knockedIn = knockedIn;
    return this;
  }

   /**
   * Indicates whether the securitized derivative is knocked-in (&#x60;true&#x60;) or not (&#x60;false&#x60;). Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.
   * @return knockedIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the securitized derivative is knocked-in (`true`) or not (`false`). Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.")
  @JsonProperty(JSON_PROPERTY_KNOCKED_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKnockedIn() {
    return knockedIn;
  }


  @JsonProperty(JSON_PROPERTY_KNOCKED_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKnockedIn(Boolean knockedIn) {
    this.knockedIn = knockedIn;
  }


  /**
   * Return true if this inline_response_200_4_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004Data inlineResponse2004Data = (InlineResponse2004Data) o;
    return Objects.equals(this.id, inlineResponse2004Data.id) &&
        Objects.equals(this.symbol, inlineResponse2004Data.symbol) &&
        Objects.equals(this.fsym, inlineResponse2004Data.fsym) &&
        Objects.equals(this.market, inlineResponse2004Data.market) &&
        Objects.equals(this.valueUnit, inlineResponse2004Data.valueUnit) &&
        Objects.equals(this.trade, inlineResponse2004Data.trade) &&
        Objects.equals(this.quality, inlineResponse2004Data.quality) &&
        Objects.equals(this.accumulated, inlineResponse2004Data.accumulated) &&
        Objects.equals(this.instrument, inlineResponse2004Data.instrument) &&
        Objects.equals(this.categorization, inlineResponse2004Data.categorization) &&
        Objects.equals(this.lifeCycle, inlineResponse2004Data.lifeCycle) &&
        Objects.equals(this.issuer, inlineResponse2004Data.issuer) &&
        Objects.equals(this.exercise, inlineResponse2004Data.exercise) &&
        Objects.equals(this.participation, inlineResponse2004Data.participation) &&
        Objects.equals(this.underlying, inlineResponse2004Data.underlying) &&
        Objects.equals(this.knockedOut, inlineResponse2004Data.knockedOut) &&
        Objects.equals(this.knockedIn, inlineResponse2004Data.knockedIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, symbol, fsym, market, valueUnit, trade, quality, accumulated, instrument, categorization, lifeCycle, issuer, exercise, participation, underlying, knockedOut, knockedIn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004Data {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    fsym: ").append(toIndentedString(fsym)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    trade: ").append(toIndentedString(trade)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    accumulated: ").append(toIndentedString(accumulated)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    categorization: ").append(toIndentedString(categorization)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    exercise: ").append(toIndentedString(exercise)).append("\n");
    sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
    sb.append("    underlying: ").append(toIndentedString(underlying)).append("\n");
    sb.append("    knockedOut: ").append(toIndentedString(knockedOut)).append("\n");
    sb.append("    knockedIn: ").append(toIndentedString(knockedIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

