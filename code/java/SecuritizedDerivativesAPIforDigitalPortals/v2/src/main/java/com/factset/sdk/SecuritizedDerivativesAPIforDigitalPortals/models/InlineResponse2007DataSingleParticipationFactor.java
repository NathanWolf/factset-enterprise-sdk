/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Participation factor of the securitized derivative in the performance of the underlying, depending on the exercise right (see attribute &#x60;exercise.right&#x60; in endpoint &#x60;/securitizedDerivative/get&#x60;).
 */
@ApiModel(description = "Participation factor of the securitized derivative in the performance of the underlying, depending on the exercise right (see attribute `exercise.right` in endpoint `/securitizedDerivative/get`).")
@JsonPropertyOrder({
  InlineResponse2007DataSingleParticipationFactor.JSON_PROPERTY_POSITIVE,
  InlineResponse2007DataSingleParticipationFactor.JSON_PROPERTY_NEGATIVE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse2007DataSingleParticipationFactor implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_POSITIVE = "positive";
  private BigDecimal positive;

  public static final String JSON_PROPERTY_NEGATIVE = "negative";
  private BigDecimal negative;


  public InlineResponse2007DataSingleParticipationFactor positive(BigDecimal positive) {
    this.positive = positive;
    return this;
  }

   /**
   * Participation factor above the barrier for a securitized derivative with exercise right call, and below the barrier for exercise right put. 
   * @return positive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Participation factor above the barrier for a securitized derivative with exercise right call, and below the barrier for exercise right put. ")
  @JsonProperty(JSON_PROPERTY_POSITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPositive() {
    return positive;
  }


  @JsonProperty(JSON_PROPERTY_POSITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositive(BigDecimal positive) {
    this.positive = positive;
  }


  public InlineResponse2007DataSingleParticipationFactor negative(BigDecimal negative) {
    this.negative = negative;
    return this;
  }

   /**
   * Participation factor above the barrier for a securitized derivative with exercise right put, and below the barrier for exercise right call.
   * @return negative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Participation factor above the barrier for a securitized derivative with exercise right put, and below the barrier for exercise right call.")
  @JsonProperty(JSON_PROPERTY_NEGATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNegative() {
    return negative;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegative(BigDecimal negative) {
    this.negative = negative;
  }


  /**
   * Return true if this inline_response_200_7_data_single_participationFactor object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007DataSingleParticipationFactor inlineResponse2007DataSingleParticipationFactor = (InlineResponse2007DataSingleParticipationFactor) o;
    return Objects.equals(this.positive, inlineResponse2007DataSingleParticipationFactor.positive) &&
        Objects.equals(this.negative, inlineResponse2007DataSingleParticipationFactor.negative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(positive, negative);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007DataSingleParticipationFactor {\n");
    sb.append("    positive: ").append(toIndentedString(positive)).append("\n");
    sb.append("    negative: ").append(toIndentedString(negative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

