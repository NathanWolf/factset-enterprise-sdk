/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRateValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Parameters regarding the interest rate of the current coupon period.
 */
@ApiModel(description = "Parameters regarding the interest rate of the current coupon period.")
@JsonPropertyOrder({
  SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate.JSON_PROPERTY_TYPE,
  SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Type of the interest rate.
   */
  public enum TypeEnum {
    FIXED("fixed"),
    
    VARIABLE("variable");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_VALUE = "value";
  private SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRateValue value;


  public SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the interest rate.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the interest rate.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate value(SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRateValue value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRateValue getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRateValue value) {
    this.value = value;
  }


  /**
   * Return true if this _securitizedDerivative_notation_screener_valueRanges_get_data_currentInterestRate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate securitizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate = (SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate) o;
    return Objects.equals(this.type, securitizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate.type) &&
        Objects.equals(this.value, securitizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecuritizedDerivativeNotationScreenerValueRangesGetDataCurrentInterestRate {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

