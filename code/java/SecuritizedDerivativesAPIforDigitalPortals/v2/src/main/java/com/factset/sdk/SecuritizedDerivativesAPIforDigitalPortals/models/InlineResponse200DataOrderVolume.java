/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Conditions on the order volume for placing an order with the issuer.
 */
@ApiModel(description = "Conditions on the order volume for placing an order with the issuer.")
@JsonPropertyOrder({
  InlineResponse200DataOrderVolume.JSON_PROPERTY_MINIMUM,
  InlineResponse200DataOrderVolume.JSON_PROPERTY_INCREMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200DataOrderVolume implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MINIMUM = "minimum";
  private BigDecimal minimum;

  public static final String JSON_PROPERTY_INCREMENT = "increment";
  private BigDecimal increment;

  public InlineResponse200DataOrderVolume() { 
  }

  public InlineResponse200DataOrderVolume minimum(BigDecimal minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * Minimum order volume required for placing an order at the trading venue of the notation for the given market phase.
   * @return minimum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum order volume required for placing an order at the trading venue of the notation for the given market phase.")
  @JsonProperty(JSON_PROPERTY_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinimum() {
    return minimum;
  }


  @JsonProperty(JSON_PROPERTY_MINIMUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimum(BigDecimal minimum) {
    this.minimum = minimum;
  }


  public InlineResponse200DataOrderVolume increment(BigDecimal increment) {
    this.increment = increment;
    return this;
  }

   /**
   * Increment of the order volume over the minimum (see attribute inimumOrderVolumeSecDer) required for placing an order at the respective trading venue. The order volume over the minimum must be an integral multiple of the increment. The value unit for this attribute is the same as for the attribute tradingVolumeLatestTradePrice.
   * @return increment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Increment of the order volume over the minimum (see attribute inimumOrderVolumeSecDer) required for placing an order at the respective trading venue. The order volume over the minimum must be an integral multiple of the increment. The value unit for this attribute is the same as for the attribute tradingVolumeLatestTradePrice.")
  @JsonProperty(JSON_PROPERTY_INCREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIncrement() {
    return increment;
  }


  @JsonProperty(JSON_PROPERTY_INCREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncrement(BigDecimal increment) {
    this.increment = increment;
  }


  /**
   * Return true if this inline_response_200_data_orderVolume object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataOrderVolume inlineResponse200DataOrderVolume = (InlineResponse200DataOrderVolume) o;
    return Objects.equals(this.minimum, inlineResponse200DataOrderVolume.minimum) &&
        Objects.equals(this.increment, inlineResponse200DataOrderVolume.increment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minimum, increment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataOrderVolume {\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    increment: ").append(toIndentedString(increment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

