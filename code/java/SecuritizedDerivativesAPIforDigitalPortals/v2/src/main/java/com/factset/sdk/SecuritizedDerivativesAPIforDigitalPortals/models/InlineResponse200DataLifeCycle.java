/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity and fixed income instruments: See the Stocks API and the Bonds API for details.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataLifeCycleIntradayActivation;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataLifeCycleMaturity;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataLifeCycleSubscriptionPeriod;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataLifeCycleTradingPeriod;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Important dates of the instrument.
 */
@ApiModel(description = "Important dates of the instrument.")
@JsonPropertyOrder({
  InlineResponse200DataLifeCycle.JSON_PROPERTY_SUBSCRIPTION_PERIOD,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_VALUTA_ISSUE,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_INITIAL_FIXING,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_ISSUE,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_INTRADAY_ACTIVATION,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_TRADING_PERIOD,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_START_EXERCISE_PERIOD,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_VALUATION,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_MATURITY,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_REPAYMENT,
  InlineResponse200DataLifeCycle.JSON_PROPERTY_CANCELLATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200DataLifeCycle implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PERIOD = "subscriptionPeriod";
  private InlineResponse200DataLifeCycleSubscriptionPeriod subscriptionPeriod;

  public static final String JSON_PROPERTY_VALUTA_ISSUE = "valutaIssue";
  private LocalDate valutaIssue;

  public static final String JSON_PROPERTY_INITIAL_FIXING = "initialFixing";
  private LocalDate initialFixing;

  public static final String JSON_PROPERTY_ISSUE = "issue";
  private LocalDate issue;

  public static final String JSON_PROPERTY_INTRADAY_ACTIVATION = "intradayActivation";
  private InlineResponse200DataLifeCycleIntradayActivation intradayActivation;

  public static final String JSON_PROPERTY_TRADING_PERIOD = "tradingPeriod";
  private InlineResponse200DataLifeCycleTradingPeriod tradingPeriod;

  public static final String JSON_PROPERTY_START_EXERCISE_PERIOD = "startExercisePeriod";
  private LocalDate startExercisePeriod;

  public static final String JSON_PROPERTY_VALUATION = "valuation";
  private LocalDate valuation;

  public static final String JSON_PROPERTY_MATURITY = "maturity";
  private InlineResponse200DataLifeCycleMaturity maturity;

  public static final String JSON_PROPERTY_REPAYMENT = "repayment";
  private LocalDate repayment;

  public static final String JSON_PROPERTY_CANCELLATION = "cancellation";
  private LocalDate cancellation;

  public InlineResponse200DataLifeCycle() { 
  }

  public InlineResponse200DataLifeCycle subscriptionPeriod(InlineResponse200DataLifeCycleSubscriptionPeriod subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
    return this;
  }

   /**
   * Get subscriptionPeriod
   * @return subscriptionPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycleSubscriptionPeriod getSubscriptionPeriod() {
    return subscriptionPeriod;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPeriod(InlineResponse200DataLifeCycleSubscriptionPeriod subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
  }


  public InlineResponse200DataLifeCycle valutaIssue(LocalDate valutaIssue) {
    this.valutaIssue = valutaIssue;
    return this;
  }

   /**
   * Date by which the issuer requires receiving the purchase price for a newly issued product purchased during the subscription period.
   * @return valutaIssue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date by which the issuer requires receiving the purchase price for a newly issued product purchased during the subscription period.")
  @JsonProperty(JSON_PROPERTY_VALUTA_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getValutaIssue() {
    return valutaIssue;
  }


  @JsonProperty(JSON_PROPERTY_VALUTA_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValutaIssue(LocalDate valutaIssue) {
    this.valutaIssue = valutaIssue;
  }


  public InlineResponse200DataLifeCycle initialFixing(LocalDate initialFixing) {
    this.initialFixing = initialFixing;
    return this;
  }

   /**
   * Date of the initial fixing.
   * @return initialFixing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the initial fixing.")
  @JsonProperty(JSON_PROPERTY_INITIAL_FIXING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getInitialFixing() {
    return initialFixing;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_FIXING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialFixing(LocalDate initialFixing) {
    this.initialFixing = initialFixing;
  }


  public InlineResponse200DataLifeCycle issue(LocalDate issue) {
    this.issue = issue;
    return this;
  }

   /**
   * Date of the issue.
   * @return issue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the issue.")
  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getIssue() {
    return issue;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssue(LocalDate issue) {
    this.issue = issue;
  }


  public InlineResponse200DataLifeCycle intradayActivation(InlineResponse200DataLifeCycleIntradayActivation intradayActivation) {
    this.intradayActivation = intradayActivation;
    return this;
  }

   /**
   * Get intradayActivation
   * @return intradayActivation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTRADAY_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycleIntradayActivation getIntradayActivation() {
    return intradayActivation;
  }


  @JsonProperty(JSON_PROPERTY_INTRADAY_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIntradayActivation(InlineResponse200DataLifeCycleIntradayActivation intradayActivation) {
    this.intradayActivation = intradayActivation;
  }


  public InlineResponse200DataLifeCycle tradingPeriod(InlineResponse200DataLifeCycleTradingPeriod tradingPeriod) {
    this.tradingPeriod = tradingPeriod;
    return this;
  }

   /**
   * Get tradingPeriod
   * @return tradingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRADING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycleTradingPeriod getTradingPeriod() {
    return tradingPeriod;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradingPeriod(InlineResponse200DataLifeCycleTradingPeriod tradingPeriod) {
    this.tradingPeriod = tradingPeriod;
  }


  public InlineResponse200DataLifeCycle startExercisePeriod(LocalDate startExercisePeriod) {
    this.startExercisePeriod = startExercisePeriod;
    return this;
  }

   /**
   * Date of the start of the exercise period, which ends with the valuation.
   * @return startExercisePeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the start of the exercise period, which ends with the valuation.")
  @JsonProperty(JSON_PROPERTY_START_EXERCISE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartExercisePeriod() {
    return startExercisePeriod;
  }


  @JsonProperty(JSON_PROPERTY_START_EXERCISE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartExercisePeriod(LocalDate startExercisePeriod) {
    this.startExercisePeriod = startExercisePeriod;
  }


  public InlineResponse200DataLifeCycle valuation(LocalDate valuation) {
    this.valuation = valuation;
    return this;
  }

   /**
   * Date of the valuation.
   * @return valuation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the valuation.")
  @JsonProperty(JSON_PROPERTY_VALUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getValuation() {
    return valuation;
  }


  @JsonProperty(JSON_PROPERTY_VALUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValuation(LocalDate valuation) {
    this.valuation = valuation;
  }


  public InlineResponse200DataLifeCycle maturity(InlineResponse200DataLifeCycleMaturity maturity) {
    this.maturity = maturity;
    return this;
  }

   /**
   * Get maturity
   * @return maturity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MATURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycleMaturity getMaturity() {
    return maturity;
  }


  @JsonProperty(JSON_PROPERTY_MATURITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaturity(InlineResponse200DataLifeCycleMaturity maturity) {
    this.maturity = maturity;
  }


  public InlineResponse200DataLifeCycle repayment(LocalDate repayment) {
    this.repayment = repayment;
    return this;
  }

   /**
   * Date of the repayment.
   * @return repayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the repayment.")
  @JsonProperty(JSON_PROPERTY_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getRepayment() {
    return repayment;
  }


  @JsonProperty(JSON_PROPERTY_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepayment(LocalDate repayment) {
    this.repayment = repayment;
  }


  public InlineResponse200DataLifeCycle cancellation(LocalDate cancellation) {
    this.cancellation = cancellation;
    return this;
  }

   /**
   * Date of the cancellation day defined by the issuer.
   * @return cancellation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the cancellation day defined by the issuer.")
  @JsonProperty(JSON_PROPERTY_CANCELLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getCancellation() {
    return cancellation;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancellation(LocalDate cancellation) {
    this.cancellation = cancellation;
  }


  /**
   * Return true if this inline_response_200_data_lifeCycle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataLifeCycle inlineResponse200DataLifeCycle = (InlineResponse200DataLifeCycle) o;
    return Objects.equals(this.subscriptionPeriod, inlineResponse200DataLifeCycle.subscriptionPeriod) &&
        Objects.equals(this.valutaIssue, inlineResponse200DataLifeCycle.valutaIssue) &&
        Objects.equals(this.initialFixing, inlineResponse200DataLifeCycle.initialFixing) &&
        Objects.equals(this.issue, inlineResponse200DataLifeCycle.issue) &&
        Objects.equals(this.intradayActivation, inlineResponse200DataLifeCycle.intradayActivation) &&
        Objects.equals(this.tradingPeriod, inlineResponse200DataLifeCycle.tradingPeriod) &&
        Objects.equals(this.startExercisePeriod, inlineResponse200DataLifeCycle.startExercisePeriod) &&
        Objects.equals(this.valuation, inlineResponse200DataLifeCycle.valuation) &&
        Objects.equals(this.maturity, inlineResponse200DataLifeCycle.maturity) &&
        Objects.equals(this.repayment, inlineResponse200DataLifeCycle.repayment) &&
        Objects.equals(this.cancellation, inlineResponse200DataLifeCycle.cancellation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionPeriod, valutaIssue, initialFixing, issue, intradayActivation, tradingPeriod, startExercisePeriod, valuation, maturity, repayment, cancellation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataLifeCycle {\n");
    sb.append("    subscriptionPeriod: ").append(toIndentedString(subscriptionPeriod)).append("\n");
    sb.append("    valutaIssue: ").append(toIndentedString(valutaIssue)).append("\n");
    sb.append("    initialFixing: ").append(toIndentedString(initialFixing)).append("\n");
    sb.append("    issue: ").append(toIndentedString(issue)).append("\n");
    sb.append("    intradayActivation: ").append(toIndentedString(intradayActivation)).append("\n");
    sb.append("    tradingPeriod: ").append(toIndentedString(tradingPeriod)).append("\n");
    sb.append("    startExercisePeriod: ").append(toIndentedString(startExercisePeriod)).append("\n");
    sb.append("    valuation: ").append(toIndentedString(valuation)).append("\n");
    sb.append("    maturity: ").append(toIndentedString(maturity)).append("\n");
    sb.append("    repayment: ").append(toIndentedString(repayment)).append("\n");
    sb.append("    cancellation: ").append(toIndentedString(cancellation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

