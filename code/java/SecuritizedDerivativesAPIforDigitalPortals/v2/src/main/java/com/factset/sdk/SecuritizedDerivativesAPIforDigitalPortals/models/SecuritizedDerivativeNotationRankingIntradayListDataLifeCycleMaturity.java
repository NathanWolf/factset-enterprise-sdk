/*
 * Prime Developer Trial
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Parameters related to the maturity.
 */
@ApiModel(description = "Parameters related to the maturity.")
@JsonPropertyOrder({
  SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity.JSON_PROPERTY_PERPETUAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Specifies whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result.
   */
  public enum PerpetualEnum {
    ONLY("only"),
    
    INCLUDE("include"),
    
    EXCLUDE("exclude");

    private String value;

    PerpetualEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PerpetualEnum fromValue(String value) {
      for (PerpetualEnum b : PerpetualEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PERPETUAL = "perpetual";
  private PerpetualEnum perpetual = PerpetualEnum.INCLUDE;

  public SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity() { 
  }

  public SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity perpetual(PerpetualEnum perpetual) {
    this.perpetual = perpetual;
    return this;
  }

   /**
   * Specifies whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result.
   * @return perpetual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result.")
  @JsonProperty(JSON_PROPERTY_PERPETUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PerpetualEnum getPerpetual() {
    return perpetual;
  }


  @JsonProperty(JSON_PROPERTY_PERPETUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPerpetual(PerpetualEnum perpetual) {
    this.perpetual = perpetual;
  }


  /**
   * Return true if this _securitizedDerivative_notation_ranking_intraday_list_data_lifeCycle_maturity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity securitizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity = (SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity) o;
    return Objects.equals(this.perpetual, securitizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity.perpetual);
  }

  @Override
  public int hashCode() {
    return Objects.hash(perpetual);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecuritizedDerivativeNotationRankingIntradayListDataLifeCycleMaturity {\n");
    sb.append("    perpetual: ").append(toIndentedString(perpetual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

