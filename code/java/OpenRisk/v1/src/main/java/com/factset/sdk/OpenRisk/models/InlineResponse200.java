/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.23.0
 * Contact: ParametricRiskAnalyticsDevelopment@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OpenRisk.models.InlineResponse200Components;
import com.factset.sdk.OpenRisk.models.InlineResponse200Info;
import com.factset.sdk.OpenRisk.models.InlineResponse200Servers;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * InlineResponse200
 */
@JsonPropertyOrder({
  InlineResponse200.JSON_PROPERTY_OPENAPI,
  InlineResponse200.JSON_PROPERTY_INFO,
  InlineResponse200.JSON_PROPERTY_SERVERS,
  InlineResponse200.JSON_PROPERTY_PATHS,
  InlineResponse200.JSON_PROPERTY_COMPONENTS,
  InlineResponse200.JSON_PROPERTY_SECURITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineResponse200 implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_OPENAPI = "openapi";
  private String openapi;

  public static final String JSON_PROPERTY_INFO = "info";
  private InlineResponse200Info info;

  public static final String JSON_PROPERTY_SERVERS = "servers";
  private java.util.List<InlineResponse200Servers> servers = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_PATHS = "paths";
  private Object paths;

  public static final String JSON_PROPERTY_COMPONENTS = "components";
  private InlineResponse200Components components;

  public static final String JSON_PROPERTY_SECURITY = "security";
  private java.util.List<Object> security = new java.util.ArrayList<>();

  public InlineResponse200() { 
  }

  @JsonCreator
  public InlineResponse200(
    @JsonProperty(value=JSON_PROPERTY_OPENAPI, required=true) String openapi, 
    @JsonProperty(value=JSON_PROPERTY_INFO, required=true) InlineResponse200Info info, 
    @JsonProperty(value=JSON_PROPERTY_SERVERS, required=true) java.util.List<InlineResponse200Servers> servers, 
    @JsonProperty(value=JSON_PROPERTY_PATHS, required=true) Object paths, 
    @JsonProperty(value=JSON_PROPERTY_COMPONENTS, required=true) InlineResponse200Components components, 
    @JsonProperty(value=JSON_PROPERTY_SECURITY, required=true) java.util.List<Object> security
  ) {
    this();
    this.openapi = openapi;
    this.info = info;
    this.servers = servers;
    this.paths = paths;
    this.components = components;
    this.security = security;
  }

  public InlineResponse200 openapi(String openapi) {
    this.openapi = openapi;
    return this;
  }

   /**
   * OpenAPI Specification version
   * @return openapi
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "OpenAPI Specification version")
  @JsonProperty(JSON_PROPERTY_OPENAPI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOpenapi() {
    return openapi;
  }


  @JsonProperty(JSON_PROPERTY_OPENAPI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpenapi(String openapi) {
    this.openapi = openapi;
  }


  public InlineResponse200 info(InlineResponse200Info info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InlineResponse200Info getInfo() {
    return info;
  }


  @JsonProperty(JSON_PROPERTY_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInfo(InlineResponse200Info info) {
    this.info = info;
  }


  public InlineResponse200 servers(java.util.List<InlineResponse200Servers> servers) {
    this.servers = servers;
    return this;
  }

  public InlineResponse200 addServersItem(InlineResponse200Servers serversItem) {
    this.servers.add(serversItem);
    return this;
  }

   /**
   * Get servers
   * @return servers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SERVERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<InlineResponse200Servers> getServers() {
    return servers;
  }


  @JsonProperty(JSON_PROPERTY_SERVERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServers(java.util.List<InlineResponse200Servers> servers) {
    this.servers = servers;
  }


  public InlineResponse200 paths(Object paths) {
    this.paths = paths;
    return this;
  }

   /**
   * Get paths
   * @return paths
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPaths() {
    return paths;
  }


  @JsonProperty(JSON_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaths(Object paths) {
    this.paths = paths;
  }


  public InlineResponse200 components(InlineResponse200Components components) {
    this.components = components;
    return this;
  }

   /**
   * Get components
   * @return components
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InlineResponse200Components getComponents() {
    return components;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComponents(InlineResponse200Components components) {
    this.components = components;
  }


  public InlineResponse200 security(java.util.List<Object> security) {
    this.security = security;
    return this;
  }

  public InlineResponse200 addSecurityItem(Object securityItem) {
    this.security.add(securityItem);
    return this;
  }

   /**
   * Get security
   * @return security
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SECURITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<Object> getSecurity() {
    return security;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecurity(java.util.List<Object> security) {
    this.security = security;
  }


  /**
   * Return true if this inline_response_200 object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.openapi, inlineResponse200.openapi) &&
        Objects.equals(this.info, inlineResponse200.info) &&
        Objects.equals(this.servers, inlineResponse200.servers) &&
        Objects.equals(this.paths, inlineResponse200.paths) &&
        Objects.equals(this.components, inlineResponse200.components) &&
        Objects.equals(this.security, inlineResponse200.security);
  }

  @Override
  public int hashCode() {
    return Objects.hash(openapi, info, servers, paths, components, security);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    sb.append("    openapi: ").append(toIndentedString(openapi)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    servers: ").append(toIndentedString(servers)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

