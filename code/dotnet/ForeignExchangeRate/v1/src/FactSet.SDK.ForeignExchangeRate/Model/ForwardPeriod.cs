/*
 * Foreign Exchange Rates API
 *
 * Foreign Exchange Rates API in which retrieves Spots and Forwards for a given currency pair and date range. <p>*Spots and Forwards rates are sourced from W/M Reuters.The WM Company calculates daily standardized spot rates for global foreign exchange transactions, using rates provided by Reuters. These rates are recognized globally as the standard by banks, fund managers, and index compilers; increasingly these rates are also being used for benchmark currency trading. In 1994, WM Company began calculating closing spot rates. Closing spot rates provide a standard set of currency rates so that portfolio valuations can be compared to each other and their performances measured against benchmarks, without having discrepancies caused by exchange rates. Closing spot rates are recorded at 16:00 GMT.*</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.ForeignExchangeRate.Client.OpenAPIDateConverter;

namespace FactSet.SDK.ForeignExchangeRate.Model
{
    /// <summary>
    /// Bid, offer, and mid rates are available for the following 11 time periods.  * ON - Overnight  * TN - Tomorrow Next  * SW - One Week (Spot Week)  * 1M - One Month  * 2M - Two Months  * 3M - Three Months  * 6M - Six Months  * 9M - Nine Months  * 1Y - One Year  * 2Y - Two Years  * 5Y - Five Years 
    /// </summary>
    /// <value>Bid, offer, and mid rates are available for the following 11 time periods.  * ON - Overnight  * TN - Tomorrow Next  * SW - One Week (Spot Week)  * 1M - One Month  * 2M - Two Months  * 3M - Three Months  * 6M - Six Months  * 9M - Nine Months  * 1Y - One Year  * 2Y - Two Years  * 5Y - Five Years </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ForwardPeriod
    {
        /// <summary>
        /// Enum ON for value: ON
        /// </summary>
        [EnumMember(Value = "ON")]
        ON = 1,

        /// <summary>
        /// Enum TN for value: TN
        /// </summary>
        [EnumMember(Value = "TN")]
        TN = 2,

        /// <summary>
        /// Enum SW for value: SW
        /// </summary>
        [EnumMember(Value = "SW")]
        SW = 3,

        /// <summary>
        /// Enum _1M for value: 1M
        /// </summary>
        [EnumMember(Value = "1M")]
        _1M = 4,

        /// <summary>
        /// Enum _2M for value: 2M
        /// </summary>
        [EnumMember(Value = "2M")]
        _2M = 5,

        /// <summary>
        /// Enum _3M for value: 3M
        /// </summary>
        [EnumMember(Value = "3M")]
        _3M = 6,

        /// <summary>
        /// Enum _6M for value: 6M
        /// </summary>
        [EnumMember(Value = "6M")]
        _6M = 7,

        /// <summary>
        /// Enum _9M for value: 9M
        /// </summary>
        [EnumMember(Value = "9M")]
        _9M = 8,

        /// <summary>
        /// Enum _1Y for value: 1Y
        /// </summary>
        [EnumMember(Value = "1Y")]
        _1Y = 9,

        /// <summary>
        /// Enum _2Y for value: 2Y
        /// </summary>
        [EnumMember(Value = "2Y")]
        _2Y = 10,

        /// <summary>
        /// Enum _5Y for value: 5Y
        /// </summary>
        [EnumMember(Value = "5Y")]
        _5Y = 11

    }

}
