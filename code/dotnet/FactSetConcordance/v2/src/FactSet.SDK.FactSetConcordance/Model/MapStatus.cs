/*
 * FactSet Concordance API
 *
 * The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p> 
 *
 * The version of the OpenAPI document: 2.5.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.FactSetConcordance.Client.OpenAPIDateConverter;

namespace FactSet.SDK.FactSetConcordance.Model
{
    /// <summary>
    /// Status of an entity mapping
    /// </summary>
    /// <value>Status of an entity mapping</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MapStatus
    {
        /// <summary>
        /// Enum MAPPED for value: MAPPED
        /// </summary>
        [EnumMember(Value = "MAPPED")]
        MAPPED = 1,

        /// <summary>
        /// Enum UNMAPPED for value: UNMAPPED
        /// </summary>
        [EnumMember(Value = "UNMAPPED")]
        UNMAPPED = 2,

        /// <summary>
        /// Enum INDETERMINATE for value: INDETERMINATE
        /// </summary>
        [EnumMember(Value = "INDETERMINATE")]
        INDETERMINATE = 3

    }

}
