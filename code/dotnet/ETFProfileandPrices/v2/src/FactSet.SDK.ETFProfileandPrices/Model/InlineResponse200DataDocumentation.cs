/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.ETFProfileandPrices.Client.OpenAPIDateConverter;

namespace FactSet.SDK.ETFProfileandPrices.Model
{
    /// <summary>
    /// Documentation.
    /// </summary>
    [DataContract(Name = "inline_response_200_data_documentation")]
    public partial class InlineResponse200DataDocumentation : IEquatable<InlineResponse200DataDocumentation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse200DataDocumentation" /> class.
        /// </summary>
        /// <param name="isProspectusPosted">Complete prospectus is available on issuer website. This data is available for all the regions..</param>
        /// <param name="isSaiPosted">Statement of Additional Information (SAI) is available on issuer website. This data is available for the US regions..</param>
        public InlineResponse200DataDocumentation(bool isProspectusPosted = default(bool), bool isSaiPosted = default(bool))
        {
            this.IsProspectusPosted = isProspectusPosted;
            this.IsSaiPosted = isSaiPosted;
        }

        /// <summary>
        /// Complete prospectus is available on issuer website. This data is available for all the regions.
        /// </summary>
        /// <value>Complete prospectus is available on issuer website. This data is available for all the regions.</value>
        [DataMember(Name = "isProspectusPosted", EmitDefaultValue = true)]
        public bool IsProspectusPosted { get; set; }

        /// <summary>
        /// Statement of Additional Information (SAI) is available on issuer website. This data is available for the US regions.
        /// </summary>
        /// <value>Statement of Additional Information (SAI) is available on issuer website. This data is available for the US regions.</value>
        [DataMember(Name = "isSaiPosted", EmitDefaultValue = true)]
        public bool IsSaiPosted { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse200DataDocumentation {\n");
            sb.Append("  IsProspectusPosted: ").Append(IsProspectusPosted).Append("\n");
            sb.Append("  IsSaiPosted: ").Append(IsSaiPosted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse200DataDocumentation);
        }

        /// <summary>
        /// Returns true if InlineResponse200DataDocumentation instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse200DataDocumentation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse200DataDocumentation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsProspectusPosted == input.IsProspectusPosted ||
                    this.IsProspectusPosted.Equals(input.IsProspectusPosted)
                ) && 
                (
                    this.IsSaiPosted == input.IsSaiPosted ||
                    this.IsSaiPosted.Equals(input.IsSaiPosted)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.IsProspectusPosted.GetHashCode();
                hashCode = hashCode * 59 + this.IsSaiPosted.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
