/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.StocksAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.StocksAPIforDigitalPortals.Model
{
    /// <summary>
    /// Ratios.
    /// </summary>
    [DataContract(Name = "inline_response_200_5_data_estimates_firstFiscalYear_ratios")]
    public partial class InlineResponse2005DataEstimatesFirstFiscalYearRatios : IEquatable<InlineResponse2005DataEstimatesFirstFiscalYearRatios>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2005DataEstimatesFirstFiscalYearRatios" /> class.
        /// </summary>
        /// <param name="priceSales">priceSales.</param>
        /// <param name="priceEarnings">priceEarnings.</param>
        /// <param name="priceEarningsGrowth">priceEarningsGrowth.</param>
        /// <param name="priceBookValue">priceBookValue.</param>
        /// <param name="priceCashFlow">priceCashFlow.</param>
        /// <param name="priceFreeCashFlow">priceFreeCashFlow.</param>
        /// <param name="dividendYield">dividendYield.</param>
        /// <param name="enterpriseValueEbit">enterpriseValueEbit.</param>
        /// <param name="enterpriseValueEbitda">enterpriseValueEbitda.</param>
        /// <param name="enterpriseValueSales">enterpriseValueSales.</param>
        public InlineResponse2005DataEstimatesFirstFiscalYearRatios(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceSales priceSales = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceSales), InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarnings priceEarnings = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarnings), InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarningsGrowth priceEarningsGrowth = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarningsGrowth), InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceBookValue priceBookValue = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceBookValue), InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceCashFlow priceCashFlow = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceCashFlow), InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceFreeCashFlow priceFreeCashFlow = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceFreeCashFlow), InlineResponse2005DataEstimatesFirstFiscalYearRatiosDividendYield dividendYield = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosDividendYield), InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbit enterpriseValueEbit = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbit), InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbitda enterpriseValueEbitda = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbitda), InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueSales enterpriseValueSales = default(InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueSales))
        {
            this.PriceSales = priceSales;
            this.PriceEarnings = priceEarnings;
            this.PriceEarningsGrowth = priceEarningsGrowth;
            this.PriceBookValue = priceBookValue;
            this.PriceCashFlow = priceCashFlow;
            this.PriceFreeCashFlow = priceFreeCashFlow;
            this.DividendYield = dividendYield;
            this.EnterpriseValueEbit = enterpriseValueEbit;
            this.EnterpriseValueEbitda = enterpriseValueEbitda;
            this.EnterpriseValueSales = enterpriseValueSales;
        }

        /// <summary>
        /// Gets or Sets PriceSales
        /// </summary>
        [DataMember(Name = "priceSales", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceSales PriceSales { get; set; }

        /// <summary>
        /// Gets or Sets PriceEarnings
        /// </summary>
        [DataMember(Name = "priceEarnings", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarnings PriceEarnings { get; set; }

        /// <summary>
        /// Gets or Sets PriceEarningsGrowth
        /// </summary>
        [DataMember(Name = "priceEarningsGrowth", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceEarningsGrowth PriceEarningsGrowth { get; set; }

        /// <summary>
        /// Gets or Sets PriceBookValue
        /// </summary>
        [DataMember(Name = "priceBookValue", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceBookValue PriceBookValue { get; set; }

        /// <summary>
        /// Gets or Sets PriceCashFlow
        /// </summary>
        [DataMember(Name = "priceCashFlow", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceCashFlow PriceCashFlow { get; set; }

        /// <summary>
        /// Gets or Sets PriceFreeCashFlow
        /// </summary>
        [DataMember(Name = "priceFreeCashFlow", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosPriceFreeCashFlow PriceFreeCashFlow { get; set; }

        /// <summary>
        /// Gets or Sets DividendYield
        /// </summary>
        [DataMember(Name = "dividendYield", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosDividendYield DividendYield { get; set; }

        /// <summary>
        /// Gets or Sets EnterpriseValueEbit
        /// </summary>
        [DataMember(Name = "enterpriseValueEbit", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbit EnterpriseValueEbit { get; set; }

        /// <summary>
        /// Gets or Sets EnterpriseValueEbitda
        /// </summary>
        [DataMember(Name = "enterpriseValueEbitda", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueEbitda EnterpriseValueEbitda { get; set; }

        /// <summary>
        /// Gets or Sets EnterpriseValueSales
        /// </summary>
        [DataMember(Name = "enterpriseValueSales", EmitDefaultValue = false)]
        public InlineResponse2005DataEstimatesFirstFiscalYearRatiosEnterpriseValueSales EnterpriseValueSales { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse2005DataEstimatesFirstFiscalYearRatios {\n");
            sb.Append("  PriceSales: ").Append(PriceSales).Append("\n");
            sb.Append("  PriceEarnings: ").Append(PriceEarnings).Append("\n");
            sb.Append("  PriceEarningsGrowth: ").Append(PriceEarningsGrowth).Append("\n");
            sb.Append("  PriceBookValue: ").Append(PriceBookValue).Append("\n");
            sb.Append("  PriceCashFlow: ").Append(PriceCashFlow).Append("\n");
            sb.Append("  PriceFreeCashFlow: ").Append(PriceFreeCashFlow).Append("\n");
            sb.Append("  DividendYield: ").Append(DividendYield).Append("\n");
            sb.Append("  EnterpriseValueEbit: ").Append(EnterpriseValueEbit).Append("\n");
            sb.Append("  EnterpriseValueEbitda: ").Append(EnterpriseValueEbitda).Append("\n");
            sb.Append("  EnterpriseValueSales: ").Append(EnterpriseValueSales).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse2005DataEstimatesFirstFiscalYearRatios);
        }

        /// <summary>
        /// Returns true if InlineResponse2005DataEstimatesFirstFiscalYearRatios instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse2005DataEstimatesFirstFiscalYearRatios to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse2005DataEstimatesFirstFiscalYearRatios input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PriceSales == input.PriceSales ||
                    (this.PriceSales != null &&
                    this.PriceSales.Equals(input.PriceSales))
                ) && 
                (
                    this.PriceEarnings == input.PriceEarnings ||
                    (this.PriceEarnings != null &&
                    this.PriceEarnings.Equals(input.PriceEarnings))
                ) && 
                (
                    this.PriceEarningsGrowth == input.PriceEarningsGrowth ||
                    (this.PriceEarningsGrowth != null &&
                    this.PriceEarningsGrowth.Equals(input.PriceEarningsGrowth))
                ) && 
                (
                    this.PriceBookValue == input.PriceBookValue ||
                    (this.PriceBookValue != null &&
                    this.PriceBookValue.Equals(input.PriceBookValue))
                ) && 
                (
                    this.PriceCashFlow == input.PriceCashFlow ||
                    (this.PriceCashFlow != null &&
                    this.PriceCashFlow.Equals(input.PriceCashFlow))
                ) && 
                (
                    this.PriceFreeCashFlow == input.PriceFreeCashFlow ||
                    (this.PriceFreeCashFlow != null &&
                    this.PriceFreeCashFlow.Equals(input.PriceFreeCashFlow))
                ) && 
                (
                    this.DividendYield == input.DividendYield ||
                    (this.DividendYield != null &&
                    this.DividendYield.Equals(input.DividendYield))
                ) && 
                (
                    this.EnterpriseValueEbit == input.EnterpriseValueEbit ||
                    (this.EnterpriseValueEbit != null &&
                    this.EnterpriseValueEbit.Equals(input.EnterpriseValueEbit))
                ) && 
                (
                    this.EnterpriseValueEbitda == input.EnterpriseValueEbitda ||
                    (this.EnterpriseValueEbitda != null &&
                    this.EnterpriseValueEbitda.Equals(input.EnterpriseValueEbitda))
                ) && 
                (
                    this.EnterpriseValueSales == input.EnterpriseValueSales ||
                    (this.EnterpriseValueSales != null &&
                    this.EnterpriseValueSales.Equals(input.EnterpriseValueSales))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PriceSales != null)
                    hashCode = hashCode * 59 + this.PriceSales.GetHashCode();
                if (this.PriceEarnings != null)
                    hashCode = hashCode * 59 + this.PriceEarnings.GetHashCode();
                if (this.PriceEarningsGrowth != null)
                    hashCode = hashCode * 59 + this.PriceEarningsGrowth.GetHashCode();
                if (this.PriceBookValue != null)
                    hashCode = hashCode * 59 + this.PriceBookValue.GetHashCode();
                if (this.PriceCashFlow != null)
                    hashCode = hashCode * 59 + this.PriceCashFlow.GetHashCode();
                if (this.PriceFreeCashFlow != null)
                    hashCode = hashCode * 59 + this.PriceFreeCashFlow.GetHashCode();
                if (this.DividendYield != null)
                    hashCode = hashCode * 59 + this.DividendYield.GetHashCode();
                if (this.EnterpriseValueEbit != null)
                    hashCode = hashCode * 59 + this.EnterpriseValueEbit.GetHashCode();
                if (this.EnterpriseValueEbitda != null)
                    hashCode = hashCode * 59 + this.EnterpriseValueEbitda.GetHashCode();
                if (this.EnterpriseValueSales != null)
                    hashCode = hashCode * 59 + this.EnterpriseValueSales.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
