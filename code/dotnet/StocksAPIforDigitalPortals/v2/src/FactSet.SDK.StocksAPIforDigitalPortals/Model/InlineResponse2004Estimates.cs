/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.StocksAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.StocksAPIforDigitalPortals.Model
{
    /// <summary>
    /// Stock-specific consolidated estimates for a fiscal year.
    /// </summary>
    [DataContract(Name = "inline_response_200_4_estimates")]
    public partial class InlineResponse2004Estimates : IEquatable<InlineResponse2004Estimates>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2004Estimates" /> class.
        /// </summary>
        /// <param name="firstFiscalYear">firstFiscalYear.</param>
        /// <param name="secondFiscalYear">secondFiscalYear.</param>
        /// <param name="thirdFiscalYear">thirdFiscalYear.</param>
        public InlineResponse2004Estimates(InlineResponse2004EstimatesFirstFiscalYear firstFiscalYear = default(InlineResponse2004EstimatesFirstFiscalYear), InlineResponse2004EstimatesSecondFiscalYear secondFiscalYear = default(InlineResponse2004EstimatesSecondFiscalYear), InlineResponse2004EstimatesThirdFiscalYear thirdFiscalYear = default(InlineResponse2004EstimatesThirdFiscalYear))
        {
            this.FirstFiscalYear = firstFiscalYear;
            this.SecondFiscalYear = secondFiscalYear;
            this.ThirdFiscalYear = thirdFiscalYear;
        }

        /// <summary>
        /// Gets or Sets FirstFiscalYear
        /// </summary>
        [DataMember(Name = "firstFiscalYear", EmitDefaultValue = false)]
        public InlineResponse2004EstimatesFirstFiscalYear FirstFiscalYear { get; set; }

        /// <summary>
        /// Gets or Sets SecondFiscalYear
        /// </summary>
        [DataMember(Name = "secondFiscalYear", EmitDefaultValue = false)]
        public InlineResponse2004EstimatesSecondFiscalYear SecondFiscalYear { get; set; }

        /// <summary>
        /// Gets or Sets ThirdFiscalYear
        /// </summary>
        [DataMember(Name = "thirdFiscalYear", EmitDefaultValue = false)]
        public InlineResponse2004EstimatesThirdFiscalYear ThirdFiscalYear { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse2004Estimates {\n");
            sb.Append("  FirstFiscalYear: ").Append(FirstFiscalYear).Append("\n");
            sb.Append("  SecondFiscalYear: ").Append(SecondFiscalYear).Append("\n");
            sb.Append("  ThirdFiscalYear: ").Append(ThirdFiscalYear).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse2004Estimates);
        }

        /// <summary>
        /// Returns true if InlineResponse2004Estimates instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse2004Estimates to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse2004Estimates input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.FirstFiscalYear == input.FirstFiscalYear ||
                    (this.FirstFiscalYear != null &&
                    this.FirstFiscalYear.Equals(input.FirstFiscalYear))
                ) && 
                (
                    this.SecondFiscalYear == input.SecondFiscalYear ||
                    (this.SecondFiscalYear != null &&
                    this.SecondFiscalYear.Equals(input.SecondFiscalYear))
                ) && 
                (
                    this.ThirdFiscalYear == input.ThirdFiscalYear ||
                    (this.ThirdFiscalYear != null &&
                    this.ThirdFiscalYear.Equals(input.ThirdFiscalYear))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FirstFiscalYear != null)
                {
                    hashCode = (hashCode * 59) + this.FirstFiscalYear.GetHashCode();
                }
                if (this.SecondFiscalYear != null)
                {
                    hashCode = (hashCode * 59) + this.SecondFiscalYear.GetHashCode();
                }
                if (this.ThirdFiscalYear != null)
                {
                    hashCode = (hashCode * 59) + this.ThirdFiscalYear.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
