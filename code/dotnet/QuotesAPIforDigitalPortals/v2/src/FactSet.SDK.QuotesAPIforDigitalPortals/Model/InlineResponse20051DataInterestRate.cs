/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.QuotesAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.QuotesAPIforDigitalPortals.Model
{
    /// <summary>
    /// Interest rate for the coupon period.
    /// </summary>
    [DataContract(Name = "inline_response_200_51_data_interestRate")]
    public partial class InlineResponse20051DataInterestRate : IEquatable<InlineResponse20051DataInterestRate>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20051DataInterestRate" /> class.
        /// </summary>
        /// <param name="type">type.</param>
        /// <param name="annualized">annualized.</param>
        /// <param name="periodic">periodic.</param>
        public InlineResponse20051DataInterestRate(InlineResponse20051DataInterestRateType type = default(InlineResponse20051DataInterestRateType), InlineResponse20051DataInterestRateAnnualized annualized = default(InlineResponse20051DataInterestRateAnnualized), InlineResponse20051DataInterestRatePeriodic periodic = default(InlineResponse20051DataInterestRatePeriodic))
        {
            this.Type = type;
            this.Annualized = annualized;
            this.Periodic = periodic;
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public InlineResponse20051DataInterestRateType Type { get; set; }

        /// <summary>
        /// Gets or Sets Annualized
        /// </summary>
        [DataMember(Name = "annualized", EmitDefaultValue = false)]
        public InlineResponse20051DataInterestRateAnnualized Annualized { get; set; }

        /// <summary>
        /// Gets or Sets Periodic
        /// </summary>
        [DataMember(Name = "periodic", EmitDefaultValue = false)]
        public InlineResponse20051DataInterestRatePeriodic Periodic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse20051DataInterestRate {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Annualized: ").Append(Annualized).Append("\n");
            sb.Append("  Periodic: ").Append(Periodic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20051DataInterestRate);
        }

        /// <summary>
        /// Returns true if InlineResponse20051DataInterestRate instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20051DataInterestRate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20051DataInterestRate input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Annualized == input.Annualized ||
                    (this.Annualized != null &&
                    this.Annualized.Equals(input.Annualized))
                ) && 
                (
                    this.Periodic == input.Periodic ||
                    (this.Periodic != null &&
                    this.Periodic.Equals(input.Periodic))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                if (this.Annualized != null)
                {
                    hashCode = (hashCode * 59) + this.Annualized.GetHashCode();
                }
                if (this.Periodic != null)
                {
                    hashCode = (hashCode * 59) + this.Periodic.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
