/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.QuotesAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.QuotesAPIforDigitalPortals.Model
{
    /// <summary>
    /// Quantifies the risk associated with the product by assigning a rating using an appropriate risk rating system.
    /// </summary>
    [DataContract(Name = "inline_response_200_62_data_targetMarket_riskTolerance")]
    public partial class InlineResponse20062DataTargetMarketRiskTolerance : IEquatable<InlineResponse20062DataTargetMarketRiskTolerance>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20062DataTargetMarketRiskTolerance" /> class.
        /// </summary>
        /// <param name="sri">sri.</param>
        /// <param name="srri">srri.</param>
        /// <param name="internalRiskRating">internalRiskRating.</param>
        /// <param name="spain">spain.</param>
        /// <param name="germany">germany.</param>
        public InlineResponse20062DataTargetMarketRiskTolerance(InlineResponse20062DataTargetMarketRiskToleranceSri sri = default(InlineResponse20062DataTargetMarketRiskToleranceSri), InlineResponse20062DataTargetMarketRiskToleranceSrri srri = default(InlineResponse20062DataTargetMarketRiskToleranceSrri), InlineResponse20062DataTargetMarketRiskToleranceInternalRiskRating internalRiskRating = default(InlineResponse20062DataTargetMarketRiskToleranceInternalRiskRating), InlineResponse20062DataTargetMarketRiskToleranceSpain spain = default(InlineResponse20062DataTargetMarketRiskToleranceSpain), InlineResponse20062DataTargetMarketRiskToleranceGermany germany = default(InlineResponse20062DataTargetMarketRiskToleranceGermany))
        {
            this.Sri = sri;
            this.Srri = srri;
            this.InternalRiskRating = internalRiskRating;
            this.Spain = spain;
            this.Germany = germany;
        }

        /// <summary>
        /// Gets or Sets Sri
        /// </summary>
        [DataMember(Name = "sri", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketRiskToleranceSri Sri { get; set; }

        /// <summary>
        /// Gets or Sets Srri
        /// </summary>
        [DataMember(Name = "srri", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketRiskToleranceSrri Srri { get; set; }

        /// <summary>
        /// Gets or Sets InternalRiskRating
        /// </summary>
        [DataMember(Name = "internalRiskRating", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketRiskToleranceInternalRiskRating InternalRiskRating { get; set; }

        /// <summary>
        /// Gets or Sets Spain
        /// </summary>
        [DataMember(Name = "spain", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketRiskToleranceSpain Spain { get; set; }

        /// <summary>
        /// Gets or Sets Germany
        /// </summary>
        [DataMember(Name = "germany", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketRiskToleranceGermany Germany { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20062DataTargetMarketRiskTolerance {\n");
            sb.Append("  Sri: ").Append(Sri).Append("\n");
            sb.Append("  Srri: ").Append(Srri).Append("\n");
            sb.Append("  InternalRiskRating: ").Append(InternalRiskRating).Append("\n");
            sb.Append("  Spain: ").Append(Spain).Append("\n");
            sb.Append("  Germany: ").Append(Germany).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20062DataTargetMarketRiskTolerance);
        }

        /// <summary>
        /// Returns true if InlineResponse20062DataTargetMarketRiskTolerance instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20062DataTargetMarketRiskTolerance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20062DataTargetMarketRiskTolerance input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Sri == input.Sri ||
                    (this.Sri != null &&
                    this.Sri.Equals(input.Sri))
                ) && 
                (
                    this.Srri == input.Srri ||
                    (this.Srri != null &&
                    this.Srri.Equals(input.Srri))
                ) && 
                (
                    this.InternalRiskRating == input.InternalRiskRating ||
                    (this.InternalRiskRating != null &&
                    this.InternalRiskRating.Equals(input.InternalRiskRating))
                ) && 
                (
                    this.Spain == input.Spain ||
                    (this.Spain != null &&
                    this.Spain.Equals(input.Spain))
                ) && 
                (
                    this.Germany == input.Germany ||
                    (this.Germany != null &&
                    this.Germany.Equals(input.Germany))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Sri != null)
                    hashCode = hashCode * 59 + this.Sri.GetHashCode();
                if (this.Srri != null)
                    hashCode = hashCode * 59 + this.Srri.GetHashCode();
                if (this.InternalRiskRating != null)
                    hashCode = hashCode * 59 + this.InternalRiskRating.GetHashCode();
                if (this.Spain != null)
                    hashCode = hashCode * 59 + this.Spain.GetHashCode();
                if (this.Germany != null)
                    hashCode = hashCode * 59 + this.Germany.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
