/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.QuotesAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.QuotesAPIforDigitalPortals.Model
{
    /// <summary>
    /// Characterizes the investment product regarding its ability to serve specific investment objectives.
    /// </summary>
    [DataContract(Name = "inline_response_200_62_data_targetMarket_clientObjectivesAndNeeds")]
    public partial class InlineResponse20062DataTargetMarketClientObjectivesAndNeeds : IEquatable<InlineResponse20062DataTargetMarketClientObjectivesAndNeeds>, IValidatableObject
    {
        /// <summary>
        /// Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \&quot;yes\&quot; value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable).
        /// </summary>
        /// <value>Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \&quot;yes\&quot; value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable).</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MayBeTerminatedEarlyEnum
        {
            /// <summary>
            /// Enum Yes for value: yes
            /// </summary>
            [EnumMember(Value = "yes")]
            Yes = 1,

            /// <summary>
            /// Enum No for value: no
            /// </summary>
            [EnumMember(Value = "no")]
            No = 2,

            /// <summary>
            /// Enum Neutral for value: neutral
            /// </summary>
            [EnumMember(Value = "neutral")]
            Neutral = 3,

            /// <summary>
            /// Enum Feedback for value: feedback
            /// </summary>
            [EnumMember(Value = "feedback")]
            Feedback = 4

        }


        /// <summary>
        /// Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \&quot;yes\&quot; value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable).
        /// </summary>
        /// <value>Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \&quot;yes\&quot; value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable).</value>
        [DataMember(Name = "mayBeTerminatedEarly", EmitDefaultValue = false)]
        public MayBeTerminatedEarlyEnum? MayBeTerminatedEarly { get; set; }
        /// <summary>
        /// Defines SpecificInvestmentNeed
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SpecificInvestmentNeedEnum
        {
            /// <summary>
            /// Enum Yes for value: yes
            /// </summary>
            [EnumMember(Value = "yes")]
            Yes = 1,

            /// <summary>
            /// Enum No for value: no
            /// </summary>
            [EnumMember(Value = "no")]
            No = 2,

            /// <summary>
            /// Enum Green for value: green
            /// </summary>
            [EnumMember(Value = "green")]
            Green = 3,

            /// <summary>
            /// Enum Ethical for value: ethical
            /// </summary>
            [EnumMember(Value = "ethical")]
            Ethical = 4,

            /// <summary>
            /// Enum Islamic for value: islamic
            /// </summary>
            [EnumMember(Value = "islamic")]
            Islamic = 5,

            /// <summary>
            /// Enum Esg for value: esg
            /// </summary>
            [EnumMember(Value = "esg")]
            Esg = 6,

            /// <summary>
            /// Enum Other for value: other
            /// </summary>
            [EnumMember(Value = "other")]
            Other = 7

        }



        /// <summary>
        /// Indicates whether the investment product is suitable for investors with a specific investment need. This attribute provides either a general statement (yes or no) or a set of needs (green investment, ethical investment, islamic banking, Environmental, social and governance (ESG), other) covered by the product.
        /// </summary>
        /// <value>Indicates whether the investment product is suitable for investors with a specific investment need. This attribute provides either a general statement (yes or no) or a set of needs (green investment, ethical investment, islamic banking, Environmental, social and governance (ESG), other) covered by the product.</value>
        [DataMember(Name = "specificInvestmentNeed", EmitDefaultValue = false)]
        public List<SpecificInvestmentNeedEnum> SpecificInvestmentNeed { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20062DataTargetMarketClientObjectivesAndNeeds" /> class.
        /// </summary>
        /// <param name="returnProfile">returnProfile.</param>
        /// <param name="maturityDate">Maturity date of the investment product..</param>
        /// <param name="mayBeTerminatedEarly">Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \&quot;yes\&quot; value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable)..</param>
        /// <param name="specificInvestmentNeed">Indicates whether the investment product is suitable for investors with a specific investment need. This attribute provides either a general statement (yes or no) or a set of needs (green investment, ethical investment, islamic banking, Environmental, social and governance (ESG), other) covered by the product..</param>
        public InlineResponse20062DataTargetMarketClientObjectivesAndNeeds(InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfile returnProfile = default(InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfile), DateTime maturityDate = default(DateTime), MayBeTerminatedEarlyEnum? mayBeTerminatedEarly = default(MayBeTerminatedEarlyEnum?), List<SpecificInvestmentNeedEnum> specificInvestmentNeed = default(List<SpecificInvestmentNeedEnum>))
        {
            this.ReturnProfile = returnProfile;
            this.MaturityDate = maturityDate;
            this.MayBeTerminatedEarly = mayBeTerminatedEarly;
            this.SpecificInvestmentNeed = specificInvestmentNeed;
        }

        /// <summary>
        /// Gets or Sets ReturnProfile
        /// </summary>
        [DataMember(Name = "returnProfile", EmitDefaultValue = false)]
        public InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfile ReturnProfile { get; set; }

        /// <summary>
        /// Maturity date of the investment product.
        /// </summary>
        /// <value>Maturity date of the investment product.</value>
        [DataMember(Name = "maturityDate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime MaturityDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse20062DataTargetMarketClientObjectivesAndNeeds {\n");
            sb.Append("  ReturnProfile: ").Append(ReturnProfile).Append("\n");
            sb.Append("  MaturityDate: ").Append(MaturityDate).Append("\n");
            sb.Append("  MayBeTerminatedEarly: ").Append(MayBeTerminatedEarly).Append("\n");
            sb.Append("  SpecificInvestmentNeed: ").Append(SpecificInvestmentNeed).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20062DataTargetMarketClientObjectivesAndNeeds);
        }

        /// <summary>
        /// Returns true if InlineResponse20062DataTargetMarketClientObjectivesAndNeeds instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20062DataTargetMarketClientObjectivesAndNeeds to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20062DataTargetMarketClientObjectivesAndNeeds input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ReturnProfile == input.ReturnProfile ||
                    (this.ReturnProfile != null &&
                    this.ReturnProfile.Equals(input.ReturnProfile))
                ) && 
                (
                    this.MaturityDate == input.MaturityDate ||
                    (this.MaturityDate != null &&
                    this.MaturityDate.Equals(input.MaturityDate))
                ) && 
                (
                    this.MayBeTerminatedEarly == input.MayBeTerminatedEarly ||
                    this.MayBeTerminatedEarly.Equals(input.MayBeTerminatedEarly)
                ) && 
                (
                    this.SpecificInvestmentNeed == input.SpecificInvestmentNeed ||
                    this.SpecificInvestmentNeed.SequenceEqual(input.SpecificInvestmentNeed)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ReturnProfile != null)
                {
                    hashCode = (hashCode * 59) + this.ReturnProfile.GetHashCode();
                }
                if (this.MaturityDate != null)
                {
                    hashCode = (hashCode * 59) + this.MaturityDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.MayBeTerminatedEarly.GetHashCode();
                hashCode = (hashCode * 59) + this.SpecificInvestmentNeed.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
