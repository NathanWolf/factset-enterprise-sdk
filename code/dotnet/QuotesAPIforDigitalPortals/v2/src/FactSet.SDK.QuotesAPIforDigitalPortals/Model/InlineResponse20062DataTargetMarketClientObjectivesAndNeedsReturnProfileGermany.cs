/*
 * Prime Developer Trial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.QuotesAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.QuotesAPIforDigitalPortals.Model
{
    /// <summary>
    /// Specific indicators for Germany.
    /// </summary>
    [DataContract(Name = "inline_response_200_62_data_targetMarket_clientObjectivesAndNeeds_returnProfile_germany")]
    public partial class InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany : IEquatable<InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany>, IValidatableObject
    {
        /// <summary>
        /// Indicates whether the investment product is suitable for investors with the return profile \&quot;pension scheme\&quot;. This regulatory requirement is available only in Germany (\&quot;Riester Rente\&quot;).
        /// </summary>
        /// <value>Indicates whether the investment product is suitable for investors with the return profile \&quot;pension scheme\&quot;. This regulatory requirement is available only in Germany (\&quot;Riester Rente\&quot;).</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PensionSchemeEnum
        {
            /// <summary>
            /// Enum Yes for value: yes
            /// </summary>
            [EnumMember(Value = "yes")]
            Yes = 1,

            /// <summary>
            /// Enum No for value: no
            /// </summary>
            [EnumMember(Value = "no")]
            No = 2,

            /// <summary>
            /// Enum Neutral for value: neutral
            /// </summary>
            [EnumMember(Value = "neutral")]
            Neutral = 3,

            /// <summary>
            /// Enum Feedback for value: feedback
            /// </summary>
            [EnumMember(Value = "feedback")]
            Feedback = 4

        }


        /// <summary>
        /// Indicates whether the investment product is suitable for investors with the return profile \&quot;pension scheme\&quot;. This regulatory requirement is available only in Germany (\&quot;Riester Rente\&quot;).
        /// </summary>
        /// <value>Indicates whether the investment product is suitable for investors with the return profile \&quot;pension scheme\&quot;. This regulatory requirement is available only in Germany (\&quot;Riester Rente\&quot;).</value>
        [DataMember(Name = "pensionScheme", EmitDefaultValue = false)]
        public PensionSchemeEnum? PensionScheme { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany" /> class.
        /// </summary>
        /// <param name="pensionScheme">Indicates whether the investment product is suitable for investors with the return profile \&quot;pension scheme\&quot;. This regulatory requirement is available only in Germany (\&quot;Riester Rente\&quot;)..</param>
        public InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany(PensionSchemeEnum? pensionScheme = default(PensionSchemeEnum?))
        {
            this.PensionScheme = pensionScheme;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany {\n");
            sb.Append("  PensionScheme: ").Append(PensionScheme).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany);
        }

        /// <summary>
        /// Returns true if InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20062DataTargetMarketClientObjectivesAndNeedsReturnProfileGermany input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PensionScheme == input.PensionScheme ||
                    this.PensionScheme.Equals(input.PensionScheme)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PensionScheme.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
