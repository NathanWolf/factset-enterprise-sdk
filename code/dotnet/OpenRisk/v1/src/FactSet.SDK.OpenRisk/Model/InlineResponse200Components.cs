/*
 * Open:Risk API
 *
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.24.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.OpenRisk.Client.OpenAPIDateConverter;

namespace FactSet.SDK.OpenRisk.Model
{
    /// <summary>
    /// InlineResponse200Components
    /// </summary>
    [DataContract(Name = "inline_response_200_components")]
    public partial class InlineResponse200Components : IEquatable<InlineResponse200Components>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse200Components" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InlineResponse200Components() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse200Components" /> class.
        /// </summary>
        /// <param name="schemas">schemas.</param>
        /// <param name="securitySchemes">securitySchemes (required).</param>
        public InlineResponse200Components(Object securitySchemes,Object schemas = default(Object))
        {
            // to ensure "securitySchemes" is required (not null)
            if (securitySchemes == null) {
                throw new ArgumentNullException("securitySchemes is a required property for InlineResponse200Components and cannot be null");
            }
            this.SecuritySchemes = securitySchemes;
            this.Schemas = schemas;
        }

        /// <summary>
        /// Gets or Sets Schemas
        /// </summary>
        [DataMember(Name = "schemas", EmitDefaultValue = false)]
        public Object Schemas { get; set; }

        /// <summary>
        /// Gets or Sets SecuritySchemes
        /// </summary>
        [DataMember(Name = "securitySchemes", IsRequired = true, EmitDefaultValue = false)]
        public Object SecuritySchemes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse200Components {\n");
            sb.Append("  Schemas: ").Append(Schemas).Append("\n");
            sb.Append("  SecuritySchemes: ").Append(SecuritySchemes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse200Components);
        }

        /// <summary>
        /// Returns true if InlineResponse200Components instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse200Components to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse200Components input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Schemas == input.Schemas ||
                    (this.Schemas != null &&
                    this.Schemas.Equals(input.Schemas))
                ) && 
                (
                    this.SecuritySchemes == input.SecuritySchemes ||
                    (this.SecuritySchemes != null &&
                    this.SecuritySchemes.Equals(input.SecuritySchemes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Schemas != null)
                {
                    hashCode = (hashCode * 59) + this.Schemas.GetHashCode();
                }
                if (this.SecuritySchemes != null)
                {
                    hashCode = (hashCode * 59) + this.SecuritySchemes.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
