/*
 * S&P Global Fixed Income Evaluated Prices & Analytics API
 *
 * Gain access to evaluated pricing and analytics data for Corporate Bonds, Municipal Bonds and Asset Backed Securities provided by S&P Global (formerly IHS Markit) .  Data returned through multiple endpoints like prices, spread, yield, yield curve, sensitivity, coupon information, securities metadata and details specific to the Asset Backed Securities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.Client.OpenAPIDateConverter;

namespace FactSet.SDK.SPGlobalFixedIncomeEvaluatedPricesandAnalytics.Model
{
    /// <summary>
    /// BondIssuerYieldCurve
    /// </summary>
    [DataContract(Name = "bondIssuerYieldCurve")]
    public partial class BondIssuerYieldCurve : IEquatable<BondIssuerYieldCurve>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BondIssuerYieldCurve" /> class.
        /// </summary>
        /// <param name="requestId">Identifier that was used for the request..</param>
        /// <param name="fsymId">FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet..</param>
        /// <param name="date">The date on which the price is calculated..</param>
        /// <param name="yieldCurveDate3M">Returns the 3M yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate6M">Returns the 6M yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate1Y">Returns the 1Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate2Y">Returns the 2Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate3Y">Returns the 3Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate4Y">Returns the 4Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate5Y">Returns the 5Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate6Y">Returns the 6Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate7Y">Returns the 7Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate8Y">Returns the 8Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate9Y">Returns the 9Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate10Y">Returns the 10Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate15Y">Returns the 15Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate20Y">Returns the 20Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate25Y">Returns the 25Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate30Y">Returns the 30Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="yieldCurveDate40Y">Returns the 40Y yield curve date in &#39;YYYY-MM-DD&#39; format..</param>
        /// <param name="ytmCurve3M">Returns the 3M yield to maturity..</param>
        /// <param name="ytmCurve6M">Returns the 6M yield to maturity..</param>
        /// <param name="ytmCurve1Y">Returns the 1Y yield to maturity..</param>
        /// <param name="ytmCurve2Y">Returns the 2Y yield to maturity..</param>
        /// <param name="ytmCurve3Y">Returns the 3Y yield to maturity..</param>
        /// <param name="ytmCurve4Y">Returns the 4Y yield to maturity..</param>
        /// <param name="ytmCurve5Y">Returns the 5Y yield to maturity..</param>
        /// <param name="ytmCurve6Y">Returns the 6Y yield to maturity..</param>
        /// <param name="ytmCurve7Y">Returns the 7Y yield to maturity..</param>
        /// <param name="ytmCurve8Y">Returns the 8Y yield to maturity..</param>
        /// <param name="ytmCurve9Y">Returns the 9Y yield to maturity..</param>
        /// <param name="ytmCurve10Y">Returns the 10Y yield to maturity..</param>
        /// <param name="ytmCurve15Y">Returns the 15Y yield to maturity..</param>
        /// <param name="ytmCurve20Y">Returns the 20Y yield to maturity..</param>
        /// <param name="ytmCurve25Y">Returns the 25Y yield to maturity..</param>
        /// <param name="ytmCurve30Y">Returns the 30Y yield to maturity..</param>
        /// <param name="ytmCurve40Y">Returns the 40Y yield to maturity..</param>
        public BondIssuerYieldCurve(string requestId = default(string), string fsymId = default(string), DateTime? date = default(DateTime?), DateTime? yieldCurveDate3M = default(DateTime?), DateTime? yieldCurveDate6M = default(DateTime?), DateTime? yieldCurveDate1Y = default(DateTime?), DateTime? yieldCurveDate2Y = default(DateTime?), DateTime? yieldCurveDate3Y = default(DateTime?), DateTime? yieldCurveDate4Y = default(DateTime?), DateTime? yieldCurveDate5Y = default(DateTime?), DateTime? yieldCurveDate6Y = default(DateTime?), DateTime? yieldCurveDate7Y = default(DateTime?), DateTime? yieldCurveDate8Y = default(DateTime?), DateTime? yieldCurveDate9Y = default(DateTime?), DateTime? yieldCurveDate10Y = default(DateTime?), DateTime? yieldCurveDate15Y = default(DateTime?), DateTime? yieldCurveDate20Y = default(DateTime?), DateTime? yieldCurveDate25Y = default(DateTime?), DateTime? yieldCurveDate30Y = default(DateTime?), DateTime? yieldCurveDate40Y = default(DateTime?), double? ytmCurve3M = default(double?), double? ytmCurve6M = default(double?), double? ytmCurve1Y = default(double?), double? ytmCurve2Y = default(double?), double? ytmCurve3Y = default(double?), double? ytmCurve4Y = default(double?), double? ytmCurve5Y = default(double?), double? ytmCurve6Y = default(double?), double? ytmCurve7Y = default(double?), double? ytmCurve8Y = default(double?), double? ytmCurve9Y = default(double?), double? ytmCurve10Y = default(double?), double? ytmCurve15Y = default(double?), double? ytmCurve20Y = default(double?), double? ytmCurve25Y = default(double?), double? ytmCurve30Y = default(double?), double? ytmCurve40Y = default(double?))
        {
            this.RequestId = requestId;
            this.FsymId = fsymId;
            this.Date = date;
            this.YieldCurveDate3M = yieldCurveDate3M;
            this.YieldCurveDate6M = yieldCurveDate6M;
            this.YieldCurveDate1Y = yieldCurveDate1Y;
            this.YieldCurveDate2Y = yieldCurveDate2Y;
            this.YieldCurveDate3Y = yieldCurveDate3Y;
            this.YieldCurveDate4Y = yieldCurveDate4Y;
            this.YieldCurveDate5Y = yieldCurveDate5Y;
            this.YieldCurveDate6Y = yieldCurveDate6Y;
            this.YieldCurveDate7Y = yieldCurveDate7Y;
            this.YieldCurveDate8Y = yieldCurveDate8Y;
            this.YieldCurveDate9Y = yieldCurveDate9Y;
            this.YieldCurveDate10Y = yieldCurveDate10Y;
            this.YieldCurveDate15Y = yieldCurveDate15Y;
            this.YieldCurveDate20Y = yieldCurveDate20Y;
            this.YieldCurveDate25Y = yieldCurveDate25Y;
            this.YieldCurveDate30Y = yieldCurveDate30Y;
            this.YieldCurveDate40Y = yieldCurveDate40Y;
            this.YtmCurve3M = ytmCurve3M;
            this.YtmCurve6M = ytmCurve6M;
            this.YtmCurve1Y = ytmCurve1Y;
            this.YtmCurve2Y = ytmCurve2Y;
            this.YtmCurve3Y = ytmCurve3Y;
            this.YtmCurve4Y = ytmCurve4Y;
            this.YtmCurve5Y = ytmCurve5Y;
            this.YtmCurve6Y = ytmCurve6Y;
            this.YtmCurve7Y = ytmCurve7Y;
            this.YtmCurve8Y = ytmCurve8Y;
            this.YtmCurve9Y = ytmCurve9Y;
            this.YtmCurve10Y = ytmCurve10Y;
            this.YtmCurve15Y = ytmCurve15Y;
            this.YtmCurve20Y = ytmCurve20Y;
            this.YtmCurve25Y = ytmCurve25Y;
            this.YtmCurve30Y = ytmCurve30Y;
            this.YtmCurve40Y = ytmCurve40Y;
        }

        /// <summary>
        /// Identifier that was used for the request.
        /// </summary>
        /// <value>Identifier that was used for the request.</value>
        [DataMember(Name = "requestId", EmitDefaultValue = false)]
        public string RequestId { get; set; }

        /// <summary>
        /// FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
        /// </summary>
        /// <value>FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.</value>
        [DataMember(Name = "fsymId", EmitDefaultValue = true)]
        public string FsymId { get; set; }

        /// <summary>
        /// The date on which the price is calculated.
        /// </summary>
        /// <value>The date on which the price is calculated.</value>
        [DataMember(Name = "date", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Returns the 3M yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 3M yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate3M", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate3M { get; set; }

        /// <summary>
        /// Returns the 6M yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 6M yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate6M", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate6M { get; set; }

        /// <summary>
        /// Returns the 1Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 1Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate1Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate1Y { get; set; }

        /// <summary>
        /// Returns the 2Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 2Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate2Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate2Y { get; set; }

        /// <summary>
        /// Returns the 3Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 3Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate3Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate3Y { get; set; }

        /// <summary>
        /// Returns the 4Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 4Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate4Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate4Y { get; set; }

        /// <summary>
        /// Returns the 5Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 5Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate5Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate5Y { get; set; }

        /// <summary>
        /// Returns the 6Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 6Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate6Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate6Y { get; set; }

        /// <summary>
        /// Returns the 7Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 7Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate7Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate7Y { get; set; }

        /// <summary>
        /// Returns the 8Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 8Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate8Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate8Y { get; set; }

        /// <summary>
        /// Returns the 9Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 9Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate9Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate9Y { get; set; }

        /// <summary>
        /// Returns the 10Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 10Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate10Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate10Y { get; set; }

        /// <summary>
        /// Returns the 15Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 15Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate15Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate15Y { get; set; }

        /// <summary>
        /// Returns the 20Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 20Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate20Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate20Y { get; set; }

        /// <summary>
        /// Returns the 25Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 25Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate25Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate25Y { get; set; }

        /// <summary>
        /// Returns the 30Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 30Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate30Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate30Y { get; set; }

        /// <summary>
        /// Returns the 40Y yield curve date in &#39;YYYY-MM-DD&#39; format.
        /// </summary>
        /// <value>Returns the 40Y yield curve date in &#39;YYYY-MM-DD&#39; format.</value>
        [DataMember(Name = "yieldCurveDate40Y", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? YieldCurveDate40Y { get; set; }

        /// <summary>
        /// Returns the 3M yield to maturity.
        /// </summary>
        /// <value>Returns the 3M yield to maturity.</value>
        [DataMember(Name = "ytmCurve3M", EmitDefaultValue = true)]
        public double? YtmCurve3M { get; set; }

        /// <summary>
        /// Returns the 6M yield to maturity.
        /// </summary>
        /// <value>Returns the 6M yield to maturity.</value>
        [DataMember(Name = "ytmCurve6M", EmitDefaultValue = true)]
        public double? YtmCurve6M { get; set; }

        /// <summary>
        /// Returns the 1Y yield to maturity.
        /// </summary>
        /// <value>Returns the 1Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve1Y", EmitDefaultValue = true)]
        public double? YtmCurve1Y { get; set; }

        /// <summary>
        /// Returns the 2Y yield to maturity.
        /// </summary>
        /// <value>Returns the 2Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve2Y", EmitDefaultValue = true)]
        public double? YtmCurve2Y { get; set; }

        /// <summary>
        /// Returns the 3Y yield to maturity.
        /// </summary>
        /// <value>Returns the 3Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve3Y", EmitDefaultValue = true)]
        public double? YtmCurve3Y { get; set; }

        /// <summary>
        /// Returns the 4Y yield to maturity.
        /// </summary>
        /// <value>Returns the 4Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve4Y", EmitDefaultValue = true)]
        public double? YtmCurve4Y { get; set; }

        /// <summary>
        /// Returns the 5Y yield to maturity.
        /// </summary>
        /// <value>Returns the 5Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve5Y", EmitDefaultValue = true)]
        public double? YtmCurve5Y { get; set; }

        /// <summary>
        /// Returns the 6Y yield to maturity.
        /// </summary>
        /// <value>Returns the 6Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve6Y", EmitDefaultValue = true)]
        public double? YtmCurve6Y { get; set; }

        /// <summary>
        /// Returns the 7Y yield to maturity.
        /// </summary>
        /// <value>Returns the 7Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve7Y", EmitDefaultValue = true)]
        public double? YtmCurve7Y { get; set; }

        /// <summary>
        /// Returns the 8Y yield to maturity.
        /// </summary>
        /// <value>Returns the 8Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve8Y", EmitDefaultValue = true)]
        public double? YtmCurve8Y { get; set; }

        /// <summary>
        /// Returns the 9Y yield to maturity.
        /// </summary>
        /// <value>Returns the 9Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve9Y", EmitDefaultValue = true)]
        public double? YtmCurve9Y { get; set; }

        /// <summary>
        /// Returns the 10Y yield to maturity.
        /// </summary>
        /// <value>Returns the 10Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve10Y", EmitDefaultValue = true)]
        public double? YtmCurve10Y { get; set; }

        /// <summary>
        /// Returns the 15Y yield to maturity.
        /// </summary>
        /// <value>Returns the 15Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve15Y", EmitDefaultValue = true)]
        public double? YtmCurve15Y { get; set; }

        /// <summary>
        /// Returns the 20Y yield to maturity.
        /// </summary>
        /// <value>Returns the 20Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve20Y", EmitDefaultValue = true)]
        public double? YtmCurve20Y { get; set; }

        /// <summary>
        /// Returns the 25Y yield to maturity.
        /// </summary>
        /// <value>Returns the 25Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve25Y", EmitDefaultValue = true)]
        public double? YtmCurve25Y { get; set; }

        /// <summary>
        /// Returns the 30Y yield to maturity.
        /// </summary>
        /// <value>Returns the 30Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve30Y", EmitDefaultValue = true)]
        public double? YtmCurve30Y { get; set; }

        /// <summary>
        /// Returns the 40Y yield to maturity.
        /// </summary>
        /// <value>Returns the 40Y yield to maturity.</value>
        [DataMember(Name = "ytmCurve40Y", EmitDefaultValue = true)]
        public double? YtmCurve40Y { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BondIssuerYieldCurve {\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("  FsymId: ").Append(FsymId).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  YieldCurveDate3M: ").Append(YieldCurveDate3M).Append("\n");
            sb.Append("  YieldCurveDate6M: ").Append(YieldCurveDate6M).Append("\n");
            sb.Append("  YieldCurveDate1Y: ").Append(YieldCurveDate1Y).Append("\n");
            sb.Append("  YieldCurveDate2Y: ").Append(YieldCurveDate2Y).Append("\n");
            sb.Append("  YieldCurveDate3Y: ").Append(YieldCurveDate3Y).Append("\n");
            sb.Append("  YieldCurveDate4Y: ").Append(YieldCurveDate4Y).Append("\n");
            sb.Append("  YieldCurveDate5Y: ").Append(YieldCurveDate5Y).Append("\n");
            sb.Append("  YieldCurveDate6Y: ").Append(YieldCurveDate6Y).Append("\n");
            sb.Append("  YieldCurveDate7Y: ").Append(YieldCurveDate7Y).Append("\n");
            sb.Append("  YieldCurveDate8Y: ").Append(YieldCurveDate8Y).Append("\n");
            sb.Append("  YieldCurveDate9Y: ").Append(YieldCurveDate9Y).Append("\n");
            sb.Append("  YieldCurveDate10Y: ").Append(YieldCurveDate10Y).Append("\n");
            sb.Append("  YieldCurveDate15Y: ").Append(YieldCurveDate15Y).Append("\n");
            sb.Append("  YieldCurveDate20Y: ").Append(YieldCurveDate20Y).Append("\n");
            sb.Append("  YieldCurveDate25Y: ").Append(YieldCurveDate25Y).Append("\n");
            sb.Append("  YieldCurveDate30Y: ").Append(YieldCurveDate30Y).Append("\n");
            sb.Append("  YieldCurveDate40Y: ").Append(YieldCurveDate40Y).Append("\n");
            sb.Append("  YtmCurve3M: ").Append(YtmCurve3M).Append("\n");
            sb.Append("  YtmCurve6M: ").Append(YtmCurve6M).Append("\n");
            sb.Append("  YtmCurve1Y: ").Append(YtmCurve1Y).Append("\n");
            sb.Append("  YtmCurve2Y: ").Append(YtmCurve2Y).Append("\n");
            sb.Append("  YtmCurve3Y: ").Append(YtmCurve3Y).Append("\n");
            sb.Append("  YtmCurve4Y: ").Append(YtmCurve4Y).Append("\n");
            sb.Append("  YtmCurve5Y: ").Append(YtmCurve5Y).Append("\n");
            sb.Append("  YtmCurve6Y: ").Append(YtmCurve6Y).Append("\n");
            sb.Append("  YtmCurve7Y: ").Append(YtmCurve7Y).Append("\n");
            sb.Append("  YtmCurve8Y: ").Append(YtmCurve8Y).Append("\n");
            sb.Append("  YtmCurve9Y: ").Append(YtmCurve9Y).Append("\n");
            sb.Append("  YtmCurve10Y: ").Append(YtmCurve10Y).Append("\n");
            sb.Append("  YtmCurve15Y: ").Append(YtmCurve15Y).Append("\n");
            sb.Append("  YtmCurve20Y: ").Append(YtmCurve20Y).Append("\n");
            sb.Append("  YtmCurve25Y: ").Append(YtmCurve25Y).Append("\n");
            sb.Append("  YtmCurve30Y: ").Append(YtmCurve30Y).Append("\n");
            sb.Append("  YtmCurve40Y: ").Append(YtmCurve40Y).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BondIssuerYieldCurve);
        }

        /// <summary>
        /// Returns true if BondIssuerYieldCurve instances are equal
        /// </summary>
        /// <param name="input">Instance of BondIssuerYieldCurve to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BondIssuerYieldCurve input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RequestId == input.RequestId ||
                    (this.RequestId != null &&
                    this.RequestId.Equals(input.RequestId))
                ) && 
                (
                    this.FsymId == input.FsymId ||
                    (this.FsymId != null &&
                    this.FsymId.Equals(input.FsymId))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.YieldCurveDate3M == input.YieldCurveDate3M ||
                    (this.YieldCurveDate3M != null &&
                    this.YieldCurveDate3M.Equals(input.YieldCurveDate3M))
                ) && 
                (
                    this.YieldCurveDate6M == input.YieldCurveDate6M ||
                    (this.YieldCurveDate6M != null &&
                    this.YieldCurveDate6M.Equals(input.YieldCurveDate6M))
                ) && 
                (
                    this.YieldCurveDate1Y == input.YieldCurveDate1Y ||
                    (this.YieldCurveDate1Y != null &&
                    this.YieldCurveDate1Y.Equals(input.YieldCurveDate1Y))
                ) && 
                (
                    this.YieldCurveDate2Y == input.YieldCurveDate2Y ||
                    (this.YieldCurveDate2Y != null &&
                    this.YieldCurveDate2Y.Equals(input.YieldCurveDate2Y))
                ) && 
                (
                    this.YieldCurveDate3Y == input.YieldCurveDate3Y ||
                    (this.YieldCurveDate3Y != null &&
                    this.YieldCurveDate3Y.Equals(input.YieldCurveDate3Y))
                ) && 
                (
                    this.YieldCurveDate4Y == input.YieldCurveDate4Y ||
                    (this.YieldCurveDate4Y != null &&
                    this.YieldCurveDate4Y.Equals(input.YieldCurveDate4Y))
                ) && 
                (
                    this.YieldCurveDate5Y == input.YieldCurveDate5Y ||
                    (this.YieldCurveDate5Y != null &&
                    this.YieldCurveDate5Y.Equals(input.YieldCurveDate5Y))
                ) && 
                (
                    this.YieldCurveDate6Y == input.YieldCurveDate6Y ||
                    (this.YieldCurveDate6Y != null &&
                    this.YieldCurveDate6Y.Equals(input.YieldCurveDate6Y))
                ) && 
                (
                    this.YieldCurveDate7Y == input.YieldCurveDate7Y ||
                    (this.YieldCurveDate7Y != null &&
                    this.YieldCurveDate7Y.Equals(input.YieldCurveDate7Y))
                ) && 
                (
                    this.YieldCurveDate8Y == input.YieldCurveDate8Y ||
                    (this.YieldCurveDate8Y != null &&
                    this.YieldCurveDate8Y.Equals(input.YieldCurveDate8Y))
                ) && 
                (
                    this.YieldCurveDate9Y == input.YieldCurveDate9Y ||
                    (this.YieldCurveDate9Y != null &&
                    this.YieldCurveDate9Y.Equals(input.YieldCurveDate9Y))
                ) && 
                (
                    this.YieldCurveDate10Y == input.YieldCurveDate10Y ||
                    (this.YieldCurveDate10Y != null &&
                    this.YieldCurveDate10Y.Equals(input.YieldCurveDate10Y))
                ) && 
                (
                    this.YieldCurveDate15Y == input.YieldCurveDate15Y ||
                    (this.YieldCurveDate15Y != null &&
                    this.YieldCurveDate15Y.Equals(input.YieldCurveDate15Y))
                ) && 
                (
                    this.YieldCurveDate20Y == input.YieldCurveDate20Y ||
                    (this.YieldCurveDate20Y != null &&
                    this.YieldCurveDate20Y.Equals(input.YieldCurveDate20Y))
                ) && 
                (
                    this.YieldCurveDate25Y == input.YieldCurveDate25Y ||
                    (this.YieldCurveDate25Y != null &&
                    this.YieldCurveDate25Y.Equals(input.YieldCurveDate25Y))
                ) && 
                (
                    this.YieldCurveDate30Y == input.YieldCurveDate30Y ||
                    (this.YieldCurveDate30Y != null &&
                    this.YieldCurveDate30Y.Equals(input.YieldCurveDate30Y))
                ) && 
                (
                    this.YieldCurveDate40Y == input.YieldCurveDate40Y ||
                    (this.YieldCurveDate40Y != null &&
                    this.YieldCurveDate40Y.Equals(input.YieldCurveDate40Y))
                ) && 
                (
                    this.YtmCurve3M == input.YtmCurve3M ||
                    (this.YtmCurve3M != null &&
                    this.YtmCurve3M.Equals(input.YtmCurve3M))
                ) && 
                (
                    this.YtmCurve6M == input.YtmCurve6M ||
                    (this.YtmCurve6M != null &&
                    this.YtmCurve6M.Equals(input.YtmCurve6M))
                ) && 
                (
                    this.YtmCurve1Y == input.YtmCurve1Y ||
                    (this.YtmCurve1Y != null &&
                    this.YtmCurve1Y.Equals(input.YtmCurve1Y))
                ) && 
                (
                    this.YtmCurve2Y == input.YtmCurve2Y ||
                    (this.YtmCurve2Y != null &&
                    this.YtmCurve2Y.Equals(input.YtmCurve2Y))
                ) && 
                (
                    this.YtmCurve3Y == input.YtmCurve3Y ||
                    (this.YtmCurve3Y != null &&
                    this.YtmCurve3Y.Equals(input.YtmCurve3Y))
                ) && 
                (
                    this.YtmCurve4Y == input.YtmCurve4Y ||
                    (this.YtmCurve4Y != null &&
                    this.YtmCurve4Y.Equals(input.YtmCurve4Y))
                ) && 
                (
                    this.YtmCurve5Y == input.YtmCurve5Y ||
                    (this.YtmCurve5Y != null &&
                    this.YtmCurve5Y.Equals(input.YtmCurve5Y))
                ) && 
                (
                    this.YtmCurve6Y == input.YtmCurve6Y ||
                    (this.YtmCurve6Y != null &&
                    this.YtmCurve6Y.Equals(input.YtmCurve6Y))
                ) && 
                (
                    this.YtmCurve7Y == input.YtmCurve7Y ||
                    (this.YtmCurve7Y != null &&
                    this.YtmCurve7Y.Equals(input.YtmCurve7Y))
                ) && 
                (
                    this.YtmCurve8Y == input.YtmCurve8Y ||
                    (this.YtmCurve8Y != null &&
                    this.YtmCurve8Y.Equals(input.YtmCurve8Y))
                ) && 
                (
                    this.YtmCurve9Y == input.YtmCurve9Y ||
                    (this.YtmCurve9Y != null &&
                    this.YtmCurve9Y.Equals(input.YtmCurve9Y))
                ) && 
                (
                    this.YtmCurve10Y == input.YtmCurve10Y ||
                    (this.YtmCurve10Y != null &&
                    this.YtmCurve10Y.Equals(input.YtmCurve10Y))
                ) && 
                (
                    this.YtmCurve15Y == input.YtmCurve15Y ||
                    (this.YtmCurve15Y != null &&
                    this.YtmCurve15Y.Equals(input.YtmCurve15Y))
                ) && 
                (
                    this.YtmCurve20Y == input.YtmCurve20Y ||
                    (this.YtmCurve20Y != null &&
                    this.YtmCurve20Y.Equals(input.YtmCurve20Y))
                ) && 
                (
                    this.YtmCurve25Y == input.YtmCurve25Y ||
                    (this.YtmCurve25Y != null &&
                    this.YtmCurve25Y.Equals(input.YtmCurve25Y))
                ) && 
                (
                    this.YtmCurve30Y == input.YtmCurve30Y ||
                    (this.YtmCurve30Y != null &&
                    this.YtmCurve30Y.Equals(input.YtmCurve30Y))
                ) && 
                (
                    this.YtmCurve40Y == input.YtmCurve40Y ||
                    (this.YtmCurve40Y != null &&
                    this.YtmCurve40Y.Equals(input.YtmCurve40Y))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RequestId != null)
                {
                    hashCode = (hashCode * 59) + this.RequestId.GetHashCode();
                }
                if (this.FsymId != null)
                {
                    hashCode = (hashCode * 59) + this.FsymId.GetHashCode();
                }
                if (this.Date != null)
                {
                    hashCode = (hashCode * 59) + this.Date.GetHashCode();
                }
                if (this.YieldCurveDate3M != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate3M.GetHashCode();
                }
                if (this.YieldCurveDate6M != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate6M.GetHashCode();
                }
                if (this.YieldCurveDate1Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate1Y.GetHashCode();
                }
                if (this.YieldCurveDate2Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate2Y.GetHashCode();
                }
                if (this.YieldCurveDate3Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate3Y.GetHashCode();
                }
                if (this.YieldCurveDate4Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate4Y.GetHashCode();
                }
                if (this.YieldCurveDate5Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate5Y.GetHashCode();
                }
                if (this.YieldCurveDate6Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate6Y.GetHashCode();
                }
                if (this.YieldCurveDate7Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate7Y.GetHashCode();
                }
                if (this.YieldCurveDate8Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate8Y.GetHashCode();
                }
                if (this.YieldCurveDate9Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate9Y.GetHashCode();
                }
                if (this.YieldCurveDate10Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate10Y.GetHashCode();
                }
                if (this.YieldCurveDate15Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate15Y.GetHashCode();
                }
                if (this.YieldCurveDate20Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate20Y.GetHashCode();
                }
                if (this.YieldCurveDate25Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate25Y.GetHashCode();
                }
                if (this.YieldCurveDate30Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate30Y.GetHashCode();
                }
                if (this.YieldCurveDate40Y != null)
                {
                    hashCode = (hashCode * 59) + this.YieldCurveDate40Y.GetHashCode();
                }
                if (this.YtmCurve3M != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve3M.GetHashCode();
                }
                if (this.YtmCurve6M != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve6M.GetHashCode();
                }
                if (this.YtmCurve1Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve1Y.GetHashCode();
                }
                if (this.YtmCurve2Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve2Y.GetHashCode();
                }
                if (this.YtmCurve3Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve3Y.GetHashCode();
                }
                if (this.YtmCurve4Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve4Y.GetHashCode();
                }
                if (this.YtmCurve5Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve5Y.GetHashCode();
                }
                if (this.YtmCurve6Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve6Y.GetHashCode();
                }
                if (this.YtmCurve7Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve7Y.GetHashCode();
                }
                if (this.YtmCurve8Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve8Y.GetHashCode();
                }
                if (this.YtmCurve9Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve9Y.GetHashCode();
                }
                if (this.YtmCurve10Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve10Y.GetHashCode();
                }
                if (this.YtmCurve15Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve15Y.GetHashCode();
                }
                if (this.YtmCurve20Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve20Y.GetHashCode();
                }
                if (this.YtmCurve25Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve25Y.GetHashCode();
                }
                if (this.YtmCurve30Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve30Y.GetHashCode();
                }
                if (this.YtmCurve40Y != null)
                {
                    hashCode = (hashCode * 59) + this.YtmCurve40Y.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
