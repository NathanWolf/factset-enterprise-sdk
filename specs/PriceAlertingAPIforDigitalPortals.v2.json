{
  "host": "api.factset.com",
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/alerting/prices/basic/alert/get": {
      "get": {
        "tags": [
          "alerting"
        ],
        "operationId": "get/alerting/prices/basic/alert/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": true,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details of an alert. The details include the trigger definition at the time of alert creation.",
        "summary": "Details of an alert.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Identifier of the alert.",
            "required": true,
            "type": "string",
            "format": "id64",
            "x-positive": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of the alert.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "creation",
                    "price",
                    "trigger"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the alert."
                    },
                    "creation": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date and time when the alert was created."
                    },
                    "price": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "time"
                      ],
                      "description": "Price data at the time of alert creation.",
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "real",
                          "description": "Depending on `trigger.price.type`, the trade, bid, or ask price."
                        },
                        "time": {
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time of the price."
                        }
                      }
                    },
                    "trigger": {
                      "description": "Trigger data at the time of alert creation.",
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "creation",
                        "notation",
                        "price",
                        "range",
                        "comment",
                        "status"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the trigger."
                        },
                        "creation": {
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time when the trigger was created."
                        },
                        "notation": {
                          "type": "object",
                          "x-property-sort": [
                            "id"
                          ],
                          "description": "Notation data of the trigger.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "id64",
                              "x-positive": true,
                              "description": "Identifier of the notation."
                            }
                          }
                        },
                        "price": {
                          "description": "Price data of the trigger.",
                          "type": "object",
                          "x-property-sort": [
                            "type",
                            "quality"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of the price as configured for the customer.",
                              "x-enum-description": [
                                "Trade price (ordinary, auction, pre or post-trading).",
                                "Bid price.",
                                "Ask price."
                              ],
                              "enum": [
                                "trade",
                                "bid",
                                "ask"
                              ]
                            },
                            "quality": {
                              "type": "string",
                              "description": "Price quality of the trigger.",
                              "x-enum-description": [
                                "Real-Time: intraday prices with minimal technical processing delays.",
                                "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                                "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours."
                              ],
                              "enum": [
                                "RLT",
                                "DLY",
                                "EOD"
                              ]
                            }
                          }
                        },
                        "range": {
                          "type": "object",
                          "x-property-sort": [
                            "upperLimit",
                            "lowerLimit"
                          ],
                          "description": "Price range for the trigger to monitor.",
                          "properties": {
                            "upperLimit": {
                              "type": "number",
                              "format": "real",
                              "description": "Upper limit."
                            },
                            "lowerLimit": {
                              "type": "number",
                              "format": "real",
                              "description": "Lower limit."
                            }
                          }
                        },
                        "comment": {
                          "type": "string",
                          "description": "Comment of the trigger."
                        },
                        "status": {
                          "type": "object",
                          "x-property-sort": [
                            "code",
                            "details",
                            "encryptedDetails"
                          ],
                          "description": "Status of the trigger.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Code of the status.",
                              "x-enum-description": [
                                "The trigger is active and trigger conditions are evaluated.",
                                "The trigger is inactive and conditions do not generate alerts",
                                "The trigger is in an error state, error details are noted in \"details\""
                              ],
                              "enum": [
                                "active",
                                "inactive",
                                "error"
                              ]
                            },
                            "details": {
                              "type": "string",
                              "description": "A human-readable, unstructured explanation specific to this error."
                            },
                            "encryptedDetails": {
                              "type": "string",
                              "description": "Base64-encoded, internal details about the error, in addition to \"details\". An issue submitted to Service Desk should contain this data to speed up investigation."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/alerting/prices/basic/alert/list": {
      "get": {
        "tags": [
          "alerting"
        ],
        "operationId": "get/alerting/prices/basic/alert/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": true,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": true,
        "x-requiresUser": true,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of alerts in descending order of creation.",
        "summary": "List of alerts.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of alerts.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "creation",
                      "price",
                      "trigger"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the alert."
                      },
                      "creation": {
                        "type": "string",
                        "format": "datetime",
                        "description": "Date and time when the alert was created."
                      },
                      "price": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "time"
                        ],
                        "description": "Price data at the time of alert creation.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "Depending on `trigger.price.type`, the trade, bid, or ask price."
                          },
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time of the price."
                          }
                        }
                      },
                      "trigger": {
                        "description": "Trigger data at the time of alert creation.",
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "creation",
                          "notation",
                          "price",
                          "range",
                          "comment",
                          "status"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the trigger."
                          },
                          "creation": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time when the trigger was created."
                          },
                          "notation": {
                            "type": "object",
                            "x-property-sort": [
                              "id"
                            ],
                            "description": "Notation data of the trigger.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the notation."
                              }
                            }
                          },
                          "price": {
                            "description": "Price data of the trigger.",
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "quality"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the price as configured for the customer.",
                                "x-enum-description": [
                                  "Trade price (ordinary, auction, pre or post-trading).",
                                  "Bid price.",
                                  "Ask price."
                                ],
                                "enum": [
                                  "trade",
                                  "bid",
                                  "ask"
                                ]
                              },
                              "quality": {
                                "type": "string",
                                "description": "Quality of the price.",
                                "x-enum-description": [
                                  "Real-time: intraday prices with minimal technical processing delays.",
                                  "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                                  "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                                ],
                                "enum": [
                                  "RLT",
                                  "DLY",
                                  "EOD"
                                ]
                              }
                            }
                          },
                          "range": {
                            "type": "object",
                            "x-property-sort": [
                              "upperLimit",
                              "lowerLimit"
                            ],
                            "description": "Price range for the trigger to monitor.",
                            "properties": {
                              "upperLimit": {
                                "type": "number",
                                "format": "real",
                                "description": "Upper limit."
                              },
                              "lowerLimit": {
                                "type": "number",
                                "format": "real",
                                "description": "Lower limit."
                              }
                            }
                          },
                          "comment": {
                            "type": "string",
                            "description": "Comment of the trigger."
                          },
                          "status": {
                            "type": "object",
                            "x-property-sort": [
                              "code",
                              "details"
                            ],
                            "description": "Status of the trigger.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Code of the status.",
                                "x-enum-description": [
                                  "The trigger is active and trigger conditions are evaluated.",
                                  "The trigger is inactive and conditions do not generate alerts",
                                  "The trigger is in an error state, error details are noted in \"details\""
                                ],
                                "enum": [
                                  "active",
                                  "inactive",
                                  "error"
                                ]
                              },
                              "details": {
                                "type": "string",
                                "description": "A human-readable, unstructured explanation specific to this error."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 5000,
            "exclusiveMaximum": false,
            "default": 0,
            "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
            "name": "_subscriptionMinimumInterval",
            "in": "query"
          },
          {
            "type": "string",
            "maxLength": 50,
            "exclusiveMaximum": false,
            "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
            "name": "_paginationCursor",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ]
      }
    },
    "/alerting/prices/basic/trigger/get": {
      "get": {
        "tags": [
          "alerting"
        ],
        "operationId": "get/alerting/prices/basic/trigger/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": true,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details of a trigger.",
        "summary": "Details of a trigger.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the trigger."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of the trigger.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "creation",
                    "notation",
                    "price",
                    "range",
                    "comment",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the trigger."
                    },
                    "creation": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date and time when the trigger was created."
                    },
                    "notation": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Notation data of the trigger.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the notation."
                        }
                      }
                    },
                    "price": {
                      "description": "Price data of the trigger.",
                      "type": "object",
                      "x-property-sort": [
                        "type",
                        "quality"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the price as configured for the customer.",
                          "x-enum-description": [
                            "Trade price (ordinary, auction, pre or post-trading).",
                            "Bid price.",
                            "Ask price."
                          ],
                          "enum": [
                            "trade",
                            "bid",
                            "ask"
                          ]
                        },
                        "quality": {
                          "type": "string",
                          "description": "Quality of the price.",
                          "x-enum-description": [
                            "Real-time: intraday prices with minimal technical processing delays.",
                            "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                            "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                          ],
                          "enum": [
                            "RLT",
                            "DLY",
                            "EOD"
                          ]
                        }
                      }
                    },
                    "range": {
                      "type": "object",
                      "x-property-sort": [
                        "upperLimit",
                        "lowerLimit"
                      ],
                      "description": "Price range for the trigger to monitor.",
                      "properties": {
                        "upperLimit": {
                          "type": "number",
                          "format": "real",
                          "description": "Upper limit."
                        },
                        "lowerLimit": {
                          "type": "number",
                          "format": "real",
                          "description": "Lower limit."
                        }
                      }
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment of the trigger."
                    },
                    "status": {
                      "type": "object",
                      "x-property-sort": [
                        "code",
                        "details",
                        "encryptedDetails"
                      ],
                      "description": "Status of the trigger.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Code of the status.",
                          "x-enum-description": [
                            "The trigger is active and trigger conditions are evaluated.",
                            "The trigger is inactive and conditions do not generate alerts",
                            "The trigger is in an error state, error details are noted in \"details\""
                          ],
                          "enum": [
                            "active",
                            "inactive",
                            "error"
                          ]
                        },
                        "details": {
                          "type": "string",
                          "description": "A human-readable, unstructured explanation specific to this error."
                        },
                        "encryptedDetails": {
                          "type": "string",
                          "description": "Base64-encoded, internal details about the error, in addition to \"details\". An issue submitted to Service Desk should contain this data to speed up investigation."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/alerting/prices/basic/trigger/list": {
      "post": {
        "tags": [
          "alerting"
        ],
        "operationId": "post/alerting/prices/basic/trigger/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": true,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": true,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Returns a list of triggers sorted in descending order of creation.",
        "summary": "List of triggers.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "status"
                      ],
                      "description": "Criteria that filter the items in the response list.",
                      "properties": {
                        "status": {
                          "type": "object",
                          "x-property-sort": [
                            "code"
                          ],
                          "description": "Status of the trigger.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Code of the status.",
                              "x-enum-description": [
                                "The trigger is active and trigger conditions are evaluated.",
                                "The trigger is inactive and conditions do not generate alerts.",
                                "The trigger is in an error state, error details are noted in `details`"
                              ],
                              "enum": [
                                "active",
                                "inactive",
                                "error"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of triggers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "creation",
                      "notation",
                      "price",
                      "range",
                      "comment",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the trigger."
                      },
                      "creation": {
                        "type": "string",
                        "format": "datetime",
                        "description": "Date and time when the trigger was created."
                      },
                      "notation": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Notation data of the trigger.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the notation."
                          }
                        }
                      },
                      "price": {
                        "description": "Price data of the trigger.",
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "quality"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the price as configured for the customer.",
                            "x-enum-description": [
                              "Trade price (ordinary, auction, pre or post-trading).",
                              "Bid price.",
                              "Ask price."
                            ],
                            "enum": [
                              "trade",
                              "bid",
                              "ask"
                            ]
                          },
                          "quality": {
                            "type": "string",
                            "description": "Quality of the price.",
                            "x-enum-description": [
                              "Real-time: intraday prices with minimal technical processing delays.",
                              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                              "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                            ],
                            "enum": [
                              "RLT",
                              "DLY",
                              "EOD"
                            ]
                          }
                        }
                      },
                      "range": {
                        "type": "object",
                        "x-property-sort": [
                          "upperLimit",
                          "lowerLimit"
                        ],
                        "description": "Price range for the trigger to monitor.",
                        "properties": {
                          "upperLimit": {
                            "description": "Upper limit."
                          },
                          "lowerLimit": {
                            "description": "Lower limit."
                          }
                        }
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment of the trigger."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "details"
                        ],
                        "description": "Status of the trigger.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the status.",
                            "x-enum-description": [
                              "The trigger is active and trigger conditions are evaluated.",
                              "The trigger is inactive and conditions do not generate alerts",
                              "The trigger is in an error state, error details are noted in \"details\""
                            ],
                            "enum": [
                              "active",
                              "inactive",
                              "error"
                            ]
                          },
                          "details": {
                            "type": "string",
                            "description": "A human-readable, unstructured explanation specific to this error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Prime Developer Trial",
    "version": "v1"
  },
  "x-interface-version": 1,
  "x-documenter-version": "5.38.0",
  "x-api-version": "2.9.0",
  "tags": [
    {
      "name": "alerting",
      "description": "alerting endpoints"
    }
  ],
  "responses": {
    "ErrorResponse": {
      "description": "Generic error response for all errors (400 ... 599 error codes)",
      "schema": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/definitions/ErrorMetaObject"
          },
          "errors": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMetaObject": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusObject"
        }
      }
    },
    "ErrorObject": {
      "type": "array",
      "description": "The errors member contains additional information about a failed request.",
      "items": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "A human-readable, unstructured explanation specific to this occurrence of the failure."
          },
          "encryptedDetails": {
            "type": "string",
            "description": "Base64-encoded, internal details about the error, in addition to \"details\"."
          },
          "type": {
            "type": "number",
            "format": "int32",
            "description": "Internal error type of the Foundation API protocol."
          },
          "attribute": {
            "type": "array",
            "description": "For a validation error, a reference to the request parameter that failed validation; otherwise, an empty array.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Element of the path denoting the request parameter."
                },
                "index": {
                  "type": "number",
                  "format": "int32",
                  "description": "If the attribute \"name\" designates an array, index of the array element; otherwise the special value -1."
                }
              },
              "x-property-sort": [
                "name",
                "index"
              ]
            }
          }
        },
        "x-property-sort": [
          "detail",
          "encryptedDetails",
          "type",
          "attribute"
        ]
      }
    },
    "AttributesMember": {
      "type": "array",
      "description": "Limit the attributes returned in the response to the specified set.",
      "items": {
        "type": "string",
        "maxLength": 100,
        "exclusiveMaximum": false
      },
      "maxItems": 50,
      "uniqueItems": true
    },
    "LanguageMember": {
      "type": "string",
      "format": "isoLanguage",
      "description": "ISO 639-1 code of the language.",
      "maxLength": 2,
      "minLength": 2,
      "exclusiveMinimum": false,
      "exclusiveMaximum": false
    },
    "StatusObject": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "format": "int32",
          "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1)."
        }
      },
      "description": "The status member contains the status code of the response.",
      "required": [
        "code"
      ]
    },
    "CursorBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of \"total\" is estimated."
        },
        "next": {
          "type": "string",
          "description": "Cursor position to use in the attribute `pagination.cursor` to retrieve the next page of results, if any, otherwise null."
        },
        "previous": {
          "type": "string",
          "description": "Cursor position to use in the attribute `pagination.cursor` to retrieve the previous page of results, if any, otherwise null."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ]
    },
    "CursorBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
      "properties": {
        "next": {
          "type": "string",
          "description": "Cursor position to use in the attribute `pagination.cursor` to retrieve the next page of results, if any, otherwise null."
        },
        "previous": {
          "type": "string",
          "description": "Cursor position to use in the attribute `pagination.cursor` to retrieve the previous page of results, if any, otherwise null."
        }
      },
      "required": [
        "next",
        "previous"
      ],
      "x-property-sort": [
        "next",
        "previous"
      ]
    },
    "OffsetBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of \"total\" is estimated."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal"
      ]
    },
    "OffsetBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy; a total element count is not supported.",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "Flag indicating that a subsequent request with the same parameters, except that the parameter `pagination.offset` is incremented by `pagination.limit`, would yield additional results."
        }
      },
      "required": [
        "hasNext"
      ],
      "x-property-sort": [
        "hasNext"
      ]
    },
    "PartialOutputObject": {
      "type": "object",
      "properties": {
        "isPartial": {
          "type": "boolean",
          "description": "Flag indicating that the response is a possibly incomplete array or an object containing a possibly incomplete array, due to hitting a processing time limit. If `true`, some matching results might be missing from the array, or elements for matching results might be incorrectly included (for example, when priority sorting would have removed the element). Depending on the use case, such a response may be unsuitable."
        }
      },
      "description": "Object denoting that the endpoint response is possibly incomplete.",
      "required": [
        "isPartial"
      ],
      "x-property-sort": [
        "isPartial"
      ]
    }
  },
  "basePath": "/wealth/v1",
  "securityDefinitions": {
    "FactSetApiKey": {
      "type": "basic"
    },
    "FactSetOAuth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.factset.com/as/token.oauth2",
      "scopes": {}
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ]
}