{
  "host": "api.factset.com",
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/securitizedDerivative/get": {
      "get": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "get/securitizedDerivative/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Fundamental data for a single securitized derivative.",
        "description": "Fundamental data for a single securitized derivative. Dates are interpreted in the timezone of the issuer.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "isin",
                    "nsin",
                    "isPrivatePlacement",
                    "name",
                    "shortName",
                    "type",
                    "isIncomplete",
                    "lifeCycle",
                    "countrySecurityRegistration",
                    "referenceDebtor",
                    "isCollateralized",
                    "isQuanto",
                    "capitalProtection",
                    "hasCatchUp",
                    "hasAutomaticExercise",
                    "orderVolume",
                    "redemptionAmount",
                    "nominal",
                    "issuer",
                    "issue",
                    "exercise",
                    "settlement"
                  ],
                  "description": "Instrument data of the securitized derivative.",
                  "properties": {
                    "isin": {
                      "type": "string",
                      "format": "isin",
                      "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument."
                    },
                    "nsin": {
                      "type": "object",
                      "x-property-sort": [
                        "wkn",
                        "valor"
                      ],
                      "description": "NSIN data of the instrument.",
                      "properties": {
                        "wkn": {
                          "type": "string",
                          "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                        },
                        "valor": {
                          "type": "string",
                          "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                        }
                      }
                    },
                    "isPrivatePlacement": {
                      "type": "boolean",
                      "description": "If true, the instrument is part of a private placement and therefore not publicly traded."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the instrument."
                    },
                    "shortName": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Short name of the instrument."
                    },
                    "type": {
                      "description": "Instrument type as defined by FactSet Digital Solutions. Instrument types are arranged in a hierarchy, with the first level representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18). Please refer to endpoint `/category/get` for possible values.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the instrument type."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the instrument type."
                          }
                        }
                      }
                    },
                    "isIncomplete": {
                      "type": "boolean",
                      "description": "If true, the data supplier has marked the data for this instrument as incomplete."
                    },
                    "lifeCycle": {
                      "type": "object",
                      "x-property-sort": [
                        "subscriptionPeriod",
                        "valutaIssue",
                        "initialFixing",
                        "issue",
                        "intradayActivation",
                        "tradingPeriod",
                        "startExercisePeriod",
                        "valuation",
                        "maturity",
                        "repayment",
                        "cancellation"
                      ],
                      "description": "Important dates of the instrument.",
                      "properties": {
                        "subscriptionPeriod": {
                          "type": "object",
                          "format": "dateRange",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the start of the subscription period."
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the end of the subscription period."
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ],
                          "description": "Subscription period."
                        },
                        "valutaIssue": {
                          "type": "string",
                          "format": "date",
                          "description": "Date by which the issuer requires receiving the purchase price for a newly issued product purchased during the subscription period."
                        },
                        "initialFixing": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the initial fixing."
                        },
                        "issue": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the issue."
                        },
                        "intradayActivation": {
                          "type": "object",
                          "x-property-sort": [
                            "time",
                            "isActivated"
                          ],
                          "description": "Intraday activation data",
                          "properties": {
                            "time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "Date and time of the intraday activation."
                            },
                            "isActivated": {
                              "type": "boolean",
                              "description": "If true, this instrument is activated intraday."
                            }
                          }
                        },
                        "tradingPeriod": {
                          "type": "object",
                          "format": "dateRange",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the instrument's first trading day defined by the issuer."
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the instrument's last trading day defined by the issuer."
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ],
                          "description": "Trading period defined by the issuer."
                        },
                        "startExercisePeriod": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the start of the exercise period, which ends with the valuation."
                        },
                        "valuation": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the valuation."
                        },
                        "maturity": {
                          "type": "object",
                          "x-property-sort": [
                            "date",
                            "isPerpetual",
                            "isCallable"
                          ],
                          "description": "Maturity data.",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the instrument's maturity. The value is empty if the instrument is perpetual."
                            },
                            "isPerpetual": {
                              "type": "boolean",
                              "description": "If true, the instrument is perpetual, i.e. it does not mature, therefore the attribute `date` is null."
                            },
                            "isCallable": {
                              "type": "boolean",
                              "description": "If true, the issuer may redeem the instrument prior to maturity."
                            }
                          }
                        },
                        "repayment": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the repayment."
                        },
                        "cancellation": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the cancellation day defined by the issuer."
                        }
                      }
                    },
                    "countrySecurityRegistration": {
                      "description": "List of countries where the instrument is registered. See endpoint `/basic/region/country/list` for possible values.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the country."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the country."
                          }
                        }
                      }
                    },
                    "referenceDebtor": {
                      "type": "object",
                      "x-property-sort": [
                        "instrument",
                        "legalEntity"
                      ],
                      "description": "Legal entity to be monitored for credit risk and its respective debt instrument, if available.",
                      "properties": {
                        "instrument": {
                          "type": "object",
                          "x-property-sort": [
                            "id"
                          ],
                          "description": "Instrument of the reference debt issue. The reference debt issue is used to determine if a credit event for the reference debtor has occurred. If the securitized derivative is not related to a particular reference debt issue, but to the reference debtor as a whole, the attribute `instrument` is null.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "id64",
                              "x-positive": true,
                              "description": "Identifier of the reference debt issue instrument."
                            }
                          }
                        },
                        "legalEntity": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "lei"
                          ],
                          "description": "Legal entity data of the reference debtor that is monitored for credit events. See endpoint `/legalEntity/list` for possible values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the reference debtor."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the reference debtor."
                            },
                            "lei": {
                              "type": "string",
                              "description": "Legal Entity Identifier of the reference debtor."
                            }
                          }
                        }
                      }
                    },
                    "isCollateralized": {
                      "type": "boolean",
                      "description": "If true, this instrument is protected against an issuer default by collateral (e.g. COSI collateralization by SIX Swiss Exchange)."
                    },
                    "isQuanto": {
                      "type": "boolean",
                      "description": "If true, the risk of exchange rate fluctuations between the value unit of the underlying (all of them, in case of multiple underlyings) and the value unit of the redemption is hedged."
                    },
                    "capitalProtection": {
                      "type": "number",
                      "format": "relativeValue",
                      "description": "Proportion of the nominal amount protected against loss, usually 100%."
                    },
                    "hasCatchUp": {
                      "type": "boolean",
                      "description": "If true, the instrument has a so-called \"memory feature\" (also called \"catch up\"). This means that a conditional payment that has not been paid out could be paid on a subsequent payment date if the condition is then satisfied."
                    },
                    "hasAutomaticExercise": {
                      "type": "boolean",
                      "description": "If true, the instrument will be automatically exercised at termination (such as maturity, premature call, or premature payout). It prevents such products from becoming worthless, meaning the investor does not have to undertake any steps in order to receive the payable amount."
                    },
                    "orderVolume": {
                      "type": "object",
                      "x-property-sort": [
                        "minimum",
                        "increment"
                      ],
                      "description": "Conditions on the order volume for placing an order with the issuer.",
                      "properties": {
                        "minimum": {
                          "type": "number",
                          "format": "int32",
                          "description": "Minimum order volume required for placing an order at the trading venue of the notation for the given market phase."
                        },
                        "increment": {
                          "type": "number",
                          "format": "real",
                          "description": "Increment of the order volume over the minimum (see attribute inimumOrderVolumeSecDer) required for placing an order at the respective trading venue. The order volume over the minimum must be an integral multiple of the increment. The value unit for this attribute is the same as for the attribute tradingVolumeLatestTradePrice."
                        }
                      }
                    },
                    "redemptionAmount": {
                      "type": "number",
                      "format": "real",
                      "description": "Actual redemption amount after expiry (e.g. knock out, maturity etc) for securitized derivatives with a so-called knock-out feature. The currency of the redemption amount is given by `issue.valueUnit` and is always a main currency for securitized derivatives with that feature. "
                    },
                    "nominal": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "currency"
                      ],
                      "description": "Nominal data of the instrument.",
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "real",
                          "description": "Nominal value."
                        },
                        "currency": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "code"
                          ],
                          "description": "Main currency data of nominal. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Idenitifier of the main currency."
                            },
                            "code": {
                              "type": "string",
                              "description": "Code of the main currency."
                            }
                          }
                        }
                      }
                    },
                    "issuer": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "lei",
                        "group"
                      ],
                      "description": "Issuer and issuer group of the securitized derivative. See endpoint `/securitizedDerivative/issuer/search` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the issuer."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the issuer."
                        },
                        "lei": {
                          "type": "string",
                          "description": "Legal Entity Identifier of the issuer."
                        },
                        "group": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "description": "Issuer group. The issuer group is defined by FactSet and does not represent an actual juristic person.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the issuer group."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the issuer group."
                            }
                          }
                        }
                      }
                    },
                    "issue": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "admittedVolume",
                        "valueUnit",
                        "surcharge"
                      ],
                      "description": "Issue data of the instrument.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "The price at which the instrument was issued."
                        },
                        "admittedVolume": {
                          "type": "number",
                          "format": "int32",
                          "description": "Number of pieces of the instrument admitted to trading by the regulating authority."
                        },
                        "valueUnit": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "code"
                          ],
                          "description": "Value unit of the issuing price such as a main or a fractional currency for a per-unit-quoted securitized derivative, or percentages for a securitized derivative quoted in percent of the nominal (see attribute `nominal`). See endpoint `/basic/valueUnit/list` for possible values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Idenitifier of the value unit."
                            },
                            "code": {
                              "type": "string",
                              "description": "Code of the value unit."
                            }
                          }
                        },
                        "surcharge": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Issue surcharge. An additional charge paid to the issuer when purchasing the product during the subscription period (see attribute `lifeCycle.subscriptionPeriod`)."
                        }
                      }
                    },
                    "exercise": {
                      "type": "object",
                      "x-property-sort": [
                        "right",
                        "style"
                      ],
                      "description": "Exercise data of the instrument.",
                      "properties": {
                        "right": {
                          "type": "string",
                          "description": "Code of the exercise right.",
                          "x-enum-description": [
                            "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period.",
                            "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period."
                          ],
                          "enum": [
                            "put",
                            "call"
                          ]
                        },
                        "style": {
                          "type": "string",
                          "description": "Code of the exercise style.",
                          "x-enum-description": [
                            "An American style option can be exercised anytime during its life.",
                            "A European style option can be exercised at the end of its life.",
                            "A Bermudan style option can only be exercised on predetermined dates."
                          ],
                          "enum": [
                            "american",
                            "european",
                            "bermudan"
                          ]
                        }
                      }
                    },
                    "settlement": {
                      "type": "string",
                      "description": "Settlement is the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out.",
                      "x-enum-description": [
                        "Transfer of a cash amount.",
                        "Physical delivery of the underlying asset.",
                        "Cash or physical, at the discretion of the issuer."
                      ],
                      "enum": [
                        "cash",
                        "physical",
                        "either"
                      ]
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/barrier/type/list": {
      "get": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "get/securitizedDerivative/barrier/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of barrier types.",
        "description": "List of barrier types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description",
                      "kind"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the barrier type."
                      },
                      "name": {
                        "type": "string",
                        "description": "English name of the barrier type."
                      },
                      "description": {
                        "type": "string",
                        "description": "English description of the barrier type."
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the barrier type.",
                        "x-enum-description": [
                          "Barrier types of this kind represent either a lower or an upper bound derived from the exercise right of the securitized derivative, see attribute `exercise.right` in endpoint `/securitizedDerivative/get`.",
                          "Barrier types of this kind represent a range with a lower and an upper bound."
                        ],
                        "enum": [
                          "single",
                          "range"
                        ]
                      }
                    }
                  },
                  "description": "List of barrier types."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/securitizedDerivative/issuer/search": {
      "post": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "post/securitizedDerivative/issuer/search",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Search for issuers of securitized derivatives.",
        "description": "Search for issuers of securitized derivatives, including issuer groups, which do not represent actual juristic persons, but are defined by FactSet to facilitate searching. FactSet does not consolidate the data provided by different suppliers, therefore the result may contain more than one identifier for a given issuer. The response is limited to 100 results.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "role",
                    "name",
                    "category",
                    "underlying",
                    "factorCertificates",
                    "registrationCountry",
                    "market"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "role": {
                      "type": "string",
                      "description": "Specify whether legal entities in the role of an issuer or in the role of an issuer group are returned.",
                      "default": "issuerGroup",
                      "x-enum-description": [
                        "Legal entities defined by FactSet and thus not representing an actual juristic person.",
                        "Legal entities in the role of an issuer representing an actual juristic person."
                      ],
                      "enum": [
                        "issuerGroup",
                        "issuer"
                      ]
                    },
                    "name": {
                      "type": "object",
                      "x-property-sort": [
                        "searchValue"
                      ],
                      "description": "Issuer name.",
                      "properties": {
                        "searchValue": {
                          "type": "string",
                          "pattern": "^[ -!#-&(-+--/0-:=?-Za-zw\"]*$",
                          "minLength": 3,
                          "exclusiveMinimum": false,
                          "maxLength": 100,
                          "exclusiveMaximum": false,
                          "description": "Text string to be searched for."
                        }
                      }
                    },
                    "category": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "List of categories of securitized derivatives. Only issuers that have issued securitized derivatives belonging to at least one category in the provided list are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "maxItems": 20,
                          "uniqueItems": true,
                          "description": "List of category identifiers. See endpoint `/category/listBySystem` for category systems 18 and 23 for valid values."
                        }
                      }
                    },
                    "underlying": {
                      "type": "object",
                      "x-property-sort": [
                        "instrument"
                      ],
                      "description": "List of underlyings of securitized derivatives. Only issuers that have issued at least one securitized derivative on an underlying in the provided list are returned.",
                      "properties": {
                        "instrument": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Underlying instrument.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "uniqueItems": true,
                              "description": "List of instrument identifiers."
                            }
                          }
                        }
                      }
                    },
                    "factorCertificates": {
                      "type": "object",
                      "x-property-sort": [
                        "effectiveUnderlying"
                      ],
                      "description": "Parameters for factor certificates.",
                      "properties": {
                        "effectiveUnderlying": {
                          "type": "object",
                          "x-property-sort": [
                            "instrument"
                          ],
                          "description": "Selection of the effective underlying. The underlying of a factor certificate is usually a factor index which is an artificial index used to calculate the leveraged daily performance of another financial instrument called its effective underlying. Only issuers that have issued at least one factor certificate on an effective underlying in the provided list are returned.",
                          "properties": {
                            "instrument": {
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "description": "Selection of the effective underlying using instrument identifiers.",
                              "properties": {
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true
                                  },
                                  "maxItems": 100,
                                  "uniqueItems": true,
                                  "description": "List of instrument identifiers."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "registrationCountry": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "List of countries of registration for trading of securitized derivatives. Only issuers that have registered at least one securitized derivative in a country in the provided list are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "maxItems": 20,
                          "uniqueItems": true,
                          "description": "List of country identifiers. See endpoint `/basic/region/country/list` for valid values."
                        }
                      }
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "List of markets where securitized derivatives are traded. Only issuers that have issued at least one securitized derivative traded on a market in the provided list are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "maxItems": 20,
                          "uniqueItems": true,
                          "description": "List of market identifiers. See endpoint `/basic/market/list` for valid values."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "count"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the issuer."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the issuer."
                      },
                      "count": {
                        "type": "number",
                        "format": "int32",
                        "description": "Number of securitized derivatives issued."
                      }
                    }
                  },
                  "description": "List of issuers, including issuer groups, sorted descending by the number of securitized derivatives issued."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/keyFigures/notation/get": {
      "get": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "get/securitizedDerivative/keyFigures/notation/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Notation-based key figures of a securitized derivative.",
        "description": "Notation-based key figures of a securitized derivative. Not all key figures are applicable and/or calculated for all types of securitized derivatives. Following, some frequently used references: \n\nCover ratio - see attribute `underlyings.coverRatio` in endpoint `/securitizedDerivative/underlying/list`.\n\nVarious barrier types (e.g. strike, knock in) - see endpoint `/securitizedDerivative/barrier/type/list`.\n\nExercise right - see attribute `exercise.right` in endpoint `/securitizedDerivative/get`.\n\nIssue price - see attribute `issue.price` in endpoint `/securitizedDerivative/get`.\n\nAsk price - see attribute `prices.ask`.\n\nBid price - see attribute `prices.bid`.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "prices",
                    "underlyings",
                    "currency",
                    "performanceIssue",
                    "bonusYield",
                    "sidewaysYield",
                    "maximumYield",
                    "agio",
                    "discount",
                    "breakEven",
                    "spread",
                    "delta",
                    "thetaOneWeek",
                    "vega",
                    "leverage",
                    "omega",
                    "impliedVolatility",
                    "intrinsicValue",
                    "timeValue",
                    "outperformancePoint",
                    "parity"
                  ],
                  "description": "Notation-based key figures of the securitized derivative.",
                  "properties": {
                    "prices": {
                      "type": "object",
                      "x-property-sort": [
                        "ask",
                        "bid",
                        "valueUnit"
                      ],
                      "description": "Prices of the securitized derivative, used for the calculation. See attribute `prices.valueUnit` for the unit.",
                      "properties": {
                        "ask": {
                          "type": "object",
                          "x-property-sort": [
                            "time",
                            "price"
                          ],
                          "description": "Ask price.",
                          "properties": {
                            "time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "Date and time."
                            },
                            "price": {
                              "type": "number",
                              "format": "real",
                              "description": "Price value."
                            }
                          }
                        },
                        "bid": {
                          "type": "object",
                          "x-property-sort": [
                            "time",
                            "price"
                          ],
                          "description": "Bid price.",
                          "properties": {
                            "time": {
                              "type": "string",
                              "format": "datetime",
                              "description": "Date and time."
                            },
                            "price": {
                              "type": "number",
                              "format": "real",
                              "description": "Price value."
                            }
                          }
                        },
                        "valueUnit": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "code"
                          ],
                          "description": "Value unit of the notation of the securitized derivative, such as a main or a fractional currency for a per-unit-quoted securitized derivative, or percentages for a securitized derivative quoted in percent of the nominal (see attribute `nominal` in endpoint `/securitizedDerivative/get`). See endpoint `/basic/valueUnit/list` for possible values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the value unit."
                            },
                            "code": {
                              "type": "string",
                              "description": "Code of the value unit."
                            }
                          }
                        }
                      }
                    },
                    "underlyings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "name",
                          "notation",
                          "level",
                          "valueUnit"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the underlying, provided also if there is no notation for the underlying."
                          },
                          "notation": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "instrument"
                            ],
                            "description": "Notation of the underlying. If there is no notation for the underlying, the object is null.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the notation."
                              },
                              "instrument": {
                                "type": "object",
                                "x-property-sort": [
                                  "id"
                                ],
                                "description": "Instrument of the underlying.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the instrument."
                                  }
                                }
                              }
                            }
                          },
                          "level": {
                            "type": "object",
                            "x-property-sort": [
                              "time",
                              "value"
                            ],
                            "description": "Level (e.g. price or index value) of the underlying used for calculation.",
                            "properties": {
                              "time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "Date and time."
                              },
                              "value": {
                                "type": "number",
                                "format": "real",
                                "description": "Level value. See attribute `underlyings.valueUnit` for the unit."
                              }
                            }
                          },
                          "valueUnit": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "code"
                            ],
                            "description": "Value unit of the underlying, provided also if there is no notation for the underlying. See endpoint `/basic/valueUnit/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the value unit."
                              },
                              "code": {
                                "type": "string",
                                "description": "Code of the value unit."
                              }
                            }
                          }
                        }
                      },
                      "description": "Details of the underlyings."
                    },
                    "currency": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code"
                      ],
                      "description": "Main or fractional currency of the attributes expressed in absolute terms, unless specified otherwise. See endpoint `/basic/valueUnit/currency/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the currency."
                        },
                        "code": {
                          "type": "string",
                          "description": "Code of the currency."
                        }
                      }
                    },
                    "performanceIssue": {
                      "type": "object",
                      "x-property-sort": [
                        "ask",
                        "bid"
                      ],
                      "description": "Ask and bid-based performance since issue, see attribute `issue` in endpoint `/securitizedDerivative/get` for the issue date. It represents the difference between the ask (bid respectively) price of the derivative's notation and the issue price. For securitized derivatives quoted in percent, the result is multiplied with the nominal (see attribute `nominal.value` in endpoint `/securitizedDerivative/get`) in order to calculate the value in absolute terms.",
                      "properties": {
                        "ask": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Ask-based performance.",
                          "properties": {
                            "absolute": {
                              "type": "number",
                              "format": "real",
                              "description": "Performance in absolute terms."
                            },
                            "relative": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Performance relative to the issue price."
                            },
                            "annualized": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Annualized performance relative to the issue price."
                            }
                          }
                        },
                        "bid": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Bid-based performance.",
                          "properties": {
                            "absolute": {
                              "type": "number",
                              "format": "real",
                              "description": "Performance in absolute terms."
                            },
                            "relative": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Performance relative to the issue price."
                            },
                            "annualized": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Annualized performance relative to the issue price."
                            }
                          }
                        }
                      }
                    },
                    "bonusYield": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "annualized"
                      ],
                      "description": "Bonus yield based on the ask price. It represents the bonus level adjusted for the cover ratio and currency cross rate minus the ask price of the securitized derivative. The value can become negative (e.g. for uncapped products), which does not mean that the investor will necessarily suffer a loss buying it. This key figure is calculated for bonus certificates with intact knock-in barrier only. For the barrier breach of barriers with a single limit, see attribute `barrierTypeConditions.barriers.single.breach.isBreached` in endpoint `/securitizedDerivative/underlying/list`, for the breach of the up and down limit of range barriers see attribute `barrierTypeConditions.barriers.range.up/down.breach.isBreached` respectively.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Bonus yield in absolute terms."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Bonus yield relative to the ask price."
                        },
                        "annualized": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Annualized bonus yield relative to the ask price."
                        }
                      }
                    },
                    "sidewaysYield": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "annualized"
                      ],
                      "description": "Sideways yield based on the ask price. It represents a hypothetical payout at maturity minus the ask price of the securitized derivative, under the assumption that all payout-influencing factors remain unchanged until maturity.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Sideways yield in absolute terms."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Sideways yield relative to the ask price."
                        },
                        "annualized": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Annualized sideways yield relative to the ask price."
                        }
                      }
                    },
                    "maximumYield": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "annualized"
                      ],
                      "description": "Maximum yield based on the ask price.  It represents a hypothetical maximum payout at maturity minus the ask price of the derivative. This key figure represents a theoretically possible best-case scenario, disregarding the probability of occurrence. It is calculated only for securitized derivatives with a limited payout (e.g. capped products).",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum yield in absolute terms."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Maximum yield relative to the ask price."
                        },
                        "annualized": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Annualized maximum yield relative to the ask price."
                        }
                      }
                    },
                    "agio": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "annualized"
                      ],
                      "description": "Agio based on the ask price.  For plain vanilla warrants, it represents the difference between the ask price of the derivative and its parity (see attribute `parity`). Thus, for those with exercise right call, the agio indicates how much more expensive would it be to obtain the underlying through purchasing and exercising the warrant compared to directly purchasing the underlying. For those with exercise right put, the above consideration is applied inversely. For other types of securitized derivatives, the calculation and interpretation of the agio depends on their category. Negative values are possible. This key figure is not calculated for securitized derivatives with multiple underlyings.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Agio in absolute terms."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Agio relative to the underlying level."
                        },
                        "annualized": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Annualized agio relative to the underlying level."
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative"
                      ],
                      "description": "Discount based on the ask price. It represents the difference between the ask price of the securitized derivative and the underlying level, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for discount certificates. This key figure is not calculated for securitized derivatives with multiple underlyings. For the value unit, see attribute `underlyings.valueUnit`.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Discount in absolute terms."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Discount relative to the underlying level."
                        }
                      }
                    },
                    "breakEven": {
                      "type": "object",
                      "x-property-sort": [
                        "breakEvenPoint",
                        "distance"
                      ],
                      "description": "Break even point based on the ask price. It represents the underlying level that has to be reached at maturity, such that no loss or profit occurs for the holder of the securitized derivative. This key figure is not calculated for securitized derivatives with multiple underlyings. For the value unit, see attribute `underlyings.valueUnit`.",
                      "properties": {
                        "breakEvenPoint": {
                          "type": "number",
                          "format": "real",
                          "description": "Break even point."
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Distance from the underlying level to the  break even point.",
                          "properties": {
                            "absolute": {
                              "type": "number",
                              "format": "real",
                              "description": "Distance in absolute terms. For the value unit, see attribute `underlyings.valueUnit`."
                            },
                            "relative": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Distance relative to the underlying level. "
                            }
                          }
                        }
                      }
                    },
                    "spread": {
                      "type": "object",
                      "x-property-sort": [
                        "harmonized",
                        "relative"
                      ],
                      "description": "Spread of the securitized derivative. It represents the difference between the ask and bid price.",
                      "properties": {
                        "harmonized": {
                          "type": "number",
                          "format": "real",
                          "description": "Spread in absolute terms, adjusted for the cover ratio."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Spread relative to the ask price."
                        }
                      }
                    },
                    "delta": {
                      "type": "object",
                      "x-property-sort": [
                        "effective",
                        "unadjusted"
                      ],
                      "description": "Ask-based delta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of a derivative for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the derivative relative to changes in the underlying level. This key figure is calculated for plain vanilla warrants only.",
                      "properties": {
                        "effective": {
                          "type": "number",
                          "format": "real",
                          "description": "Delta calculated using the actual cover ration of the securitized derivative."
                        },
                        "unadjusted": {
                          "type": "number",
                          "format": "real",
                          "description": "Delta calculated using a (hypothetical) cover ratio of 1:1."
                        }
                      }
                    },
                    "thetaOneWeek": {
                      "type": "object",
                      "x-property-sort": [
                        "effective",
                        "unadjusted"
                      ],
                      "description": "Ask-based weekly theta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of a derivative for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the derivative relative to changes in the residual term. This key figure is calculated for plain vanilla warrants only.",
                      "properties": {
                        "effective": {
                          "type": "number",
                          "format": "real",
                          "description": "Weekly theta calculated using the actual cover ratio of the securitized derivative."
                        },
                        "unadjusted": {
                          "type": "number",
                          "format": "real",
                          "description": "Weekly theta calculated using a (hypothetical) cover ratio of 1:1."
                        }
                      }
                    },
                    "vega": {
                      "type": "object",
                      "x-property-sort": [
                        "effective",
                        "unadjusted"
                      ],
                      "description": "Ask-based vega. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of a derivative for an absolute change of the implied volatility, thus it represents the price sensitivity of the derivative relative to changes in the implied volatility. This key figure is calculated for plain vanilla warrants only.",
                      "properties": {
                        "effective": {
                          "type": "number",
                          "format": "real",
                          "description": "Vega calculated using the actual cover ratio of the securitized derivative."
                        },
                        "unadjusted": {
                          "type": "number",
                          "format": "real",
                          "description": "Vega calculated using a (hypothetical) cover ratio of 1:1."
                        }
                      }
                    },
                    "leverage": {
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged derivatives (e.g. warrants, knock-out certificates)."
                    },
                    "omega": {
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based omega. It represents unadjusted delta (see attribute `delta.unadjusted`) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative's price regarding the underlying level. This key figure is calculated for plain vanilla warrants only."
                    },
                    "impliedVolatility": {
                      "type": "number",
                      "format": "relativeValue",
                      "description": "Ask-based implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only."
                    },
                    "intrinsicValue": {
                      "type": "number",
                      "format": "real",
                      "description": "Intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only."
                    },
                    "timeValue": {
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value (see attribute `intrinsicValue`). This key figure is calculated for plain vanilla warrants only."
                    },
                    "outperformancePoint": {
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products). This key figure is not calculated for securitized derivatives with multiple underlyings. For the value unit, see attribute `underlyings.valueUnit`."
                    },
                    "parity": {
                      "type": "number",
                      "format": "real",
                      "description": "Parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/notation/ranking/intraday/list": {
      "post": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "post/securitizedDerivative/notation/ranking/intraday/list",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 5,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Ranking of securitized derivatives' notations using intraday figures.",
        "description": "Ranking of securitized derivatives' notations using intraday figures. The result is limited to 100 notations that all must satisfy all selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, the selection of the notation depends on the sort attribute:\n- absolute and relative performance (see the response attributes `trade.performance.absolute` and `trade.performance.relative`) - the notation with the most recent trade price is used\n- number trades, trading value and trading volume (see the response attributes `accumulated.numberTrades`, `accumulated.tradingVolume` and `accumulated.tradingValue`) - the notation with highest (lowest) value is used\n\nBy default, the result is sorted descending by the relative intraday performance corresponding to the most recent trade price, see attribute `trade.performance.relative`. The result may contain sortable values based on different currencies, possibly making the ranking nonsensical, if the parameters `valueUnit` and/or `currency` have not been specified.\n\nThe search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.\n\nAll identifiers used as parameters must be valid and entitled.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "prices",
                    "valueUnit",
                    "currency",
                    "market",
                    "instrumentRestrictionList",
                    "notationRestrictionList",
                    "category",
                    "registrationCountry",
                    "lifeCycle",
                    "issuer",
                    "exercise",
                    "underlying",
                    "factorCertificates",
                    "knockedOut",
                    "knockedIn",
                    "performance"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "prices": {
                      "description": "Price-related parameters.",
                      "type": "object",
                      "x-property-sort": [
                        "quality"
                      ],
                      "properties": {
                        "quality": {
                          "type": "string",
                          "description": "Quality of the trade-related attributes, see attributes `trade` and `accumulated` in the response.",
                          "x-enum-description": [
                            "Real-time: intraday prices with minimal technical processing delays.",
                            "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                          ],
                          "enum": [
                            "RLT",
                            "DLY"
                          ],
                          "default": "DLY"
                        }
                      }
                    },
                    "valueUnit": {
                      "description": "Value unit of the notations in the result. The parameter ensures the consistency and comparability of the absolute and relative performance for all securitized derivatives, and of the trading value for securitized derivatives quoted in percent. See response attributes `trade.performance.absolute` and `trade.performance.relative`, and `accumulated.tradingValue` respectively.",
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the value unit. See endpoint `/basic/valueUnit/list` for valid values."
                        }
                      }
                    },
                    "currency": {
                      "description": "Main currency of the trading value and volume for securitized derivatives quoted in percent. The parameter ensures the consistency and comparability of the trading value and trading volume for such securitized derivatives. For securitized derivatives not quoted in percent, the currency and the value unit, see parameter `valueUnit`, are identical, thus it is not neccessary to specify the currency if the value unit has been specified.",
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the main currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values."
                        }
                      }
                    },
                    "market": {
                      "description": "Market-related parameters. See endpoint `/basic/market/list` for valid values.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of market identifiers. Only securitized derivatives that are traded on a market in the provided list are returned. The list restricts the request to only those markets.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "minItems": 1,
                          "maxItems": 1
                        }
                      },
                      "required": [
                        "ids"
                      ]
                    },
                    "instrumentRestrictionList": {
                      "description": "Instrument-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of identifiers of restriction lists.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 3
                        }
                      }
                    },
                    "notationRestrictionList": {
                      "description": "Notation-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of identifiers of restriction lists.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 3
                        }
                      }
                    },
                    "category": {
                      "description": "Only securitized derivatives that belong to at least one category in the provided list will be returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of category identifiers. See endpoint `/category/listBySystem` for category systems 18 and 23 for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "minItems": 1,
                          "maxItems": 20
                        }
                      },
                      "required": [
                        "ids"
                      ]
                    },
                    "registrationCountry": {
                      "description": "Only securitized derivatives registered for trading in a country in the provided list are returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of country identifiers. See endpoint `/basic/region/country/list` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "lifeCycle": {
                      "description": "Parameters related to important dates.",
                      "type": "object",
                      "x-property-sort": [
                        "maturity"
                      ],
                      "properties": {
                        "maturity": {
                          "description": "Parameters related to the maturity.",
                          "type": "object",
                          "x-property-sort": [
                            "perpetual"
                          ],
                          "properties": {
                            "perpetual": {
                              "type": "string",
                              "description": "Specifies whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result.",
                              "default": "include",
                              "x-enum-description": [
                                "Only perpetual securitized derivatives are included in the result.",
                                "Perpetual securitized derivatives are included in the result.",
                                "Perpetual securitized derivatives are excluded from the result."
                              ],
                              "enum": [
                                "only",
                                "include",
                                "exclude"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "issuer": {
                      "description": "Parameters related to the issuer.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of identifiers of legal entities in the role of an issuer, including issuer groups. FactSet defines issuer groups to facilitate searching; they do not represent actual juristic persons. See endpoint `/securitizedDerivative/issuer/search` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "exercise": {
                      "description": "Parameters related to the exercise.",
                      "type": "object",
                      "x-property-sort": [
                        "right"
                      ],
                      "properties": {
                        "right": {
                          "type": "string",
                          "description": "Exercise right.",
                          "x-enum-description": [
                            "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                            "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                          ],
                          "enum": [
                            "put",
                            "call"
                          ]
                        }
                      }
                    },
                    "underlying": {
                      "description": "Underlying selection. A list of underlyings can be selected by either using their instrument identifiers, see parameter `underlying.instrument.ids` or by using their notation identifiers, see parameter `underlying.notation.ids` but not both at the same time. Only one of the provided identifiers needs to be matched in order for a securitized derivative to be returned in the result. The list of underlyings is particularly useful to search for securitized derivatives that have very similar but not exactly the same underlyings such as futures with different maturities on a given commodity, e.g. brent crude oil.\n\nFor the selection of the effective underling of factor certificates, use `factorCertificates.effectiveUnderlying.instrument.ids`.",
                      "type": "object",
                      "x-property-sort": [
                        "instrument",
                        "notation"
                      ],
                      "properties": {
                        "instrument": {
                          "description": "Underlying selection using instrument identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of instrument identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        },
                        "notation": {
                          "description": "Underlying selection using notation identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of notation identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        }
                      }
                    },
                    "factorCertificates": {
                      "description": "Parameters for factor certificates.",
                      "type": "object",
                      "x-property-sort": [
                        "effectiveUnderlying",
                        "participation"
                      ],
                      "properties": {
                        "effectiveUnderlying": {
                          "description": "Selection of the effective underlying. The underlying of a factor certificate is usually a factor index which is an artificial index used to calculate the leveraged daily performance of another financial instrument called its effective underlying.",
                          "type": "object",
                          "x-property-sort": [
                            "instrument"
                          ],
                          "properties": {
                            "instrument": {
                              "description": "Selection of the effective underlying using instrument identifiers.",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of instrument identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        },
                        "participation": {
                          "type": "string",
                          "description": "Participation direction of the factor certificate at the level movement of its effective underlying.",
                          "x-enum-description": [
                            "The factor certificate participates positively with rising levels of its effective underlying.",
                            "The factor certificate participates negatively with rising levels of its effective underlying."
                          ],
                          "enum": [
                            "long",
                            "short"
                          ]
                        }
                      }
                    },
                    "knockedOut": {
                      "type": "string",
                      "default": "exclude",
                      "description": "Specifies whether knocked-out securitized derivatives are included in the response. Particularly relevant for knock-out certificates.",
                      "x-enum-description": [
                        "Only knocked-out securitized derivatives are included in the result.",
                        "Knocked-out securitized derivatives are included in the result.",
                        "Knocked-out securitized derivatives are excluded from the result."
                      ],
                      "enum": [
                        "only",
                        "include",
                        "exclude"
                      ]
                    },
                    "knockedIn": {
                      "type": "string",
                      "default": "exclude",
                      "description": "Specifies whether knocked-in securitized derivatives are included in the response. Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.",
                      "x-enum-description": [
                        "Only knocked-in securitized derivatives are included in the result.",
                        "Knocked-in securitized derivatives are included in the result.",
                        "Knocked-in securitized derivatives are excluded from the result."
                      ],
                      "enum": [
                        "only",
                        "include",
                        "exclude"
                      ]
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "relative"
                      ],
                      "description": "Performance of the most recent price calculated against the latest price which has occurred before the start of the current trading day.\n",
                      "properties": {
                        "relative": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the relative performance."
                        }
                      }
                    }
                  },
                  "required": [
                    "market"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 5 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "trade.performance.absolute",
                          "-trade.performance.absolute",
                          "trade.performance.relative",
                          "-trade.performance.relative",
                          "accumulated.numberTrades",
                          "-accumulated.numberTrades",
                          "accumulated.tradingVolume",
                          "-accumulated.tradingVolume",
                          "accumulated.tradingValue",
                          "-accumulated.tradingValue"
                        ]
                      },
                      "maxItems": 5,
                      "uniqueItems": true,
                      "default": [
                        "-trade.performance.relative"
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the offset-based pagination strategy.",
                      "properties": {
                        "offset": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "default": 0,
                          "description": "Non-negative number of entries to skip, or 0 (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 100,
                          "exclusiveMaximum": false,
                          "default": 10,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "offset",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort",
                    "pagination"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "fsym",
                      "market",
                      "valueUnit",
                      "trade",
                      "quality",
                      "accumulated",
                      "instrument",
                      "categorization",
                      "lifeCycle",
                      "issuer",
                      "exercise",
                      "participation",
                      "underlying",
                      "knockedOut",
                      "knockedIn"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of a notation."
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code"
                        ],
                        "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          }
                        }
                      },
                      "trade": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "performance"
                        ],
                        "description": "Most recent trade price and performance.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time."
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit."
                          },
                          "performance": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative"
                            ],
                            "description": "Performance of the most recent price calculated against the latest price which has occurred before the start of the current trading day.",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Absolute value. See attribute `valueUnit` for its unit."
                              },
                              "relative": {
                                "x-sortable": true,
                                "x-default-sort-attribute": true,
                                "x-default-sort-direction": 2,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Relative value."
                              }
                            }
                          }
                        }
                      },
                      "quality": {
                        "type": "string",
                        "description": "Quality of the trade-related attributes, see attributes `trade` and `accumulated`.",
                        "x-enum-description": [
                          "Real-time: intraday prices with minimal technical processing delays.",
                          "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                        ],
                        "enum": [
                          "RLT",
                          "DLY"
                        ]
                      },
                      "accumulated": {
                        "type": "object",
                        "x-property-sort": [
                          "numberTrades",
                          "tradingVolume",
                          "tradingValue",
                          "currency"
                        ],
                        "description": "Summary data accumulated over all trades of the current trading day.",
                        "properties": {
                          "numberTrades": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Number of trades."
                          },
                          "tradingVolume": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded. For securitized derivatives quoted in percent (attribute `valueUnit.id=258`), this field represents the nominal trading volume; see attribute currency for its unit."
                          },
                          "tradingValue": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the trades. See attribute `currency` for its unit."
                          },
                          "currency": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "code"
                            ],
                            "description": "Main currency of the trading value. For securitized derivatives quoted in percent, it is also the currency of the nominal trading volume, for the latter see attribute `accumulated.tradingVolume`. For securitized derivatives quoted in units, this attribute contains the same unit as the attribute `valueUnit`. See endpoint `/basic/valueUnit/main/currency/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the currency."
                              },
                              "code": {
                                "type": "string",
                                "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code."
                              }
                            }
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "shortName",
                          "isin",
                          "nsin",
                          "fsym"
                        ],
                        "description": "Instrument data of the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the instrument."
                          },
                          "shortName": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Short name of the instrument."
                          },
                          "isin": {
                            "type": "string",
                            "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument."
                          },
                          "nsin": {
                            "type": "object",
                            "x-property-sort": [
                              "wkn",
                              "valor"
                            ],
                            "description": "NSIN data of the instrument.",
                            "properties": {
                              "wkn": {
                                "type": "string",
                                "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                              },
                              "valor": {
                                "type": "string",
                                "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                              }
                            }
                          },
                          "fsym": {
                            "type": "object",
                            "x-property-sort": [
                              "security"
                            ],
                            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                            "properties": {
                              "security": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier"
                                ],
                                "description": "Security-level identifier.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "categorization": {
                        "type": "object",
                        "x-property-sort": [
                          "ddv",
                          "eusipa"
                        ],
                        "description": "Categorization of the securitized derivative. Not all securitized derivatives have an assignement to all category systems. For each category system, the categories are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity.",
                        "properties": {
                          "ddv": {
                            "description": "Categorization based on the DDV (Deutscher Derivate Verband, German for German Derivatives Association) product classification. This category system covers securitized derivatives traded in Germany except exchange trade commodities (ETC) and exchange traded notes (ETN). See endpoint `/category/listBySystem` for category system 23 for possible values.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the category."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the category."
                                }
                              }
                            }
                          },
                          "eusipa": {
                            "description": "Categorization based on the EUSIPA (European Structured Investment Products Association) product classification. This category system  covers all securitized derivatives. See endpoint `/category/listBySystem` for category system 18 for possible values.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the category."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the category."
                                }
                              }
                            }
                          }
                        }
                      },
                      "lifeCycle": {
                        "type": "object",
                        "x-property-sort": [
                          "maturity"
                        ],
                        "description": "Important dates of the securitized derivative.",
                        "properties": {
                          "maturity": {
                            "type": "object",
                            "x-property-sort": [
                              "perpetual"
                            ],
                            "description": "Maturity data.",
                            "properties": {
                              "perpetual": {
                                "type": "boolean",
                                "description": "Indicates whether the securitized derivative is perpetual, i.e. it does not mature (`true`), or is not perpetual (`false`)."
                              }
                            }
                          }
                        }
                      },
                      "issuer": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "group"
                        ],
                        "description": "Issuer data of the securitized derivative. See endpoint `/securitizedDerivative/issuer/search` for possible values for the issuer and the issuer group.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the issuer."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the issuer."
                          },
                          "group": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name"
                            ],
                            "description": "Issuer group. The issuer group is defined by FactSet and does not represent an actual juristic person.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the issuer group."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the issuer group."
                              }
                            }
                          }
                        }
                      },
                      "exercise": {
                        "type": "object",
                        "x-property-sort": [
                          "right"
                        ],
                        "description": "Exercise data of the securitized derivative.",
                        "properties": {
                          "right": {
                            "type": "string",
                            "description": "Exercise right.",
                            "x-enum-description": [
                              "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                              "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                            ],
                            "enum": [
                              "put",
                              "call"
                            ]
                          }
                        }
                      },
                      "participation": {
                        "type": "string",
                        "description": "Participation direction of a factor certificate at the level movement of its effective underlying.",
                        "x-enum-description": [
                          "The factor certificate participates positively with rising levels of its effective underlying.",
                          "The factor certificate participates negatively with rising levels of its effective underlying."
                        ],
                        "enum": [
                          "long",
                          "short"
                        ]
                      },
                      "underlying": {
                        "type": "object",
                        "x-property-sort": [
                          "name",
                          "notation",
                          "effectiveUnderlying"
                        ],
                        "description": "Underlying data of the securitized derivative.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the underlying, provided also if there is no notation for the underlying."
                          },
                          "notation": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "instrument"
                            ],
                            "description": "Notation of the underlying. All contained attributes are `null` if there is no notation for the underlying.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the notation."
                              },
                              "instrument": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "typeComposite"
                                ],
                                "description": "Instrument of the underlying.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the instrument."
                                  },
                                  "typeComposite": {
                                    "type": "string",
                                    "description": "Type of composite instrument, in case the underlying is a composite instrument.",
                                    "x-enum-description": [
                                      "A basket is a composite instrument which consists of several components. Its value is calculated as the weighted combination of the levels of the components. All weights are positive.",
                                      "An alpha structure is a composite instrument which consists of two components. Its value is calculated as the difference of the performances of the components. The performances are measured starting at the date specified in the conditions of the securitized derivative.",
                                      "A futures spread is a composite instrument which is built of two or more different futures contracts as its components.",
                                      "A factor index is a composite instrument that reflects the day-to-day performance of its component, multiplied with a constant factor. The related capital costs and fees for calculation and administration are not represented."
                                    ],
                                    "enum": [
                                      "basket",
                                      "alphaStructure",
                                      "futuresSpread",
                                      "factorIndex"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "effectiveUnderlying": {
                            "type": "object",
                            "x-property-sort": [
                              "instrument"
                            ],
                            "description": "Effective underlying of a factor certificate.",
                            "properties": {
                              "instrument": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name"
                                ],
                                "description": "Instrument of the effective underlying.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the instrument."
                                  },
                                  "name": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Name of the instrument."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "knockedOut": {
                        "type": "boolean",
                        "description": "Indicates whether the securitized derivative is knocked-out (`true`) or not (`false`). Particularly relevant for knock-out certificates."
                      },
                      "knockedIn": {
                        "type": "boolean",
                        "description": "Indicates whether the securitized derivative is knocked-in (`true`) or not (`false`). Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates."
                      }
                    }
                  },
                  "description": "List of notations.",
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/notation/screener/valueRanges/get": {
      "post": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "post/securitizedDerivative/notation/screener/valueRanges/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Possible values and value ranges for the parameters used in the endpoint `/securitizedDerivative/notation/screener/search`.",
        "description": "The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/securitizedDerivatives/notation/screener/search`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/securitizedDerivatives/notation/screener/search` endpoint so that performing a search always leads to a non-empty list of notations. Lists of distinct values, e.g. identifiers, are sorted descending by the number of notations for each value.\n\n Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term \"level\" is used instead of \"price\", e.g. underlying level instead of underlying price.\n\n The endpoint does not support possible values and value ranges for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are considered.\n\n The possible values and value ranges can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "validation",
                    "category",
                    "registrationCountry",
                    "lifeCycle",
                    "issuer",
                    "exercise",
                    "settlement",
                    "collateralized",
                    "quanto",
                    "capitalProtection",
                    "underlying",
                    "cashFlowCurrency",
                    "singleBarriers",
                    "rangeBarriers",
                    "factorCertificates",
                    "nominalCurrency",
                    "currentInterestRate",
                    "keyFigures",
                    "performance",
                    "volatility"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "validation": {
                      "description": "Validation parameters.",
                      "type": "object",
                      "x-property-sort": [
                        "onlyActive",
                        "prices",
                        "valueUnit",
                        "market",
                        "instrumentRestrictionList",
                        "notationRestrictionList"
                      ],
                      "properties": {
                        "onlyActive": {
                          "description": "If `true`, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months.",
                          "type": "boolean",
                          "default": true
                        },
                        "prices": {
                          "description": "Price-related parameters.",
                          "type": "object",
                          "x-property-sort": [
                            "quality",
                            "latest",
                            "previous"
                          ],
                          "properties": {
                            "quality": {
                              "type": "string",
                              "description": "Quality of the price.",
                              "default": "DLY",
                              "x-enum-description": [
                                "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                                "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                              ],
                              "enum": [
                                "DLY",
                                "EOD"
                              ]
                            },
                            "latest": {
                              "description": "Parameters related to the presence and age of the most recent trade price.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price (even an outdated one) is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the most recent trade price.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            },
                            "previous": {
                              "description": "Parameters related to the presence and age of a trade price from a preceding trading day.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price from a preceding trading day is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the trade price from a preceding trading day.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          }
                        },
                        "valueUnit": {
                          "description": "Value unit-related parameters. See endpoint `/basic/valueUnit/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Value unit selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the value units a notation may have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the value units a notation may not have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "market": {
                          "description": "Market-related notation selection. See endpoint `/basic/market/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection",
                            "priority"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Market selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the markets from which a notation may originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the markets from which a notation may not originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            },
                            "priority": {
                              "description": "Sequence of markets specifying the priority order of the markets for the selection of one notation per instrument. If for a given instrument with two matching notations, A and B, the market of notation A precedes the market of notation B in this list or if the market of notation B is not in this list, A is selected. If neither of the markets is in this list, the notation with the highest trading volume, averaged over one month, is selected.        \n The list does not restrict the request to only those markets (use the parameter `market.selection` for that purpose).",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of market identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        },
                        "instrumentRestrictionList": {
                          "description": "Instrument-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of identifieres of restriction lists.",
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 3
                            }
                          }
                        },
                        "notationRestrictionList": {
                          "description": "Notation-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of identifieres of restriction lists.",
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 3
                            }
                          }
                        }
                      }
                    },
                    "category": {
                      "description": "Only securitized derivatives that belong to at least one category in the provided list will  be returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of category identifiers. See endpoint `/category/listBySystem` for category systems 18 and 23 for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "registrationCountry": {
                      "description": "Only securitized derivatives registered for trading in a country in the provided list are returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of country identifiers. See endpoint `/basic/region/country/list` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "lifeCycle": {
                      "description": "Parameters related to important dates.",
                      "type": "object",
                      "x-property-sort": [
                        "issue",
                        "maturity",
                        "callable",
                        "valuation",
                        "repayment"
                      ],
                      "properties": {
                        "issue": {
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ],
                          "description": "Date range of the issue date."
                        },
                        "maturity": {
                          "description": "Parameters related to the maturity.",
                          "type": "object",
                          "x-property-sort": [
                            "restriction",
                            "perpetual"
                          ],
                          "properties": {
                            "restriction": {
                              "description": "The maturity can be restricted by using one of the parameters `date` or `remainingTermDays` but not both at the same time. If a maturity restriction is set, perpetual instruments, i.e. such that do not mature, are not included in the result unless the parameter `perpetual` is set to `include`.",
                              "type": "object",
                              "x-property-sort": [
                                "date",
                                "remainingTermDays"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "date": {
                                  "type": "object",
                                  "format": "dateRange",
                                  "x-isClosedInterval": true,
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                                      "x-allowNullValue": true
                                    },
                                    "end": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "start",
                                    "end"
                                  ],
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Date range of the maturity date."
                                },
                                "remainingTermDays": {
                                  "description": "Value range for the remaining term to maturity expressed in days.",
                                  "type": "object",
                                  "format": "realRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ]
                                }
                              }
                            },
                            "perpetual": {
                              "type": "string",
                              "description": "Defines whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result. The value `only` can be used if both parameters `maturity.restriction.date` and `maturity.restriction.remainingTermDays` are not set.",
                              "x-enum-description": [
                                "Only perpetual securitized derivatives are included in the result.",
                                "Perpetual securitized derivatives are included in the result even if one of the parameters `maturity.restriction.date` or `maturity.restriction.remainingTermDays` is set.",
                                "Perpetual securitized derivatives are excluded from the result."
                              ],
                              "enum": [
                                "only",
                                "include",
                                "exclude"
                              ]
                            }
                          }
                        },
                        "callable": {
                          "type": "boolean",
                          "description": "Restricts the result to securitized derivatives that are callable (`true`) or are not callable (`false`). A callable instrument is one that may be redeemed by the issuer prior to maturity."
                        },
                        "valuation": {
                          "description": "Date range of the valuation date.",
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ]
                        },
                        "repayment": {
                          "description": "Date range of the repayment date.",
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ]
                        }
                      }
                    },
                    "issuer": {
                      "description": "Parameters related to the issuer.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of identifiers of legal entities in the role of an issuer, including issuer groups. FactSet defines issuer groups to facilitate searching; they do not represent actual juristic persons. See endpoint `/securitizedDerivative/issuer/search` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "exercise": {
                      "description": "Parameters related to the exercise.",
                      "type": "object",
                      "x-property-sort": [
                        "right",
                        "style"
                      ],
                      "properties": {
                        "right": {
                          "type": "string",
                          "description": "Code of the exercise right.",
                          "x-enum-description": [
                            "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                            "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                          ],
                          "enum": [
                            "put",
                            "call"
                          ]
                        },
                        "style": {
                          "type": "string",
                          "description": "Code of the exercise style.",
                          "x-enum-description": [
                            "An American-style securitized derivative can be exercised anytime during its life.",
                            "An European-style securitized derivative can be exercised at maturity only.",
                            "A Bermudan-style securitized derivative can be exercised only on predetermined dates."
                          ],
                          "enum": [
                            "american",
                            "european",
                            "bermudan"
                          ]
                        }
                      }
                    },
                    "settlement": {
                      "type": "string",
                      "description": "Settlement of the securitized derivative. It concerns the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out.",
                      "x-enum-description": [
                        "Transfer of a cash amount",
                        "Phyiscal delivery of the underlying asset.",
                        "Cash or physical, at the discretion of the issuer."
                      ],
                      "enum": [
                        "cash",
                        "physical",
                        "either"
                      ]
                    },
                    "collateralized": {
                      "type": "boolean",
                      "description": "Restricts the result to securitized derivatives that are collateralized (`true`) or are  not collateralized (`false`). A collateralized securitized derivative is protected against an  issuer default by collateral."
                    },
                    "quanto": {
                      "type": "boolean",
                      "description": "Restricts the result to securitized derivatives that are hedged (`true`) or are not hedged (`false`) against fluctuations of the foreign exchange rate between the value unit of the underlying and the value unit of the cash flows."
                    },
                    "capitalProtection": {
                      "type": "object",
                      "format": "relativeValueRange",
                      "properties": {
                        "minimum": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "inclusive"
                          ],
                          "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "The minimum value."
                            },
                            "inclusive": {
                              "type": "boolean",
                              "description": "Indicates whether the minimum value is included in the range or not.",
                              "default": true
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "x-allowNullValue": true
                        },
                        "maximum": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "inclusive"
                          ],
                          "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "The maximum value."
                            },
                            "inclusive": {
                              "type": "boolean",
                              "description": "Indicates whether the maximum value is included in the range or not.",
                              "default": true
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "x-allowNullValue": true
                        }
                      },
                      "x-property-sort": [
                        "minimum",
                        "maximum"
                      ],
                      "description": "Value range of the proportion of the nominal amount protected against loss."
                    },
                    "underlying": {
                      "description": "Underlying selection. A list of underlyings can be selected by either using their instrument identifiers, see parameter `underlying.instrument.ids` or by using their notation identifiers, see parameter `underlying.notation.ids` but not both at the same time. Only one of the provided identifiers needs to be matched in order for a securitized derivative to be returned in the result.\n\n The list of underlyings is particularly useful to search for securitized derivatives that have very similar but not exactly the same underlyings such as futures with different maturities on a given commodity, e.g. brent crude oil. For such a list of underlyings, a barrier restriction in absolute terms, see for example parameter `singleBarriers.level.absolute` or `rangeBarriers.upper.level.absolute`, will provide a meaningful result, whereas for a list of non-similar underlyings, such as different stocks, a barrier restriction in absolute terms will not provide a meaningful result. This is due to the fact that futures on the same commodity are comparable in regards to their prices while two different stocks are not comparable.\n\n Parameters in relative terms, see for example parameter `singleBarriers.distance.relative`, are generally comparable and will provide meaningful result for a list of similar as well as for a list of non-similar underlyings.\n\n For the selection of the effective underling of factor certificates, use `factorCertificates.effectiveUnderlying.instrument.ids`.",
                      "type": "object",
                      "x-property-sort": [
                        "instrument",
                        "notation"
                      ],
                      "x-atMostOne": true,
                      "properties": {
                        "instrument": {
                          "description": "Underlying selection using instrument identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of instrument identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        },
                        "notation": {
                          "description": "Underlying selection using notation identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of notation identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        }
                      }
                    },
                    "cashFlowCurrency": {
                      "description": "Main currency of the cash flows. A cash flow is a payout dependent on whether or not the underlying level, e.g. a stock's price, will reach a given threshold, called barrier, at a given time.",
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values.",
                          "type": "number",
                          "format": "id32",
                          "x-positive": true
                        }
                      }
                    },
                    "singleBarriers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "observation",
                          "level",
                          "distance",
                          "breach",
                          "cashFlow"
                        ],
                        "properties": {
                          "type": {
                            "description": "The type of the barrier. See endpoint `/securitizedDerivative/barrier/type/list` for additional information. Note that not all barrier types listed in the mentioned endpoint can be used as a parameter.",
                            "type": "string",
                            "x-enum-description": [
                              "Represents the underlying level that needs to be reached in order for the securitized derivative to yield a profit; particularly relevant for reverse convertible bonds, sprint/outperformance certificates, capital-protection certificates, warrants and knock-out certificates.",
                              "Represents the underlying level considered for repayment if the knock-in barrier is intact; particularly relevant for bonus certificates.",
                              "Represents the maximum underlying level considered for repayment; particularly relevant for discount certificates, bonus certificates, and capital-protection certificates.",
                              "Represents the underlying level where a securitized derivative is terminated and becomes (nearly) worthless; particularly relevant for knock-out certificates.",
                              "Represents the underling level at which a certain product feature (such as a bonus payment) is lost; particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.",
                              "Represents the underlying level at which the securitized derivative is terminated yielding a predefined amount; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter.",
                              "Represents the underlying level at which a certain repayment at maturity is ensured; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter.",
                              "Represents the underlying level corresponding to a guranteed repayment; particularly relevant for capital-protection certificates.",
                              "Represents the underlying level at which a partial payment (such as a conditional coupon) is lost; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter."
                            ],
                            "enum": [
                              "strike",
                              "bonusLevel",
                              "cap",
                              "knockOut",
                              "knockIn",
                              "lockOut",
                              "lockIn",
                              "capitalGuarantee",
                              "couponTriggerLevel"
                            ]
                          },
                          "observation": {
                            "type": "object",
                            "x-property-sort": [
                              "type"
                            ],
                            "description": "Barrier observation modality; applicable to the following barrier types: `knockIn`, `knockOut`, `lockIn`, and `lockOut`.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the barrier observation.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              }
                            }
                          },
                          "level": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute"
                            ],
                            "description": "Barrier level.",
                            "properties": {
                              "absolute": {
                                "type": "object",
                                "format": "realRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the absolute barrier level."
                              }
                            }
                          },
                          "distance": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative"
                            ],
                            "description": "Distance of the current underlying level to the barrier level.",
                            "properties": {
                              "absolute": {
                                "type": "object",
                                "format": "realRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the absolute distance."
                              },
                              "relative": {
                                "type": "object",
                                "format": "relativeValueRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "relativeValue",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "relativeValue",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the distance in relative terms."
                              }
                            }
                          },
                          "breach": {
                            "description": "Parameters related to a barrier breach; applicable to the following barrier types: `knockIn` and `knockOut`",
                            "type": "object",
                            "x-property-sort": [
                              "breached"
                            ],
                            "properties": {
                              "breached": {
                                "type": "string",
                                "description": "Defines whether or not securitized derivatives for which the barrier has been breached are included in the result.",
                                "default": "exclude",
                                "x-enum-description": [
                                  "The result is not limited with regard to whether the barrier has been breached or not.",
                                  "The result is limited to securitized derivatives for which the barrier has been breached.",
                                  "The result is limited to securitized derivatives for which the barrier has not been breached."
                                ],
                                "enum": [
                                  "all",
                                  "only",
                                  "exclude"
                                ]
                              }
                            }
                          },
                          "cashFlow": {
                            "type": "object",
                            "format": "realRange",
                            "properties": {
                              "minimum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The minimum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the minimum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              },
                              "maximum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The maximum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the maximum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              }
                            },
                            "x-property-sort": [
                              "minimum",
                              "maximum"
                            ],
                            "description": "Value range of the cash flow related to the barrier; applicable to the following barrier types: `cap`, `knockIn`, `lockOut`, `lockIn`, `capitalGuarantee`, and `couponTriggerLevel`."
                          }
                        }
                      },
                      "description": "Single barriers. Barriers of this kind represent either a lower or an upper bound derived from the exercise right of the securitized derivative. Multiple barrier types may be used in one request."
                    },
                    "rangeBarriers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "observation",
                          "upper",
                          "lower",
                          "breach",
                          "cashFlow"
                        ],
                        "properties": {
                          "type": {
                            "description": "The type of the barrier. See endpoint `/securitizedDerivative/barrier/type/list` for additional information. Note that not all barrier types listed in the mentioned endpoint can be used as a parameter.",
                            "type": "string",
                            "x-enum-description": [
                              "Represents the upper and lower bound of the underlying level where a securitized derivative is terminated and becomes (nearly) worthless; particularly relevant for range knock-out certificates such as inline certificates."
                            ],
                            "enum": [
                              "rangeKnockOut"
                            ]
                          },
                          "observation": {
                            "type": "object",
                            "x-property-sort": [
                              "type"
                            ],
                            "description": "Barrier observation modality.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the barrier observation.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              }
                            }
                          },
                          "upper": {
                            "type": "object",
                            "x-property-sort": [
                              "level"
                            ],
                            "description": "Parameters related to the upper bound.",
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute"
                                ],
                                "description": "Barrier level.",
                                "properties": {
                                  "absolute": {
                                    "type": "object",
                                    "format": "realRange",
                                    "properties": {
                                      "minimum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The minimum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the minimum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      },
                                      "maximum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The maximum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the maximum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      }
                                    },
                                    "x-property-sort": [
                                      "minimum",
                                      "maximum"
                                    ],
                                    "description": "Value range of the absolute barrier level."
                                  }
                                }
                              }
                            }
                          },
                          "lower": {
                            "type": "object",
                            "x-property-sort": [
                              "level"
                            ],
                            "description": "Parameters related to the lower bound.",
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute"
                                ],
                                "description": "Barrier level.",
                                "properties": {
                                  "absolute": {
                                    "type": "object",
                                    "format": "realRange",
                                    "properties": {
                                      "minimum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The minimum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the minimum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      },
                                      "maximum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The maximum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the maximum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      }
                                    },
                                    "x-property-sort": [
                                      "minimum",
                                      "maximum"
                                    ],
                                    "description": "Value range of the absolute barrier level."
                                  }
                                }
                              }
                            }
                          },
                          "breach": {
                            "description": "Parameters related to a barrier breach; applicable to the following barrier types: `knockIn` and `knockOut`",
                            "type": "object",
                            "x-property-sort": [
                              "breached"
                            ],
                            "properties": {
                              "breached": {
                                "type": "string",
                                "description": "Defines whether or not securitized derivatives for which the barrier has been breached are included in the result.",
                                "default": "exclude",
                                "x-enum-description": [
                                  "The result is not limited with regard to whether the barrier has been breached or not.",
                                  "The result is limited to securitized derivatives for which the barrier has been breached.",
                                  "The result is limited to securitized derivatives for which the barrier has not been breached."
                                ],
                                "enum": [
                                  "all",
                                  "only",
                                  "exclude"
                                ]
                              }
                            }
                          },
                          "cashFlow": {
                            "type": "object",
                            "format": "realRange",
                            "properties": {
                              "minimum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The minimum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the minimum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              },
                              "maximum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The maximum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the maximum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              }
                            },
                            "x-property-sort": [
                              "minimum",
                              "maximum"
                            ],
                            "description": "Value range of the cash flow related to the barrier; applicable to the following barrier types: `cap`, `knockIn`, `lockOut`, `lockIn`, `capitalGuarantee`, and `couponTriggerLevel`."
                          }
                        }
                      },
                      "description": "Range barriers. Barriers of this kind represent a range with a lower and an upper bound."
                    },
                    "factorCertificates": {
                      "type": "object",
                      "x-property-sort": [
                        "effectiveUnderlying",
                        "participation",
                        "constantLeverage"
                      ],
                      "description": "Parameters for factor certificates.",
                      "properties": {
                        "effectiveUnderlying": {
                          "type": "object",
                          "x-property-sort": [
                            "instrument"
                          ],
                          "description": "Selection of the effective underlying. The underlying of a factor certificate is usually a factor index which is an artificial index used to calculate the leveraged daily performance of another financial instrument called its effective underlying.",
                          "properties": {
                            "instrument": {
                              "description": "Selection of the effective underlying using instrument identifiers.",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of instrument identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        },
                        "participation": {
                          "type": "string",
                          "description": "Participation direction of the factor certificate at the level movement of its effective underlying.",
                          "x-enum-description": [
                            "The factor certificate participates positively with rising levels of its effective underlying.",
                            "The factor certificate participates negatively with rising levels of its effective underlying."
                          ],
                          "enum": [
                            "long",
                            "short"
                          ]
                        },
                        "constantLeverage": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the constant leverage."
                        }
                      }
                    },
                    "nominalCurrency": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Main currency of the nominal and of the coupon payments.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values."
                        }
                      }
                    },
                    "currentInterestRate": {
                      "type": "object",
                      "x-property-sort": [
                        "type",
                        "value"
                      ],
                      "description": "Parameters regarding the interest rate of the current coupon period.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the interest rate.",
                          "x-enum-description": [
                            "The interest rate is fixed for all periods and remains unchanged throughout the lifetime of the securitized derivative.",
                            "The interest rate is variable and might change from period to period throughout the lifetime of the securitized derivative."
                          ],
                          "enum": [
                            "fixed",
                            "variable"
                          ]
                        },
                        "value": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the interest rate of the current coupon period. For coupon periods different than one year, the value is annualized. Not available for securitized derivatives with a current interest rate type other than `fixed`."
                        }
                      }
                    },
                    "keyFigures": {
                      "type": "object",
                      "x-property-sort": [
                        "bonusYield",
                        "sidewaysYield",
                        "maximumYield",
                        "agio",
                        "discount",
                        "breakEven",
                        "spread",
                        "delta",
                        "thetaOneWeek",
                        "vega",
                        "leverage",
                        "omega",
                        "impliedVolatility",
                        "intrinsicValue",
                        "timeValue",
                        "outperformancePoint",
                        "parity"
                      ],
                      "description": "Key figures specific to securitized derivatives; based on ask prices.",
                      "properties": {
                        "bonusYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Bonus yield. It represents the bonus level adjusted for the cover ratio and currency cross rate minus the ask price of the securitized derivative. The value can become negative (e.g. for uncapped products), which does not mean that the investor will necessarily suffer a loss buying it. This key figure is calculated for bonus certificates with an intact knock-in barrier only. To restrict the result to bonus certificates with an intact knock in barrier, the parameter `singleBarriers.type` must be set to `knockIn` and the parameter `singleBarriers.breach.breached` must be set to `false`.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized bonus yield relative to the ask price."
                            }
                          }
                        },
                        "sidewaysYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Sideways yield. It represents a hypothetical payout at maturity minus the ask price of the securitized derivative, under the assumption that all payout-influencing factors remain unchanged until maturity.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized sideways yield relative to the ask price."
                            }
                          }
                        },
                        "maximumYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Maximum yield. It represents a hypothetical maximum payout at maturity minus the ask price of the derivative. This key figure represents a theoretically possible best-case scenario, disregarding the probability of occurrence. It is calculated only for securitized derivatives with a limited payout (e.g. capped products).",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized maximum yield relative to the ask price."
                            }
                          }
                        },
                        "agio": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Agio. For plain vanilla warrants, it represents the difference between the ask price of the derivative and its parity (see attribute `parity`). Thus, for those with exercise right `call`, the agio indicates how much more expensive would it be to obtain the underlying through purchasing and exercising the warrant compared to directly purchasing the underlying. For those with exercise right `put`, the above consideration is applied inversely. For other types of securitized derivatives, the calculation and interpretation of the agio depends on their category. Negative values are possible.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio relative to the underlying level."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized agio relative to the underlying level."
                            }
                          }
                        },
                        "discount": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Discount. It represents the difference between the ask price of the securitized derivative and the underlying level, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for discount certificates.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount relative to the underlying level."
                            }
                          }
                        },
                        "breakEven": {
                          "type": "object",
                          "x-property-sort": [
                            "breakEvenPoint",
                            "distance"
                          ],
                          "description": "Break even point. It represents the underlying level that has to be reached at maturity, such that no loss or profit occurs for the holder of the securitized derivative.",
                          "properties": {
                            "breakEvenPoint": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the break even point."
                            },
                            "distance": {
                              "type": "object",
                              "x-property-sort": [
                                "absolute",
                                "relative"
                              ],
                              "description": "Distance from the underlying level to the break even point.",
                              "properties": {
                                "absolute": {
                                  "type": "object",
                                  "format": "realRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance in absolute terms."
                                },
                                "relative": {
                                  "type": "object",
                                  "format": "relativeValueRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance relative to the underlying level."
                                }
                              }
                            }
                          }
                        },
                        "spread": {
                          "type": "object",
                          "x-property-sort": [
                            "harmonized",
                            "relative"
                          ],
                          "description": "Spread. It represents the difference between the ask and bid price.",
                          "properties": {
                            "harmonized": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread in absolute terms, adjusted for the cover ratio."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread relative to the ask price."
                            }
                          }
                        },
                        "delta": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Delta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of a derivative for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the derivative relative to changes in the underlying level. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "thetaOneWeek": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Weekly theta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of a derivative for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the derivative relative to changes in the residual term. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "vega": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Vega. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of a derivative for an absolute change of the implied volatility, thus it represents the price sensitivity of the derivative relative to changes in the implied volatility. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "leverage": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged securitized derivatives (e.g. warrants, knock-out certificates)."
                        },
                        "omega": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the omega. It represents unadjusted delta (see attribute `delta.unadjusted`) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative's price regarding the underlying level. This key figure is calculated for plain vanilla warrants only."
                        },
                        "impliedVolatility": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative's pricing model (such as Black - Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only."
                        },
                        "intrinsicValue": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only."
                        },
                        "timeValue": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value. This key figure is calculated for plain vanilla warrants only."
                        },
                        "outperformancePoint": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products)."
                        },
                        "parity": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only."
                        }
                      }
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "intraday",
                        "sinceIssue",
                        "endOfDay"
                      ],
                      "description": "Relative performance for different time ranges.",
                      "properties": {
                        "intraday": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range intraday. That is the difference of a notation's most recent price from the current trading day against the most recent EOD closing price."
                        },
                        "sinceIssue": {
                          "type": "object",
                          "x-property-sort": [
                            "ask",
                            "bid"
                          ],
                          "description": "Relative performance since issue. That is the difference of a notation's most recent price against the price on the issue date, relative to the price on the issue date.",
                          "properties": {
                            "ask": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the ask-based relative performance since issue."
                            },
                            "bid": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the bid-based relative performance since issue."
                            }
                          }
                        },
                        "endOfDay": {
                          "type": "object",
                          "x-property-sort": [
                            "day1",
                            "week1",
                            "month1",
                            "months3",
                            "months6",
                            "year1",
                            "years3",
                            "years5",
                            "yearToDate"
                          ],
                          "description": "End-of-day (EOD) relative performance for different time ranges. The relative performance is the difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date.",
                          "properties": {
                            "day1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one day."
                            },
                            "week1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one week."
                            },
                            "month1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one month."
                            },
                            "months3": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three months."
                            },
                            "months6": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range six months."
                            },
                            "year1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one year."
                            },
                            "years3": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three years."
                            },
                            "years5": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range five years."
                            },
                            "yearToDate": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range year-to-date (YTD)."
                            }
                          }
                        }
                      }
                    },
                    "volatility": {
                      "type": "object",
                      "x-property-sort": [
                        "week1",
                        "month1",
                        "months3",
                        "months6",
                        "year1",
                        "years3",
                        "years5",
                        "yearToDate"
                      ],
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year for different time ranges.",
                      "properties": {
                        "week1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one week."
                        },
                        "month1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one month."
                        },
                        "months3": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three months."
                        },
                        "months6": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range six months."
                        },
                        "year1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one year."
                        },
                        "years3": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three years."
                        },
                        "years5": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range five years."
                        },
                        "yearToDate": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range year-to-date (YTD)."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Possible values and value ranges of the parameters.",
                  "type": "object",
                  "x-property-sort": [
                    "totalCount",
                    "categorization",
                    "market",
                    "lifeCycle",
                    "issuer",
                    "exercise",
                    "settlement",
                    "collateralized",
                    "quanto",
                    "capitalProtection",
                    "underlying",
                    "strike",
                    "bonusLevel",
                    "cap",
                    "knockOut",
                    "knockIn",
                    "lockOut",
                    "lockIn",
                    "capitalGuarantee",
                    "couponTriggerLevel",
                    "rangeKnockOut",
                    "participation",
                    "constantLeverage",
                    "nominalCurrency",
                    "currentInterestRate",
                    "keyFigures",
                    "performance",
                    "volatility"
                  ],
                  "properties": {
                    "totalCount": {
                      "type": "number",
                      "format": "int32",
                      "description": "Number of notations that satisfy the request parameters, hence have been used to retrieve the possible values and value ranges."
                    },
                    "categorization": {
                      "type": "object",
                      "x-property-sort": [
                        "ddv",
                        "eusipa"
                      ],
                      "description": "Lists of categories of the securitized derivatives. Starting with the most coarse level (one), for each level of the category system, the list of categories of the securitized derivatives, matching the parameters, is returned. See endpoint `/category/listBySystem` for possible values.",
                      "properties": {
                        "ddv": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "level",
                              "categories"
                            ],
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "number"
                                ],
                                "description": "Category level.",
                                "properties": {
                                  "number": {
                                    "type": "number",
                                    "format": "int32",
                                    "description": "Category level, indicating the distance to the root of the category hierarchy."
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "name",
                                    "parent",
                                    "count"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of a category."
                                    },
                                    "name": {
                                      "type": "string",
                                      "format": "localizedString",
                                      "description": "Name of the category."
                                    },
                                    "parent": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id"
                                      ],
                                      "description": "Parent category or `null` if this category is on the first level.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the category."
                                        }
                                      }
                                    },
                                    "count": {
                                      "type": "number",
                                      "format": "int32",
                                      "description": "Number of notations."
                                    }
                                  }
                                },
                                "description": "List of categories for the given level of the categorization."
                              }
                            }
                          },
                          "description": "Categorization based on the DDV (Deutscher Derivate Verband, German for German Derivatives Association) product classification. This category system (`id=23`) covers securitized derivatives traded in Germany except exchange trade commodities (ETC) and exchange traded notes (ETN)."
                        },
                        "eusipa": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "level",
                              "categories"
                            ],
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "number"
                                ],
                                "description": "Category level.",
                                "properties": {
                                  "number": {
                                    "type": "number",
                                    "format": "int32",
                                    "description": "Category level, indicating the distance to the root of the category hierarchy."
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "name",
                                    "parent",
                                    "count"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of a category."
                                    },
                                    "name": {
                                      "type": "string",
                                      "format": "localizedString",
                                      "description": "Name of the category."
                                    },
                                    "parent": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id"
                                      ],
                                      "description": "Parent category or `null` if this category is on the first level.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the category."
                                        }
                                      }
                                    },
                                    "count": {
                                      "type": "number",
                                      "format": "int32",
                                      "description": "Number of notations."
                                    }
                                  }
                                },
                                "description": "List of categories for the given level of the categorization."
                              }
                            }
                          },
                          "description": "Categorization based on the EUSIPA (European Structured Investment Products Association) product classification. This category system (`id=18`) covers all securitized derivatives."
                        }
                      }
                    },
                    "market": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "count"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "List of market identifiers."
                    },
                    "lifeCycle": {
                      "type": "object",
                      "x-property-sort": [
                        "issue",
                        "maturity",
                        "callable",
                        "valuation",
                        "repayment"
                      ],
                      "description": "Values and value ranges related to important dates.",
                      "properties": {
                        "issue": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Date range of the issue date.",
                          "properties": {
                            "minimum": {
                              "type": "string",
                              "format": "date",
                              "description": "Minimum date."
                            },
                            "maximum": {
                              "type": "string",
                              "format": "date",
                              "description": "Maximum date."
                            }
                          }
                        },
                        "maturity": {
                          "type": "object",
                          "x-property-sort": [
                            "date",
                            "remainingTermDays",
                            "perpetual"
                          ],
                          "description": "Ranges related to the maturity.",
                          "properties": {
                            "date": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Date range of the maturity date.",
                              "properties": {
                                "minimum": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Minimum date."
                                },
                                "maximum": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Maximum date."
                                }
                              }
                            },
                            "remainingTermDays": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the remaining term to maturity expressed in days.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "perpetual": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "count"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "boolean",
                                    "description": "Attribute value."
                                  },
                                  "count": {
                                    "type": "number",
                                    "format": "int32",
                                    "description": "Number of notations."
                                  }
                                }
                              },
                              "description": "Indicates whether perpetual and non-perpetual securitized derivatives are among the results. A perpetual securitized derivative is one that does not mature."
                            }
                          }
                        },
                        "callable": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "Attribute value."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Indicates whether callable and non-callable securitized derivatives are among the results. A callable securitized derivative is one that may be redeemed by the issuer prior to maturity."
                        },
                        "valuation": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Date range of the valuation date.",
                          "properties": {
                            "minimum": {
                              "type": "string",
                              "format": "date",
                              "description": "Minimum date."
                            },
                            "maximum": {
                              "type": "string",
                              "format": "date",
                              "description": "Maximum date."
                            }
                          }
                        },
                        "repayment": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Date range of the repayment date.",
                          "properties": {
                            "minimum": {
                              "type": "string",
                              "format": "date",
                              "description": "Minimum date."
                            },
                            "maximum": {
                              "type": "string",
                              "format": "date",
                              "description": "Maximum date."
                            }
                          }
                        }
                      }
                    },
                    "issuer": {
                      "type": "object",
                      "x-property-sort": [
                        "juristicPerson",
                        "group"
                      ],
                      "description": "List of issuers. See endpoint `/securitizedDerivative/issuer/search` for possible values.",
                      "properties": {
                        "juristicPerson": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "count"
                            ],
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of an issuer."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the issuer."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations"
                              }
                            }
                          },
                          "description": "List of issuers that represent an actual juristic person."
                        },
                        "group": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "count"
                            ],
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of an issuer group."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the issuer group."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations"
                              }
                            }
                          },
                          "description": "List of issuer groups. The issuer group is defined by FactSet and does not represent an actual juristic person."
                        }
                      }
                    },
                    "exercise": {
                      "type": "object",
                      "x-property-sort": [
                        "right",
                        "style"
                      ],
                      "description": "Values related to the exercise.",
                      "properties": {
                        "right": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "Attribute value",
                                "x-enum-description": [
                                  "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                                  "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                                ],
                                "enum": [
                                  "put",
                                  "call"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations"
                              }
                            }
                          },
                          "description": "Exercise right."
                        },
                        "style": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "Attribute value.",
                                "x-enum-description": [
                                  "An American-style securitized derivative can be exercised anytime during its life.",
                                  "An European-style securitized derivative can be exercised at maturity only.",
                                  "A Bermudan-style securitized derivative can be exercised only on predetermined dates ."
                                ],
                                "enum": [
                                  "american",
                                  "european",
                                  "bermudan"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Exercise style."
                        }
                      }
                    },
                    "settlement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "count"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Attribute value.",
                            "x-enum-description": [
                              "Transfer of a cash amount.",
                              "Physical delivery of the underlying asset.",
                              "Cash or physical, at the discretion of the issuer."
                            ],
                            "enum": [
                              "cash",
                              "physical",
                              "either"
                            ]
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "Values related to the settlement. It concerns the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out."
                    },
                    "collateralized": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "count"
                        ],
                        "properties": {
                          "value": {
                            "type": "boolean",
                            "description": "Attribute value."
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations"
                          }
                        }
                      },
                      "description": "Indicates whether securitized derivatives with and without protection against an issuer default are among the results. An example for such a collateralization is the COSI flag provided by SIX Swiss Exchange."
                    },
                    "quanto": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "count"
                        ],
                        "properties": {
                          "value": {
                            "type": "boolean",
                            "description": "Attribute value."
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "Indicates whether quanto and non-quanto securitized derivatives are among the results. Quanto means that the risk of exchange rate fluctuations between the value unit of the underlying and the value unit of the cash flows is hedged."
                    },
                    "capitalProtection": {
                      "type": "object",
                      "x-property-sort": [
                        "minimum",
                        "maximum"
                      ],
                      "description": "Value range of the capital protection, that is the proportion of the nominal amount protected against loss.",
                      "properties": {
                        "minimum": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Minimum value."
                        },
                        "maximum": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Maximum value"
                        }
                      }
                    },
                    "underlying": {
                      "type": "object",
                      "x-property-sort": [
                        "instrument",
                        "notation",
                        "effectiveUnderlying"
                      ],
                      "description": "Lists of underlyings.",
                      "properties": {
                        "instrument": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "count"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of an instrument."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Underlying instruments."
                        },
                        "notation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "count"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of a notation."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Underlying notations."
                        },
                        "effectiveUnderlying": {
                          "type": "object",
                          "x-property-sort": [
                            "instrument"
                          ],
                          "description": "List of effective underylings of factor certificates.",
                          "properties": {
                            "instrument": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "count"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of an instrument"
                                  },
                                  "count": {
                                    "type": "number",
                                    "format": "int32",
                                    "description": "Number of notations"
                                  }
                                }
                              },
                              "description": "Underlying instruments."
                            }
                          }
                        }
                      }
                    },
                    "strike": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "distance"
                      ],
                      "description": "Value ranges related to the strike.",
                      "properties": {
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the strike.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the strike.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "bonusLevel": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "distance"
                      ],
                      "description": "Value ranges related to the bonus level.",
                      "properties": {
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the bonus level.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the bonus level.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "cap": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "distance",
                        "cashFlow"
                      ],
                      "description": "Value ranges related to the cap.",
                      "properties": {
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cap.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the cap.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "knockOut": {
                      "type": "object",
                      "x-property-sort": [
                        "observation",
                        "value",
                        "distance",
                        "breached"
                      ],
                      "description": "Values and value ranges related to the knock-out.",
                      "properties": {
                        "observation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "count"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Observation type.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the barrier observation modality."
                        },
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the knock-out.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the knock-out.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "breached": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "Attribute value."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Indicates whether securitized derivatives with a breached and with a non-breached knock-out barrier are among the results."
                        }
                      }
                    },
                    "knockIn": {
                      "type": "object",
                      "x-property-sort": [
                        "observation",
                        "value",
                        "distance",
                        "breached",
                        "cashFlow"
                      ],
                      "description": "Values and value ranges related to the knock-in.",
                      "properties": {
                        "observation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "count"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Observation type.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the barrier observation modality."
                        },
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the knock-in.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Distance of the current underlying level to the knock-in.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "breached": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "Attribute value."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Indicates whether securitized derivatives with a breached and with a non-breached knock-in barrier are among the results."
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "lockOut": {
                      "type": "object",
                      "x-property-sort": [
                        "observation",
                        "value",
                        "distance",
                        "cashFlow"
                      ],
                      "description": "Values and value ranges related to the lock-out.",
                      "properties": {
                        "observation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "count"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Observation type.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the barrier observation modality."
                        },
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the lock-out.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the lock-out.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "lockIn": {
                      "type": "object",
                      "x-property-sort": [
                        "observation",
                        "value",
                        "distance",
                        "cashFlow"
                      ],
                      "description": "Values and value ranges related to the lock-in.",
                      "properties": {
                        "observation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "count"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Observation type.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the barrier observation modality."
                        },
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the lock-in.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the lock-in.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "capitalGuarantee": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "distance",
                        "cashFlow"
                      ],
                      "description": "Value ranges related to the capital guarantee.",
                      "properties": {
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the capital guarantee.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value range of the distance of the current underlying level to the capital guarantee.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "couponTriggerLevel": {
                      "type": "object",
                      "x-property-sort": [
                        "value",
                        "distance",
                        "cashFlow"
                      ],
                      "description": "Value ranges related to the coupon trigger level.",
                      "properties": {
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the coupon trigger level.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "distance": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Distance of the current underlying level to the coupon trigger level.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value"
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Distance relative to the current underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "rangeKnockOut": {
                      "type": "object",
                      "x-property-sort": [
                        "observation",
                        "upper",
                        "lower",
                        "breached",
                        "cashFlow"
                      ],
                      "description": "Values and value ranges related to the range knock-out.",
                      "properties": {
                        "observation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "count"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Observation type.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the barrier observation modality."
                        },
                        "upper": {
                          "type": "object",
                          "x-property-sort": [
                            "value"
                          ],
                          "description": "Upper bound of the range knock-out.",
                          "properties": {
                            "value": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the upper bound of the range knock-out.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "lower": {
                          "type": "object",
                          "x-property-sort": [
                            "value"
                          ],
                          "description": "Lower bound of the range knock-out.",
                          "properties": {
                            "value": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the lower bound of the range knock-out.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "breached": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "Attribute value."
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Indicates whether securitized derivatives with a breached and with a non-breached range knock-out barrier are among the results."
                        },
                        "cashFlow": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the cash flow amount.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "participation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "count"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Attribute value.",
                            "x-enum-description": [
                              "The factor certificate participates positively with rising levels of its effective underlying.",
                              "The factor certificate participates negatively with rising levels of its effective underlying."
                            ],
                            "enum": [
                              "long",
                              "short"
                            ]
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "Values of the participation direction of factor certificates at the level movement of its effective underlying."
                    },
                    "constantLeverage": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "count"
                        ],
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "Constant leverage."
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "Values of the constant leverage of factor certificates."
                    },
                    "nominalCurrency": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "isoCode",
                          "count"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the currency."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISO 4217 code of the currency."
                          },
                          "count": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of notations."
                          }
                        }
                      },
                      "description": "Values of the main currency of the nominal and of the coupon payments. See endpoint `/basic/valueUnit/currency/main/list` for possible values."
                    },
                    "currentInterestRate": {
                      "type": "object",
                      "x-property-sort": [
                        "types",
                        "value"
                      ],
                      "description": "Values and value ranges related to the current interest rate.",
                      "properties": {
                        "types": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "count"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "Attribute value.",
                                "x-enum-description": [
                                  "The interest rate is fixed for all periods and remains unchanged throughout the lifetime of the securitized derivative.",
                                  "The interest rate is variable and might change from period to period throughout the lifetime of the securitized derivative."
                                ],
                                "enum": [
                                  "fixed",
                                  "variable"
                                ]
                              },
                              "count": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of notations."
                              }
                            }
                          },
                          "description": "Values of the type of the interest rate."
                        },
                        "value": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the Interest rate of the current coupon period.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "keyFigures": {
                      "type": "object",
                      "x-property-sort": [
                        "bonusYield",
                        "sidewaysYield",
                        "maximumYield",
                        "agio",
                        "discount",
                        "breakEven",
                        "spread",
                        "delta",
                        "thetaOneWeek",
                        "vega",
                        "leverage",
                        "omega",
                        "impliedVolatility",
                        "intrinsicValue",
                        "timeValue",
                        "outperformancePoint",
                        "parity"
                      ],
                      "description": "Value ranges related to key figures.",
                      "properties": {
                        "bonusYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Value ranges related to the bonus yield.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "annualized": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized bonus yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "sidewaysYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Value ranges related to the sideways yield.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "annualized": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized sideways yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "maximumYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Value ranges related to the maximum yield.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "annualized": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized maximum yield relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "agio": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Value ranges related to the agio.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio relative to the underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "annualized": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized agio relative to the underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "discount": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Value ranges related to the discount.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount in absolute terms.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount relative to the underlying level.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "breakEven": {
                          "type": "object",
                          "x-property-sort": [
                            "breakEvenPoint",
                            "distance"
                          ],
                          "description": "Value ranges related to the break-even point.",
                          "properties": {
                            "breakEvenPoint": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the break-even point.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "distance": {
                              "type": "object",
                              "x-property-sort": [
                                "absolute",
                                "relative"
                              ],
                              "description": "Value ranges of the distance from the underlying level to the break-even point.",
                              "properties": {
                                "absolute": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance in absolute terms.",
                                  "properties": {
                                    "minimum": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "Minimum value."
                                    },
                                    "maximum": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "Maximum value."
                                    }
                                  }
                                },
                                "relative": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance relative to the underlying level.",
                                  "properties": {
                                    "minimum": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "Minimum value."
                                    },
                                    "maximum": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "Maximum value."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spread": {
                          "type": "object",
                          "x-property-sort": [
                            "harmonized",
                            "relative"
                          ],
                          "description": "Value ranges related to the spread.",
                          "properties": {
                            "harmonized": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread in absolute terms, adjusted for the cover ratio.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "relative": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread relative to the ask price.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "delta": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Value ranges related to the delta.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using the actual cover ratio of the securitized derivative.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "unadjusted": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using a (hypothetical) cover ratio of 1:1.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "thetaOneWeek": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Value ranges related to the weekly theta.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using the actual cover ratio of the securitized derivative.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "unadjusted": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using a (hypothetical) cover ratio of 1:1.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "vega": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Value ranges related to the vega.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using the actual cover ratio of the securitized derivative.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "unadjusted": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using a (hypothetical) cover ratio of 1:1.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "leverage": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the leverage.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "omega": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the omega.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "impliedVolatility": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the implied volatility.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "intrinsicValue": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the intrinsic value.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "timeValue": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the time value.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "outperformancePoint": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the outperformance point.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "parity": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the parity.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "real",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "real",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "intraday",
                        "sinceIssue",
                        "endOfDay"
                      ],
                      "description": "Value ranges related to the relative performance.",
                      "properties": {
                        "intraday": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range related to the relative performance intraday.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "sinceIssue": {
                          "type": "object",
                          "x-property-sort": [
                            "ask",
                            "bid"
                          ],
                          "description": "Value ranges related to the relative performance since issue.",
                          "properties": {
                            "ask": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the ask-based relative performance since issue.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "bid": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bid-based relative performance since issue.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        },
                        "endOfDay": {
                          "type": "object",
                          "x-property-sort": [
                            "day1",
                            "week1",
                            "month1",
                            "months3",
                            "months6",
                            "year1",
                            "years3",
                            "years5",
                            "yearToDate"
                          ],
                          "description": "Value ranges related to the end-of-day (EOD) relative performance for different time ranges.",
                          "properties": {
                            "day1": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one day.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "week1": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one week.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "month1": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one month.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "months3": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three months.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "months6": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range six months.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "year1": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one year.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "years3": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three years.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "years5": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range five years.",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            },
                            "yearToDate": {
                              "type": "object",
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range year-to-date (YTD).",
                              "properties": {
                                "minimum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Minimum value."
                                },
                                "maximum": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Maximum value."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "volatility": {
                      "type": "object",
                      "x-property-sort": [
                        "week1",
                        "month1",
                        "months3",
                        "months6",
                        "year1",
                        "years3",
                        "years5",
                        "yearToDate"
                      ],
                      "description": "Value ranges related to the volatility for different time ranges.",
                      "properties": {
                        "week1": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one week.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "month1": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one month.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "months3": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three months.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "months6": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range six months.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "year1": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one year.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "years3": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three years.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "years5": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range five years.",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        },
                        "yearToDate": {
                          "type": "object",
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range year-to-date (YTD).",
                          "properties": {
                            "minimum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Minimum value."
                            },
                            "maximum": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum value."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/notation/screener/search": {
      "post": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "post/securitizedDerivative/notation/screener/search",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Screener for securitized derivatives's notations based on securitized derivatives-specific parameters.",
        "description": "Screener for securitized derivatives's notations based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifiers used as parameters must be valid and entitled.\n\n Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term \"level\" is used instead of \"price\", e.g. underlying level instead of underlying price.\n\n The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.\n\n The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "validation",
                    "category",
                    "registrationCountry",
                    "lifeCycle",
                    "issuer",
                    "exercise",
                    "settlement",
                    "collateralized",
                    "quanto",
                    "capitalProtection",
                    "underlying",
                    "cashFlowCurrency",
                    "singleBarriers",
                    "rangeBarriers",
                    "factorCertificates",
                    "nominalCurrency",
                    "currentInterestRate",
                    "keyFigures",
                    "performance",
                    "volatility"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "validation": {
                      "description": "Validation parameters.",
                      "type": "object",
                      "x-property-sort": [
                        "onlyActive",
                        "prices",
                        "valueUnit",
                        "market",
                        "instrumentRestrictionList",
                        "notationRestrictionList"
                      ],
                      "properties": {
                        "onlyActive": {
                          "description": "If `true`, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months.",
                          "type": "boolean",
                          "default": true
                        },
                        "prices": {
                          "description": "Price-related parameters.",
                          "type": "object",
                          "x-property-sort": [
                            "quality",
                            "latest",
                            "previous"
                          ],
                          "properties": {
                            "quality": {
                              "type": "string",
                              "description": "Quality of the price.",
                              "default": "DLY",
                              "x-enum-description": [
                                "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                                "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                              ],
                              "enum": [
                                "DLY",
                                "EOD"
                              ]
                            },
                            "latest": {
                              "description": "Parameters related to the presence and age of the most recent trade price.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price (even an outdated one) is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the most recent trade price.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            },
                            "previous": {
                              "description": "Parameters related to the presence and age of a trade price from a preceding trading day.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price from a preceding trading day is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the trade price from a preceding trading day.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          }
                        },
                        "valueUnit": {
                          "description": "Value unit-related parameters. See endpoint `/basic/valueUnit/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Value unit selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the value units a notation may have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the value units a notation may not have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "market": {
                          "description": "Market-related notation selection. See endpoint `/basic/market/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection",
                            "priority"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Market selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the markets from which a notation may originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the markets from which a notation may not originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            },
                            "priority": {
                              "description": "Sequence of markets specifying the priority order of the markets for the selection of one notation per instrument. If for a given instrument with two matching notations, A and B, the market of notation A precedes the market of notation B in this list or if the market of notation B is not in this list, A is selected. If neither of the markets is in this list, the notation with the highest trading volume, averaged over one month, is selected.        \n The list does not restrict the request to only those markets (use the parameter `market.selection` for that purpose).",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of market identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        },
                        "instrumentRestrictionList": {
                          "description": "Instrument-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "List of identifieres of restriction lists."
                              },
                              "uniqueItems": true,
                              "maxItems": 3
                            }
                          }
                        },
                        "notationRestrictionList": {
                          "description": "Notation-level restriction. If present, the result contains only securitized derivatives that are a member of at least one of the provided lists.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "List of identifieres of restriction lists."
                              },
                              "uniqueItems": true,
                              "maxItems": 3
                            }
                          }
                        }
                      }
                    },
                    "category": {
                      "description": "Only securitized derivatives that belong to at least one category in the provided list will  be returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of category identifiers. See endpoint `/category/listBySystem` for category systems 18 and 23 for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "registrationCountry": {
                      "description": "Only securitized derivatives registered for trading in a country in the provided list are returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of country identifiers. See endpoint `/basic/region/country/list` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "lifeCycle": {
                      "description": "Parameters related to important dates.",
                      "type": "object",
                      "x-property-sort": [
                        "issue",
                        "maturity",
                        "callable",
                        "valuation",
                        "repayment"
                      ],
                      "properties": {
                        "issue": {
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ],
                          "description": "Date range of the issue date."
                        },
                        "maturity": {
                          "description": "Parameters related to the maturity.",
                          "type": "object",
                          "x-property-sort": [
                            "restriction",
                            "perpetual"
                          ],
                          "properties": {
                            "restriction": {
                              "description": "The maturity can be restricted by using one of the parameters `date` or `remainingTermDays` but not both at the same time. If a maturity restriction is set, perpetual instruments, i.e. such that do not mature, are not included in the result unless the parameter `perpetual` is set to `include`.",
                              "type": "object",
                              "x-property-sort": [
                                "date",
                                "remainingTermDays"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "date": {
                                  "type": "object",
                                  "format": "dateRange",
                                  "x-isClosedInterval": true,
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                                      "x-allowNullValue": true
                                    },
                                    "end": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "start",
                                    "end"
                                  ],
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Date range of the maturity date."
                                },
                                "remainingTermDays": {
                                  "description": "Value range for the remaining term to maturity expressed in days.",
                                  "type": "object",
                                  "format": "realRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ]
                                }
                              }
                            },
                            "perpetual": {
                              "type": "string",
                              "description": "Defines whether or not perpetual securitized derivatives, i.e. such that do not mature, are included in the result. The value `only` can be used if both parameters `maturity.restriction.date` and `maturity.restriction.remainingTermDays` are not set.",
                              "x-enum-description": [
                                "Only perpetual securitized derivatives are included in the result.",
                                "Perpetual securitized derivatives are included in the result even if one of the parameters `maturity.restriction.date` or `maturity.restriction.remainingTermDays` is set.",
                                "Perpetual securitized derivatives are excluded from the result."
                              ],
                              "enum": [
                                "only",
                                "include",
                                "exclude"
                              ]
                            }
                          }
                        },
                        "callable": {
                          "type": "boolean",
                          "description": "Restricts the result to securitized derivatives that are callable (`true`) or are not callable (`false`). A callable instrument is one that may be redeemed by the issuer prior to maturity."
                        },
                        "valuation": {
                          "description": "Date range of the valuation date.",
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ]
                        },
                        "repayment": {
                          "description": "Date range of the repayment date.",
                          "type": "object",
                          "format": "dateRange",
                          "x-isClosedInterval": true,
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date",
                              "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                              "x-allowNullValue": true
                            },
                            "end": {
                              "type": "string",
                              "format": "date",
                              "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ]
                        }
                      }
                    },
                    "issuer": {
                      "description": "Parameters related to the issuer.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "List of identifiers of legal entities in the role of an issuer, including issuer groups. FactSet defines issuer groups to facilitate searching; they do not represent actual juristic persons. See endpoint `/securitizedDerivative/issuer/search` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "maxItems": 20
                        }
                      }
                    },
                    "exercise": {
                      "description": "Parameters related to the exercise.",
                      "type": "object",
                      "x-property-sort": [
                        "right",
                        "style"
                      ],
                      "properties": {
                        "right": {
                          "type": "string",
                          "description": "Code of the exercise right.",
                          "x-enum-description": [
                            "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                            "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                          ],
                          "enum": [
                            "put",
                            "call"
                          ]
                        },
                        "style": {
                          "type": "string",
                          "description": "Code of the exercise style.",
                          "x-enum-description": [
                            "An American-style securitized derivative can be exercised anytime during its life.",
                            "An European-style securitized derivative can be exercised at maturity only.",
                            "A Bermudan-style securitized derivative can be exercised only on predetermined dates."
                          ],
                          "enum": [
                            "american",
                            "european",
                            "bermudan"
                          ]
                        }
                      }
                    },
                    "settlement": {
                      "type": "string",
                      "description": "Settlement of the securitized derivative. It concerns the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out.",
                      "x-enum-description": [
                        "Transfer of a cash amount",
                        "Phyiscal delivery of the underlying asset.",
                        "Cash or physical, at the discretion of the issuer."
                      ],
                      "enum": [
                        "cash",
                        "physical",
                        "either"
                      ]
                    },
                    "collateralized": {
                      "type": "boolean",
                      "description": "Restricts the result to securitized derivatives that are collateralized (`true`) or are  not collateralized (`false`). A collateralized securitized derivative is protected against an  issuer default by collateral."
                    },
                    "quanto": {
                      "type": "boolean",
                      "description": "Restricts the result to securitized derivatives that are hedged (`true`) or are not hedged (`false`) against fluctuations of the foreign exchange rate between the value unit of the underlying and the value unit of the cash flows."
                    },
                    "capitalProtection": {
                      "type": "object",
                      "format": "relativeValueRange",
                      "properties": {
                        "minimum": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "inclusive"
                          ],
                          "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "The minimum value."
                            },
                            "inclusive": {
                              "type": "boolean",
                              "description": "Indicates whether the minimum value is included in the range or not.",
                              "default": true
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "x-allowNullValue": true
                        },
                        "maximum": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "inclusive"
                          ],
                          "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "The maximum value."
                            },
                            "inclusive": {
                              "type": "boolean",
                              "description": "Indicates whether the maximum value is included in the range or not.",
                              "default": true
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "x-allowNullValue": true
                        }
                      },
                      "x-property-sort": [
                        "minimum",
                        "maximum"
                      ],
                      "description": "Value range of the proportion of the nominal amount protected against loss."
                    },
                    "underlying": {
                      "description": "Underlying selection. A list of underlyings can be selected by either using their instrument identifiers, see parameter `underlying.instrument.ids` or by using their notation identifiers, see parameter `underlying.notation.ids` but not both at the same time. Only one of the provided identifiers needs to be matched in order for a securitized derivative to be returned in the result.\n\n The list of underlyings is particularly useful to search for securitized derivatives that have very similar but not exactly the same underlyings such as futures with different maturities on a given commodity, e.g. brent crude oil. For such a list of underlyings, a barrier restriction in absolute terms, see for example parameter `singleBarriers.level.absolute` or `rangeBarriers.upper.level.absolute`, will provide a meaningful result, whereas for a list of non-similar underlyings, such as different stocks, a barrier restriction in absolute terms will not provide a meaningful result. This is due to the fact that futures on the same commodity are comparable in regards to their prices while two different stocks are not comparable.\n\n Parameters in relative terms, see for example parameter `singleBarriers.distance.relative`, are generally comparable and will provide meaningful result for a list of similar as well as for a list of non-similar underlyings.\n\n For the selection of the effective underling of factor certificates, use `factorCertificates.effectiveUnderlying.instrument.ids`.",
                      "type": "object",
                      "x-property-sort": [
                        "instrument",
                        "notation"
                      ],
                      "x-atMostOne": true,
                      "properties": {
                        "instrument": {
                          "description": "Underlying selection using instrument identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of instrument identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        },
                        "notation": {
                          "description": "Underlying selection using notation identifiers.",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of notation identifiers.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        }
                      }
                    },
                    "cashFlowCurrency": {
                      "description": "Main currency of the cash flows. A cash flow is a payout dependent on whether or not the underlying level, e.g. a stock's price, will reach a given threshold, called barrier, at a given time.",
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values.",
                          "type": "number",
                          "format": "id32",
                          "x-positive": true
                        }
                      }
                    },
                    "singleBarriers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "observation",
                          "level",
                          "distance",
                          "breach",
                          "cashFlow"
                        ],
                        "properties": {
                          "type": {
                            "description": "The type of the barrier. See endpoint `/securitizedDerivative/barrier/type/list` for additional information. Note that not all barrier types listed in the mentioned endpoint can be used as a parameter.",
                            "type": "string",
                            "x-enum-description": [
                              "Represents the underlying level that needs to be reached in order for the securitized derivative to yield a profit; particularly relevant for reverse convertible bonds, sprint/outperformance certificates, capital-protection certificates, warrants and knock-out certificates.",
                              "Represents the underlying level considered for repayment if the knock-in barrier is intact; particularly relevant for bonus certificates.",
                              "Represents the maximum underlying level considered for repayment; particularly relevant for discount certificates, bonus certificates, and capital-protection certificates.",
                              "Represents the underlying level where a securitized derivative is terminated and becomes (nearly) worthless; particularly relevant for knock-out certificates.",
                              "Represents the underling level at which a certain product feature (such as a bonus payment) is lost; particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.",
                              "Represents the underlying level at which the securitized derivative is terminated yielding a predefined amount; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter.",
                              "Represents the underlying level at which a certain repayment at maturity is ensured; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter.",
                              "Represents the underlying level corresponding to a guranteed repayment; particularly relevant for capital-protection certificates.",
                              "Represents the underlying level at which a partial payment (such as a conditional coupon) is lost; particularly relevant for capital-protection certificates and express certificates but currently not supported for the latter."
                            ],
                            "enum": [
                              "strike",
                              "bonusLevel",
                              "cap",
                              "knockOut",
                              "knockIn",
                              "lockOut",
                              "lockIn",
                              "capitalGuarantee",
                              "couponTriggerLevel"
                            ]
                          },
                          "observation": {
                            "type": "object",
                            "x-property-sort": [
                              "type"
                            ],
                            "description": "Barrier observation modality; applicable to the following barrier types: `knockIn`, `knockOut`, `lockIn`, and `lockOut`.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the barrier observation.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              }
                            }
                          },
                          "level": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute"
                            ],
                            "description": "Barrier level.",
                            "properties": {
                              "absolute": {
                                "type": "object",
                                "format": "realRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the absolute barrier level."
                              }
                            }
                          },
                          "distance": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative"
                            ],
                            "description": "Distance of the current underlying level to the barrier level.",
                            "properties": {
                              "absolute": {
                                "type": "object",
                                "format": "realRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "real",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the absolute distance."
                              },
                              "relative": {
                                "type": "object",
                                "format": "relativeValueRange",
                                "properties": {
                                  "minimum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "relativeValue",
                                        "description": "The minimum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the minimum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  },
                                  "maximum": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "value",
                                      "inclusive"
                                    ],
                                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "relativeValue",
                                        "description": "The maximum value."
                                      },
                                      "inclusive": {
                                        "type": "boolean",
                                        "description": "Indicates whether the maximum value is included in the range or not.",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "x-allowNullValue": true
                                  }
                                },
                                "x-property-sort": [
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Value range of the distance in relative terms."
                              }
                            }
                          },
                          "breach": {
                            "description": "Parameters related to a barrier breach; applicable to the following barrier types: `knockIn` and `knockOut`",
                            "type": "object",
                            "x-property-sort": [
                              "breached"
                            ],
                            "properties": {
                              "breached": {
                                "type": "string",
                                "description": "Defines whether or not securitized derivatives for which the barrier has been breached are included in the result.",
                                "default": "exclude",
                                "x-enum-description": [
                                  "The result is not limited with regard to whether the barrier has been breached or not.",
                                  "The result is limited to securitized derivatives for which the barrier has been breached.",
                                  "The result is limited to securitized derivatives for which the barrier has not been breached."
                                ],
                                "enum": [
                                  "all",
                                  "only",
                                  "exclude"
                                ]
                              }
                            }
                          },
                          "cashFlow": {
                            "type": "object",
                            "format": "realRange",
                            "properties": {
                              "minimum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The minimum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the minimum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              },
                              "maximum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The maximum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the maximum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              }
                            },
                            "x-property-sort": [
                              "minimum",
                              "maximum"
                            ],
                            "description": "Value range of the cash flow related to the barrier; applicable to the following barrier types: `cap`, `knockIn`, `lockOut`, `lockIn`, `capitalGuarantee`, and `couponTriggerLevel`."
                          }
                        }
                      },
                      "description": "Single barriers. Barriers of this kind represent either a lower or an upper bound derived from the exercise right of the securitized derivative. Multiple barrier types may be used in one request."
                    },
                    "rangeBarriers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "observation",
                          "upper",
                          "lower",
                          "breach",
                          "cashFlow"
                        ],
                        "properties": {
                          "type": {
                            "description": "The type of the barrier. See endpoint `/securitizedDerivative/barrier/type/list` for additional information. Note that not all barrier types listed in the mentioned endpoint can be used as a parameter.",
                            "type": "string",
                            "x-enum-description": [
                              "Represents the upper and lower bound of the underlying level where a securitized derivative is terminated and becomes (nearly) worthless; particularly relevant for range knock-out certificates such as inline certificates."
                            ],
                            "enum": [
                              "rangeKnockOut"
                            ]
                          },
                          "observation": {
                            "type": "object",
                            "x-property-sort": [
                              "type"
                            ],
                            "description": "Barrier observation modality.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the barrier observation.",
                                "x-enum-description": [
                                  "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                  "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                ],
                                "enum": [
                                  "continuous",
                                  "eod"
                                ]
                              }
                            }
                          },
                          "upper": {
                            "type": "object",
                            "x-property-sort": [
                              "level"
                            ],
                            "description": "Parameters related to the upper bound.",
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute"
                                ],
                                "description": "Barrier level.",
                                "properties": {
                                  "absolute": {
                                    "type": "object",
                                    "format": "realRange",
                                    "properties": {
                                      "minimum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The minimum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the minimum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      },
                                      "maximum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The maximum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the maximum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      }
                                    },
                                    "x-property-sort": [
                                      "minimum",
                                      "maximum"
                                    ],
                                    "description": "Value range of the absolute barrier level."
                                  }
                                }
                              }
                            }
                          },
                          "lower": {
                            "type": "object",
                            "x-property-sort": [
                              "level"
                            ],
                            "description": "Parameters related to the lower bound.",
                            "properties": {
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute"
                                ],
                                "description": "Barrier level.",
                                "properties": {
                                  "absolute": {
                                    "type": "object",
                                    "format": "realRange",
                                    "properties": {
                                      "minimum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The minimum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the minimum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      },
                                      "maximum": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "value",
                                          "inclusive"
                                        ],
                                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "real",
                                            "description": "The maximum value."
                                          },
                                          "inclusive": {
                                            "type": "boolean",
                                            "description": "Indicates whether the maximum value is included in the range or not.",
                                            "default": true
                                          }
                                        },
                                        "required": [
                                          "value"
                                        ],
                                        "x-allowNullValue": true
                                      }
                                    },
                                    "x-property-sort": [
                                      "minimum",
                                      "maximum"
                                    ],
                                    "description": "Value range of the absolute barrier level."
                                  }
                                }
                              }
                            }
                          },
                          "breach": {
                            "description": "Parameters related to a barrier breach; applicable to the following barrier types: `knockIn` and `knockOut`",
                            "type": "object",
                            "x-property-sort": [
                              "breached"
                            ],
                            "properties": {
                              "breached": {
                                "type": "string",
                                "description": "Defines whether or not securitized derivatives for which the barrier has been breached are included in the result.",
                                "default": "exclude",
                                "x-enum-description": [
                                  "The result is not limited with regard to whether the barrier has been breached or not.",
                                  "The result is limited to securitized derivatives for which the barrier has been breached.",
                                  "The result is limited to securitized derivatives for which the barrier has not been breached."
                                ],
                                "enum": [
                                  "all",
                                  "only",
                                  "exclude"
                                ]
                              }
                            }
                          },
                          "cashFlow": {
                            "type": "object",
                            "format": "realRange",
                            "properties": {
                              "minimum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The minimum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the minimum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              },
                              "maximum": {
                                "type": "object",
                                "x-property-sort": [
                                  "value",
                                  "inclusive"
                                ],
                                "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "The maximum value."
                                  },
                                  "inclusive": {
                                    "type": "boolean",
                                    "description": "Indicates whether the maximum value is included in the range or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "x-allowNullValue": true
                              }
                            },
                            "x-property-sort": [
                              "minimum",
                              "maximum"
                            ],
                            "description": "Value range of the cash flow related to the barrier; applicable to the following barrier types: `cap`, `knockIn`, `lockOut`, `lockIn`, `capitalGuarantee`, and `couponTriggerLevel`."
                          }
                        }
                      },
                      "description": "Range barriers. Barriers of this kind represent a range with a lower and an upper bound."
                    },
                    "factorCertificates": {
                      "type": "object",
                      "x-property-sort": [
                        "effectiveUnderlying",
                        "participation",
                        "constantLeverage"
                      ],
                      "description": "Parameters for factor certificates.",
                      "properties": {
                        "effectiveUnderlying": {
                          "type": "object",
                          "x-property-sort": [
                            "instrument"
                          ],
                          "description": "Selection of the effective underlying. The underlying of a factor certificate is usually a factor index which is an artificial index used to calculate the leveraged daily performance of another financial instrument called its effective underlying.",
                          "properties": {
                            "instrument": {
                              "description": "Selection of the effective underlying using instrument identifiers.",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of instrument identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        },
                        "participation": {
                          "type": "string",
                          "description": "Participation direction of the factor certificate at the level movement of its effective underlying.",
                          "x-enum-description": [
                            "The factor certificate participates positively with rising levels of its effective underlying.",
                            "The factor certificate participates negatively with rising levels of its effective underlying."
                          ],
                          "enum": [
                            "long",
                            "short"
                          ]
                        },
                        "constantLeverage": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the constant leverage."
                        }
                      }
                    },
                    "nominalCurrency": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Main currency of the nominal and of the coupon payments.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values."
                        }
                      }
                    },
                    "currentInterestRate": {
                      "type": "object",
                      "x-property-sort": [
                        "type",
                        "value"
                      ],
                      "description": "Parameters regarding the interest rate of the current coupon period.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the interest rate.",
                          "x-enum-description": [
                            "The interest rate is fixed for all periods and remains unchanged throughout the lifetime of the securitized derivative.",
                            "The interest rate is variable and might change from period to period throughout the lifetime of the securitized derivative."
                          ],
                          "enum": [
                            "fixed",
                            "variable"
                          ]
                        },
                        "value": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the interest rate of the current coupon period. For coupon periods different than one year, the value is annualized. Not available for securitized derivatives with a current interest rate type other than `fixed`."
                        }
                      }
                    },
                    "keyFigures": {
                      "type": "object",
                      "x-property-sort": [
                        "bonusYield",
                        "sidewaysYield",
                        "maximumYield",
                        "agio",
                        "discount",
                        "breakEven",
                        "spread",
                        "delta",
                        "thetaOneWeek",
                        "vega",
                        "leverage",
                        "omega",
                        "impliedVolatility",
                        "intrinsicValue",
                        "timeValue",
                        "outperformancePoint",
                        "parity"
                      ],
                      "description": "Key figures specific to securitized derivatives; based on ask prices.",
                      "properties": {
                        "bonusYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Bonus yield. It represents the bonus level adjusted for the cover ratio and currency cross rate minus the ask price of the securitized derivative. The value can become negative (e.g. for uncapped products), which does not mean that the investor will necessarily suffer a loss buying it. This key figure is calculated for bonus certificates with an intact knock-in barrier only. To restrict the result to bonus certificates with an intact knock in barrier, the parameter `singleBarriers.type` must be set to `knockIn` and the parameter `singleBarriers.breach.breached` must be set to `false`.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the bonus yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized bonus yield relative to the ask price."
                            }
                          }
                        },
                        "sidewaysYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Sideways yield. It represents a hypothetical payout at maturity minus the ask price of the securitized derivative, under the assumption that all payout-influencing factors remain unchanged until maturity.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the sideways yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized sideways yield relative to the ask price."
                            }
                          }
                        },
                        "maximumYield": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Maximum yield. It represents a hypothetical maximum payout at maturity minus the ask price of the derivative. This key figure represents a theoretically possible best-case scenario, disregarding the probability of occurrence. It is calculated only for securitized derivatives with a limited payout (e.g. capped products).",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the maximum yield relative to the ask price."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized maximum yield relative to the ask price."
                            }
                          }
                        },
                        "agio": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative",
                            "annualized"
                          ],
                          "description": "Agio. For plain vanilla warrants, it represents the difference between the ask price of the derivative and its parity (see attribute `parity`). Thus, for those with exercise right `call`, the agio indicates how much more expensive would it be to obtain the underlying through purchasing and exercising the warrant compared to directly purchasing the underlying. For those with exercise right `put`, the above consideration is applied inversely. For other types of securitized derivatives, the calculation and interpretation of the agio depends on their category. Negative values are possible.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the agio relative to the underlying level."
                            },
                            "annualized": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the annualized agio relative to the underlying level."
                            }
                          }
                        },
                        "discount": {
                          "type": "object",
                          "x-property-sort": [
                            "absolute",
                            "relative"
                          ],
                          "description": "Discount. It represents the difference between the ask price of the securitized derivative and the underlying level, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for discount certificates.",
                          "properties": {
                            "absolute": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount in absolute terms."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the discount relative to the underlying level."
                            }
                          }
                        },
                        "breakEven": {
                          "type": "object",
                          "x-property-sort": [
                            "breakEvenPoint",
                            "distance"
                          ],
                          "description": "Break even point. It represents the underlying level that has to be reached at maturity, such that no loss or profit occurs for the holder of the securitized derivative.",
                          "properties": {
                            "breakEvenPoint": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the break even point."
                            },
                            "distance": {
                              "type": "object",
                              "x-property-sort": [
                                "absolute",
                                "relative"
                              ],
                              "description": "Distance from the underlying level to the break even point.",
                              "properties": {
                                "absolute": {
                                  "type": "object",
                                  "format": "realRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance in absolute terms."
                                },
                                "relative": {
                                  "type": "object",
                                  "format": "relativeValueRange",
                                  "properties": {
                                    "minimum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "The minimum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the minimum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    },
                                    "maximum": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "inclusive"
                                      ],
                                      "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "The maximum value."
                                        },
                                        "inclusive": {
                                          "type": "boolean",
                                          "description": "Indicates whether the maximum value is included in the range or not.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "value"
                                      ],
                                      "x-allowNullValue": true
                                    }
                                  },
                                  "x-property-sort": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Value range of the distance relative to the underlying level."
                                }
                              }
                            }
                          }
                        },
                        "spread": {
                          "type": "object",
                          "x-property-sort": [
                            "harmonized",
                            "relative"
                          ],
                          "description": "Spread. It represents the difference between the ask and bid price.",
                          "properties": {
                            "harmonized": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread in absolute terms, adjusted for the cover ratio."
                            },
                            "relative": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the spread relative to the ask price."
                            }
                          }
                        },
                        "delta": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Delta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of a derivative for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the derivative relative to changes in the underlying level. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the delta calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "thetaOneWeek": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Weekly theta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of a derivative for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the derivative relative to changes in the residual term. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the weekly theta calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "vega": {
                          "type": "object",
                          "x-property-sort": [
                            "effective",
                            "unadjusted"
                          ],
                          "description": "Vega. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of a derivative for an absolute change of the implied volatility, thus it represents the price sensitivity of the derivative relative to changes in the implied volatility. This key figure is calculated for plain vanilla warrants only.",
                          "properties": {
                            "effective": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using the actual cover ratio of the securitized derivative."
                            },
                            "unadjusted": {
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range of the vega calculated using a (hypothetical) cover ratio of 1:1."
                            }
                          }
                        },
                        "leverage": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged securitized derivatives (e.g. warrants, knock-out certificates)."
                        },
                        "omega": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the omega. It represents unadjusted delta (see attribute `delta.unadjusted`) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative's price regarding the underlying level. This key figure is calculated for plain vanilla warrants only."
                        },
                        "impliedVolatility": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative's pricing model (such as Black - Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only."
                        },
                        "intrinsicValue": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only."
                        },
                        "timeValue": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value. This key figure is calculated for plain vanilla warrants only."
                        },
                        "outperformancePoint": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products)."
                        },
                        "parity": {
                          "type": "object",
                          "format": "realRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range of the parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only."
                        }
                      }
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "intraday",
                        "sinceIssue",
                        "endOfDay"
                      ],
                      "description": "Relative performance for different time ranges.",
                      "properties": {
                        "intraday": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range intraday. That is the difference of a notation's most recent price from the current trading day against the most recent EOD closing price."
                        },
                        "sinceIssue": {
                          "type": "object",
                          "x-property-sort": [
                            "ask",
                            "bid"
                          ],
                          "description": "Relative performance since issue. That is the difference of a notation's most recent price against the price on the issue date, relative to the price on the issue date.",
                          "properties": {
                            "ask": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the ask-based relative performance since issue."
                            },
                            "bid": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the bid-based relative performance since issue."
                            }
                          }
                        },
                        "endOfDay": {
                          "type": "object",
                          "x-property-sort": [
                            "day1",
                            "week1",
                            "month1",
                            "months3",
                            "months6",
                            "year1",
                            "years3",
                            "years5",
                            "yearToDate"
                          ],
                          "description": "End-of-day (EOD) relative performance for different time ranges. The relative performance is the difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date.",
                          "properties": {
                            "day1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one day."
                            },
                            "week1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one week."
                            },
                            "month1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one month."
                            },
                            "months3": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three months."
                            },
                            "months6": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range six months."
                            },
                            "year1": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range one year."
                            },
                            "years3": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range three years."
                            },
                            "years5": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range five years."
                            },
                            "yearToDate": {
                              "type": "object",
                              "format": "relativeValueRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "relativeValue",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ],
                              "description": "Value range for the time range year-to-date (YTD)."
                            }
                          }
                        }
                      }
                    },
                    "volatility": {
                      "type": "object",
                      "x-property-sort": [
                        "week1",
                        "month1",
                        "months3",
                        "months6",
                        "year1",
                        "years3",
                        "years5",
                        "yearToDate"
                      ],
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year for different time ranges.",
                      "properties": {
                        "week1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one week."
                        },
                        "month1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one month."
                        },
                        "months3": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three months."
                        },
                        "months6": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range six months."
                        },
                        "year1": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range one year."
                        },
                        "years3": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range three years."
                        },
                        "years5": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range five years."
                        },
                        "yearToDate": {
                          "type": "object",
                          "format": "relativeValueRange",
                          "properties": {
                            "minimum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The minimum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the minimum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            },
                            "maximum": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "inclusive"
                              ],
                              "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "The maximum value."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Indicates whether the maximum value is included in the range or not.",
                                  "default": true
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "x-allowNullValue": true
                            }
                          },
                          "x-property-sort": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Value range for the time range year-to-date (YTD)."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "symbol",
                          "-symbol",
                          "market.name",
                          "-market.name",
                          "instrument.name",
                          "-instrument.name",
                          "instrument.shortName",
                          "-instrument.shortName",
                          "instrument.categorization.ddv.level1.name",
                          "-instrument.categorization.ddv.level1.name",
                          "instrument.categorization.ddv.level2.name",
                          "-instrument.categorization.ddv.level2.name",
                          "instrument.categorization.ddv.level3.name",
                          "-instrument.categorization.ddv.level3.name",
                          "instrument.categorization.eusipa.level1.name",
                          "-instrument.categorization.eusipa.level1.name",
                          "instrument.categorization.eusipa.level2.name",
                          "-instrument.categorization.eusipa.level2.name",
                          "instrument.categorization.eusipa.level3.name",
                          "-instrument.categorization.eusipa.level3.name",
                          "instrument.lifeCycle.maturity.date",
                          "-instrument.lifeCycle.maturity.date",
                          "instrument.lifeCycle.maturity.remainingTermDays",
                          "-instrument.lifeCycle.maturity.remainingTermDays",
                          "instrument.lifeCycle.maturity.perpetual",
                          "-instrument.lifeCycle.maturity.perpetual",
                          "instrument.lifeCycle.callable",
                          "-instrument.lifeCycle.callable",
                          "instrument.lifeCycle.valuation",
                          "-instrument.lifeCycle.valuation",
                          "instrument.lifeCycle.repayment",
                          "-instrument.lifeCycle.repayment",
                          "instrument.issuer.name",
                          "-instrument.issuer.name",
                          "instrument.issuer.group.name",
                          "-instrument.issuer.group.name",
                          "instrument.exercise.right",
                          "-instrument.exercise.right",
                          "instrument.exercise.style",
                          "-instrument.exercise.style",
                          "instrument.settlement",
                          "-instrument.settlement",
                          "instrument.quanto",
                          "-instrument.quanto",
                          "instrument.capitalProtection",
                          "-instrument.capitalProtection",
                          "instrument.underlying.name",
                          "-instrument.underlying.name",
                          "instrument.underlying.valueUnit.code",
                          "-instrument.underlying.valueUnit.code",
                          "instrument.underlying.notation.instrument.typeComposite",
                          "-instrument.underlying.notation.instrument.typeComposite",
                          "instrument.strike.value",
                          "-instrument.strike.value",
                          "instrument.strike.distance.absolute",
                          "-instrument.strike.distance.absolute",
                          "instrument.strike.distance.relative",
                          "-instrument.strike.distance.relative",
                          "instrument.bonusLevel.value",
                          "-instrument.bonusLevel.value",
                          "instrument.bonusLevel.distance.absolute",
                          "-instrument.bonusLevel.distance.absolute",
                          "instrument.bonusLevel.distance.relative",
                          "-instrument.bonusLevel.distance.relative",
                          "instrument.cap.value",
                          "-instrument.cap.value",
                          "instrument.cap.distance.absolute",
                          "-instrument.cap.distance.absolute",
                          "instrument.cap.distance.relative",
                          "-instrument.cap.distance.relative",
                          "instrument.cap.cashFlow",
                          "-instrument.cap.cashFlow",
                          "instrument.knockOut.observation.type",
                          "-instrument.knockOut.observation.type",
                          "instrument.knockOut.value",
                          "-instrument.knockOut.value",
                          "instrument.knockOut.distance.absolute",
                          "-instrument.knockOut.distance.absolute",
                          "instrument.knockOut.distance.relative",
                          "-instrument.knockOut.distance.relative",
                          "instrument.knockOut.breach.breached",
                          "-instrument.knockOut.breach.breached",
                          "instrument.knockOut.breach.datetime",
                          "-instrument.knockOut.breach.datetime",
                          "instrument.knockIn.observation.type",
                          "-instrument.knockIn.observation.type",
                          "instrument.knockIn.value",
                          "-instrument.knockIn.value",
                          "instrument.knockIn.distance.absolute",
                          "-instrument.knockIn.distance.absolute",
                          "instrument.knockIn.distance.relative",
                          "-instrument.knockIn.distance.relative",
                          "instrument.knockIn.breach.breached",
                          "-instrument.knockIn.breach.breached",
                          "instrument.knockIn.breach.datetime",
                          "-instrument.knockIn.breach.datetime",
                          "instrument.lockOut.observation.type",
                          "-instrument.lockOut.observation.type",
                          "instrument.lockOut.value",
                          "-instrument.lockOut.value",
                          "instrument.lockOut.distance.absolute",
                          "-instrument.lockOut.distance.absolute",
                          "instrument.lockOut.distance.relative",
                          "-instrument.lockOut.distance.relative",
                          "instrument.lockOut.cashFlow",
                          "-instrument.lockOut.cashFlow",
                          "instrument.lockIn.observation.type",
                          "-instrument.lockIn.observation.type",
                          "instrument.lockIn.value",
                          "-instrument.lockIn.value",
                          "instrument.lockIn.distance.absolute",
                          "-instrument.lockIn.distance.absolute",
                          "instrument.lockIn.distance.relative",
                          "-instrument.lockIn.distance.relative",
                          "instrument.lockIn.cashFlow",
                          "-instrument.lockIn.cashFlow",
                          "instrument.capitalGuarantee.value",
                          "-instrument.capitalGuarantee.value",
                          "instrument.capitalGuarantee.distance.absolute",
                          "-instrument.capitalGuarantee.distance.absolute",
                          "instrument.capitalGuarantee.distance.relative",
                          "-instrument.capitalGuarantee.distance.relative",
                          "instrument.capitalGuarantee.cashFlow",
                          "-instrument.capitalGuarantee.cashFlow",
                          "instrument.couponTriggerLevel.value",
                          "-instrument.couponTriggerLevel.value",
                          "instrument.couponTriggerLevel.distance.absolute",
                          "-instrument.couponTriggerLevel.distance.absolute",
                          "instrument.couponTriggerLevel.distance.relative",
                          "-instrument.couponTriggerLevel.distance.relative",
                          "instrument.couponTriggerLevel.cashFlow",
                          "-instrument.couponTriggerLevel.cashFlow",
                          "instrument.rangeKnockOut.observation.type",
                          "-instrument.rangeKnockOut.observation.type",
                          "instrument.rangeKnockOut.upper.value",
                          "-instrument.rangeKnockOut.upper.value",
                          "instrument.rangeKnockOut.lower.value",
                          "-instrument.rangeKnockOut.lower.value",
                          "instrument.rangeKnockOut.breach.breached",
                          "-instrument.rangeKnockOut.breach.breached",
                          "instrument.rangeKnockOut.breach.datetime",
                          "-instrument.rangeKnockOut.breach.datetime",
                          "instrument.rangeKnockOut.cashFlow",
                          "-instrument.rangeKnockOut.cashFlow",
                          "instrument.participation",
                          "-instrument.participation",
                          "instrument.constantLeverage",
                          "-instrument.constantLeverage",
                          "instrument.nominalCurrency.isoCode",
                          "-instrument.nominalCurrency.isoCode",
                          "instrument.currentInterestRate.type",
                          "-instrument.currentInterestRate.type",
                          "instrument.currentInterestRate.value",
                          "-instrument.currentInterestRate.value",
                          "keyFigures.bonusYield.absolute",
                          "-keyFigures.bonusYield.absolute",
                          "keyFigures.bonusYield.relative",
                          "-keyFigures.bonusYield.relative",
                          "keyFigures.bonusYield.annualized",
                          "-keyFigures.bonusYield.annualized",
                          "keyFigures.sidewaysYield.absolute",
                          "-keyFigures.sidewaysYield.absolute",
                          "keyFigures.sidewaysYield.relative",
                          "-keyFigures.sidewaysYield.relative",
                          "keyFigures.sidewaysYield.annualized",
                          "-keyFigures.sidewaysYield.annualized",
                          "keyFigures.maximumYield.absolute",
                          "-keyFigures.maximumYield.absolute",
                          "keyFigures.maximumYield.relative",
                          "-keyFigures.maximumYield.relative",
                          "keyFigures.maximumYield.annualized",
                          "-keyFigures.maximumYield.annualized",
                          "keyFigures.agio.absolute",
                          "-keyFigures.agio.absolute",
                          "keyFigures.agio.relative",
                          "-keyFigures.agio.relative",
                          "keyFigures.agio.annualized",
                          "-keyFigures.agio.annualized",
                          "keyFigures.discount.absolute",
                          "-keyFigures.discount.absolute",
                          "keyFigures.discount.relative",
                          "-keyFigures.discount.relative",
                          "keyFigures.breakEven.breakEvenPoint",
                          "-keyFigures.breakEven.breakEvenPoint",
                          "keyFigures.spread.harmonized",
                          "-keyFigures.spread.harmonized",
                          "keyFigures.spread.relative",
                          "-keyFigures.spread.relative",
                          "keyFigures.delta.effective",
                          "-keyFigures.delta.effective",
                          "keyFigures.delta.unadjusted",
                          "-keyFigures.delta.unadjusted",
                          "keyFigures.thetaOneWeek.effective",
                          "-keyFigures.thetaOneWeek.effective",
                          "keyFigures.thetaOneWeek.unadjusted",
                          "-keyFigures.thetaOneWeek.unadjusted",
                          "keyFigures.vega.effective",
                          "-keyFigures.vega.effective",
                          "keyFigures.vega.unadjusted",
                          "-keyFigures.vega.unadjusted",
                          "keyFigures.leverage",
                          "-keyFigures.leverage",
                          "keyFigures.omega",
                          "-keyFigures.omega",
                          "keyFigures.impliedVolatility",
                          "-keyFigures.impliedVolatility",
                          "keyFigures.intrinsicValue",
                          "-keyFigures.intrinsicValue",
                          "keyFigures.timeValue",
                          "-keyFigures.timeValue",
                          "keyFigures.outperformancePoint",
                          "-keyFigures.outperformancePoint",
                          "keyFigures.parity",
                          "-keyFigures.parity",
                          "performance.intraday",
                          "-performance.intraday",
                          "performance.sinceIssue.ask",
                          "-performance.sinceIssue.ask",
                          "performance.sinceIssue.bid",
                          "-performance.sinceIssue.bid",
                          "performance.endOfDay.day1",
                          "-performance.endOfDay.day1",
                          "performance.endOfDay.week1",
                          "-performance.endOfDay.week1",
                          "performance.endOfDay.month1",
                          "-performance.endOfDay.month1",
                          "performance.endOfDay.months3",
                          "-performance.endOfDay.months3",
                          "performance.endOfDay.months6",
                          "-performance.endOfDay.months6",
                          "performance.endOfDay.year1",
                          "-performance.endOfDay.year1",
                          "performance.endOfDay.years3",
                          "-performance.endOfDay.years3",
                          "performance.endOfDay.years5",
                          "-performance.endOfDay.years5",
                          "performance.endOfDay.yearToDate",
                          "-performance.endOfDay.yearToDate",
                          "volatility.week1",
                          "-volatility.week1",
                          "volatility.month1",
                          "-volatility.month1",
                          "volatility.months3",
                          "-volatility.months3",
                          "volatility.months6",
                          "-volatility.months6",
                          "volatility.year1",
                          "-volatility.year1",
                          "volatility.years3",
                          "-volatility.years3",
                          "volatility.years5",
                          "-volatility.years5",
                          "volatility.yearToDate",
                          "-volatility.yearToDate"
                        ]
                      },
                      "maxItems": 10,
                      "uniqueItems": true,
                      "default": [
                        "instrument.name"
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the offset-based pagination strategy.",
                      "properties": {
                        "offset": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "default": 0,
                          "description": "Non-negative number of entries to skip, or 0 (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "offset",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort",
                    "pagination"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "fsym",
                      "valueUnit",
                      "market",
                      "instrument",
                      "keyFigures",
                      "performance",
                      "volatility"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "symbol": {
                        "x-sortable": true,
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code"
                        ],
                        "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          }
                        }
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "x-sortable": true,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "shortName",
                          "isin",
                          "nsin",
                          "fsym",
                          "categorization",
                          "lifeCycle",
                          "issuer",
                          "exercise",
                          "settlement",
                          "collateralized",
                          "quanto",
                          "capitalProtection",
                          "underlying",
                          "strike",
                          "bonusLevel",
                          "cap",
                          "knockOut",
                          "knockIn",
                          "lockOut",
                          "lockIn",
                          "capitalGuarantee",
                          "couponTriggerLevel",
                          "rangeKnockOut",
                          "participation",
                          "constantLeverage",
                          "nominalCurrency",
                          "currentInterestRate"
                        ],
                        "description": "Instrument data of the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          },
                          "name": {
                            "x-sortable": true,
                            "x-default-sort-attribute": true,
                            "x-default-sort-direction": 1,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the instrument."
                          },
                          "shortName": {
                            "x-sortable": true,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Short name of the instrument."
                          },
                          "isin": {
                            "type": "string",
                            "description": "The International Securities Identification Number (ISIN) of the instrument.The ISIN is a 12-character code of digits and upper-case letters that uniquely identifiesan instrument."
                          },
                          "nsin": {
                            "type": "object",
                            "x-property-sort": [
                              "wkn",
                              "valor"
                            ],
                            "description": "NSIN data of the instrument.",
                            "properties": {
                              "wkn": {
                                "type": "string",
                                "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                              },
                              "valor": {
                                "type": "string",
                                "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                              }
                            }
                          },
                          "fsym": {
                            "type": "object",
                            "x-property-sort": [
                              "security"
                            ],
                            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                            "properties": {
                              "security": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier"
                                ],
                                "description": "Security-level identifier.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                  }
                                }
                              }
                            }
                          },
                          "categorization": {
                            "type": "object",
                            "x-property-sort": [
                              "ddv",
                              "eusipa"
                            ],
                            "description": "Categorization of the securitized derivative. Not all securitized derivatives have an assignement to all category systems.",
                            "properties": {
                              "ddv": {
                                "type": "object",
                                "x-property-sort": [
                                  "level1",
                                  "level2",
                                  "level3"
                                ],
                                "description": "Categorization based on the DDV (Deutscher Derivate Verband, German for German Derivatives Association) product classification. This category system (id=23) covers securitized derivatives traded in Germany except exchange trade commodities (ETC) and exchange traded notes (ETN).",
                                "properties": {
                                  "level1": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "First, most coarse, level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  },
                                  "level2": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Second level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  },
                                  "level3": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Third, most detailed, level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  }
                                }
                              },
                              "eusipa": {
                                "type": "object",
                                "x-property-sort": [
                                  "level1",
                                  "level2",
                                  "level3"
                                ],
                                "description": "Categorization based on the EUSIPA (European Structured Investment Products Association) product classification. This category system (id=18) covers all securitized derivatives.",
                                "properties": {
                                  "level1": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "First, most coarse, level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  },
                                  "level2": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Second level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  },
                                  "level3": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Third, most detailed, level of categorization.",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true,
                                        "description": "Identifier of the category."
                                      },
                                      "name": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the category."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "lifeCycle": {
                            "type": "object",
                            "x-property-sort": [
                              "issue",
                              "maturity",
                              "callable",
                              "valuation",
                              "repayment"
                            ],
                            "description": "Important dates of the securitized derivative.",
                            "properties": {
                              "issue": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of the issue."
                              },
                              "maturity": {
                                "type": "object",
                                "x-property-sort": [
                                  "date",
                                  "remainingTermDays",
                                  "perpetual"
                                ],
                                "description": "Maturity data.",
                                "properties": {
                                  "date": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "format": "date",
                                    "description": "Date of the securitized derivative's maturity. The value is empty if the instrument is perpetual."
                                  },
                                  "remainingTermDays": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Remaining term to maturity expressed in days. The value is empty if the instrument is perpetual."
                                  },
                                  "perpetual": {
                                    "x-sortable": true,
                                    "type": "boolean",
                                    "description": "If `true`, the securitized derivative is perpetual, i.e. it does not mature, therefore the attributes `date` and `remainingTermDays` are `null`."
                                  }
                                }
                              },
                              "callable": {
                                "x-sortable": true,
                                "type": "boolean",
                                "description": "If `true`, the issuer may redeem the instrument prior to maturity."
                              },
                              "valuation": {
                                "x-sortable": true,
                                "type": "string",
                                "format": "date",
                                "description": "Date of the valuation."
                              },
                              "repayment": {
                                "x-sortable": true,
                                "type": "string",
                                "format": "date",
                                "description": "Date of the repayment."
                              }
                            }
                          },
                          "issuer": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "group"
                            ],
                            "description": "Issuer data of the securitized derivative.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the issuer. See endpoint `/securitizedDerivative/issuer/search` for possible values."
                              },
                              "name": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "Name of the issuer."
                              },
                              "group": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name"
                                ],
                                "description": "Issuer group. The issuer group is defined by FactSet and does not represent an actual juristic person.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the issuer group. See endpoint `/securitizedDerivative/issuer/search` for possible values."
                                  },
                                  "name": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Name of the issuer group."
                                  }
                                }
                              }
                            }
                          },
                          "exercise": {
                            "type": "object",
                            "x-property-sort": [
                              "right",
                              "style"
                            ],
                            "description": "Exercise data of the securitized derivative.",
                            "properties": {
                              "right": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "Exercise right.",
                                "x-enum-description": [
                                  "A put option gives buyer the right, but not the obligation, to sell an asset at a specified price within a specific time period. Put is synonymous to short or bear and is used in a broader sense for products that make profits from falling underlying levels.",
                                  "A call option gives buyer the right, but not the obligation, to buy an asset at a specified price within a specific time period. Call is synonymous to long or bull and is used in a broader sense for products that make profits from rising underlying levels."
                                ],
                                "enum": [
                                  "put",
                                  "call"
                                ]
                              },
                              "style": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "Exercise style.",
                                "x-enum-description": [
                                  "An American-style securitized derivative can be exercised anytime during its life.",
                                  "An European-style securitized derivative can be exercised at maturity only.",
                                  "A Bermudan-style securitized derivative can be exercised only on predetermined dates ."
                                ],
                                "enum": [
                                  "american",
                                  "european",
                                  "bermudan"
                                ]
                              }
                            }
                          },
                          "settlement": {
                            "x-sortable": true,
                            "type": "string",
                            "description": "Settlement of the securitized derivative. It concerns the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out.",
                            "x-enum-description": [
                              "Transfer of a cash amount.",
                              "Physical delivery of the underlying asset.",
                              "Cash or physical, at the discretion of the issuer."
                            ],
                            "enum": [
                              "cash",
                              "physical",
                              "either"
                            ]
                          },
                          "collateralized": {
                            "type": "boolean",
                            "description": "If `true`, this instrument is protected against an issuer default by collateral (e.g. COSI collateralization by SIX Swiss Exchange)."
                          },
                          "quanto": {
                            "x-sortable": true,
                            "type": "boolean",
                            "description": "If `true`, the risk of exchange rate fluctuations between the value unit of the underlying and the value unit of the cash flows is hedged."
                          },
                          "capitalProtection": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Proportion of the nominal amount protected against loss."
                          },
                          "underlying": {
                            "type": "object",
                            "x-property-sort": [
                              "name",
                              "valueUnit",
                              "coverRatio",
                              "notation",
                              "effectiveUnderlying"
                            ],
                            "description": "Underlying data of the securitized derivative.",
                            "properties": {
                              "name": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "Name of the underlying, provided also if there is no notation for the underlying."
                              },
                              "valueUnit": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "code"
                                ],
                                "description": "Value unit of the underlying, provided also if there is no notation for the underlying. See endpoint `/basic/valueUnit/list` for possible values.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the value unit."
                                  },
                                  "code": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Code of the value unit."
                                  }
                                }
                              },
                              "coverRatio": {
                                "type": "number",
                                "format": "real",
                                "description": "Cover ratio. It indicates the number of units of the underlying to which the securitized derivative refers. If the underlying is a bond the cover ratio represents the value of one percentage point. "
                              },
                              "notation": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "instrument"
                                ],
                                "description": "Notation of the underlying. All contained attributes are null if there is no notation for the underlying.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the notation."
                                  },
                                  "instrument": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "typeComposite"
                                    ],
                                    "description": "Instrument of the underlying.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "id64",
                                        "x-positive": true,
                                        "description": "Identifier of the instrument."
                                      },
                                      "typeComposite": {
                                        "x-sortable": true,
                                        "type": "string",
                                        "description": "Type of composite instrument, in case the underlying is a composite instrument.",
                                        "x-enum-description": [
                                          "A basket is a composite instrument which consists of several components. Its value is calculated as the weighted combination of the levels of the components. All weights are positive.",
                                          "An alpha structure is a composite instrument which consists of two components. Its value is calculated as the difference of the performances of the components. The performances are measured starting at the date specified in the conditions of the securitized derivative.",
                                          "A futures spread is a composite instrument which is built of two or more different futures contracts as its components.",
                                          "A factor index is a composite instrument that reflects the day-to-day performance of its component, multiplied with a constant factor. The related capital costs and fees for calculation and administration are not represented."
                                        ],
                                        "enum": [
                                          "basket",
                                          "alphaStructure",
                                          "futuresSpread",
                                          "factorIndex"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "effectiveUnderlying": {
                                "type": "object",
                                "x-property-sort": [
                                  "instrument"
                                ],
                                "description": "Effective underlying of a factor certificate.",
                                "properties": {
                                  "instrument": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Instrument of the effective underlying.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "id64",
                                        "x-positive": true,
                                        "description": "Identifier of the instrument."
                                      },
                                      "name": {
                                        "type": "string",
                                        "format": "localizedString",
                                        "description": "Name of the instrument."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strike": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "distance"
                            ],
                            "description": "Strike of the securitized derivative.",
                            "properties": {
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the strike."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the strike.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              }
                            }
                          },
                          "bonusLevel": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "distance"
                            ],
                            "description": "Bonus level of the securitized derivative.",
                            "properties": {
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the bonus level."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the bonus level.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              }
                            }
                          },
                          "cap": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "distance",
                              "cashFlow"
                            ],
                            "description": "Cap of the securitized derivative.",
                            "properties": {
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the cap."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the cap.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "knockOut": {
                            "type": "object",
                            "x-property-sort": [
                              "observation",
                              "value",
                              "distance",
                              "breach"
                            ],
                            "description": "Knock-out of the securitized derivative.",
                            "properties": {
                              "observation": {
                                "type": "object",
                                "x-property-sort": [
                                  "type"
                                ],
                                "description": "Barrier observation modality.",
                                "properties": {
                                  "type": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Type of the barrier observation.",
                                    "x-enum-description": [
                                      "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                      "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                    ],
                                    "enum": [
                                      "continuous",
                                      "eod"
                                    ]
                                  }
                                }
                              },
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the knock-out."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the knock-out.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "breach": {
                                "type": "object",
                                "x-property-sort": [
                                  "breached",
                                  "datetime"
                                ],
                                "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                "properties": {
                                  "breached": {
                                    "x-sortable": true,
                                    "type": "boolean",
                                    "description": "If `true`, the barrier has been breached."
                                  },
                                  "datetime": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "format": "datetime",
                                    "description": "Date and time of the breach."
                                  }
                                }
                              }
                            }
                          },
                          "knockIn": {
                            "type": "object",
                            "x-property-sort": [
                              "observation",
                              "value",
                              "distance",
                              "breach",
                              "cashFlow"
                            ],
                            "description": "Knock-in of the securitized derivative.",
                            "properties": {
                              "observation": {
                                "type": "object",
                                "x-property-sort": [
                                  "type"
                                ],
                                "description": "Barrier observation modality.",
                                "properties": {
                                  "type": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Type of the barrier observation.",
                                    "x-enum-description": [
                                      "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                      "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                    ],
                                    "enum": [
                                      "continuous",
                                      "eod"
                                    ]
                                  }
                                }
                              },
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the knock-in."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the knock-in.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "breach": {
                                "type": "object",
                                "x-property-sort": [
                                  "breached",
                                  "datetime"
                                ],
                                "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                "properties": {
                                  "breached": {
                                    "x-sortable": true,
                                    "type": "boolean",
                                    "description": "If `true`, the barrier has been breached."
                                  },
                                  "datetime": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "format": "datetime",
                                    "description": "Date and time of the breach."
                                  }
                                }
                              },
                              "cashFlow": {
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "lockOut": {
                            "type": "object",
                            "x-property-sort": [
                              "observation",
                              "value",
                              "distance",
                              "cashFlow"
                            ],
                            "description": "Lock-out of the securitized derivative.",
                            "properties": {
                              "observation": {
                                "type": "object",
                                "x-property-sort": [
                                  "type"
                                ],
                                "description": "Barrier observation modality.",
                                "properties": {
                                  "type": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Type of the barrier observation.",
                                    "x-enum-description": [
                                      "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                      "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                    ],
                                    "enum": [
                                      "continuous",
                                      "eod"
                                    ]
                                  }
                                }
                              },
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the lock-out."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the lock-out.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "lockIn": {
                            "type": "object",
                            "x-property-sort": [
                              "observation",
                              "value",
                              "distance",
                              "cashFlow"
                            ],
                            "description": "Lock-in of the securitized derivative.",
                            "properties": {
                              "observation": {
                                "type": "object",
                                "x-property-sort": [
                                  "type"
                                ],
                                "description": "Barrier observation modality.",
                                "properties": {
                                  "type": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Type of the barrier observation.",
                                    "x-enum-description": [
                                      "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                      "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                    ],
                                    "enum": [
                                      "continuous",
                                      "eod"
                                    ]
                                  }
                                }
                              },
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the lock-in."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the lock-in.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "capitalGuarantee": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "distance",
                              "cashFlow"
                            ],
                            "description": "Capital guarantee of the securitized derivative.",
                            "properties": {
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the capital guarantee."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the capital guarantee.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "couponTriggerLevel": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "distance",
                              "cashFlow"
                            ],
                            "description": "Coupon trigger level of the securitized derivative.",
                            "properties": {
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Value of the coupon trigger level."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance of the current underlying level to the coupon trigger level.",
                                "properties": {
                                  "absolute": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms."
                                  },
                                  "relative": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the current underlying level."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "rangeKnockOut": {
                            "type": "object",
                            "x-property-sort": [
                              "observation",
                              "upper",
                              "lower",
                              "breach",
                              "cashFlow"
                            ],
                            "description": "Range knock-out of the securitized derivative.",
                            "properties": {
                              "observation": {
                                "type": "object",
                                "x-property-sort": [
                                  "type"
                                ],
                                "description": "Barrier observation modality.",
                                "properties": {
                                  "type": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "description": "Type of the barrier observation.",
                                    "x-enum-description": [
                                      "The barrier is observed on a continuous basis (intraday prices are relevant).",
                                      "The barrier is observed only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                    ],
                                    "enum": [
                                      "continuous",
                                      "eod"
                                    ]
                                  }
                                }
                              },
                              "upper": {
                                "type": "object",
                                "x-property-sort": [
                                  "value"
                                ],
                                "description": "Upper bound of the range knock-out.",
                                "properties": {
                                  "value": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Value of the upper bound."
                                  }
                                }
                              },
                              "lower": {
                                "type": "object",
                                "x-property-sort": [
                                  "value"
                                ],
                                "description": "Lower bound of the range knock-out.",
                                "properties": {
                                  "value": {
                                    "x-sortable": true,
                                    "type": "number",
                                    "format": "real",
                                    "description": "Value of the lower bound."
                                  }
                                }
                              },
                              "breach": {
                                "type": "object",
                                "x-property-sort": [
                                  "breached",
                                  "datetime"
                                ],
                                "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                "properties": {
                                  "breached": {
                                    "x-sortable": true,
                                    "type": "boolean",
                                    "description": "If `true`, the barrier has been breached."
                                  },
                                  "datetime": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "format": "datetime",
                                    "description": "Date and time of the breach."
                                  }
                                }
                              },
                              "cashFlow": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Cash flow amount."
                              }
                            }
                          },
                          "participation": {
                            "x-sortable": true,
                            "type": "string",
                            "description": "Participation direction of a factor certificate at the level movement of its effective underlying.",
                            "x-enum-description": [
                              "The factor certificate participates positively with rising levels of its effective underlying.",
                              "The factor certificate participates negatively with rising levels of its effective underlying."
                            ],
                            "enum": [
                              "long",
                              "short"
                            ]
                          },
                          "constantLeverage": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Constant leverage of a factor certificate."
                          },
                          "nominalCurrency": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "isoCode"
                            ],
                            "description": "Main currency of the nominal and of the coupon payments.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for possible values."
                              },
                              "isoCode": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "ISO 4217 code of the currency."
                              }
                            }
                          },
                          "currentInterestRate": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "value"
                            ],
                            "description": "Interest rate of the current coupon period.",
                            "properties": {
                              "type": {
                                "x-sortable": true,
                                "type": "string",
                                "description": "Type of the interest rate.",
                                "x-enum-description": [
                                  "The interest rate is fixed for all periods and remains unchanged throughout the lifetime of the securitized derivative.",
                                  "The interest rate is variable and might change from period to period throughout the lifetime of the securitized derivative."
                                ],
                                "enum": [
                                  "fixed",
                                  "variable"
                                ]
                              },
                              "value": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Interest rate of the current coupon period. For coupon periods different than one year, the value is annualized. Not available for securitized derivatives with a current interest rate type other than `fixed`."
                              }
                            }
                          }
                        }
                      },
                      "keyFigures": {
                        "type": "object",
                        "x-property-sort": [
                          "currency",
                          "bonusYield",
                          "sidewaysYield",
                          "maximumYield",
                          "agio",
                          "discount",
                          "breakEven",
                          "spread",
                          "delta",
                          "thetaOneWeek",
                          "vega",
                          "leverage",
                          "omega",
                          "impliedVolatility",
                          "intrinsicValue",
                          "timeValue",
                          "outperformancePoint",
                          "parity"
                        ],
                        "description": "Key figures specific to securitized derivatives; based on ask prices.",
                        "properties": {
                          "currency": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "isoCode"
                            ],
                            "description": "Main currency of key figures, if not stated otherwise.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the currency. See endpoint `/basic/valueUnit/currency/main/list` for possible values."
                              },
                              "isoCode": {
                                "type": "string",
                                "description": "ISO 4217 code of the currency."
                              }
                            }
                          },
                          "bonusYield": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative",
                              "annualized"
                            ],
                            "description": "Bonus yield. It represents the bonus level adjusted for the cover ratio and currency cross rate minus the ask price of the securitized derivative. The value can become negative (e.g. for uncapped products), which does not mean that the investor will necessarily suffer a loss buying it. This key figure is calculated for bonus certificates with an intact knock-in barrier only, i.e. the attribute `knockIn.breach.breached` is false.",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Bonus yield in absolute terms."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Bonus yield relative to the ask price."
                              },
                              "annualized": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Annualized bonus yield relative to the ask price."
                              }
                            }
                          },
                          "sidewaysYield": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative",
                              "annualized"
                            ],
                            "description": "Sideways yield. It represents a hypothetical payout at maturity minus the ask price of the securitized derivative, under the assumption that all payout-influencing factors remain unchanged until maturity.",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Sideways yield in absolute terms."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Sideways yield relative to the ask price."
                              },
                              "annualized": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Annualized sideways yield relative to the ask price."
                              }
                            }
                          },
                          "maximumYield": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative",
                              "annualized"
                            ],
                            "description": "Maximum yield. It represents a hypothetical maximum payout at maturity minus the ask price of the derivative. This key figure represents a theoretically possible best-case scenario, disregarding the probability of occurrence. It is calculated only for securitized derivatives with a limited payout (e.g. capped products).",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Maximum yield in absolute terms."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Maximum yield relative to the ask price."
                              },
                              "annualized": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Annualized maximum yield relative to the ask price."
                              }
                            }
                          },
                          "agio": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative",
                              "annualized"
                            ],
                            "description": "Agio. For plain vanilla warrants, it represents the difference between the ask price of the derivative and its parity (see attribute `parity`). Thus, for those with exercise right `call`, the agio indicates how much more expensive would it be to obtain the underlying through purchasing and exercising the warrant compared to directly purchasing the underlying. For those with exercise right `put`, the above consideration is applied inversely. For other types of securitized derivatives, the calculation and interpretation of the agio depends on their category. Negative values are possible.",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Agio in absolute terms."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Agio relative to the underlying level."
                              },
                              "annualized": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Annualized agio relative to the underlying level."
                              }
                            }
                          },
                          "discount": {
                            "type": "object",
                            "x-property-sort": [
                              "absolute",
                              "relative"
                            ],
                            "description": "Discount. It represents the difference between the ask price of the securitized derivative and the underlying level, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for discount certificates. For the value unit, see attribute `instrument.underlying.valueUnit.`",
                            "properties": {
                              "absolute": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Discount in absolute terms."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Discount relative to the underlying level."
                              }
                            }
                          },
                          "breakEven": {
                            "type": "object",
                            "x-property-sort": [
                              "breakEvenPoint",
                              "distance"
                            ],
                            "description": "Break even point. It represents the underlying level that has to be reached at maturity, such that no loss or profit occurs for the holder of the securitized derivative.",
                            "properties": {
                              "breakEvenPoint": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Break even point. For the value unit, see attribute `instrument.underlying.valueUnit`."
                              },
                              "distance": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Distance from the underlying level to the break even point.",
                                "properties": {
                                  "absolute": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "Distance in absolute terms. For the value unit, see attribute `instrument.underlying.valueUnit`."
                                  },
                                  "relative": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Distance relative to the underlying level."
                                  }
                                }
                              }
                            }
                          },
                          "spread": {
                            "type": "object",
                            "x-property-sort": [
                              "harmonized",
                              "relative"
                            ],
                            "description": "Spread of the securitized derivative. It represents the difference between the ask and bid price.",
                            "properties": {
                              "harmonized": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Spread in absolute terms, adjusted for the cover ratio."
                              },
                              "relative": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Spread relative to the ask price."
                              }
                            }
                          },
                          "delta": {
                            "type": "object",
                            "x-property-sort": [
                              "effective",
                              "unadjusted"
                            ],
                            "description": "Delta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of a derivative for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the derivative relative to changes in the underlying level. This key figure is calculated for plain vanilla warrants only.",
                            "properties": {
                              "effective": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Delta calculated using the actual cover ration of the securitized derivative."
                              },
                              "unadjusted": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Delta calculated using a (hypothetical) cover ratio of 1:1."
                              }
                            }
                          },
                          "thetaOneWeek": {
                            "type": "object",
                            "x-property-sort": [
                              "effective",
                              "unadjusted"
                            ],
                            "description": "Weekly theta. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7 / 365. Weekly theta indicates the absolute change (decrease) of the price of a derivative for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the derivative relative to changes in the residual term. This key figure is calculated for plain vanilla warrants only.",
                            "properties": {
                              "effective": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Weekly theta calculated using the actual cover ratio of the securitized derivative."
                              },
                              "unadjusted": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Weekly theta calculated using a (hypothetical) cover ratio of 1:1."
                              }
                            }
                          },
                          "vega": {
                            "type": "object",
                            "x-property-sort": [
                              "effective",
                              "unadjusted"
                            ],
                            "description": "Vega. It represents the first partial derivative of the function determining the derivative notation's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of a derivative for an absolute change of the implied volatility, thus it represents the price sensitivity of the derivative relative to changes in the implied volatility. This key figure is calculated for plain vanilla warrants only.",
                            "properties": {
                              "effective": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Vega calculated using the actual cover ratio of the securitized derivative."
                              },
                              "unadjusted": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "Vega calculated using a (hypothetical) cover ratio of 1:1."
                              }
                            }
                          },
                          "leverage": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged securitized derivatives (e.g. warrants, knock-out certificates)."
                          },
                          "omega": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Omega. It represents unadjusted delta (see attribute `delta.unadjusted`) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative's price regarding the underlying level. This key figure is calculated for plain vanilla warrants only."
                          },
                          "impliedVolatility": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only."
                          },
                          "intrinsicValue": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only."
                          },
                          "timeValue": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value (see attribute `intrinsicValue`). This key figure is calculated for plain vanilla warrants only."
                          },
                          "outperformancePoint": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products). For the value unit, see attribute `instrument.underlying.valueUnit`."
                          },
                          "parity": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "real",
                            "description": "Parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only."
                          }
                        }
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "intraday",
                          "sinceIssue",
                          "endOfDay"
                        ],
                        "description": "Relative performance for different time ranges.",
                        "properties": {
                          "intraday": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Intraday relative performance. That is the difference of a notation's most recent price from the current trading day against the most recent EOD closing price."
                          },
                          "sinceIssue": {
                            "type": "object",
                            "x-property-sort": [
                              "ask",
                              "bid"
                            ],
                            "description": "Relative performance since issue. That is the difference of a notation's most recent price against the price on the issue date, relative to the price on the issue date.",
                            "properties": {
                              "ask": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Ask-based relative performance since issue."
                              },
                              "bid": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Bid-based relative performance since issue."
                              }
                            }
                          },
                          "endOfDay": {
                            "type": "object",
                            "x-property-sort": [
                              "day1",
                              "week1",
                              "month1",
                              "months3",
                              "months6",
                              "year1",
                              "years3",
                              "years5",
                              "yearToDate"
                            ],
                            "description": "End-of-day (EOD) relative performance for different time ranges. The relative performance is the difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date.",
                            "properties": {
                              "day1": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "One day."
                              },
                              "week1": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "One week."
                              },
                              "month1": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "One month."
                              },
                              "months3": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Three months."
                              },
                              "months6": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Six months."
                              },
                              "year1": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "One year."
                              },
                              "years3": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Three years."
                              },
                              "years5": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Five years."
                              },
                              "yearToDate": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "relativeValue",
                                "description": "Year-to-date."
                              }
                            }
                          }
                        }
                      },
                      "volatility": {
                        "type": "object",
                        "x-property-sort": [
                          "week1",
                          "month1",
                          "months3",
                          "months6",
                          "year1",
                          "years3",
                          "years5",
                          "yearToDate"
                        ],
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year for different time ranges.",
                        "properties": {
                          "week1": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "One week."
                          },
                          "month1": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "One month."
                          },
                          "months3": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Three months."
                          },
                          "months6": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Six months."
                          },
                          "year1": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "One year."
                          },
                          "years3": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Three years."
                          },
                          "years5": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Five years."
                          },
                          "yearToDate": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Year-to-date."
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/securitizedDerivative/underlying/list": {
      "get": {
        "tags": [
          "securitizedDerivative"
        ],
        "operationId": "get/securitizedDerivative/underlying/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of underlyings with barrier and cash flow information.",
        "description": "Provides details regarding the underlyings, their respective barriers and related cash flows (if any) of a securitized derivative. A unique combination of a cash flow and related barrier modalities, such as observation and level, is called a condition. In case of a securitized derivative with multiple underlyings, a condition comprises the respective barriers of all underlyings participating in that condition. Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term \"level\" is used instead of \"price\", e.g. underlying level instead of underlying price.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Underlying data, barrier conditions, and related cash flows.",
                  "type": "object",
                  "x-property-sort": [
                    "underlyings",
                    "barrierTypeConditions"
                  ],
                  "properties": {
                    "underlyings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "name",
                          "valueUnit",
                          "operatingMIC",
                          "notation",
                          "coverRatio",
                          "referenceLevel",
                          "constantLeverage",
                          "calculationLevel"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the underlying, provided also if there is no notation for the underlying."
                          },
                          "valueUnit": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "code"
                            ],
                            "description": "Value unit of the underlying, provided also if there is no notation for the underlying. See endpoint `/basic/valueUnit/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the value unit."
                              },
                              "code": {
                                "type": "string",
                                "description": "Code of the value unit."
                              }
                            }
                          },
                          "operatingMIC": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "isoCode",
                              "name"
                            ],
                            "description": "The operating MIC of the underlying. See endpoint `/basic/mic/operating/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the operating MIC."
                              },
                              "isoCode": {
                                "type": "string",
                                "description": "ISO 10383 code of the operating MIC."
                              },
                              "name": {
                                "type": "string",
                                "description": "English name of the operating MIC."
                              }
                            }
                          },
                          "notation": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "fsym",
                              "instrument"
                            ],
                            "description": "Notation of the underlying. If there is no notation for the underlying, the object is null.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the notation."
                              },
                              "fsym": {
                                "type": "object",
                                "x-property-sort": [
                                  "listing",
                                  "regional"
                                ],
                                "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                                "properties": {
                                  "listing": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "permanentIdentifier",
                                      "tickerExchange",
                                      "isPrimary"
                                    ],
                                    "description": "Listing-level identifiers.",
                                    "properties": {
                                      "permanentIdentifier": {
                                        "type": "string",
                                        "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                                      },
                                      "tickerExchange": {
                                        "type": "string",
                                        "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                                      }
                                    }
                                  },
                                  "regional": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "permanentIdentifier",
                                      "tickerRegion",
                                      "isPrimary"
                                    ],
                                    "description": "Regional-level identifiers.",
                                    "properties": {
                                      "permanentIdentifier": {
                                        "type": "string",
                                        "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                                      },
                                      "tickerRegion": {
                                        "type": "string",
                                        "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                                      }
                                    }
                                  }
                                }
                              },
                              "instrument": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "fsym",
                                  "typeComposite"
                                ],
                                "description": "Instrument of the underlying.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the instrument."
                                  },
                                  "fsym": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "security"
                                    ],
                                    "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                                    "properties": {
                                      "security": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "permanentIdentifier"
                                        ],
                                        "description": "Security-level identifier.",
                                        "properties": {
                                          "permanentIdentifier": {
                                            "type": "string",
                                            "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "typeComposite": {
                                    "type": "string",
                                    "description": "Type of composite instrument, in case the underlying is a composite instrument.",
                                    "x-enum-description": [
                                      "A basket is a composite instrument which consists of several components. Its value is calculated as the weighted combination of the levels of the components. All weights are positive.",
                                      "An alpha structure is a composite instrument which consists of two components. Its value is calculated as the difference of the performances of the components. The performances are measured starting at the date specified in the conditions of the securitized derivative.",
                                      "A futures spread is a composite instrument which is built of two or more different futures contracts as its components. ",
                                      "A factor index is a composite instrument that reflects the day-to-day performance of its component, multiplied with a constant factor. The related capital costs and fees for calculation and administration are not represented."
                                    ],
                                    "enum": [
                                      "basket",
                                      "alphaStructure",
                                      "futuresSpread",
                                      "factorIndex"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "coverRatio": {
                            "type": "number",
                            "format": "real",
                            "description": "Cover ratio. It indicates the number of units of the underlying to which the securitized derivative refers. If the underlying is a bond the cover ratio represents the value of one percentage point. "
                          },
                          "referenceLevel": {
                            "type": "number",
                            "format": "real",
                            "description": "Level of the underlying on the issue date of the securitized derivative."
                          },
                          "constantLeverage": {
                            "type": "number",
                            "format": "real",
                            "description": "Constant leverage of the underlying for securitized derivatives with constant leverage that do not have a factor index as underlying (i.e. the attribute `typeComposite` of the underlying instrument is not set or is different from 4)."
                          },
                          "calculationLevel": {
                            "type": "object",
                            "x-property-sort": [
                              "value",
                              "time"
                            ],
                            "description": "Details of the underlying regarding the calculation of the barrier key figures, see object `distance`.",
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "real",
                                "description": "Level of the underlying used for calculation."
                              },
                              "time": {
                                "type": "string",
                                "format": "datetime",
                                "description": "Date and time of the level of the underlying used for calculation."
                              }
                            }
                          }
                        }
                      },
                      "description": "Information regarding the underlying(s) of the securitized derivative."
                    },
                    "barrierTypeConditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "barrierType",
                          "conditions"
                        ],
                        "properties": {
                          "barrierType": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name"
                            ],
                            "description": "Barrier type. It defines, among others, a condition with a direct or indirect consequence for the securitized derivative. See endpoint `securitizedDerivative/barrier/type/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the barrier type."
                              },
                              "name": {
                                "type": "string",
                                "description": "English name of the barrier type."
                              }
                            }
                          },
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "observation",
                                "barriers",
                                "cashFlow"
                              ],
                              "properties": {
                                "observation": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "type",
                                    "period"
                                  ],
                                  "description": "Barrier observation modality of the condition.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Identifier of the type of observation during the observation period.",
                                      "x-enum-description": [
                                        "The barrier is active, i.e. observed on a continuous basis (intraday prices are relevant).",
                                        "The barrier is active, i.e. observed  only at the end of the final auction for the underlying on the relevant exchange (intraday prices are of no relevance)."
                                      ],
                                      "enum": [
                                        "continuous",
                                        "eod"
                                      ]
                                    },
                                    "period": {
                                      "type": "object",
                                      "format": "dateRange",
                                      "properties": {
                                        "start": {
                                          "type": "string",
                                          "format": "date",
                                          "description": "Starting date of the observation period (inclusive)."
                                        },
                                        "end": {
                                          "type": "string",
                                          "format": "date",
                                          "description": "Ending date of the observation period (inclusive)."
                                        }
                                      },
                                      "x-property-sort": [
                                        "start",
                                        "end"
                                      ],
                                      "required": [
                                        "start",
                                        "end"
                                      ],
                                      "description": "Observation period."
                                    }
                                  }
                                },
                                "barriers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "underlyingIndex",
                                      "single",
                                      "range"
                                    ],
                                    "properties": {
                                      "underlyingIndex": {
                                        "type": "number",
                                        "format": "int32",
                                        "description": "Index used to identify the underlying associated with that barrier level, in the array `underlyings`, with the first element having index 0."
                                      },
                                      "single": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "level",
                                          "breach",
                                          "distance",
                                          "participationFactor"
                                        ],
                                        "description": "Barrier with a single limit.",
                                        "properties": {
                                          "level": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "absolute",
                                              "relative"
                                            ],
                                            "description": "Level of the barrier.",
                                            "properties": {
                                              "absolute": {
                                                "type": "number",
                                                "format": "real",
                                                "description": "Level in absolute terms."
                                              },
                                              "relative": {
                                                "type": "number",
                                                "format": "relativeValue",
                                                "description": "Level relative to the underlying level on the issue date of the securitized derivative."
                                              }
                                            }
                                          },
                                          "breach": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "isBreached",
                                              "datetimeBreach"
                                            ],
                                            "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                            "properties": {
                                              "isBreached": {
                                                "type": "boolean",
                                                "description": "If set to true, indicates that the barrier has been breached."
                                              },
                                              "datetimeBreach": {
                                                "type": "string",
                                                "format": "datetime",
                                                "description": "Date and time of the breach."
                                              }
                                            }
                                          },
                                          "distance": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "absolute",
                                              "relative"
                                            ],
                                            "description": "Distance of the barrier level to the current underlying level.",
                                            "properties": {
                                              "absolute": {
                                                "type": "number",
                                                "format": "real",
                                                "description": "Distance in absolute terms."
                                              },
                                              "relative": {
                                                "type": "number",
                                                "format": "relativeValue",
                                                "description": "Distance relative to the current underlying level."
                                              }
                                            }
                                          },
                                          "participationFactor": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "positive",
                                              "negative"
                                            ],
                                            "description": "Participation factor of the securitized derivative in the performance of the underlying, depending on the exercise right (see attribute `exercise.right` in endpoint `/securitizedDerivative/get`).",
                                            "properties": {
                                              "positive": {
                                                "type": "number",
                                                "format": "real",
                                                "description": "Participation factor above the barrier for a securitized derivative with exercise right call, and below the barrier for exercise right put. "
                                              },
                                              "negative": {
                                                "type": "number",
                                                "format": "real",
                                                "description": "Participation factor above the barrier for a securitized derivative with exercise right put, and below the barrier for exercise right call."
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "range": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "upper",
                                          "lower"
                                        ],
                                        "description": "Range barrier.",
                                        "properties": {
                                          "upper": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "level",
                                              "breach",
                                              "distance",
                                              "participationFactor"
                                            ],
                                            "description": "Upper bound.",
                                            "properties": {
                                              "level": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "absolute",
                                                  "relative"
                                                ],
                                                "description": "Level of the upper bound.",
                                                "properties": {
                                                  "absolute": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Level in absolute terms."
                                                  },
                                                  "relative": {
                                                    "type": "number",
                                                    "format": "relativeValue",
                                                    "description": "Level relative to the underlying level on the issue date of the securitized derivative."
                                                  }
                                                }
                                              },
                                              "breach": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "isBreached",
                                                  "datetimeBreach"
                                                ],
                                                "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                                "properties": {
                                                  "isBreached": {
                                                    "type": "boolean",
                                                    "description": "If set to true, indicates that the upper bound has been breached."
                                                  },
                                                  "datetimeBreach": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "description": "Date and time of the breach."
                                                  }
                                                }
                                              },
                                              "distance": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "absolute",
                                                  "relative"
                                                ],
                                                "description": "Distance of the upper bound to the current underlying level.",
                                                "properties": {
                                                  "absolute": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Distance in absolute terms."
                                                  },
                                                  "relative": {
                                                    "type": "number",
                                                    "format": "relativeValue",
                                                    "description": "Distance relative to the current underlying level."
                                                  }
                                                }
                                              },
                                              "participationFactor": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "positive",
                                                  "negative"
                                                ],
                                                "description": "Participation factor of the securitized derivative in the performance of the underlying.",
                                                "properties": {
                                                  "positive": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Participation factor above the upper bound."
                                                  },
                                                  "negative": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Participation factor below the upper bound."
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "lower": {
                                            "type": "object",
                                            "x-property-sort": [
                                              "level",
                                              "breach",
                                              "distance",
                                              "participationFactor"
                                            ],
                                            "description": "Lower bound.",
                                            "properties": {
                                              "level": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "absolute",
                                                  "relative"
                                                ],
                                                "description": "Level of the lower bound.",
                                                "properties": {
                                                  "absolute": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Level in absolute terms."
                                                  },
                                                  "relative": {
                                                    "type": "number",
                                                    "format": "relativeValue",
                                                    "description": "Level relative to the underlying level on the issue date of the securitized derivative."
                                                  }
                                                }
                                              },
                                              "breach": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "isBreached",
                                                  "datetimeBreach"
                                                ],
                                                "description": "Information whether or not, and if yes - when a barrier breach has occurred.",
                                                "properties": {
                                                  "isBreached": {
                                                    "type": "boolean",
                                                    "description": "If set to true, indicates that the lower bound has been breached."
                                                  },
                                                  "datetimeBreach": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "description": "Date and time of the breach."
                                                  }
                                                }
                                              },
                                              "distance": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "absolute",
                                                  "relative"
                                                ],
                                                "description": "Distance of the lower bound to the current underlying level.",
                                                "properties": {
                                                  "absolute": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Distance in absolute terms."
                                                  },
                                                  "relative": {
                                                    "type": "number",
                                                    "format": "relativeValue",
                                                    "description": "Distance relative to the current underlying level."
                                                  }
                                                }
                                              },
                                              "participationFactor": {
                                                "type": "object",
                                                "x-property-sort": [
                                                  "positive",
                                                  "negative"
                                                ],
                                                "description": "Participation factor of the securitized derivative in the performance of the underlying.",
                                                "properties": {
                                                  "positive": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Participation factor above the lower bound."
                                                  },
                                                  "negative": {
                                                    "type": "number",
                                                    "format": "real",
                                                    "description": "Participation factor below the lower bound."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "description": "Barrier modality of the condition, alongside with actual key figure and breach information."
                                },
                                "cashFlow": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "currency",
                                    "paymentDate",
                                    "absolute",
                                    "relative"
                                  ],
                                  "description": "Cash flow modality of the condition. A cash flow has either a well-defined amount, or a minimum and/or maximum amount.",
                                  "properties": {
                                    "currency": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "isoCode"
                                      ],
                                      "description": "Main currency in which the monetary amount of the cash flow is paid out. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Idenitifier of the currency."
                                        },
                                        "isoCode": {
                                          "type": "string",
                                          "description": "Currency code according to ISO 4217."
                                        }
                                      }
                                    },
                                    "paymentDate": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "Payment date of the cash flow."
                                    },
                                    "absolute": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "minimum",
                                        "maximum"
                                      ],
                                      "description": "Cash flow in absolute terms.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "Well-defined amount of the cash flow."
                                        },
                                        "minimum": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "Minimum amount of the cash flow."
                                        },
                                        "maximum": {
                                          "type": "number",
                                          "format": "real",
                                          "description": "Maximum amount of the cash flow."
                                        }
                                      }
                                    },
                                    "relative": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "value",
                                        "minimum",
                                        "maximum"
                                      ],
                                      "description": "Cash flow amount relative to the nominal value of the securitized derivative.",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "Well-defined ratio of the cash flow."
                                        },
                                        "minimum": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "Minimum ratio of the cash flow."
                                        },
                                        "maximum": {
                                          "type": "number",
                                          "format": "relativeValue",
                                          "description": "Maximum ratio of the cash flow."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "description": "Set of conditions associated with the given barrier type."
                          }
                        }
                      },
                      "description": "Set of conditions associated with a particular type of barrier. A condition is defined by the related type and level of the barrier, its observation period, and the resulting cash flow, if any."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Prime Developer Trial",
    "version": "v1"
  },
  "x-interface-version": 1,
  "x-documenter-version": "5.38.1",
  "x-api-version": "2.9.1",
  "tags": [
    {
      "name": "securitizedDerivative",
      "description": "securitizedDerivative endpoints"
    }
  ],
  "responses": {
    "ErrorResponse": {
      "description": "Generic error response for all errors (400 ... 599 error codes)",
      "schema": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/definitions/ErrorMetaObject"
          },
          "errors": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMetaObject": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusObject"
        }
      }
    },
    "ErrorObject": {
      "type": "array",
      "description": "The errors member contains additional information about a failed request.",
      "items": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "A human-readable, unstructured explanation specific to this occurrence of the failure."
          },
          "encryptedDetails": {
            "type": "string",
            "description": "Base64-encoded, internal details about the error, in addition to \"details\"."
          },
          "type": {
            "type": "number",
            "format": "int32",
            "description": "Internal error type of the Foundation API protocol."
          },
          "attribute": {
            "type": "array",
            "description": "For a validation error, a reference to the request parameter that failed validation; otherwise, an empty array.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Element of the path denoting the request parameter."
                },
                "index": {
                  "type": "number",
                  "format": "int32",
                  "description": "If the attribute \"name\" designates an array, index of the array element; otherwise the special value -1."
                }
              },
              "x-property-sort": [
                "name",
                "index"
              ]
            }
          }
        },
        "x-property-sort": [
          "detail",
          "encryptedDetails",
          "type",
          "attribute"
        ]
      }
    },
    "AttributesMember": {
      "type": "array",
      "description": "Limit the attributes returned in the response to the specified set.",
      "items": {
        "type": "string",
        "maxLength": 100,
        "exclusiveMaximum": false
      },
      "maxItems": 50,
      "uniqueItems": true
    },
    "LanguageMember": {
      "type": "string",
      "format": "isoLanguage",
      "description": "ISO 639-1 code of the language.",
      "maxLength": 2,
      "minLength": 2,
      "exclusiveMinimum": false,
      "exclusiveMaximum": false
    },
    "StatusObject": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "format": "int32",
          "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1)."
        }
      },
      "description": "The status member contains the status code of the response.",
      "required": [
        "code"
      ]
    },
    "CursorBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of `total` is estimated."
        },
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ]
    },
    "CursorBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
      "properties": {
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "next",
        "previous"
      ],
      "x-property-sort": [
        "next",
        "previous"
      ]
    },
    "OffsetBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of \"total\" is estimated."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal"
      ]
    },
    "OffsetBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy; a total element count is not supported.",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "Flag indicating that a subsequent request with the same parameters, except that the parameter `pagination.offset` is incremented by `pagination.limit`, would yield additional results."
        }
      },
      "required": [
        "hasNext"
      ],
      "x-property-sort": [
        "hasNext"
      ]
    },
    "PartialOutputObject": {
      "type": "object",
      "properties": {
        "isPartial": {
          "type": "boolean",
          "description": "Flag indicating that the response is a possibly incomplete array or an object containing a possibly incomplete array, due to hitting a processing time limit. If `true`, some matching results might be missing from the array, or elements for matching results might be incorrectly included (for example, when priority sorting would have removed the element). Depending on the use case, such a response may be unsuitable."
        }
      },
      "description": "Object denoting that the endpoint response is possibly incomplete.",
      "required": [
        "isPartial"
      ],
      "x-property-sort": [
        "isPartial"
      ]
    }
  },
  "basePath": "/wealth/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "FactSetApiKey": {
      "type": "basic"
    },
    "FactSetOAuth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.factset.com/as/token.oauth2",
      "scopes": {}
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ]
}