{
  "host": "api.factset.com",
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/vendor/chartIQ/timeSeries/eod/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "post/vendor/chartIQ/timeSeries/eod/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day time series data for a notation.",
        "description": "End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "range",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "x-isClosedInterval": false,
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the time series. A valid date range is between 1900-01-01 and the day after the current day."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "range"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "prices"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": ""
                        },
                        "description": ""
                      },
                      "description": "Time series of prices as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp seconds since epoch in UTC; first price; highest price; lowest price; last price; number of units (e.g. shares) traded (price type trade and estimate), offered (price type ask), solicited (price type bid), or empty (price type yield)."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendor/chartIQ/timeSeries/eod/subsample/get": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "post/vendor/chartIQ/timeSeries/eod/subsample/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Single subsample end-of-day data for a notation.",
        "description": "Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "interval",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "interval": {
                      "type": "object",
                      "format": "dateRange",
                      "x-isClosedInterval": false,
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the interval (inclusive). "
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the interval (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Non-empty interval of days specifying a single subsample period. The starting point `start` of the single subsample is usually the attribute `range.end` of a previously received `/vendor/chartIQ/timeSeries/eod/subsample/list` request. A valid range is between 1900-01-01 and a day that is less than or equal to the maximum allowed day determined from the delay period (if any). The ending point `end` may exceed the maximally entitled date range."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "interval"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsample data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "subsample"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "subsample": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "real",
                        "description": ""
                      },
                      "description": "Single summary record. The record consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendor/chartIQ/timeSeries/eod/subsample/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "post/vendor/chartIQ/timeSeries/eod/subsample/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Subsampled end-of-day time series data for a notation.",
        "description": "Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "intervals",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "intervals": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date"
                      },
                      "minItems": 2,
                      "maxItems": 500,
                      "description": "Non-empty intervals of days to consider for the request. The array contains a list of at least two days in increasing order. Each pair of adjacent entries day_n and day_(n+1) specifies a half-open interval, that is a range of days d where day_n <= d < day_(n+1). A subsample is computed for each interval. The valid range of intervals is between 1900-01-01 and the day after the current day."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "intervals"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsampled time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "subsamples"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "subsamples": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": ""
                        },
                        "description": ""
                      },
                      "description": "List of summary records as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendor/chartIQ/timeSeries/intraday/subsample/get": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "post/vendor/chartIQ/timeSeries/intraday/subsample/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Single subsample intraday data for a notation.",
        "description": "Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "from",
                    "granularity",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "BST"
                      ]
                    },
                    "from": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date and time of the start point of the subsample (inclusive). `from` must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`. The data accessible in the past is limited to a few weeks at most. Dates in the future are not allowed."
                    },
                    "granularity": {
                      "type": "string",
                      "description": "Subsample granularities suitable for intraday data.",
                      "default": "1h",
                      "x-enum-description": [
                        "Each subsample interval encompasses 1 second.",
                        "Each subsample interval encompasses 5 seconds.",
                        "Each subsample interval encompasses 10 seconds.",
                        "Each subsample interval encompasses 30 seconds.",
                        "Each subsample interval encompasses 1 minute.",
                        "Each subsample interval encompasses 5 minutes.",
                        "Each subsample interval encompasses 10 minutes.",
                        "Each subsample interval encompasses 15 minutes.",
                        "Each subsample interval encompasses 30 minutes.",
                        "Each subsample interval encompasses 1 hour."
                      ],
                      "enum": [
                        "1s",
                        "5s",
                        "10s",
                        "30s",
                        "1m",
                        "5m",
                        "10m",
                        "15m",
                        "30m",
                        "1h"
                      ]
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "from"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsample data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "subsample"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "subsample": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "real",
                        "description": ""
                      },
                      "description": "Single summary record. The record consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendor/chartIQ/timeSeries/intraday/subsample/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "post/vendor/chartIQ/timeSeries/intraday/subsample/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Subsampled intraday time series data for a notation.",
        "description": "Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "range",
                    "granularity",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "BST"
                      ]
                    },
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive). Dates in the future are not allowed."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date and time range for the time series. The `start` and `end` boundaries must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`."
                    },
                    "granularity": {
                      "type": "string",
                      "description": "Subsample granularities suitable for intraday data.",
                      "default": "1h",
                      "x-enum-description": [
                        "Each subsample interval encompasses 1 second.",
                        "Each subsample interval encompasses 5 seconds.",
                        "Each subsample interval encompasses 10 seconds.",
                        "Each subsample interval encompasses 30 seconds.",
                        "Each subsample interval encompasses 1 minute.",
                        "Each subsample interval encompasses 5 minutes.",
                        "Each subsample interval encompasses 10 minutes.",
                        "Each subsample interval encompasses 15 minutes.",
                        "Each subsample interval encompasses 30 minutes.",
                        "Each subsample interval encompasses 1 hour."
                      ],
                      "enum": [
                        "1s",
                        "5s",
                        "10s",
                        "30s",
                        "1m",
                        "5m",
                        "10m",
                        "15m",
                        "30m",
                        "1h"
                      ]
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "range"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsampled time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "subsamples"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "subsamples": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": ""
                        },
                        "description": ""
                      },
                      "description": "List of summary records as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/eod/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/eod/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day time series data for a notation.",
        "description": "End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "range",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "x-isClosedInterval": false,
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the time series. A valid date range is between 1900-01-01 and the day after the current day."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "range"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "prices"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "date",
                          "first",
                          "last",
                          "low",
                          "high",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date."
                          },
                          "first": {
                            "type": "number",
                            "format": "real",
                            "description": "First price."
                          },
                          "last": {
                            "type": "number",
                            "format": "real",
                            "description": "Last price."
                          },
                          "low": {
                            "type": "number",
                            "format": "real",
                            "description": "Lowest price."
                          },
                          "high": {
                            "type": "number",
                            "format": "real",
                            "description": "Highest price."
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded (price type trade and estimate), offered (price type ask), solicited (price type bid), or empty (price type yield)."
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` in endpoint `/prices/get` for its unit. Empty for price type yield."
                          }
                        }
                      },
                      "description": "Time series of prices. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/eod/subsample/get": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/eod/subsample/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Single subsample end-of-day data for a notation.",
        "description": "Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "interval",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "interval": {
                      "type": "object",
                      "format": "dateRange",
                      "x-isClosedInterval": false,
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the interval (inclusive). "
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the interval (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Non-empty interval of days specifying a single subsample period. The starting point `start` of the single subsample is usually the attribute `range.end` of a previously received `/prices/timeSeries/eod/subsample/list` request. A valid range is between 1900-01-01 and a day that is less than or equal to the maximum allowed day determined from the delay period (if any). The ending point `end` may exceed the maximally entitled date range."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "interval"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsample data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "subsample"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "subsample": {
                      "type": "object",
                      "x-property-sort": [
                        "date",
                        "first",
                        "last",
                        "low",
                        "high",
                        "tradingVolume",
                        "tradingValue"
                      ],
                      "description": "Single summary record. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the start of the subsample."
                        },
                        "first": {
                          "type": "number",
                          "format": "real",
                          "description": "First price of the subsample."
                        },
                        "last": {
                          "type": "number",
                          "format": "real",
                          "description": "Last price of the subsample."
                        },
                        "low": {
                          "type": "number",
                          "format": "real",
                          "description": "Lowest price of the subsample."
                        },
                        "high": {
                          "type": "number",
                          "format": "real",
                          "description": "Highest price of the subsample."
                        },
                        "tradingVolume": {
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty."
                        },
                        "tradingValue": {
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/eod/subsample/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/eod/subsample/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Subsampled end-of-day time series data for a notation.",
        "description": "Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "intervals",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price.",
                        "Estimated price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield",
                        "estimate"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "DLY",
                        "EOD",
                        "BST"
                      ]
                    },
                    "intervals": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date"
                      },
                      "minItems": 2,
                      "maxItems": 600,
                      "description": "Non-empty intervals of days to consider for the request. The array contains a list of at least two days in increasing order. Each pair of adjacent entries day_n and day_(n+1) specifies a half-open interval, that is a range of days d where day_n <= d < day_(n+1). A subsample is computed for each interval. The valid range of intervals is between 1900-01-01 and the day after the current day."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "payout",
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "payout": {
                          "type": "boolean",
                          "default": false,
                          "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements."
                        },
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "intervals"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsampled time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "subsamples"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "DLY",
                        "EOD"
                      ]
                    },
                    "subsamples": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "date",
                          "first",
                          "last",
                          "low",
                          "high",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the start of the subsample."
                          },
                          "first": {
                            "type": "number",
                            "format": "real",
                            "description": "First price of the subsample."
                          },
                          "last": {
                            "type": "number",
                            "format": "real",
                            "description": "Last price of the subsample."
                          },
                          "low": {
                            "type": "number",
                            "format": "real",
                            "description": "Lowest price of the subsample."
                          },
                          "high": {
                            "type": "number",
                            "format": "real",
                            "description": "Highest price of the subsample."
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty."
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit."
                          }
                        }
                      },
                      "description": "List of summary records. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/intraday/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/intraday/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Intraday time series data for a notation.",
        "description": "Intraday time series data for a notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "range",
                    "applyTickCorrections",
                    "includeVolumeOnlyTicks",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "BST"
                      ]
                    },
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive). Dates in the future are not allowed."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date and time range for the time series."
                    },
                    "applyTickCorrections": {
                      "type": "string",
                      "description": "This attribute represents the choice whether to apply insert, update, and delete corrections for individual ticks sent by the exchange or devised by FactSet Digital Solutions GmbH.\n\n If the exchange or FactSet Digital Solutions GmbH decides to correct data, a correction instruction tick is sent shortly (usually on the same trading day) after dissemination of the corresponding original tick (if any). The correction instruction is then applied, yielding a corrected view. For \"insert\" corrections, there is no original tick, and the corrected view contains the inserted tick. For \"update\" corrections, the corrected view contains the updated original tick. For \"delete\" corrections, the original tick is removed from the corrected view.",
                      "default": "none",
                      "x-enum-description": [
                        "Select original tick data without applying any corrections.",
                        "Select corrected view."
                      ],
                      "enum": [
                        "none",
                        "all"
                      ]
                    },
                    "includeVolumeOnlyTicks": {
                      "type": "boolean",
                      "default": false,
                      "description": "Include ticks that contain a volume without a price."
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "range"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "prices"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "quoteCondition",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time."
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` in endpoint `/prices/get` for its unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                          },
                          "quoteCondition": {
                            "type": "string",
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information."
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded, offered (price type ask), solicited (price type bid), or empty (price type yield)."
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` in endpoint `/prices/get` for its unit. Empty for price type yield."
                          }
                        }
                      },
                      "description": "Time series of prices."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/intraday/subsample/get": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/intraday/subsample/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Single subsample intraday data for a notation.",
        "description": "Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "from",
                    "granularity",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "BST"
                      ]
                    },
                    "from": {
                      "type": "string",
                      "format": "datetime",
                      "description": "Date and time of the start point of the subsample (inclusive). `from` must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`. The data accessible in the past is limited to a few weeks at most. Dates in the future are not allowed."
                    },
                    "granularity": {
                      "type": "string",
                      "description": "Subsample granularities suitable for intraday data.",
                      "default": "1h",
                      "x-enum-description": [
                        "Each subsample interval encompasses 1 second.",
                        "Each subsample interval encompasses 5 seconds.",
                        "Each subsample interval encompasses 10 seconds.",
                        "Each subsample interval encompasses 30 seconds.",
                        "Each subsample interval encompasses 1 minute.",
                        "Each subsample interval encompasses 5 minutes.",
                        "Each subsample interval encompasses 10 minutes.",
                        "Each subsample interval encompasses 15 minutes.",
                        "Each subsample interval encompasses 30 minutes.",
                        "Each subsample interval encompasses 1 hour."
                      ],
                      "enum": [
                        "1s",
                        "5s",
                        "10s",
                        "30s",
                        "1m",
                        "5m",
                        "10m",
                        "15m",
                        "30m",
                        "1h"
                      ]
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "from"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsample data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "subsample"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "subsample": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "first",
                        "last",
                        "low",
                        "high",
                        "tradingVolume",
                        "tradingValue"
                      ],
                      "description": "Single summary record. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time of the start of the subsample."
                        },
                        "first": {
                          "type": "number",
                          "format": "real",
                          "description": "First price of the subsample."
                        },
                        "last": {
                          "type": "number",
                          "format": "real",
                          "description": "Last price of the subsample."
                        },
                        "low": {
                          "type": "number",
                          "format": "real",
                          "description": "Lowest price of the subsample."
                        },
                        "high": {
                          "type": "number",
                          "format": "real",
                          "description": "Highest price of the subsample."
                        },
                        "tradingVolume": {
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty."
                        },
                        "tradingValue": {
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/timeSeries/intraday/subsample/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/timeSeries/intraday/subsample/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Subsampled intraday time series data for a notation.",
        "description": "Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "type",
                    "quality",
                    "range",
                    "granularity",
                    "adjustments"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the price as configured for the customer.",
                      "default": "trade",
                      "x-enum-description": [
                        "Trade price (ordinary, auction, pre or post-trading).",
                        "Bid price.",
                        "Ask price.",
                        "Yield price."
                      ],
                      "enum": [
                        "trade",
                        "bid",
                        "ask",
                        "yield"
                      ]
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "default": "DLY",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "Best: choose the price quality with the least delay, as entitled for the client."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "BST"
                      ]
                    },
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive). Dates in the future are not allowed."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date and time range for the time series. The `start` and `end` boundaries must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`."
                    },
                    "granularity": {
                      "type": "string",
                      "description": "Subsample granularities suitable for intraday data.",
                      "default": "1h",
                      "x-enum-description": [
                        "Each subsample interval encompasses 1 second.",
                        "Each subsample interval encompasses 5 seconds.",
                        "Each subsample interval encompasses 10 seconds.",
                        "Each subsample interval encompasses 30 seconds.",
                        "Each subsample interval encompasses 1 minute.",
                        "Each subsample interval encompasses 5 minutes.",
                        "Each subsample interval encompasses 10 minutes.",
                        "Each subsample interval encompasses 15 minutes.",
                        "Each subsample interval encompasses 30 minutes.",
                        "Each subsample interval encompasses 1 hour."
                      ],
                      "enum": [
                        "1s",
                        "5s",
                        "10s",
                        "30s",
                        "1m",
                        "5m",
                        "10m",
                        "15m",
                        "30m",
                        "1h"
                      ]
                    },
                    "adjustments": {
                      "type": "object",
                      "x-property-sort": [
                        "split"
                      ],
                      "description": "Adjustments values returned.",
                      "properties": {
                        "split": {
                          "type": "boolean",
                          "default": true,
                          "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action."
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "range"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 5000,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Subsampled time series data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "quality",
                    "subsamples"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "subsamples": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "first",
                          "last",
                          "low",
                          "high",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time of the start of the subsample."
                          },
                          "first": {
                            "type": "number",
                            "format": "real",
                            "description": "First price of the subsample."
                          },
                          "last": {
                            "type": "number",
                            "format": "real",
                            "description": "Last price of the subsample."
                          },
                          "low": {
                            "type": "number",
                            "format": "real",
                            "description": "Lowest price of the subsample."
                          },
                          "high": {
                            "type": "number",
                            "format": "real",
                            "description": "Highest price of the subsample."
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty."
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit."
                          }
                        }
                      },
                      "description": "List of summary records. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Time Series API For Digital Portals",
    "description": "Time series data, end-of-day or intraday, tick-by-tick or subsampled.\nAdditional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.",
    "version": "2"
  },
  "x-interface-version": 1,
  "x-documenter-version": "5.38.1",
  "x-api-version": "3.1.0",
  "tags": [
    {
      "name": "vendor",
      "description": "vendor endpoints"
    },
    {
      "name": "prices",
      "description": "prices endpoints"
    }
  ],
  "responses": {
    "ErrorResponse": {
      "description": "Generic error response for all errors (400 ... 599 error codes)",
      "schema": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/definitions/ErrorMetaObject"
          },
          "errors": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMetaObject": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusObject"
        }
      }
    },
    "ErrorObject": {
      "type": "array",
      "description": "The errors member contains additional information about a failed request.",
      "items": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "A human-readable, unstructured explanation specific to this occurrence of the failure."
          },
          "encryptedDetails": {
            "type": "string",
            "description": "Base64-encoded, internal details about the error, in addition to \"details\"."
          },
          "type": {
            "type": "number",
            "format": "int32",
            "description": "Internal error type of the Foundation API protocol."
          },
          "attribute": {
            "type": "array",
            "description": "For a validation error, a reference to the request parameter that failed validation; otherwise, an empty array.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Element of the path denoting the request parameter."
                },
                "index": {
                  "type": "number",
                  "format": "int32",
                  "description": "If the attribute \"name\" designates an array, index of the array element; otherwise the special value -1."
                }
              },
              "x-property-sort": [
                "name",
                "index"
              ]
            }
          }
        },
        "x-property-sort": [
          "detail",
          "encryptedDetails",
          "type",
          "attribute"
        ]
      }
    },
    "AttributesMember": {
      "type": "array",
      "description": "Limit the attributes returned in the response to the specified set.",
      "items": {
        "type": "string",
        "maxLength": 100,
        "exclusiveMaximum": false
      },
      "maxItems": 50,
      "uniqueItems": true
    },
    "LanguageMember": {
      "type": "string",
      "format": "isoLanguage",
      "description": "ISO 639-1 code of the language.",
      "maxLength": 2,
      "minLength": 2,
      "exclusiveMinimum": false,
      "exclusiveMaximum": false
    },
    "StatusObject": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "format": "int32",
          "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1)."
        }
      },
      "description": "The status member contains the status code of the response.",
      "required": [
        "code"
      ]
    },
    "CursorBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of `total` is estimated."
        },
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ]
    },
    "CursorBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
      "properties": {
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "next",
        "previous"
      ],
      "x-property-sort": [
        "next",
        "previous"
      ]
    },
    "OffsetBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of \"total\" is estimated."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal"
      ]
    },
    "OffsetBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy; a total element count is not supported.",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "Flag indicating that a subsequent request with the same parameters, except that the parameter `pagination.offset` is incremented by `pagination.limit`, would yield additional results."
        }
      },
      "required": [
        "hasNext"
      ],
      "x-property-sort": [
        "hasNext"
      ]
    },
    "PartialOutputObject": {
      "type": "object",
      "properties": {
        "isPartial": {
          "type": "boolean",
          "description": "Flag indicating that the response is a possibly incomplete array or an object containing a possibly incomplete array, due to hitting a processing time limit. If `true`, some matching results might be missing from the array, or elements for matching results might be incorrectly included (for example, when priority sorting would have removed the element). Depending on the use case, such a response may be unsuitable."
        }
      },
      "description": "Object denoting that the endpoint response is possibly incomplete.",
      "required": [
        "isPartial"
      ],
      "x-property-sort": [
        "isPartial"
      ]
    }
  },
  "basePath": "/wealth/v1",
  "securityDefinitions": {
    "FactSetApiKey": {
      "type": "basic"
    },
    "FactSetOAuth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.factset.com/as/token.oauth2",
      "scopes": {}
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ]
}