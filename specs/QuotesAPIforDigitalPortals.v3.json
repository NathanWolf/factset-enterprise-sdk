{
  "host": "api.factset.com",
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/basic/assetClass/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/assetClass/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of asset classes as defined by FactSet Digital Solutions.",
        "summary": "List of asset classes.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of an asset class."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the asset class."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the asset class in English."
                      }
                    }
                  },
                  "description": "List of asset classes sorted ascending by identifier of the asset class."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/basic/backgroundText/type/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/backgroundText/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of background text types.",
        "description": "List of background text types.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "minItems": 1,
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "List of background text type identifiers. Invalid identifiers result in an error."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the type."
                      },
                      "name": {
                        "type": "string",
                        "description": "English name of the type."
                      },
                      "description": {
                        "type": "string",
                        "description": "English description of the type."
                      }
                    }
                  },
                  "description": "List of background text types."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/benchmark/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/benchmark/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of benchmark types.",
        "description": "List of benchmark types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of benchmark types.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a benchmark type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the benchmark type."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the benchmark type."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/basic/delivery/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/delivery/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of deliveries.",
        "description": "List of deliveries.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "minItems": 1,
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "List of delivery identifiers. Invalid identifiers result in an error."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 1,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of deliveries.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a delivery."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "description": "English name of the delivery."
                      },
                      "description": {
                        "type": "string",
                        "description": "English description of the delivery."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/frequency/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/frequency/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of frequency types.",
        "description": "List of frequency types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of frequency types.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the type."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/basic/language/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/language/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details for a language.",
        "summary": "Details for a language.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a language.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a language.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "ISO 639-1 code of the language."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the language."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/language/getByCode": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/language/getByCode",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details for a language identified by code.",
        "summary": "Details for a language identified by code.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "maxLength": 2,
            "exclusiveMaximum": false,
            "description": "ISO 639-1 code of the language.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a language.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "format": "id32",
                      "x-positive": true,
                      "description": "Identifier of a language."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the language."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/language/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/language/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of languages.",
        "summary": "List of languages.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of languages.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a language."
                      },
                      "code": {
                        "x-sortable": true,
                        "type": "string",
                        "description": "ISO 639-1 code of the language."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the language."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code",
                "-code",
                "name",
                "-name"
              ]
            },
            "maxItems": 2,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/market/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/market/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details of a market.",
        "summary": "Details of a market.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a market.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a market",
                  "type": "object",
                  "x-property-sort": [
                    "name",
                    "shortName",
                    "active",
                    "country",
                    "type",
                    "group",
                    "timezone"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the market."
                    },
                    "shortName": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Short name of the market."
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Indicates whether the market exists."
                    },
                    "country": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Country of the market.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the country."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the country."
                        }
                      }
                    },
                    "type": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Type of the market.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the type."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the type."
                        }
                      }
                    },
                    "group": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Market group of the market.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market group."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the market group."
                        }
                      }
                    },
                    "timezone": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Timezone of the market.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the timezone."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the timezone."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/market/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/market/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": true,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 5,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of markets.",
        "summary": "List of markets.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "markets",
                        "onlyActive"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "markets": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific markets.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "minItems": 1,
                              "maxItems": 100,
                              "uniqueItems": true,
                              "description": "List of market identifiers. Invalid identifiers result in an error."
                            }
                          }
                        },
                        "onlyActive": {
                          "type": "boolean",
                          "default": true,
                          "description": "Indicates whether the market exists."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 5 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "name",
                          "-name",
                          "shortName",
                          "-shortName",
                          "country.name",
                          "-country.name",
                          "type.name",
                          "-type.name",
                          "group.name",
                          "-group.name"
                        ]
                      },
                      "maxItems": 5,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the offset-based pagination strategy.",
                      "properties": {
                        "offset": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "default": 0,
                          "description": "Non-negative number of entries to skip, or 0 (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "offset",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort",
                    "pagination"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of markets.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "shortName",
                      "active",
                      "country",
                      "type",
                      "group",
                      "timezone"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the market."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the market."
                      },
                      "shortName": {
                        "x-sortable": true,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Short name of the market."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the market exists."
                      },
                      "country": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Country of the market.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the country."
                          },
                          "name": {
                            "x-sortable": true,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the country."
                          }
                        }
                      },
                      "type": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Type of the market.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the type."
                          },
                          "name": {
                            "x-sortable": true,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the type."
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market group of the market.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market group."
                          },
                          "name": {
                            "x-sortable": true,
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market group."
                          }
                        }
                      },
                      "timezone": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Timezone of the market.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the timezone."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the timezone."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/market/group/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/market/group/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of market groups.",
        "summary": "List of market groups.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of market groups.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "shortName"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the market group."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the market group."
                      },
                      "shortName": {
                        "x-sortable": true,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Short name of the market group."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name",
                "shortName",
                "-shortName"
              ]
            },
            "maxItems": 2,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/market/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/market/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of market types.",
        "summary": "List of market types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of market types.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the market type."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the market type."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name"
              ]
            },
            "maxItems": 1,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/media/kind/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/media/kind/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of media kinds.",
        "description": "List of media kinds.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of media kinds.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a media kind."
                      },
                      "name": {
                        "type": "string",
                        "description": "English name of the media kind."
                      },
                      "description": {
                        "type": "string",
                        "description": "English description of the media kind."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/basic/media/type/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/media/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of Internet media types. See http://www.iana.org/assignments/media-types/ for further details. Not all such Internet media types are available on the MDG.",
        "summary": "List of Internet media types.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "minItems": 1,
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "List of Internet media type identifiers. Invalid identifiers result in an error."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "id",
                          "-id",
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 2,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of Internet media types.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description",
                      "kind"
                    ],
                    "properties": {
                      "id": {
                        "description": "Identifier of an Internet media type.",
                        "x-sortable": true,
                        "type": "number",
                        "format": "id32",
                        "x-positive": true
                      },
                      "name": {
                        "description": "Name according to the Internet Assigned Numbers Authority.",
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string"
                      },
                      "description": {
                        "description": "English description of the Internet media type.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of media. See endpoint `/basic/media/kind/list` for possible values.",
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "description": "Identifier of the media kind.",
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "name": {
                            "description": "English name of the media kind.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/mic/operating/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/mic/operating/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": true,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of operating market identifier codes (MIC).",
        "description": "List of operating market identifier codes (MIC).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "status"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Filter for the status.",
                          "default": "active",
                          "x-enum-description": [
                            "Show all operating MICs.",
                            "Show only active operating MICs.",
                            "Show only inactive operating MICs."
                          ],
                          "enum": [
                            "all",
                            "active",
                            "inactive"
                          ]
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "isoCode",
                          "-isoCode",
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 2,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the offset-based pagination strategy.",
                      "properties": {
                        "offset": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "default": 0,
                          "description": "Non-negative number of entries to skip, or 0 (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "offset",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "sort",
                    "pagination"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of operating MICs.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "isoCode",
                      "name",
                      "active"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the operating MIC."
                      },
                      "isoCode": {
                        "x-sortable": true,
                        "type": "string",
                        "description": "ISO 10383 code of the operating MIC."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "description": "English name of the operating MIC."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the operating MIC is active."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/region/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details for a region.",
        "description": "Details for a geographic, political, or economic region.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a region.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a region.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "name",
                    "type",
                    "nestedRegions"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the region."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the region.",
                      "x-enum-description": [
                        "Regions that are considered to be a continent in the context of the Market Data Gateway.",
                        "A region that represents a country that has been assigned an official ISO 3166-1 code.",
                        "A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code.",
                        "A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country.",
                        "A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined."
                      ],
                      "enum": [
                        "continent",
                        "country",
                        "subdivision",
                        "misc",
                        "compound"
                      ]
                    },
                    "nestedRegions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "name",
                          "type"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a region."
                          },
                          "code": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the region."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the region.",
                            "x-enum-description": [
                              "Regions that are considered to be a continent in the context of the Market Data Gateway.",
                              "A region that represents a country that has been assigned an official ISO 3166-1 code.",
                              "A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code.",
                              "A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country.",
                              "A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined."
                            ],
                            "enum": [
                              "continent",
                              "country",
                              "subdivision",
                              "misc",
                              "compound"
                            ]
                          }
                        }
                      },
                      "description": "Nested regions of this region."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/region/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of regions.",
        "description": "List of geographic, political, and economic regions.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of regions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "name",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a region."
                      },
                      "code": {
                        "x-sortable": true,
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the region."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the region.",
                        "x-enum-description": [
                          "Regions that are considered to be a continent in the context of the Market Data Gateway.",
                          "A region that represents a country that has been assigned an official ISO 3166-1 code.",
                          "A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code.",
                          "A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country.",
                          "A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined."
                        ],
                        "enum": [
                          "continent",
                          "country",
                          "subdivision",
                          "misc",
                          "compound"
                        ]
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code",
                "-code",
                "name",
                "-name"
              ]
            },
            "maxItems": 2,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/region/continent/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/continent/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details for a continent.",
        "description": "Details for a continent.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a continent.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details for a continent.",
                  "type": "object",
                  "x-property-sort": [
                    "name",
                    "countries"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the continent."
                    },
                    "countries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Countries of this continent.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a country."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of a country."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/region/continent/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/continent/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of continents.",
        "description": "List of continents.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of continents.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a continent."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the continent."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name"
              ]
            },
            "maxItems": 1,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/region/country/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/country/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details for a country.",
        "description": "Details for a country.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a country.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a country.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "name",
                    "subdivisions"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "ISO 3166-1 alpha-2 code of the country."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the country."
                    },
                    "subdivisions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Subdivisions of a country in unspecified order.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a country subdivision."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the country subdivision."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/region/country/getByCode": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/country/getByCode",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details for a country identified by code.",
        "description": "Details for a country identified by code.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "maxLength": 2,
            "exclusiveMaximum": false,
            "description": "ISO 3166-1 alpha-2 code of a country.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a country.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name",
                    "subdivisions"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "format": "id32",
                      "x-positive": true,
                      "description": "Identifier of a country."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the country."
                    },
                    "subdivisions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Subdivisions of this country in unspecified order.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a country subdivision."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the country subdivision."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/region/country/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/region/country/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of countries.",
        "description": "List of countries.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of countries.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a country."
                      },
                      "code": {
                        "x-sortable": true,
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 code of the country."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the country."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code",
                "-code",
                "name",
                "-name"
              ]
            },
            "maxItems": 2,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/timezone/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/timezone/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details of a timezone identified by id, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "Details of a timezone.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a timezone. An invalid or unsupported identifier will result in an error."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a timezone.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "format": "id32",
                      "x-positive": true,
                      "description": "Identifier of a timezone."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name according to the Internet Assigned Numbers Authority."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/timezone/getByName": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/timezone/getByName",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Details of a timezone identified by name, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "Details of a timezone identified by name.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "pattern": "^[A-Za-z_/-]+$",
            "minLength": 1,
            "exclusiveMinimum": false,
            "maxLength": 100,
            "exclusiveMaximum": false,
            "required": true,
            "description": "Name of a timezone. The result is determined by a case-sensitive equality comparison with the stored timezone names. An invalid or unsupported name will result in an error."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a timezone.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "format": "id32",
                      "x-positive": true,
                      "description": "Identifier of a timezone."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name according to the Internet Assigned Numbers Authority."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/timezone/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/timezone/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of timezones identified by id, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "List of timezones.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "minItems": 1,
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "List of timezone identifiers. Invalid identifiers result in an error."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of timezones in unspecified order.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a timezone."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name according to the Internet Assigned Numbers Authority."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/valueUnit/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/valueUnit/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details of a value unit.",
        "description": "Details of a value unit.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a value unit.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a value unit.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "isoCode",
                    "name",
                    "type",
                    "active"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                    },
                    "isoCode": {
                      "type": "string",
                      "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the value unit."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the value unit.",
                      "x-enum-description": [
                        "Main currency.",
                        "Fractional currency.",
                        "Alternative value unit."
                      ],
                      "enum": [
                        "main",
                        "fractional",
                        "alternative"
                      ]
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Indicates whether the value unit is active."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/valueUnit/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/valueUnit/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of value units.",
        "description": "List of value units.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "status"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Filter for the status.",
                          "default": "active",
                          "x-enum-description": [
                            "Show all currencies.",
                            "Show only active currencies.",
                            "Show only inactive currencies."
                          ],
                          "enum": [
                            "all",
                            "active",
                            "inactive"
                          ]
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 1,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of value units.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "isoCode",
                      "name",
                      "type",
                      "active"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a value unit."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                      },
                      "isoCode": {
                        "type": "string",
                        "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the value unit."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the value unit.",
                        "x-enum-description": [
                          "Main currency.",
                          "Fractional currency.",
                          "Alternative value unit."
                        ],
                        "enum": [
                          "main",
                          "fractional",
                          "alternative"
                        ]
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the currency is active."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/valueUnit/alternative/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/valueUnit/alternative/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of alternative units.",
        "summary": "List of alternative units.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of alternative units.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of an alternative unit."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the alternative unit."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the alternative unit."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name"
              ]
            },
            "maxItems": 1,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/valueUnit/currency/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/valueUnit/currency/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of currencies.",
        "description": "List of currencies.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "status"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Filter for the status.",
                          "default": "active",
                          "x-enum-description": [
                            "Show all currencies.",
                            "Show only active currencies.",
                            "Show only inactive currencies."
                          ],
                          "enum": [
                            "all",
                            "active",
                            "inactive"
                          ]
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 1,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of currencies.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "isoCode",
                      "name",
                      "type",
                      "active"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a currency."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency."
                      },
                      "isoCode": {
                        "type": "string",
                        "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the currency."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the currency.",
                        "x-enum-description": [
                          "Currency that is a main currency.",
                          "Currency that is a fractional currency."
                        ],
                        "enum": [
                          "main",
                          "fractional"
                        ]
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the currency is active."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/valueUnit/currency/fractional/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/valueUnit/currency/fractional/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details of a fractional currency.",
        "description": "Details of a fractional currency.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "description": "Identifier of a fractional currency.",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of a fractional currency.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "name",
                    "factor",
                    "mainCurrency"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of the fractional currency such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent)."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the fractional currency."
                    },
                    "factor": {
                      "type": "number",
                      "format": "real",
                      "description": "Conversion factor between the fractional and its main currency. For example, the value 100 indicates that 100 US cents are equivalent to one US dollar."
                    },
                    "mainCurrency": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code",
                        "isoCode",
                        "name",
                        "active"
                      ],
                      "description": "Main currency corresponding to the fractional currency.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the main currency."
                        },
                        "code": {
                          "type": "string",
                          "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code."
                        },
                        "isoCode": {
                          "type": "string",
                          "description": "ISO 4217 code of the currency."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the main currency."
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Indicates whether the currency is active."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/basic/valueUnit/currency/fractional/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "get/basic/valueUnit/currency/fractional/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of fractional currencies.",
        "description": "List of fractional currencies.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of fractional currencies.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "name",
                      "factor",
                      "mainCurrency"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the fractional currency, which is a value unit."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the fractional currency such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent)."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the fractional currency."
                      },
                      "factor": {
                        "type": "number",
                        "format": "real",
                        "description": "Conversion factor between the fractional and its main currency. For example, the value 100 indicates that 100 US cents are equivalent to one US dollar."
                      },
                      "mainCurrency": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "isoCode",
                          "name",
                          "active"
                        ],
                        "description": "Main currency corresponding to the fractional currency.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the main currency of the fractional currency."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISO 4217 code of the currency."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the main currency."
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Indicates whether the currency is active."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name"
              ]
            },
            "maxItems": 1,
            "uniqueItems": true,
            "default": [
              "name"
            ],
            "collectionFormat": "csv",
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/valueUnit/currency/main/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "post/basic/valueUnit/currency/main/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 1,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of main currencies.",
        "description": "List of main currencies.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "status"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Filter for the status.",
                          "default": "active",
                          "x-enum-description": [
                            "Show all main currencies.",
                            "Show only active main currencies.",
                            "Show only inactive main currencies."
                          ],
                          "enum": [
                            "all",
                            "active",
                            "inactive"
                          ]
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "name",
                          "-name"
                        ]
                      },
                      "maxItems": 1,
                      "uniqueItems": true,
                      "default": [
                        "name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of main currencies.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "isoCode",
                      "name",
                      "active"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a currency."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code."
                      },
                      "isoCode": {
                        "type": "string",
                        "description": "ISO 4217 code of the currency."
                      },
                      "name": {
                        "x-sortable": true,
                        "x-default-sort-attribute": true,
                        "x-default-sort-direction": 1,
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the currency."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the currency is active."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details of a category.",
        "description": "Details of a category.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of the category.",
                  "type": "object",
                  "x-property-sort": [
                    "code",
                    "name",
                    "description",
                    "active",
                    "level",
                    "parent",
                    "system"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code commonly used for this category."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the category."
                    },
                    "description": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Description of the category."
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Indicates whether this category is active."
                    },
                    "level": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "number"
                      ],
                      "description": "Category level.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category level."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category level."
                        },
                        "number": {
                          "type": "number",
                          "format": "int32",
                          "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy."
                        }
                      }
                    },
                    "parent": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "level"
                      ],
                      "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category."
                        },
                        "level": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "description": "Parent level.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the category level."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category level."
                            }
                          }
                        }
                      }
                    },
                    "system": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category system."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of categories.",
        "description": "List of categories.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "number",
              "format": "id32",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "description": "List of categories belonging to the same category system.",
            "uniqueItems": true,
            "minItems": 1,
            "maxItems": 100
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of categories.",
                  "type": "object",
                  "x-property-sort": [
                    "system",
                    "categories"
                  ],
                  "properties": {
                    "system": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category system."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system."
                        }
                      }
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "name",
                          "description",
                          "active",
                          "level",
                          "parent"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code commonly used for this category."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the category."
                          },
                          "description": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Description of the category."
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Indicates whether this category is active."
                          },
                          "level": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "number"
                            ],
                            "description": "Category level.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the category level."
                              },
                              "name": {
                                "type": "string",
                                "format": "localizedString",
                                "description": "Name of the category level."
                              },
                              "number": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy."
                              }
                            }
                          },
                          "parent": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "level"
                            ],
                            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the category."
                              },
                              "name": {
                                "type": "string",
                                "format": "localizedString",
                                "description": "Name of the category."
                              },
                              "level": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name"
                                ],
                                "description": "Parent level.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the category level."
                                  },
                                  "name": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Name of the category level."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "List of categories."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/listByLevel": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/listByLevel",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of categories assigned to a category level.",
        "description": "List of categories assigned to a category level.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of the categories.",
                  "type": "object",
                  "x-property-sort": [
                    "system",
                    "parent",
                    "categories"
                  ],
                  "properties": {
                    "system": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category system."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system."
                        }
                      }
                    },
                    "parent": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Parent level. The attributes of the parent level are `null` if this category level is the first level.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category level."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category level."
                        }
                      }
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "name",
                          "description",
                          "active",
                          "parent"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code commonly used for this category."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the category."
                          },
                          "description": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Description of the category."
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Indicates whether this category is active."
                          },
                          "parent": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name"
                            ],
                            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the category."
                              },
                              "name": {
                                "type": "string",
                                "format": "localizedString",
                                "description": "Name of the category."
                              }
                            }
                          }
                        }
                      },
                      "description": "List of categories."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/listBySystem": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/listBySystem",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of categories assigned to a category system.",
        "description": "List of categories assigned to a category system.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of the categories.",
                  "type": "object",
                  "x-property-sort": [
                    "categories"
                  ],
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "name",
                          "description",
                          "active",
                          "level",
                          "parent"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code commonly used for this category."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the category."
                          },
                          "description": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Description of the category."
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Indicates whether this category is active."
                          },
                          "level": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "number"
                            ],
                            "description": "Category level.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the category level."
                              },
                              "number": {
                                "type": "number",
                                "format": "int32",
                                "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy."
                              }
                            }
                          },
                          "parent": {
                            "type": "object",
                            "x-property-sort": [
                              "id"
                            ],
                            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the category."
                              }
                            }
                          }
                        }
                      },
                      "description": "List of categories."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/dataset/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/dataset/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of entitled category datasets.",
        "description": "List of entitled category datasets.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of category datasets.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "depth",
                      "system",
                      "delivery"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the dataset."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the dataset."
                      },
                      "depth": {
                        "type": "number",
                        "format": "int32",
                        "description": "Number of levels covered by this dataset for the category system."
                      },
                      "system": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "numberOfLevels",
                          "firstLevelWithLeafCategories"
                        ],
                        "description": "Category system.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category system."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the category system."
                          },
                          "numberOfLevels": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of levels of the category system."
                          },
                          "firstLevelWithLeafCategories": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of the least detailed level of the category system that has leaf categories."
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Delivery which provides this category dataset. For possible values, see endpoint `/basic/delivery/list`.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the delivery."
                          },
                          "name": {
                            "type": "string",
                            "description": "English name of the delivery."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/category/instrument/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/instrument/list",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of instruments where a specific dataset has assigned a given category.",
        "description": "List of instruments where a specific dataset has assigned a given category.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category."
          },
          {
            "name": "idCategoryDataset",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category dataset."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 1000,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "fsym"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true,
                  "description": "List of instruments."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/level/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/level/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details of a category level.",
        "description": "Details of a category level.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of the category level.",
                  "type": "object",
                  "x-property-sort": [
                    "name",
                    "number",
                    "hasLeafCategories",
                    "system"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the level."
                    },
                    "number": {
                      "type": "number",
                      "format": "int32",
                      "description": "Number of the category level, starting with 1."
                    },
                    "hasLeafCategories": {
                      "type": "boolean",
                      "description": "Indicates whether the category level has leaf categories."
                    },
                    "system": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Details of the system this level belongs to.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the category system."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/path/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/path/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Path from the first level to the level of a specific category.",
        "description": "Path from the first level to the level of a specific category.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "categories"
                  ],
                  "description": "Path to the category.",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the category."
                          }
                        }
                      },
                      "description": "List of categories covering the full path (without gaps) from the most coarse granularity to the level of the specified category."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/system/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/system/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Details of an entitled category system.",
        "description": "Details of an entitled category system.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Details of the category system.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name",
                    "type",
                    "numberOfLevels",
                    "firstLevelWithLeafCategories",
                    "levels"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "format": "id32",
                      "x-positive": true,
                      "description": "Identifier of the category system."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the category system."
                    },
                    "type": {
                      "description": "Type of the category system. See endpoint `/category/system/type/list` for possible values.",
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the type of the category system."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the type of the category system."
                        }
                      }
                    },
                    "numberOfLevels": {
                      "type": "number",
                      "format": "int32",
                      "description": "Number of levels of the category system."
                    },
                    "firstLevelWithLeafCategories": {
                      "type": "number",
                      "format": "int32",
                      "description": "Number of the least detailed level of the category system that has leaf categories."
                    },
                    "levels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "number",
                          "hasLeafCategories"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the level."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the level."
                          },
                          "number": {
                            "type": "number",
                            "format": "int32",
                            "description": "Number of the category level, starting with 1."
                          },
                          "hasLeafCategories": {
                            "type": "boolean",
                            "description": "Indicates whether the category level has leaf categories."
                          }
                        }
                      },
                      "description": "List of category levels ordered by the number of the level in ascending order."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/system/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/system/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of entitled category systems.",
        "description": "List of entitled category systems.",
        "parameters": [
          {
            "name": "idType",
            "in": "query",
            "description": "Filter for a specific category system type. See endpoint `/category/system/type/list` for valid values.",
            "type": "number",
            "format": "id32",
            "x-positive": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of category systems.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "type",
                      "numberOfLevels",
                      "firstLevelWithLeafCategories"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the category system."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the category system."
                      },
                      "type": {
                        "description": "Type of the category system. See endpoint `/category/system/type/list` for possible values.",
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the type of the category system."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the type of the category system."
                          }
                        }
                      },
                      "numberOfLevels": {
                        "type": "number",
                        "format": "int32",
                        "description": "Number of levels of the category system."
                      },
                      "firstLevelWithLeafCategories": {
                        "type": "number",
                        "format": "int32",
                        "description": "Number of the least detailed level of the category system that has leaf categories."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/category/system/type/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "get/category/system/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of category system types.",
        "description": "List of category system types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of category system types, sorted by ascending identifier value.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the category system type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the category system type."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the category system type."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/instrument/get": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Basic data for an instrument.",
        "summary": "Basic data for an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of basic data for the instrument.",
                  "type": "object",
                  "x-property-sort": [
                    "name",
                    "shortName",
                    "isin",
                    "nsin",
                    "fsym",
                    "assetClass",
                    "type"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the instrument."
                    },
                    "shortName": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Short name of the instrument."
                    },
                    "isin": {
                      "type": "string",
                      "format": "isin",
                      "description": "International Securities Identification Number of the instrument."
                    },
                    "nsin": {
                      "type": "object",
                      "x-property-sort": [
                        "wkn",
                        "valor",
                        "cusip",
                        "sedol"
                      ],
                      "description": "NSIN data of the instrument.",
                      "properties": {
                        "wkn": {
                          "type": "string",
                          "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                        },
                        "valor": {
                          "type": "string",
                          "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                        },
                        "cusip": {
                          "type": "string",
                          "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                        },
                        "sedol": {
                          "type": "string",
                          "description": "The SEDOL or IDII for the instrument."
                        }
                      }
                    },
                    "fsym": {
                      "type": "object",
                      "x-property-sort": [
                        "security"
                      ],
                      "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                      "properties": {
                        "security": {
                          "type": "object",
                          "x-property-sort": [
                            "permanentIdentifier"
                          ],
                          "description": "Security-level identifier.",
                          "properties": {
                            "permanentIdentifier": {
                              "type": "string",
                              "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                            }
                          }
                        }
                      }
                    },
                    "assetClass": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code"
                      ],
                      "description": "Asset class of the instrument. For possible values see endpoint\n/basic/assetClass/list.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the asset class."
                        },
                        "code": {
                          "type": "string",
                          "description": "code of the asset class."
                        }
                      }
                    },
                    "type": {
                      "description": "Instrument type as defined by FactSet Digital Solutions. Instrument types are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the instrument type."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the instrument type."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/getByNotation": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/getByNotation",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Basic data for an instrument.",
        "summary": "Basic data for an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of basic data for the instrument.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "name",
                    "shortName",
                    "isin",
                    "nsin",
                    "fsym",
                    "assetClass",
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the instrument."
                    },
                    "name": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the instrument."
                    },
                    "shortName": {
                      "type": "string",
                      "format": "localizedString",
                      "description": "Short name of the instrument."
                    },
                    "isin": {
                      "type": "string",
                      "format": "isin",
                      "description": "International Securities Identification Number of the instrument."
                    },
                    "nsin": {
                      "type": "object",
                      "x-property-sort": [
                        "wkn",
                        "valor",
                        "cusip",
                        "sedol"
                      ],
                      "description": "NSIN data of the instrument.",
                      "properties": {
                        "wkn": {
                          "type": "string",
                          "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                        },
                        "valor": {
                          "type": "string",
                          "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                        },
                        "cusip": {
                          "type": "string",
                          "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                        },
                        "sedol": {
                          "type": "string",
                          "description": "The SEDOL or IDII for the instrument."
                        }
                      }
                    },
                    "fsym": {
                      "type": "object",
                      "x-property-sort": [
                        "security"
                      ],
                      "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                      "properties": {
                        "security": {
                          "type": "object",
                          "x-property-sort": [
                            "permanentIdentifier"
                          ],
                          "description": "Security-level identifier.",
                          "properties": {
                            "permanentIdentifier": {
                              "type": "string",
                              "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                            }
                          }
                        }
                      }
                    },
                    "assetClass": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code"
                      ],
                      "description": "Asset class of the instrument. For possible values see endpoint\n/basic/assetClass/list.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the asset class."
                        },
                        "code": {
                          "type": "string",
                          "description": "code of the asset class."
                        }
                      }
                    },
                    "type": {
                      "description": "Instrument type as defined by FactSet Digital Solutions. Instrument types are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the instrument type."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the instrument type."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/backgroundText/listByInstrument": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/backgroundText/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Background texts of an instrument.",
        "description": "Background texts of an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Background texts of the instrument, sorted by increasing type identifier value.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "type",
                      "body"
                    ],
                    "properties": {
                      "type": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Background texts of the instrument, sorted by increasing type identifier value.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the type."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the type."
                          }
                        }
                      },
                      "body": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Body of the background text."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/backgroundText/type/list": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/backgroundText/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of background text types for instruments.",
        "description": "List of background text types for instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "Identifiers of background text types."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of background text types, sorted by increasing identifier value.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the type."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the type."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/benchmark/list": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/benchmark/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of benchmarks of a financial instrument.",
        "description": "Provides a list of benchmark notations for a selected financial instrument, optionally restricted to specific benchmark types.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of an instrument."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "types"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "types": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "uniqueItems": true,
                          "description": "Set of benchmark types. See endpoint `/basic/benchmark/type/list` for valid values."
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of benchmarks.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "notation",
                      "type"
                    ],
                    "properties": {
                      "notation": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "fsym",
                          "instrument"
                        ],
                        "description": "Notation data of a benchmark.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the notation."
                          },
                          "fsym": {
                            "type": "object",
                            "x-property-sort": [
                              "listing",
                              "regional"
                            ],
                            "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                            "properties": {
                              "listing": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier",
                                  "tickerExchange",
                                  "isPrimary"
                                ],
                                "description": "Listing-level identifiers.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                                  },
                                  "tickerExchange": {
                                    "type": "string",
                                    "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                                  },
                                  "isPrimary": {
                                    "type": "boolean",
                                    "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                                  }
                                }
                              },
                              "regional": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier",
                                  "tickerRegion",
                                  "isPrimary"
                                ],
                                "description": "Regional-level identifiers.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                                  },
                                  "tickerRegion": {
                                    "type": "string",
                                    "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                                  },
                                  "isPrimary": {
                                    "type": "boolean",
                                    "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                                  }
                                }
                              }
                            }
                          },
                          "instrument": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name",
                              "fsym"
                            ],
                            "description": "Instrument data of the benchmark.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the instrument."
                              },
                              "name": {
                                "type": "string",
                                "format": "localizedString",
                                "description": "Name of the instrument."
                              },
                              "fsym": {
                                "type": "object",
                                "x-property-sort": [
                                  "security"
                                ],
                                "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                                "properties": {
                                  "security": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "permanentIdentifier"
                                    ],
                                    "description": "Security-level identifier.",
                                    "properties": {
                                      "permanentIdentifier": {
                                        "type": "string",
                                        "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Type of the benchmark. For possible values, see endpoint `/basic/benchmark/type/list`.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the type."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the type."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/category/list": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/category/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 2,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of categories assigned to a specific instrument the application is entitled to see.",
        "description": "List of categories assigned to a specific instrument the application is entitled to see. Optionally it is possible to restrict the output to only list those for a specific category dataset.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of an instrument."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "dataset"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "dataset": {
                          "type": "object",
                          "x-property-sort": [
                            "id"
                          ],
                          "description": "Filter the categories to only return values assigned by a dataset. See endpoint `/category/dataset/list` for valid values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of a category dataset."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "dataset.id",
                          "-dataset.id",
                          "dataset.name",
                          "-dataset.name"
                        ]
                      },
                      "maxItems": 2,
                      "uniqueItems": true,
                      "default": [
                        "dataset.name"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of datasets with their categories as assigned to the instrument.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "dataset",
                      "categories"
                    ],
                    "properties": {
                      "dataset": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Category dataset of the assigned categories. For a list of possible values see endpoint `/category/dataset/list`.",
                        "properties": {
                          "id": {
                            "x-sortable": true,
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the category dataset."
                          },
                          "name": {
                            "x-sortable": true,
                            "x-default-sort-attribute": true,
                            "x-default-sort-direction": 1,
                            "type": "string",
                            "description": "Name of the category dateset in English."
                          }
                        }
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the category."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category."
                            }
                          }
                        },
                        "description": "List of categories covering the full path (without gaps) from the most coarse granularity to the most detailed."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/complianceProperty/list": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/complianceProperty/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of compliance properties for instruments.",
        "description": "List of compliance properties for instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "maxItems": 100,
                          "uniqueItems": true,
                          "description": "Identifiers of compliance properties."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "description": "Identifier of a compliance property.",
                        "type": "number",
                        "format": "id32",
                        "x-positive": true
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the compliance property."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the compliance property."
                      }
                    }
                  },
                  "description": "List of compliance properties, sorted by increasing identifier value."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/complianceProperty/listByInstrument": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/complianceProperty/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Compliance properties of an instrument.",
        "description": "Compliance properties of an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "description": "Identifier of a compliance property.",
                        "type": "number",
                        "format": "id32",
                        "x-positive": true
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the compliance property."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the compliance property."
                      }
                    }
                  },
                  "description": "Compliance properties of the instrument, sorted by increasing identifier value."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/composite/get": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/composite/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Composite instrument and its components.",
        "description": "Composite instrument and its components.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a composite instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "typeComposite",
                    "activeManagement",
                    "managementFee",
                    "components"
                  ],
                  "description": "Composite instrument and its components.",
                  "properties": {
                    "typeComposite": {
                      "type": "string",
                      "description": "Type of the composite instrument.",
                      "x-enum-description": [
                        "A basket is a composite instrument which consists of several components. Its value is calculated as the weighted combination of the levels of the components. All weights are positive.",
                        "An alpha structure is a composite instrument which consists of two components. Its value is calculated as the difference of the performances of the components. The performances are measured starting at the date specified in the conditions of the securitized derivative.",
                        "A futures spread is a composite instrument which is built of two or more different futures contracts as its components. ",
                        "A factor index is a composite instrument that reflects the day-to-day performance of its component, multiplied with a constant factor. The related capital costs and fees for calculation and administration are not represented."
                      ],
                      "enum": [
                        "basket",
                        "alphaStructure",
                        "futuresSpread",
                        "factorIndex"
                      ]
                    },
                    "activeManagement": {
                      "type": "boolean",
                      "description": "If set to true, the composite instrument is actively managed."
                    },
                    "managementFee": {
                      "type": "number",
                      "format": "relativeValue",
                      "description": "Management fee p.a. of the composite instrument."
                    },
                    "components": {
                      "description": "Information regarding the components of the composite instrument.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "name",
                          "valueUnit",
                          "notation",
                          "participation",
                          "numberShares",
                          "initialWeight",
                          "referenceLevel",
                          "constantLeverage"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the component, provided also if there is no notation for the component."
                          },
                          "valueUnit": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "code"
                            ],
                            "description": "Value unit of the component, provided also if there is no notation for the component.\n\nSee endpoint `/basic/valueUnit/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the value unit."
                              },
                              "code": {
                                "type": "string",
                                "description": "Code of the value unit."
                              }
                            }
                          },
                          "notation": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "fsym",
                              "instrument",
                              "operatingMIC"
                            ],
                            "description": "Notation of the component. If there is no notation for the component, the object is null.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "id64",
                                "x-positive": true,
                                "description": "Identifier of the notation."
                              },
                              "fsym": {
                                "type": "object",
                                "x-property-sort": [
                                  "listing",
                                  "regional"
                                ],
                                "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                                "properties": {
                                  "listing": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "permanentIdentifier",
                                      "tickerExchange",
                                      "isPrimary"
                                    ],
                                    "description": "Listing-level identifiers.",
                                    "properties": {
                                      "permanentIdentifier": {
                                        "type": "string",
                                        "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                                      },
                                      "tickerExchange": {
                                        "type": "string",
                                        "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                                      }
                                    }
                                  },
                                  "regional": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "permanentIdentifier",
                                      "tickerRegion",
                                      "isPrimary"
                                    ],
                                    "description": "Regional-level identifiers.",
                                    "properties": {
                                      "permanentIdentifier": {
                                        "type": "string",
                                        "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                                      },
                                      "tickerRegion": {
                                        "type": "string",
                                        "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                                      }
                                    }
                                  }
                                }
                              },
                              "instrument": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "fsym"
                                ],
                                "description": "Instrument of the component.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "id64",
                                    "x-positive": true,
                                    "description": "Identifier of the instrument."
                                  },
                                  "fsym": {
                                    "type": "object",
                                    "x-property-sort": [
                                      "security"
                                    ],
                                    "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                                    "properties": {
                                      "security": {
                                        "type": "object",
                                        "x-property-sort": [
                                          "permanentIdentifier"
                                        ],
                                        "description": "Security-level identifier.",
                                        "properties": {
                                          "permanentIdentifier": {
                                            "type": "string",
                                            "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "operatingMIC": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "isoCode",
                                  "name"
                                ],
                                "description": "The operating MIC of the component. See endpoint `/basic/mic/operating/list` for possible values.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the operating MIC."
                                  },
                                  "isoCode": {
                                    "type": "string",
                                    "description": "ISO 10383 code of the operating MIC."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "English name of the operating MIC."
                                  }
                                }
                              }
                            }
                          },
                          "participation": {
                            "type": "string",
                            "description": "Indicates whether the level of the composite instrument rises or falls with a rising level of the component. The level of a basket always rises with rising level of its components and vice versa; therefore, for those the attribute is not set. The level of an alpha structure or a futures spread is calculated by subtracting the performance (price) of the short component from that of the long one. The level of a factor index rises with rising level of its component if the latter is long, and falls if it is short. For the type of composite instrument, see attribute  `typeComposite`.",
                            "x-enum-description": [
                              "The composite instrument's level rises with a rising level of the component.",
                              "The composite instrument's level falls with a rising level of the component."
                            ],
                            "enum": [
                              "long",
                              "short"
                            ]
                          },
                          "numberShares": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute number of shares of the component contained in the composite instrument.\n\nThe absolute number of shares can be subject to change due to corporate actions or active management of the composite instrument (see attribute `activeManagement`). If the component is an index, the number of shares is a factor which applies to the level of the index."
                          },
                          "initialWeight": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Weighting of the component, valid only at initial fixing\n\n (see attribute `initialFixing` in endpoint `/securitizedDerivative/get`). "
                          },
                          "referenceLevel": {
                            "type": "number",
                            "format": "real",
                            "description": "Level of the component on the issue date of the derivative product.\n\nFor the value unit, see attribute `valueUnit`."
                          },
                          "constantLeverage": {
                            "type": "number",
                            "format": "real",
                            "description": "For a leveraged component, e.g. a component of a factor index, day-to-day leverage factor of the component's performance."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/coupon/list": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/coupon/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of coupons for an interest-bearing instrument.",
        "description": "List of coupons for an interest-bearing instrument; any other instrument yields empty values. The endpoint provides details regarding the coupon period, the respective interest rate, and payable amount (the latter only for instruments with a fixed nominal value). The list of coupons is generally not available for a perpetual, i.e. without a predefined maturity date, interst-bearing instrument. \n\nIf there is no entitled provider supplying a full list of coupons, the list will be synthesized from summary data available from entitled suppliers (if any). Since the exact product terms are not known, e.g. the handling of holidays and weekends, the list may be imprecise.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of coupons and currency details.",
                  "type": "object",
                  "x-property-sort": [
                    "currency",
                    "coupons"
                  ],
                  "properties": {
                    "currency": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code",
                        "isoCode"
                      ],
                      "description": "Main currency of the coupon payments. See endpoint `/basic/valueUnit/currency/main/list` for possible values. ",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the main currency."
                        },
                        "code": {
                          "type": "string",
                          "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code."
                        },
                        "isoCode": {
                          "type": "string",
                          "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                        }
                      }
                    },
                    "coupons": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "period",
                          "paymentDate",
                          "interestRate"
                        ],
                        "properties": {
                          "period": {
                            "type": "object",
                            "format": "dateRange",
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date",
                                "description": "Starting date."
                              },
                              "end": {
                                "type": "string",
                                "format": "date",
                                "description": "Ending date (inclusive)."
                              }
                            },
                            "x-property-sort": [
                              "start",
                              "end"
                            ],
                            "required": [
                              "start",
                              "end"
                            ],
                            "description": "Coupon period."
                          },
                          "paymentDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Payment date of the coupon, usually 2 days after the ending date of the coupon period. For the latter, see attribute `coupons.period.end`."
                          },
                          "interestRate": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "annualized",
                              "periodic"
                            ],
                            "description": "Interest rate for the coupon period.",
                            "properties": {
                              "type": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name"
                                ],
                                "description": "Type of the interest rate. See endpoint `/instrument/coupon/interestRate/type/list` for possible values.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the type."
                                  },
                                  "name": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Name of the type."
                                  }
                                }
                              },
                              "annualized": {
                                "type": "object",
                                "x-property-sort": [
                                  "fixed",
                                  "minimum",
                                  "maximum"
                                ],
                                "description": "Interest rate on an annual basis. Minimum/maximum interest rates and a fixed interest rate are, in general, mutually exclusive. However, for an instrument with a variable interest rate (i.e. the attribute `coupons.interestRate.type` has the value 4 or 6), a fixed interest rate might be provided if already determined for the respective period (current or past).",
                                "properties": {
                                  "fixed": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Fixed interest rate."
                                  },
                                  "minimum": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Minimum interest rate."
                                  },
                                  "maximum": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Maximum interest rate."
                                  }
                                }
                              },
                              "periodic": {
                                "type": "object",
                                "x-property-sort": [
                                  "fixed",
                                  "amount"
                                ],
                                "description": "Interest rate based on the coupon period, i.e. not annualized. Period-based data is not available for instruments with a variable interest rate (i.e. the attribute `coupons.interestRate.type` has the value 4 or 6).",
                                "properties": {
                                  "fixed": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Fixed interest rate. For coupon periods different from one year, the value differs from the fixed annualized interest rate (see attribute `coupons.interestRate.annualized.fixed`)."
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "Coupon amount corresponding to the fixed interest rate (see attribute `coupons.interestRate.periodic.fixed`). The attribute is available only for instruments with a declared nominal value, e.g. securitized derivatives."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "List of coupons in chronological order."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/coupon/dayCountConvention/type/list": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/coupon/dayCountConvention/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of day count convention types.",
        "description": "List of day count convention types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the type."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the type."
                      }
                    }
                  },
                  "description": "List of day count convention types."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/instrument/coupon/interestRate/type/list": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/coupon/interestRate/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of interest rate types.",
        "description": "List of interest rate types.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the type."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the type."
                      },
                      "description": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Description of the type."
                      }
                    }
                  },
                  "description": "List of interest rate types."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ]
      }
    },
    "/instrument/coupon/keyData/get": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/coupon/keyData/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Interest rate details for selected periods of an interest-bearing instrument.",
        "description": "Interest rate details for selected periods of an interest-bearing instrument; any other instrument yields empty values.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Key dates and details.",
                  "type": "object",
                  "x-property-sort": [
                    "occurrence",
                    "interestRate",
                    "dayCountConvention"
                  ],
                  "properties": {
                    "occurrence": {
                      "type": "object",
                      "x-property-sort": [
                        "type",
                        "frequency"
                      ],
                      "description": "Occurrence and frequency of the coupon payments.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Occurrence type of the coupon payments.",
                          "x-enum-description": [
                            "The instrument does not pay out a coupon.",
                            "The instrument pays out a coupon only once.",
                            "The instrument pays out a coupon on a repeated basis."
                          ],
                          "enum": [
                            "never",
                            "once",
                            "repeated"
                          ]
                        },
                        "frequency": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "description": "Frequency of the coupon payments. Information about the frequency is available only if the attribute occurrence.type is set to \"repeated\". See endpoint `/basic/frequency/type/list` for possible values of the frequency.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the frequency."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the frequency."
                            }
                          }
                        }
                      }
                    },
                    "interestRate": {
                      "type": "object",
                      "x-property-sort": [
                        "initial",
                        "current",
                        "final"
                      ],
                      "description": "Interest rate details for selected coupon periods.",
                      "properties": {
                        "initial": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "startAccrual",
                            "periodEnd"
                          ],
                          "description": "Details of the first coupon period.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Value of the interest rate."
                            },
                            "startAccrual": {
                              "type": "string",
                              "format": "date",
                              "description": "Date as of which interest starts accruing."
                            },
                            "periodEnd": {
                              "type": "string",
                              "format": "date",
                              "description": "Ending date (inclusive)."
                            }
                          }
                        },
                        "current": {
                          "type": "object",
                          "x-property-sort": [
                            "value",
                            "type",
                            "accruedInterest",
                            "periodEnd"
                          ],
                          "description": "Details of the current coupon period.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Value of the interest rate."
                            },
                            "type": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "description": "Type of the interest rate, see endpoint `/instrument/coupon/interestRate/type/list` for possible values.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the interest rate type."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the interest rate type."
                                }
                              }
                            },
                            "accruedInterest": {
                              "type": "object",
                              "x-property-sort": [
                                "absolute",
                                "relative"
                              ],
                              "description": "Accrued interest, i.e. interest earned but not yet received (realized). The interest starts accruing at the beginning of a coupon period and reaches the declared value (see attribute `interestRate.current.value`) for that period at its end. For the start and end date of a coupon period see endpoint `/instrument/coupon/list`, attribute `coupons.period`.",
                              "properties": {
                                "absolute": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Monetary value of the accrued interest. The attribute is available only for instruments with a declared nominal value, e.g. securitized derivatives."
                                },
                                "relative": {
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Accrued interest."
                                }
                              }
                            },
                            "periodEnd": {
                              "type": "string",
                              "format": "date",
                              "description": "Ending date (inclusive)."
                            }
                          }
                        },
                        "final": {
                          "type": "object",
                          "x-property-sort": [
                            "periodEnd"
                          ],
                          "description": "Details of the final coupon period.",
                          "properties": {
                            "periodEnd": {
                              "type": "string",
                              "format": "date",
                              "description": "Ending date (inclusive)."
                            }
                          }
                        }
                      }
                    },
                    "dayCountConvention": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Day count convention type. See endpoint `/instrument/coupon/dayCountConvention/type/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the day count convention type."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the day count convention type."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/getByISIN": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/crossReference/getByISIN",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Translate a given ISIN to the respective most recent instrument identifier, retrieved from the Cross Reference Service.",
        "summary": "Translate ISIN to instrument.",
        "parameters": [
          {
            "name": "isin",
            "in": "query",
            "type": "string",
            "format": "isin",
            "required": true,
            "description": "Source ISIN to be translated."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Instrument response.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "fsym",
                    "validity"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the instrument."
                    },
                    "fsym": {
                      "type": "object",
                      "x-property-sort": [
                        "security"
                      ],
                      "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                      "properties": {
                        "security": {
                          "type": "object",
                          "x-property-sort": [
                            "permanentIdentifier"
                          ],
                          "description": "Security-level identifier.",
                          "properties": {
                            "permanentIdentifier": {
                              "type": "string",
                              "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                            }
                          }
                        }
                      }
                    },
                    "validity": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range that this translation is valid for."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/getByWKN": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/crossReference/getByWKN",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Translate a given WKN to the respective most recent instrument identifier, retrieved from the Cross Reference Service.",
        "summary": "Translate WKN to instrument.",
        "parameters": [
          {
            "name": "wkn",
            "in": "query",
            "description": "Source WKN to be translated.",
            "type": "string",
            "minLength": 6,
            "exclusiveMinimum": false,
            "maxLength": 6,
            "exclusiveMaximum": false,
            "pattern": "^[A-Z0-9]*$",
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Instrument response.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "fsym",
                    "validity"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the instrument."
                    },
                    "fsym": {
                      "type": "object",
                      "x-property-sort": [
                        "security"
                      ],
                      "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                      "properties": {
                        "security": {
                          "type": "object",
                          "x-property-sort": [
                            "permanentIdentifier"
                          ],
                          "description": "Security-level identifier.",
                          "properties": {
                            "permanentIdentifier": {
                              "type": "string",
                              "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                            }
                          }
                        }
                      }
                    },
                    "validity": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range that this translation is valid for."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/listByISIN": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/crossReference/listByISIN",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Translate a given list of ISINs to the respective most recent instrument identifiers, retrieved from the Cross Reference Service.",
        "summary": "Translate a list of ISINs to instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "isins"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "isins": {
                      "description": "List of source ISINs to be translated.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "isin"
                      },
                      "uniqueItems": true,
                      "minItems": 1,
                      "maxItems": 10
                    }
                  },
                  "required": [
                    "isins"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of instruments.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "fsym",
                      "validity",
                      "sourceIsin",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      },
                      "validity": {
                        "type": "object",
                        "format": "timeRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The starting point of the time range (inclusive)."
                          },
                          "end": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                          }
                        },
                        "x-property-sort": [
                          "start",
                          "end"
                        ],
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Time range that this translation is valid for."
                      },
                      "sourceIsin": {
                        "type": "string",
                        "format": "isin",
                        "description": "The source ISIN that the instrument is translated for."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier"
                        ],
                        "description": "Error status for the requested identifier",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid ISIN.",
                              "Not entitled to see data for the instrument."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "isin",
                            "description": "Provided identifier."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/listByWKN": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/crossReference/listByWKN",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Translate a given list of WKNs to the respective most recent instrument identifiers, retrieved from the Cross Reference Service.",
        "summary": "Translate a list of WKNs to instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "wkns"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "wkns": {
                      "description": "List of source WKNs to be translated.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 6,
                        "exclusiveMinimum": false,
                        "maxLength": 6,
                        "exclusiveMaximum": false,
                        "pattern": "^[A-Z0-9]*$"
                      },
                      "uniqueItems": true,
                      "minItems": 1,
                      "maxItems": 10
                    }
                  },
                  "required": [
                    "wkns"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of instruments.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "fsym",
                      "validity",
                      "sourceWKN",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      },
                      "validity": {
                        "type": "object",
                        "format": "timeRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The starting point of the time range (inclusive)."
                          },
                          "end": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                          }
                        },
                        "x-property-sort": [
                          "start",
                          "end"
                        ],
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Time range that this translation is valid for."
                      },
                      "sourceWKN": {
                        "type": "string",
                        "description": "The source WKN that the instrument is translated for."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier"
                        ],
                        "description": "Error status for the requested identifier",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid WKN.",
                              "Not entitled to see data for the instrument."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "description": "Provided identifier."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/history/getByISIN": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/crossReference/history/getByISIN",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Retrieve the complete translation history of a given ISIN to the respective instrument association from the Cross Reference Service. The results are sorted in descending order, starting with the most recent.",
        "summary": "ISIN to instrument translation history.",
        "parameters": [
          {
            "name": "isin",
            "in": "query",
            "type": "string",
            "format": "isin",
            "required": true,
            "description": "Source ISIN to be translated."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 10,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of instruments.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "fsym",
                      "validity"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      },
                      "validity": {
                        "type": "object",
                        "format": "timeRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The starting point of the time range (inclusive)."
                          },
                          "end": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                          }
                        },
                        "x-property-sort": [
                          "start",
                          "end"
                        ],
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Time range that this translation is valid for."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/crossReference/history/getByWKN": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/crossReference/history/getByWKN",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Retrieve the complete translation history of a given WKN to the respective instrument association from the Cross Reference Service. The results are sorted in descending order, starting with the most recent.",
        "summary": "WKN to instrument translation history.",
        "parameters": [
          {
            "name": "wkn",
            "in": "query",
            "description": "Source WKN to be translated.",
            "type": "string",
            "pattern": "^[A-Z0-9]*$",
            "minLength": 6,
            "exclusiveMinimum": false,
            "maxLength": 6,
            "exclusiveMaximum": false,
            "required": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 10,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of instruments.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "fsym",
                      "validity"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      },
                      "validity": {
                        "type": "object",
                        "format": "timeRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The starting point of the time range (inclusive)."
                          },
                          "end": {
                            "type": "string",
                            "format": "datetime",
                            "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future."
                          }
                        },
                        "x-property-sort": [
                          "start",
                          "end"
                        ],
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Time range that this translation is valid for."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/exchangeRate/get": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/exchangeRate/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Retrieve an exchange rate instrument identifier using the identifier of the main currencies represented by that exchange rate. \n\n An error is returned if one of the provided parameters is invalid or if no instrument is associated with the given combination of parameters.",
        "summary": "Retrieve an exchange rate instrument identifier.",
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the target main currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values."
          },
          {
            "name": "source",
            "in": "query",
            "type": "number",
            "format": "id32",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the source main currency. See endpoint `/basic/valueUnit/currency/main/list` for valid values."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Basic data for an exchange rate.",
                  "type": "object",
                  "x-property-sort": [
                    "instrument"
                  ],
                  "properties": {
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "shortName",
                        "fsym"
                      ],
                      "description": "Details regarding the exchange rate instrument.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the instrument."
                        },
                        "shortName": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Short name of the instrument."
                        },
                        "fsym": {
                          "type": "object",
                          "x-property-sort": [
                            "security"
                          ],
                          "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                          "properties": {
                            "security": {
                              "type": "object",
                              "x-property-sort": [
                                "permanentIdentifier"
                              ],
                              "description": "Security-level identifier.",
                              "properties": {
                                "permanentIdentifier": {
                                  "type": "string",
                                  "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/exchangeRate/getByISOCode": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/exchangeRate/getByISOCode",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Retrieve an exchange rate instrument identifier using the ISO 4217 code of the main currencies represented by that exchange rate. \n\nAn error is returned if one of the provided parameters is invalid or if no instrument is associated with the given combination of parameters.",
        "summary": "Retrieve an exchange rate instrument identifier.",
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "type": "string",
            "minLength": 3,
            "exclusiveMinimum": false,
            "maxLength": 3,
            "exclusiveMaximum": false,
            "required": true,
            "description": "ISO 4217 code of the target main currency."
          },
          {
            "name": "source",
            "in": "query",
            "type": "string",
            "minLength": 3,
            "exclusiveMinimum": false,
            "maxLength": 3,
            "exclusiveMaximum": false,
            "required": true,
            "description": "ISO 4217 code of the source main currency."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Basic data for an exchange rate.",
                  "type": "object",
                  "x-property-sort": [
                    "instrument"
                  ],
                  "properties": {
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "shortName",
                        "fsym"
                      ],
                      "description": "Details regarding the exchange rate instrument.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the instrument."
                        },
                        "shortName": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Short name of the instrument."
                        },
                        "fsym": {
                          "type": "object",
                          "x-property-sort": [
                            "security"
                          ],
                          "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                          "properties": {
                            "security": {
                              "type": "object",
                              "x-property-sort": [
                                "permanentIdentifier"
                              ],
                              "description": "Security-level identifier.",
                              "properties": {
                                "permanentIdentifier": {
                                  "type": "string",
                                  "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/legalEntity/backgroundText/listByInstrument": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/legalEntity/backgroundText/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Role-specific background texts of legal entities related to an instrument.",
        "description": "Role-specific background texts of legal entities related to an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of legal entity roles related to the instrument with the corresponding list of legal entities acting in a given role and the respective background texts of the latter with regard to that role. All parts of the response are sorted by increasing identifier value.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "legalEntities"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a role."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the role."
                      },
                      "legalEntities": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "backgroundTexts"
                        ],
                        "description": "Legal entities and their respective background texts with regard to the role.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of a legal entity."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the legal entity."
                          },
                          "backgroundTexts": {
                            "type": "object",
                            "x-property-sort": [
                              "type",
                              "body"
                            ],
                            "description": "List of background texts.",
                            "properties": {
                              "type": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name"
                                ],
                                "description": "Type of the background text.",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of the type."
                                  },
                                  "name": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Name of the type."
                                  }
                                }
                              },
                              "body": {
                                "type": "string",
                                "format": "localizedString",
                                "description": "Body of the background text."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/legalEntity/complianceProperty/listByInstrument": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/legalEntity/complianceProperty/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Role-specific compliance properties of legal entities related to an instrument.",
        "description": "Role-specic compliance properties of legal entities related to an instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of an instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "legalEntities"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of a role."
                      },
                      "name": {
                        "type": "string",
                        "format": "localizedString",
                        "description": "Name of the role."
                      },
                      "legalEntities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "complianceProperties"
                          ],
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of a legal entity."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the legal entity."
                            },
                            "complianceProperties": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-property-sort": [
                                  "id",
                                  "name",
                                  "description"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true,
                                    "description": "Identifier of a compliance property."
                                  },
                                  "name": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Name of the compliance property."
                                  },
                                  "description": {
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Description of the compliance property."
                                  }
                                }
                              },
                              "description": "List of compliance properties."
                            }
                          }
                        },
                        "description": "Legal entities and their respective compliance properties with regard to the role."
                      }
                    }
                  },
                  "description": "List of legal entity roles related to the instrument with the corresponding list of legal entities acting in a given role and the respective compliance properties of the latter with regard to that role. All parts of the response are sorted by increasing identifier value."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/mifid/get": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/mifid/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "MiFID II data for a specified financial instrument. The instruments governed by MiFID II are called \"investment products\".",
        "summary": "MiFID II data for a financial instrument.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the instrument."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "general",
                    "targetMarket",
                    "distributionChannel",
                    "costsAndCharges"
                  ],
                  "description": "MiFID II data.",
                  "properties": {
                    "general": {
                      "type": "object",
                      "x-property-sort": [
                        "isin",
                        "name",
                        "currency",
                        "reportingDate",
                        "legalStructure",
                        "fund",
                        "issuer",
                        "guarantor",
                        "type",
                        "leveragedOrContingent",
                        "manufacturer",
                        "approvalProcedure",
                        "complexProduct"
                      ],
                      "description": "General information.",
                      "properties": {
                        "isin": {
                          "type": "string",
                          "format": "isin",
                          "description": "International Securities Identification Number (ISIN)."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the investment product."
                        },
                        "currency": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "isoCode"
                          ],
                          "description": "Denomination currency of the investment product. This attribute is also decisive for the main currency many of the cost attributes are originally provided in, assumed the quotation type (see attribute `quotation`) has the value 1 (currency amount per unit). See endpoint `/basic/valueUnit/currency/main/list` for valid values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the currency."
                            },
                            "isoCode": {
                              "type": "string",
                              "description": "ISO 4217 code of the currency."
                            }
                          }
                        },
                        "reportingDate": {
                          "type": "string",
                          "format": "date",
                          "description": "The date to which the MiFID II data refers."
                        },
                        "legalStructure": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "description": "Basic legal structure categorization of the investment product. See endpoint `/category/listBySystem` for category system 38 for possible values.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the category."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category."
                            }
                          }
                        },
                        "fund": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "domicile"
                          ],
                          "description": "For an instrument that represents a share class of an investment fund, the juristic person in the role of a fund. For more information see endpoint `/legalEntity/list`.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the juristic person in the role of a fund."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the juristic person in the role of a fund."
                            },
                            "domicile": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "description": "The domicile country of the fund. This is the country of registration of the juristic person that is in the fund role. For more information about countries see endpoint `/basic/region/country/list`.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the country."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the country."
                                }
                              }
                            }
                          }
                        },
                        "issuer": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "lei"
                          ],
                          "description": "Issuer of the investment product.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the issuer."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the issuer."
                            },
                            "lei": {
                              "type": "string",
                              "description": "Legal entity identifier (LEI) of the issuer."
                            }
                          }
                        },
                        "guarantor": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "lei"
                          ],
                          "description": "Guarantor of the investment product.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the guarantor."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the guarantor."
                            },
                            "lei": {
                              "type": "string",
                              "description": "Legal entity identifier (LEI) of the guarantor."
                            }
                          }
                        },
                        "type": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "description": "Type of the investment product. See endpoint `/category/list` for valid values",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the category."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category."
                            }
                          }
                        },
                        "leveragedOrContingent": {
                          "type": "boolean",
                          "description": "Indicates whether the investment product has leverage or implies a contingent liability."
                        },
                        "manufacturer": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name",
                            "lei"
                          ],
                          "description": "Manufacturer of the investment product.",
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the manufacturer."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the manufacturer."
                            },
                            "lei": {
                              "type": "string",
                              "description": "Legal entity identifier (LEI) of the manufacturer."
                            }
                          }
                        },
                        "approvalProcedure": {
                          "description": "Information on the approval procedure undergone by the investment product.",
                          "type": "string",
                          "x-enum-description": [
                            "Pursuant to MiFID II",
                            "Comparable to MiFID II",
                            "Not-in-accordance with MiFID II",
                            "Not required",
                            "Information not available"
                          ],
                          "enum": [
                            "pursuant",
                            "comparable",
                            "notInAccordance",
                            "notRequired",
                            "notRelevant"
                          ]
                        },
                        "complexProduct": {
                          "description": "Indicates whether the investment product is considered a complex one.",
                          "type": "string",
                          "x-enum-description": [
                            "Yes",
                            "No",
                            "Situational verification by the customer necessary",
                            "Not relevant"
                          ],
                          "enum": [
                            "yes",
                            "no",
                            "situational",
                            "notRelevant"
                          ]
                        }
                      }
                    },
                    "targetMarket": {
                      "type": "object",
                      "x-property-sort": [
                        "investorType",
                        "knowledgeAndExperience",
                        "abilityToBearLosses",
                        "riskTolerance",
                        "clientObjectivesAndNeeds",
                        "recommendedHoldingPeriod"
                      ],
                      "description": "Target market.",
                      "properties": {
                        "investorType": {
                          "type": "object",
                          "x-property-sort": [
                            "retail",
                            "professional",
                            "eligibleCounterParty"
                          ],
                          "description": "Describes the intended type of investors for an investment product.",
                          "properties": {
                            "retail": {
                              "description": "Indicates whether the investment product is suitable for retail clients.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral"
                              ]
                            },
                            "professional": {
                              "description": "Indicates whether the investment product is suitable for professional clients.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Per se professional",
                                "Elective professional",
                                "Both (Per se and elective professional)"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "perSe",
                                "elective",
                                "both"
                              ]
                            },
                            "eligibleCounterParty": {
                              "description": "Indicates whether the investment product is suitable for clients of type eligible counterparty.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral"
                              ]
                            }
                          }
                        },
                        "knowledgeAndExperience": {
                          "type": "object",
                          "x-property-sort": [
                            "basicInvestor",
                            "informedInvestor",
                            "advancedInvestor",
                            "germany"
                          ],
                          "description": "Describes the level of knowledge and experience an investor should have in order to acquire the investment product.",
                          "properties": {
                            "basicInvestor": {
                              "description": "Indicates whether the investment product is suitable for investors having basic knowledge and experience. Basic knowledge and experience means that the investor can make an informed investment decision based on the regulated and authorized offering documentation or with the help of basic information provided by the point of sale or the investor has no financial industry experience, i.e. the investment product is suitable for a first-time investor",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "informedInvestor": {
                              "description": "Indicates whether the investment product is suitable for investors with an informed level of knowledge and experience. Informed investors have the ability to understand the particular financial instrument. Additionally, the investor must have a number of investment holdings in relevant financial instruments or must be involved in frequent trading activity in those.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "advancedInvestor": {
                              "description": "Indicates whether the investment product is suitable for investors with an advanced level of knowledge and experience. An advanced investor has comprehensive understanding of relevant financial instruments. Additionally, the investor must have a large number of diverse investment holdings in relevant financial instruments; must be involved in frequent trading activity in those, must have had previous exposure to high-risk or complex investments or must have relevant financial industry experience.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "germany": {
                              "type": "object",
                              "x-property-sort": [
                                "expertInvestor"
                              ],
                              "description": "Specific indicators for Germany.",
                              "properties": {
                                "expertInvestor": {
                                  "description": "Indicates whether the investment product is suitable for investors with an expert level of knowledge and experience. This regulatory requirement is available only in Germany, e.g. for investment in a contract for difference (CFD).",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "abilityToBearLosses": {
                          "type": "object",
                          "x-property-sort": [
                            "noCapitalLoss",
                            "limitedCapitalLoss",
                            "noCapitalGuarantee",
                            "lossBeyondCapital",
                            "maximumCapitalLoss"
                          ],
                          "description": "Describes the potential loss associated with the investment product an investor shall be willing to accept.",
                          "properties": {
                            "noCapitalLoss": {
                              "description": "Indicates whether the investment product is suitable for investors not able to bear capital loss. Minor loss e.g. due to costs is possible.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "limitedCapitalLoss": {
                              "description": "Indicates whether the investment product is suitable for investors able to bear limited capital loss.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "noCapitalGuarantee": {
                              "description": "Indicates whether the investment product is suitable for investors able to bear total capital loss.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "lossBeyondCapital": {
                              "description": "Indicates whether the investment product is suitable for investors able to bear loss beyond the invested capital.",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "maximumCapitalLoss": {
                              "type": "number",
                              "format": "relativeValue",
                              "description": "Maximum loss of the invested capital assumed the investment product is held until maturity."
                            }
                          }
                        },
                        "riskTolerance": {
                          "type": "object",
                          "x-property-sort": [
                            "sri",
                            "srri",
                            "internalRiskRating",
                            "spain",
                            "germany"
                          ],
                          "description": "Quantifies the risk associated with the product by assigning a rating using an appropriate risk rating system.",
                          "properties": {
                            "sri": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "rank",
                                "description"
                              ],
                              "description": "Summary risk indicator (SRI).",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of rating grade."
                                },
                                "rank": {
                                  "type": "string",
                                  "description": "Rating grade."
                                },
                                "description": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Description of the rating grade."
                                }
                              }
                            },
                            "srri": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "rank",
                                "description"
                              ],
                              "description": "Synthetic risk and reward indicator (SRRI).",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of rating grade."
                                },
                                "rank": {
                                  "type": "string",
                                  "description": "Rating grade."
                                },
                                "description": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Description of the rating grade."
                                }
                              }
                            },
                            "internalRiskRating": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "rank",
                                "description"
                              ],
                              "description": "MiFID risk rating as per the internal methodology of the issuer.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of rating grade."
                                },
                                "rank": {
                                  "type": "string",
                                  "description": "Rating grade."
                                },
                                "description": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Description of the rating grade."
                                }
                              }
                            },
                            "spain": {
                              "type": "object",
                              "x-property-sort": [
                                "sri"
                              ],
                              "description": "Specific indicators for Spain.",
                              "properties": {
                                "sri": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "rank",
                                    "description"
                                  ],
                                  "description": "Summary risk indicator (SRI).",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of rating grade."
                                    },
                                    "rank": {
                                      "type": "string",
                                      "description": "Rating grade."
                                    },
                                    "description": {
                                      "type": "string",
                                      "format": "localizedString",
                                      "description": "Description of the rating grade."
                                    }
                                  }
                                }
                              }
                            },
                            "germany": {
                              "type": "object",
                              "x-property-sort": [
                                "lowestRiskTolerance"
                              ],
                              "description": "Specific indicators for Germany.",
                              "properties": {
                                "lowestRiskTolerance": {
                                  "type": "boolean",
                                  "description": "Indicates whether the investment product is suitable for investors with the lowest risk tolerance."
                                }
                              }
                            }
                          }
                        },
                        "clientObjectivesAndNeeds": {
                          "type": "object",
                          "x-property-sort": [
                            "returnProfile",
                            "maturityDate",
                            "mayBeTerminatedEarly",
                            "specificInvestmentNeed"
                          ],
                          "description": "Characterizes the investment product regarding its ability to serve specific investment objectives.",
                          "properties": {
                            "returnProfile": {
                              "type": "object",
                              "x-property-sort": [
                                "preservation",
                                "growth",
                                "income",
                                "financing",
                                "hedging",
                                "optionOrLeveraged",
                                "other",
                                "germany"
                              ],
                              "description": "Indicates whether the investment product is suitable for investors with specific return profiles.",
                              "properties": {
                                "preservation": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"preservation\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "growth": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"growth\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "income": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"income\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "financing": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"financing\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "hedging": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"hedging\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "optionOrLeveraged": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"leverage\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "other": {
                                  "description": "Indicates whether the investment product is suitable for investors with the return profile \"other\".",
                                  "type": "string",
                                  "x-enum-description": [
                                    "Yes",
                                    "No",
                                    "Neutral",
                                    "Yes with feedback"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "neutral",
                                    "feedback"
                                  ]
                                },
                                "germany": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "pensionScheme"
                                  ],
                                  "description": "Specific indicators for Germany.",
                                  "properties": {
                                    "pensionScheme": {
                                      "description": "Indicates whether the investment product is suitable for investors with the return profile \"pension scheme\". This regulatory requirement is available only in Germany (\"Riester Rente\").",
                                      "type": "string",
                                      "x-enum-description": [
                                        "Yes",
                                        "No",
                                        "Neutral",
                                        "Yes with feedback"
                                      ],
                                      "enum": [
                                        "yes",
                                        "no",
                                        "neutral",
                                        "feedback"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "maturityDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Maturity date of the investment product."
                            },
                            "mayBeTerminatedEarly": {
                              "description": "Indicates whether the investment product is unsuitable for investors not accepting financial products with potential termination prior to maturity. (That means, a \"yes\" value indicates that the product may not last until maturity and thus conflicts with an investor profile rejecting premature redemption.) The termination could be initiated by the issuer (callable), by the investor (puttable) or automatically due to an event, e.g. barrier breach (auto-callable).",
                              "type": "string",
                              "x-enum-description": [
                                "Yes",
                                "No",
                                "Neutral",
                                "Yes with feedback"
                              ],
                              "enum": [
                                "yes",
                                "no",
                                "neutral",
                                "feedback"
                              ]
                            },
                            "specificInvestmentNeed": {
                              "description": "Indicates whether the investment product is suitable for investors with a specific investment need. This attribute provides either a general statement (yes or no) or a set of needs (green investment, ethical investment, islamic banking, Environmental, social and governance (ESG), other) covered by the product.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "x-enum-description": [
                                  "Yes",
                                  "No",
                                  "Green Investment",
                                  "Ethical Investment",
                                  "Islamic Banking",
                                  "Environmental, Social and Governance (ESG)",
                                  "Other"
                                ],
                                "enum": [
                                  "yes",
                                  "no",
                                  "green",
                                  "ethical",
                                  "islamic",
                                  "esg",
                                  "other"
                                ]
                              }
                            }
                          }
                        },
                        "recommendedHoldingPeriod": {
                          "type": "object",
                          "x-property-sort": [
                            "holdingPeriod",
                            "holdingPeriodYears"
                          ],
                          "description": "States the recommended holding period of the product.",
                          "properties": {
                            "holdingPeriod": {
                              "description": "Indicates the recommended holding period (RHP) of the investment product whereby more than one RHP per product may exist.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "x-enum-description": [
                                  "Very short (<1 year)",
                                  "Short (<3 years)",
                                  "Medium (<5 years)",
                                  "Long (≥5 years)",
                                  "Neutral"
                                ],
                                "enum": [
                                  "veryShort",
                                  "short",
                                  "medium",
                                  "long",
                                  "neutral"
                                ]
                              }
                            },
                            "holdingPeriodYears": {
                              "type": "number",
                              "format": "real",
                              "description": "Indicates the length of the recommended holding period (RHP) of the investment product in years, not available if the attribute `holdingPeriod` is set."
                            }
                          }
                        }
                      }
                    },
                    "distributionChannel": {
                      "type": "object",
                      "x-property-sort": [
                        "executionOnly",
                        "executionAppropriateness",
                        "investmentAdvice",
                        "portfolioManagement"
                      ],
                      "description": "MiFID distribution channel provides information on the different services a firm might employ in order to deliver an investment product to its customers and on the client type the particular service is appropriate for.",
                      "properties": {
                        "executionOnly": {
                          "description": "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) without appropriateness assessment\".",
                          "type": "string",
                          "x-enum-description": [
                            "Retail",
                            "Professional",
                            "Both",
                            "None"
                          ],
                          "enum": [
                            "retail",
                            "professional",
                            "both",
                            "none"
                          ]
                        },
                        "executionAppropriateness": {
                          "description": "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"execution only / reception and transmission of orders (RTO) with appropriateness assessment\".",
                          "type": "string",
                          "x-enum-description": [
                            "Retail",
                            "Professional",
                            "Both",
                            "None"
                          ],
                          "enum": [
                            "retail",
                            "professional",
                            "both",
                            "none"
                          ]
                        },
                        "investmentAdvice": {
                          "description": "Indicates the client type(s) for which the investment product is suitable through the distribution channel \"investment advice with suitability assessment\".",
                          "type": "string",
                          "x-enum-description": [
                            "Retail",
                            "Professional",
                            "Both",
                            "None"
                          ],
                          "enum": [
                            "retail",
                            "professional",
                            "both",
                            "none"
                          ]
                        },
                        "portfolioManagement": {
                          "description": "Indicates the client type for which the investment product is suitable through the distribution channel \"discretionary/portfolio management with suitability assessment\".",
                          "type": "string",
                          "x-enum-description": [
                            "Retail",
                            "Professional",
                            "Both",
                            "None"
                          ],
                          "enum": [
                            "retail",
                            "professional",
                            "both",
                            "none"
                          ]
                        }
                      }
                    },
                    "costsAndCharges": {
                      "type": "object",
                      "x-property-sort": [
                        "quotation",
                        "exAnte",
                        "exPost"
                      ],
                      "description": "MiFID cost is the disclosure of information on costs and charges related to an investment product and on the investment or ancillary service provided to a client. MiFID distinguishes between ex-ante and ex-post disclosure of costs.",
                      "properties": {
                        "quotation": {
                          "description": "Quotation type originally used for providing most of the cost items of the investment product.",
                          "type": "string",
                          "x-enum-description": [
                            "Currency amount per unit",
                            "In percent"
                          ],
                          "enum": [
                            "currency",
                            "percent"
                          ]
                        },
                        "exAnte": {
                          "type": "object",
                          "x-property-sort": [
                            "oneOffEntryCost",
                            "italy",
                            "oneOffMaximumAcquiredEntryCost",
                            "oneOffMaximumExitCost",
                            "oneOffMaximumAcquiredExitCost",
                            "oneOffTypicalExitCost",
                            "oneOffPriorRHPExitCost",
                            "ongoingCosts",
                            "managementFee",
                            "distributionFee",
                            "transactionCosts",
                            "incidentalCosts"
                          ],
                          "description": "Disclosure on costs and charges at the point of sale based on reasonable estimations.",
                          "properties": {
                            "oneOffEntryCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "One-off ex ante entry cost of the investment product.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "italy": {
                              "type": "object",
                              "x-property-sort": [
                                "oneOffMaximumFixedEntryCost",
                                "oneOffMaximumFixedExitCost"
                              ],
                              "description": "Specific indicators for Italy.",
                              "properties": {
                                "oneOffMaximumFixedEntryCost": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "valueUnit"
                                  ],
                                  "description": "Maximum ex ante fixed one-off entry cost (e.g. flat fee per subscription, paying agent cost). This type of cost is applicable to funds traded in Italy only. The originally delivered values are always monetary amounts.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "Value of the attribute."
                                    },
                                    "valueUnit": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "code"
                                      ],
                                      "description": "Value unit of the attribute",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the value unit"
                                        },
                                        "code": {
                                          "type": "string",
                                          "description": "Code of the value unit"
                                        }
                                      }
                                    }
                                  }
                                },
                                "oneOffMaximumFixedExitCost": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "valueUnit"
                                  ],
                                  "description": "Maximum ex ante fixed one-off exit cost (e.g. flat fee per redemption, paying agent cost). This type of cost is applicable to funds traded in Italy only. The originally delivered values are always monetary amounts",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "Value of the attribute."
                                    },
                                    "valueUnit": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "code"
                                      ],
                                      "description": "Value unit of the attribute",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the value unit"
                                        },
                                        "code": {
                                          "type": "string",
                                          "description": "Code of the value unit"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffMaximumAcquiredEntryCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Maximum ex ante one-off entry cost acquired to a fund (e.g. subscription fee). This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffMaximumExitCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Maximum ex ante one-off exit cost, not acquired to a fund. This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffMaximumAcquiredExitCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Maximum ex ante one-off exit cost acquired to a fund (e.g. redemption fee). This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffTypicalExitCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Typical ex ante one-off exit cost of the investment product at maturity or at the end of the recommended holding period.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffPriorRHPExitCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "One-off ex ante exit cost of the investment product assumed it is redeemed prior to maturity or prior to the end of the recommended holding period (RHP).",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "ongoingCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex ante ongoing cost of the investment product. This cost includes the management fee and the distribution fee. A research fee could also be included here if applicable and not already included in the transaction cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "managementFee": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex ante management fee of the investment product, included in the annualized ex ante ongoing cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "distributionFee": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex ante distribution fee of the investment product, included in the annualized ex ante ongoing cost. This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "transactionCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex ante transaction cost of the investment product. A research fee could also be included here if applicable and not already included in the annualized ex ante ongoing cost. This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "incidentalCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex ante incidental cost of the investment product. Among others, this includes the performance fee and the carried interests. This type of cost is applicable to funds only.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "exPost": {
                          "type": "object",
                          "x-property-sort": [
                            "oneOffEntryCost",
                            "oneOffExitCost",
                            "ongoingCosts",
                            "ongoingCostAccumulated",
                            "managementFee",
                            "distributionFee",
                            "transactionCosts",
                            "incidentalCosts"
                          ],
                          "description": "Disclosure on costs and charges in the latest available post sale period, providing the latest available figures.",
                          "properties": {
                            "oneOffEntryCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "One-off ex post entry cost of the investment product.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "oneOffExitCost": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "One-off ex post exit cost of the investment product.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "ongoingCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex post ongoing cost of the investment product. This cost includes the ex post management and distribution fees over the period. A research fee could also be included here if applicable and not already included in the ex post transaction cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "ongoingCostAccumulated": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Ongoing ex post accumulated cost of the investment product. This cost represents the sum of all daily recurring product costs.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "managementFee": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex post management fee of the investment product. This fee is included in the total ex post ongoing cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "distributionFee": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex post distribution fee of the investment product. This fee is included in the total ex post ongoing cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "transactionCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex post transaction cost of the investment product. A research fee could also be included here if applicable and not already included in the ex post ongoing cost.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            },
                            "incidentalCosts": {
                              "type": "object",
                              "x-property-sort": [
                                "value",
                                "valueUnit"
                              ],
                              "description": "Annualized ex post incidental cost of the investment product. Among others, this includes the performance fee and the carried interests.",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "real",
                                  "description": "Value of the attribute."
                                },
                                "valueUnit": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "code"
                                  ],
                                  "description": "Value unit of the attribute",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "format": "id32",
                                      "x-positive": true,
                                      "description": "Identifier of the value unit"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the value unit"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/instrument/rating/grade/list": {
      "post": {
        "tags": [
          "instrument"
        ],
        "operationId": "post/instrument/rating/grade/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "List of rating grades for a list of instruments. The list can be restricted to rating grades belonging to particular rating systems.",
        "summary": "List of rating grades for a list of instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "ids",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true
                      },
                      "maxItems": 100,
                      "uniqueItems": true,
                      "description": "List of instrument identifiers."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "ratingSystem"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "ratingSystem": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Rating system.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "description": "List of rating system identifiers. See endpoint `/rating/system/list` for valid values.",
                              "uniqueItems": true,
                              "maxItems": 10
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "ids"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "ratings"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of an instrument."
                      },
                      "ratings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-property-sort": [
                            "system",
                            "current",
                            "previous",
                            "change"
                          ],
                          "properties": {
                            "system": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "description": "Rating system.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the rating system."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Official name of the rating system in the original language, as\nsupplied by the rating agency."
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "grade",
                                "rank",
                                "date"
                              ],
                              "description": "Current rating.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the rating grade."
                                },
                                "grade": {
                                  "type": "string",
                                  "description": "Rating grade."
                                },
                                "rank": {
                                  "type": "number",
                                  "format": "int32",
                                  "description": "Rank of the rating grade according to the sort order of the\nrating system."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Date on which the instrument was rated."
                                }
                              }
                            },
                            "previous": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "grade",
                                "rank",
                                "date"
                              ],
                              "description": "Previous rating.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the rating grade."
                                },
                                "grade": {
                                  "type": "string",
                                  "description": "Rating grade."
                                },
                                "rank": {
                                  "type": "number",
                                  "format": "int32",
                                  "description": "Rank of the rating grade according to the sort order of the\nrating system."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Date on which the instrument was rated."
                                }
                              }
                            },
                            "change": {
                              "type": "number",
                              "format": "int32",
                              "description": "Rating grade change which is the difference between the rank of the current rating and the rank of the previous rating.\nExample: If a rating system has AAA, AA, A, B, C, D as possible\nratings (from best to worst), then a change from AA to B is\nrepresented as -2 and a change from C to AAA is represented\nas +4."
                            }
                          }
                        },
                        "description": "Rating details. See endpoint `/rating/system/get` for details regarding a rating system, endpoint `/rating/grade/listBySystem` for all rating grades of a rating system, and endpoint `/rating/grade/get` for details regarding a rating grade."
                      }
                    }
                  },
                  "description": "Unsorted list of instruments with their respective rating grade per rating\nsystem."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Basic data for a notation.",
        "summary": "Basic data for a notation.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of basic data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "symbol",
                    "factSetMarketSymbol",
                    "valueUnit",
                    "market",
                    "instrument"
                  ],
                  "properties": {
                    "symbol": {
                      "type": "string",
                      "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market."
                    },
                    "factSetMarketSymbol": {
                      "type": "string",
                      "description": "The FactSet market symbol of the notation (i.e. TICKER_EXCHANGE)."
                    },
                    "valueUnit": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code",
                        "isoCode",
                        "name"
                      ],
                      "description": "The identifier of the unit in which prices of the notation are expressed.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the value unit."
                        },
                        "code": {
                          "type": "string",
                          "description": "Currency code according to ISO 4217, a code such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent), or a code for an alternative unit such as PT (points), % (percent)."
                        },
                        "isoCode": {
                          "type": "string",
                          "description": "Currency code according to ISO 4217."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the value unit."
                        }
                      }
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Market of the notation.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the market."
                        }
                      }
                    },
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Instrument data for the notation.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Basic data for a list of notations.",
        "summary": "Basic data for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "maxItems": 100,
            "uniqueItems": true,
            "required": true,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of basic data for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "factSetMarketSymbol",
                      "valueUnit",
                      "market",
                      "instrument",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market."
                      },
                      "factSetMarketSymbol": {
                        "type": "string",
                        "description": "The FactSet market symbol of the notation (i.e. TICKER_EXCHANGE)."
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "isoCode",
                          "name"
                        ],
                        "description": "The identifier of the unit in which prices of the notation are expressed.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Currency code according to ISO 4217, a code such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent), or a code for an alternative unit such as PT (points), % (percent)."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "Currency code according to ISO 4217."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the value unit."
                          }
                        }
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Instrument data for the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation in the requested quality."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/getByFactSetMarketSymbol": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/crossReference/getByFactSetMarketSymbol",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Translate a FactSet market symbol to a notation.",
        "description": "Translate a FactSet market symbol to a notation. This symbol is also known as TICKER_EXCHANGE.",
        "parameters": [
          {
            "name": "factSetMarketSymbol",
            "in": "query",
            "type": "string",
            "maxLength": 32,
            "exclusiveMaximum": false,
            "minLength": 1,
            "exclusiveMinimum": false,
            "required": true,
            "description": "Market symbol defined by FactSet to identify a notation (i.e. TICKER_EXCHANGE)."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Notation identified by the FactSet market symbol.",
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "market",
                    "valueUnit",
                    "instrument"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name"
                      ],
                      "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the market."
                        }
                      }
                    },
                    "valueUnit": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "code",
                        "isoCode",
                        "name"
                      ],
                      "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the value unit."
                        },
                        "code": {
                          "type": "string",
                          "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                        },
                        "isoCode": {
                          "type": "string",
                          "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the value unit."
                        }
                      }
                    },
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Instrument referenced by the notation.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/listByInstrument": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/crossReference/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of entitled notations.",
        "description": "List of entitled notations.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of an instrument."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "markets",
                        "valueUnits",
                        "onlyActive"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "markets": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific markets.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of market ids."
                            }
                          }
                        },
                        "valueUnits": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific value units.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of value unit ids."
                            }
                          }
                        },
                        "onlyActive": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months."
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "active",
                      "market",
                      "valueUnit",
                      "fsym"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the notation is active."
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "isoCode",
                          "name"
                        ],
                        "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the value unit."
                          }
                        }
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/listByISIN": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/crossReference/listByISIN",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of entitled notations.",
        "description": "List of entitled notations.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "isin",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "isin": {
                      "type": "string",
                      "format": "isin",
                      "description": "International Securities Identification Number."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "markets",
                        "valueUnits",
                        "onlyActive"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "markets": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific markets.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of market ids."
                            }
                          }
                        },
                        "valueUnits": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific value units.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of value unit ids."
                            }
                          }
                        },
                        "onlyActive": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months."
                        }
                      }
                    }
                  },
                  "required": [
                    "isin"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "active",
                      "market",
                      "valueUnit",
                      "fsym"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify notations, no symbol will be set for the notations of that market."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the notation is active."
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "isoCode",
                          "name"
                        ],
                        "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the value unit."
                          }
                        }
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/listBySymbol": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/crossReference/listBySymbol",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "List of entitled notations.",
        "description": "List of entitled notations. Symbols are not globally unique; therefore, a given symbol interpreted in different markets might refer to different instruments.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "symbol",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "symbol": {
                      "type": "string",
                      "maxLength": 32,
                      "exclusiveMaximum": false,
                      "minLength": 1,
                      "exclusiveMinimum": false,
                      "description": "Market-specific code to identify a notation."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "markets",
                        "valueUnits",
                        "onlyActive"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "markets": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific markets.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of market ids."
                            }
                          }
                        },
                        "valueUnits": {
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "description": "Filter for specific value units.",
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "maxItems": 100,
                              "minItems": 1,
                              "description": "List of value unit ids."
                            }
                          }
                        },
                        "onlyActive": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months."
                        }
                      }
                    }
                  },
                  "required": [
                    "symbol"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "active",
                      "market",
                      "valueUnit",
                      "fsym",
                      "instrument"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Indicates whether the notation is active."
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code",
                          "isoCode",
                          "name"
                        ],
                        "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the value unit."
                          }
                        }
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "fsym"
                        ],
                        "description": "Instrument referenced by the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          },
                          "fsym": {
                            "type": "object",
                            "x-property-sort": [
                              "security"
                            ],
                            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                            "properties": {
                              "security": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier"
                                ],
                                "description": "Security-level identifier.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/factSetIdentifier/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/crossReference/factSetIdentifier/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Retrieve FactSet identifiers for a given notation.",
        "description": "<p>Retrieve FactSet identifiers for a given notation. Security and listing-level identifiers are always included, regional level identifiers are included, if available.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Instrument data with a list of regional-level data and assigned listing-level data.",
                  "type": "object",
                  "x-property-sort": [
                    "instrument",
                    "permanentIdentifier",
                    "regional"
                  ],
                  "properties": {
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Instrument data.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        }
                      }
                    },
                    "permanentIdentifier": {
                      "type": "string",
                      "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                    },
                    "regional": {
                      "type": "object",
                      "x-property-sort": [
                        "isPrimary",
                        "permanentIdentifier",
                        "tickerRegion",
                        "listing"
                      ],
                      "description": "Regional-level data with assigned listing-level data. If the set of regional identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array.",
                      "properties": {
                        "isPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the regional identifier is the primary regional identifier of the security (`true`) or not (`false`)."
                        },
                        "permanentIdentifier": {
                          "type": "string",
                          "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                        },
                        "tickerRegion": {
                          "type": "string",
                          "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: FDS-US)."
                        },
                        "listing": {
                          "type": "object",
                          "x-property-sort": [
                            "isPrimary",
                            "permanentIdentifier",
                            "tickerExchange"
                          ],
                          "description": "Listing-level data with a list of notations. If the set of listing identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array.",
                          "properties": {
                            "isPrimary": {
                              "type": "boolean",
                              "description": "Indicates whether the listing identifier is the one for the primary listing among all listings with the same regional identifier (`true`) or not (`false`)."
                            },
                            "permanentIdentifier": {
                              "type": "string",
                              "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                            },
                            "tickerExchange": {
                              "type": "string",
                              "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"FDS\" for FactSet Research Systems Inc.) and the three-character code of the exchange on which the listing is traded (example: FDS-NYS)."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/factSetIdentifier/listByFactSetIdentifier": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/crossReference/factSetIdentifier/listByFactSetIdentifier",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Retrieve a list of notations for a given FactSet identifier.",
        "description": "<p>Retrieve a list of notations for a given FactSet identifier, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>See the group description for more information about the security's primary listing.</p>",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "symbologyIdentifier"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "symbologyIdentifier": {
                      "type": "string",
                      "pattern": "^(([0-9A-Z]{6}-[SLR])|([0-9A-Z]{1,47}-[A-Z]{2,4}))$",
                      "maxLength": 50,
                      "exclusiveMaximum": false,
                      "minLength": 4,
                      "exclusiveMinimum": false,
                      "description": "FactSet Symbology Identifier. See the endpoint description for valid FactSet Symbology Identifier types."
                    }
                  },
                  "required": [
                    "symbologyIdentifier"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Instrument data with a list of regional-level data and assigned listing-level data.",
                  "type": "object",
                  "x-property-sort": [
                    "instrument",
                    "permanentIdentifier",
                    "regional"
                  ],
                  "properties": {
                    "instrument": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "name",
                        "shortName"
                      ],
                      "description": "Instrument data.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "id64",
                          "x-positive": true,
                          "description": "Identifier of the instrument."
                        },
                        "name": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the instrument."
                        },
                        "shortName": {
                          "type": "string",
                          "format": "localizedString",
                          "description": "Short name of the instrument."
                        }
                      }
                    },
                    "permanentIdentifier": {
                      "type": "string",
                      "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                    },
                    "regional": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "isPrimary",
                          "permanentIdentifier",
                          "tickerRegion",
                          "listing"
                        ],
                        "properties": {
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Indicates whether the regional identifier is the primary regional identifier of the security (`true`) or not (`false`)."
                          },
                          "permanentIdentifier": {
                            "type": "string",
                            "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                          },
                          "tickerRegion": {
                            "type": "string",
                            "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: FDS-US)."
                          },
                          "listing": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "notation",
                                "isPrimary",
                                "permanentIdentifier",
                                "tickerExchange"
                              ],
                              "properties": {
                                "notation": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "market",
                                    "valueUnit"
                                  ],
                                  "description": "Notation data.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "id64",
                                      "x-positive": true,
                                      "description": "Identifier of a notation."
                                    },
                                    "market": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "name"
                                      ],
                                      "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the market."
                                        },
                                        "name": {
                                          "type": "string",
                                          "format": "localizedString",
                                          "description": "Name of the market."
                                        }
                                      }
                                    },
                                    "valueUnit": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "code",
                                        "isoCode",
                                        "name"
                                      ],
                                      "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the value unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                                        },
                                        "isoCode": {
                                          "type": "string",
                                          "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                                        },
                                        "name": {
                                          "type": "string",
                                          "format": "localizedString",
                                          "description": "Name of the value unit."
                                        }
                                      }
                                    }
                                  }
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Indicates whether the listing identifier is the one for the primary listing among all listings with the same regional identifier (`true`) or not (`false`)."
                                },
                                "permanentIdentifier": {
                                  "type": "string",
                                  "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                                },
                                "tickerExchange": {
                                  "type": "string",
                                  "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"FDS\" for FactSet Research Systems Inc.) and the three-character code of the exchange on which the listing is traded (example: FDS-NYS)."
                                }
                              }
                            },
                            "description": "Listing-level data with a list of notations. If the set of listing identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array."
                          }
                        }
                      },
                      "description": "Regional-level data with assigned listing-level data. If the set of regional identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/crossReference/factSetIdentifier/listByInstrument": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/crossReference/factSetIdentifier/listByInstrument",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Retrieve a list of FactSet identifiers for a given instrument.",
        "description": "<p>Retrieve a list of FactSet identifiers for a given instrument, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>The result contains only notations that have at least one FactSet identifier (see <big><tt>listing.permanentIdentifier</tt></big>, <big><tt>listing.tickerExchange</tt></big>).</p><p>See the group description for more information about the security's primary listing.</p>",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of an instrument."
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Instrument data with a list of regional-level data and assigned listing-level data.",
                  "type": "object",
                  "x-property-sort": [
                    "permanentIdentifier",
                    "regional"
                  ],
                  "properties": {
                    "permanentIdentifier": {
                      "type": "string",
                      "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                    },
                    "regional": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "isPrimary",
                          "permanentIdentifier",
                          "tickerRegion",
                          "listing"
                        ],
                        "properties": {
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Indicates whether the regional identifier is the primary regional identifier of the security (`true`) or not (`false`)."
                          },
                          "permanentIdentifier": {
                            "type": "string",
                            "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                          },
                          "tickerRegion": {
                            "type": "string",
                            "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: FDS-US)."
                          },
                          "listing": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "notation",
                                "isPrimary",
                                "permanentIdentifier",
                                "tickerExchange"
                              ],
                              "properties": {
                                "notation": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "id",
                                    "market",
                                    "valueUnit"
                                  ],
                                  "description": "Notation data.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "id64",
                                      "x-positive": true,
                                      "description": "Identifier of a notation."
                                    },
                                    "market": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "name"
                                      ],
                                      "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the market."
                                        },
                                        "name": {
                                          "type": "string",
                                          "format": "localizedString",
                                          "description": "Name of the market."
                                        }
                                      }
                                    },
                                    "valueUnit": {
                                      "type": "object",
                                      "x-property-sort": [
                                        "id",
                                        "code",
                                        "isoCode",
                                        "name"
                                      ],
                                      "description": "Value unit of the notation. See endpoint `/basic/valueUnit/list` for possible values.",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "id32",
                                          "x-positive": true,
                                          "description": "Identifier of the value unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                                        },
                                        "isoCode": {
                                          "type": "string",
                                          "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency."
                                        },
                                        "name": {
                                          "type": "string",
                                          "format": "localizedString",
                                          "description": "Name of the value unit."
                                        }
                                      }
                                    }
                                  }
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Indicates whether the listing identifier is the one for the primary listing among all listings with the same regional identifier (`true`) or not (`false`)."
                                },
                                "permanentIdentifier": {
                                  "type": "string",
                                  "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                                },
                                "tickerExchange": {
                                  "type": "string",
                                  "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"FDS\" for FactSet Research Systems Inc.) and the three-character code of the exchange on which the listing is traded (example: FDS-NYS)."
                                }
                              }
                            },
                            "description": "Listing-level data with a list of notations. If the set of listing identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array."
                          }
                        }
                      },
                      "description": "Regional-level data with assigned listing-level data. If the set of regional identifiers contains an element for which the attribute `isPrimary = true`, then this element is the first one in the array."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/1/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/1/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one month.",
        "description": "End-of-day (EOD) key figures for the time range of one month.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "averagePrice",
                    "tradingVolume",
                    "tradingValue",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "averagePrice": {
                      "type": "number",
                      "format": "real",
                      "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                    },
                    "tradingVolume": {
                      "type": "object",
                      "x-property-sort": [
                        "average",
                        "sum"
                      ],
                      "description": "Average and total trading volume for the given time range.",
                      "properties": {
                        "average": {
                          "type": "number",
                          "format": "real",
                          "description": "Arithmetic mean of the daily trading volumes."
                        },
                        "sum": {
                          "type": "number",
                          "format": "real",
                          "description": "Sum of the daily trading volumes."
                        }
                      }
                    },
                    "tradingValue": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/1/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/1/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one month, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of one month, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "averagePrice",
                      "tradingVolume",
                      "tradingValue",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "averagePrice": {
                        "type": "number",
                        "format": "real",
                        "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                      },
                      "tradingVolume": {
                        "type": "object",
                        "x-property-sort": [
                          "average",
                          "sum"
                        ],
                        "description": "Average and total trading volume for the given time range.",
                        "properties": {
                          "average": {
                            "type": "number",
                            "format": "real",
                            "description": "Arithmetic mean of the daily trading volumes."
                          },
                          "sum": {
                            "type": "number",
                            "format": "real",
                            "description": "Sum of the daily trading volumes."
                          }
                        }
                      },
                      "tradingValue": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/week/1/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/week/1/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one week.",
        "description": "End-of-day (EOD) key figures for the time range of one week.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "averagePrice",
                    "tradingVolume",
                    "tradingValue",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "averagePrice": {
                      "type": "number",
                      "format": "real",
                      "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                    },
                    "tradingVolume": {
                      "type": "object",
                      "x-property-sort": [
                        "average",
                        "sum"
                      ],
                      "description": "Average and total trading volume for the given time range.",
                      "properties": {
                        "average": {
                          "type": "number",
                          "format": "real",
                          "description": "Arithmetic mean of the daily trading volumes."
                        },
                        "sum": {
                          "type": "number",
                          "format": "real",
                          "description": "Sum of the daily trading volumes."
                        }
                      }
                    },
                    "tradingValue": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/week/1/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/week/1/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one week, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of one week, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "averagePrice",
                      "tradingVolume",
                      "tradingValue",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "averagePrice": {
                        "type": "number",
                        "format": "real",
                        "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                      },
                      "tradingVolume": {
                        "type": "object",
                        "x-property-sort": [
                          "average",
                          "sum"
                        ],
                        "description": "Average and total trading volume for the given time range.",
                        "properties": {
                          "average": {
                            "type": "number",
                            "format": "real",
                            "description": "Arithmetic mean of the daily trading volumes."
                          },
                          "sum": {
                            "type": "number",
                            "format": "real",
                            "description": "Sum of the daily trading volumes."
                          }
                        }
                      },
                      "tradingValue": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/1/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/1/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one year.",
        "description": "End-of-day (EOD) key figures for the time range of one year.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "averagePrice",
                    "tradingVolume",
                    "tradingValue",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "averagePrice": {
                      "type": "number",
                      "format": "real",
                      "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                    },
                    "tradingVolume": {
                      "type": "object",
                      "x-property-sort": [
                        "average",
                        "sum"
                      ],
                      "description": "Average and total trading volume for the given time range.",
                      "properties": {
                        "average": {
                          "type": "number",
                          "format": "real",
                          "description": "Arithmetic mean of the daily trading volumes."
                        },
                        "sum": {
                          "type": "number",
                          "format": "real",
                          "description": "Sum of the daily trading volumes."
                        }
                      }
                    },
                    "tradingValue": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/1/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/1/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of one year, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of one year, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "averagePrice",
                      "tradingVolume",
                      "tradingValue",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "averagePrice": {
                        "type": "number",
                        "format": "real",
                        "description": "Arithmetic mean of the notation's EOD closing prices for the given time range."
                      },
                      "tradingVolume": {
                        "type": "object",
                        "x-property-sort": [
                          "average",
                          "sum"
                        ],
                        "description": "Average and total trading volume for the given time range.",
                        "properties": {
                          "average": {
                            "type": "number",
                            "format": "real",
                            "description": "Arithmetic mean of the daily trading volumes."
                          },
                          "sum": {
                            "type": "number",
                            "format": "real",
                            "description": "Sum of the daily trading volumes."
                          }
                        }
                      },
                      "tradingValue": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the cash flow for all transactions of one notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/3/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/3/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of three months.",
        "description": "End-of-day (EOD) key figures for the time range of three months.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "tradingVolume",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "tradingVolume": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/3/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/3/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of three months, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of three months, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "tradingVolume",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "tradingVolume": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/3/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/3/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of three years.",
        "description": "End-of-day (EOD) key figures for the time range of three years.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "tradingVolume",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "tradingVolume": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/3/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/3/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of three years, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of three years, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "tradingVolume",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "tradingVolume": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/5/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/5/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of five years.",
        "description": "End-of-day (EOD) key figures for the time range of five years.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "tradingVolume",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "tradingVolume": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/year/5/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/year/5/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of five years, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of five years, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "tradingVolume",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "tradingVolume": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/6/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/6/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of six months.",
        "description": "End-of-day (EOD) key figures for the time range of six months.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "tradingVolume",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "tradingVolume": {
                      "type": "number",
                      "format": "real",
                      "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/month/6/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/month/6/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range of six months, for a list of notations.",
        "description": "End-of-day (EOD) key figures for the time range of six months, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "tradingVolume",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "tradingVolume": {
                        "type": "number",
                        "format": "real",
                        "description": "Sum of the trading volume of a notation in number of shares for the time-range between the date of the most recent end-of-day (EOD) closing price (inclusive) and the reference date (exclusive)."
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/yearToDate/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/yearToDate/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range year-to-date (YTD)..",
        "description": "End-of-day (EOD) key figures for the time range year-to-date (YTD). The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent trading day of the current calendar year for which EOD prices are available..",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "referenceDate",
                    "performance",
                    "high",
                    "low",
                    "volatility"
                  ],
                  "description": "EOD key figures.",
                  "properties": {
                    "referenceDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Reference date of the time range."
                    },
                    "performance": {
                      "type": "object",
                      "x-property-sort": [
                        "absolute",
                        "relative",
                        "referencePrice"
                      ],
                      "description": "Performance values.",
                      "properties": {
                        "absolute": {
                          "type": "number",
                          "format": "real",
                          "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                        },
                        "relative": {
                          "type": "number",
                          "format": "relativeValue",
                          "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                        },
                        "referencePrice": {
                          "type": "number",
                          "format": "real",
                          "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Maximum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Maximum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the maximum value."
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "price",
                        "date"
                      ],
                      "description": "Minimum value of the notation's price in the given time range.",
                      "properties": {
                        "price": {
                          "type": "number",
                          "format": "real",
                          "description": "Minimum value."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the minimum value."
                        }
                      }
                    },
                    "volatility": {
                      "type": "number",
                      "format": "real",
                      "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/keyFigures/yearToDate/list": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/keyFigures/yearToDate/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations..",
        "description": "End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations. The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent tradingday of the current calendar year for which EOD prices are available..",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "uniqueItems": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "EOD key figures for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "referenceDate",
                      "performance",
                      "high",
                      "low",
                      "volatility",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "referenceDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Reference date of the time range."
                      },
                      "performance": {
                        "type": "object",
                        "x-property-sort": [
                          "absolute",
                          "relative",
                          "referencePrice"
                        ],
                        "description": "Performance values.",
                        "properties": {
                          "absolute": {
                            "type": "number",
                            "format": "real",
                            "description": "Absolute difference of a notation's most recent EOD closing price against the EOD closing price on the reference date."
                          },
                          "relative": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "Difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date."
                          },
                          "referencePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "EOD closing price as of the reference date (see attribute `referenceDate`) used for calculation."
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Maximum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Maximum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the maximum value."
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "price",
                          "date"
                        ],
                        "description": "Minimum value of the notation's price in the given time range.",
                        "properties": {
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Minimum value."
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the minimum value."
                          }
                        }
                      },
                      "volatility": {
                        "type": "number",
                        "format": "real",
                        "description": "Volatility of the daily logarithmic returns, annualized assuming 256 trading days per year."
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/status/get": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/status/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "description": "Intraday trading status of a notation.",
        "summary": "Intraday trading status of a notation.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of a notation."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the trading status. The trading status and related data for a notation cannot be retrieved in end-of-day quality (EOD).",
            "required": false,
            "default": "DLY",
            "x-enum-description": [
              "Real-time: trading status with minimal technical processing delays.",
              "Delayed: trading status with an exchange-imposed delay of usually 15 to 30 minutes.",
              "Best: choose the trading status quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "BST"
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "",
                  "type": "object",
                  "x-property-sort": [
                    "suspended",
                    "tradingStatus",
                    "market"
                  ],
                  "properties": {
                    "suspended": {
                      "type": "boolean",
                      "description": "Indicates whether the notation is currently suspended from trading. The notation is tradable if it is not suspended and the market is open, see attribute `market.isOpen`."
                    },
                    "tradingStatus": {
                      "type": "string",
                      "description": "Market-specific code of the trading status and/or the suspension of the notation."
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "isOpen",
                        "phase"
                      ],
                      "description": "Market of the notation.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market. See endpoint `/basic/market/list` for possible values. "
                        },
                        "isOpen": {
                          "type": "boolean",
                          "description": "Indicates whether the market of the notation is currently open, that is, the current time is between the open and adjusted close of the notation's market, see endpoint `/prices/tradingSchedule/event/list` for the trading schedule of the notation's market. The adjusted close is later than the official closing time specified by the market and includes the time after closing when trades might still be reported. Breaks such as a lunch break are not considered."
                        },
                        "phase": {
                          "type": "string",
                          "description": "Market-specific code of the current market phase."
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/get": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": true,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Overview of trading on the current trading day, including the latest price, for a notation.",
        "description": "Overview of trading on the current trading day, including the latest price, for a notation.\n\nThe endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "DLY",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "EOD",
              "BST"
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "default": 5000,
            "description": "Minimum number of milliseconds at which updates are sent.",
            "x-enum-description": [
              "1 second",
              "5 seconds",
              "10 seconds",
              "30 seconds",
              "60 seconds",
              "300 seconds"
            ],
            "enum": [
              1000,
              5000,
              10000,
              30000,
              60000,
              300000
            ],
            "name": "_subscriptionMinimumInterval",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of price related data for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "valueUnit",
                    "currency",
                    "market",
                    "quality",
                    "latest",
                    "first",
                    "low",
                    "high",
                    "previousClose",
                    "accumulated"
                  ],
                  "properties": {
                    "valueUnit": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the valueUnit."
                        }
                      }
                    },
                    "currency": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Main currency of the monetary attributes. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the currency."
                        }
                      }
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "id",
                        "isOpen",
                        "phase"
                      ],
                      "description": "Market of the notation.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market. See endpoint `/basic/market/list` for possible values."
                        },
                        "isOpen": {
                          "x-pushable": true,
                          "type": "boolean",
                          "description": "Indicates whether the market of the notation is currently open, that is, the current time is between the open and adjusted close of the notation's market, see endpoint `/prices/tradingSchedule/event/list` for the trading schedule of the notation's market. The adjusted close is later than the official closing time specified by the market and includes the time after closing when trades might still be reported. Breaks such as a lunch break are not considered. The value is `null` if the result quality is EOD."
                        },
                        "phase": {
                          "x-pushable": true,
                          "type": "string",
                          "description": "Market-specific code of the current market phase. The value is `null` if the result quality is EOD."
                        }
                      }
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "EOD"
                      ]
                    },
                    "latest": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "quoteCondition",
                        "tradingVolume",
                        "tradingValue",
                        "performance"
                      ],
                      "description": "Most recent trade or price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeLatestTradePrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueLatestTradePrice"
                        },
                        "quoteCondition": {
                          "x-pushable": true,
                          "type": "string",
                          "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                          "x-cas-attribute": "quoteConditionLatestTradePrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) traded.",
                          "x-cas-attribute": "tradingVolumeLatestTradePrice"
                        },
                        "tradingValue": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` for its unit.",
                          "x-cas-attribute": "tradingValueLatestTradePrice"
                        },
                        "performance": {
                          "type": "object",
                          "x-property-sort": [
                            "intraday"
                          ],
                          "description": "Performance values.",
                          "properties": {
                            "intraday": {
                              "type": "object",
                              "x-property-sort": [
                                "absolute",
                                "relative"
                              ],
                              "description": "Performance of the most recent price calculated against the latest price which has occurred before the start of the current trading day.",
                              "properties": {
                                "absolute": {
                                  "x-pushable": true,
                                  "type": "number",
                                  "format": "real",
                                  "description": "Absolute value. See attribute `valueUnit` for its unit.",
                                  "x-cas-attribute": "absolutePerformanceLatestTradePrice"
                                },
                                "relative": {
                                  "x-pushable": true,
                                  "type": "number",
                                  "format": "relativeValue",
                                  "description": "Relative value.",
                                  "x-cas-attribute": "relativePerformanceLatestTradePrice"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "first": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "tradingVolume"
                      ],
                      "description": "First trade or price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeFirstTradePrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueFirstTradePrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) traded.",
                          "x-cas-attribute": "tradingVolumeFirstTradePrice"
                        }
                      }
                    },
                    "low": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "tradingVolume"
                      ],
                      "description": "Trade with the lowest price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeLowestTradePrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueLowestTradePrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) traded.",
                          "x-cas-attribute": "tradingVolumeLowestTradePrice"
                        }
                      }
                    },
                    "high": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "tradingVolume"
                      ],
                      "description": "Trade with the highest price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeHighestTradePrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueHighestTradePrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) traded.",
                          "x-cas-attribute": "tradingVolumeHighestTradePrice"
                        }
                      }
                    },
                    "previousClose": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price"
                      ],
                      "description": "Close price of the previous day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timePreviousClosePrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valuePreviousClosePrice"
                        }
                      }
                    },
                    "accumulated": {
                      "type": "object",
                      "x-property-sort": [
                        "numberTrades",
                        "tradingVolume",
                        "tradingValue",
                        "volumeWeightedAveragePrice"
                      ],
                      "description": "Summary data accumulated over all trades of the current trading day.",
                      "properties": {
                        "numberTrades": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of trades.",
                          "x-cas-attribute": "accumulatedNumberTrades"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) traded.",
                          "x-cas-attribute": "accumulatedTradingVolume"
                        },
                        "tradingValue": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Monetary equivalent (cash value) of the trades. See attribute `currency` for its unit.",
                          "x-cas-attribute": "accumulatedTradingValue"
                        },
                        "volumeWeightedAveragePrice": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "The volume-weighted average price (VWAP). See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "volumeWeightedAveragePrice"
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/list": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Overview of trading on the current trading day, including the latest price, for a list of notations.",
        "description": "Overview of trading on the current trading day, including the latest price, for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "DLY",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "EOD",
              "BST"
            ]
          },
          {
            "name": "sameQuality",
            "in": "query",
            "type": "boolean",
            "required": false,
            "default": true,
            "description": "Assure that the prices for all notations are of the same quality."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of price related data for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "valueUnit",
                      "currency",
                      "market",
                      "quality",
                      "latest",
                      "first",
                      "low",
                      "high",
                      "previousClose",
                      "accumulated",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the valueUnit."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Main currency of the monetary attributes. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the currency."
                          }
                        }
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          }
                        }
                      },
                      "quality": {
                        "type": "string",
                        "description": "Quality of the price.",
                        "x-enum-description": [
                          "Real-time: intraday prices with minimal technical processing delays.",
                          "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                          "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                        ],
                        "enum": [
                          "RLT",
                          "DLY",
                          "EOD"
                        ]
                      },
                      "latest": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "quoteCondition",
                          "tradingVolume",
                          "tradingValue",
                          "performance"
                        ],
                        "description": "Most recent trade or price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeLatestTradePrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueLatestTradePrice"
                          },
                          "quoteCondition": {
                            "type": "string",
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                            "x-cas-attribute": "quoteConditionLatestTradePrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded.",
                            "x-cas-attribute": "tradingVolumeLatestTradePrice"
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` for its unit.",
                            "x-cas-attribute": "tradingValueLatestTradePrice"
                          },
                          "performance": {
                            "type": "object",
                            "x-property-sort": [
                              "intraday"
                            ],
                            "description": "Performance values.",
                            "properties": {
                              "intraday": {
                                "type": "object",
                                "x-property-sort": [
                                  "absolute",
                                  "relative"
                                ],
                                "description": "Performance of the most recent price calculated against the latest price which has occurred before the start of the current trading day.",
                                "properties": {
                                  "absolute": {
                                    "type": "number",
                                    "format": "real",
                                    "description": "Absolute value. See attribute `valueUnit` for its unit.",
                                    "x-cas-attribute": "absolutePerformanceLatestTradePrice"
                                  },
                                  "relative": {
                                    "type": "number",
                                    "format": "relativeValue",
                                    "description": "Relative value.",
                                    "x-cas-attribute": "relativePerformanceLatestTradePrice"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "first": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "tradingVolume"
                        ],
                        "description": "First trade or price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeFirstTradePrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueFirstTradePrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded.",
                            "x-cas-attribute": "tradingVolumeFirstTradePrice"
                          }
                        }
                      },
                      "low": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "tradingVolume"
                        ],
                        "description": "Trade with the lowest price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeLowestTradePrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueLowestTradePrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded.",
                            "x-cas-attribute": "tradingVolumeLowestTradePrice"
                          }
                        }
                      },
                      "high": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "tradingVolume"
                        ],
                        "description": "Trade with the highest price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeHighestTradePrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueHighestTradePrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded.",
                            "x-cas-attribute": "tradingVolumeHighestTradePrice"
                          }
                        }
                      },
                      "previousClose": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price"
                        ],
                        "description": "Close price of the previous day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timePreviousClosePrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valuePreviousClosePrice"
                          }
                        }
                      },
                      "accumulated": {
                        "type": "object",
                        "x-property-sort": [
                          "numberTrades",
                          "tradingVolume",
                          "tradingValue",
                          "volumeWeightedAveragePrice"
                        ],
                        "description": "Summary data accumulated over all trades of the current trading day.",
                        "properties": {
                          "numberTrades": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of trades.",
                            "x-cas-attribute": "accumulatedNumberTrades"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) traded.",
                            "x-cas-attribute": "accumulatedTradingVolume"
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the trades. See attribute `currency` for its unit.",
                            "x-cas-attribute": "accumulatedTradingValue"
                          },
                          "volumeWeightedAveragePrice": {
                            "type": "number",
                            "format": "real",
                            "description": "The volume-weighted average price (VWAP). See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "volumeWeightedAveragePrice"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation in the requested quality."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/bidAsk/get": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/bidAsk/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": true,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Current bid and ask prices (best bid / offer) for a notation.",
        "description": "Current bid and ask prices (best bid / offer) for a notation.\n\nThe endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "DLY",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "EOD",
              "BST"
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "type": "number",
            "format": "int32",
            "default": 5000,
            "description": "Minimum number of milliseconds at which updates are send.",
            "x-enum-description": [
              "1 second",
              "5 seconds",
              "10 seconds",
              "30 seconds",
              "60 seconds",
              "300 seconds"
            ],
            "enum": [
              1000,
              5000,
              10000,
              30000,
              60000,
              300000
            ],
            "name": "_subscriptionMinimumInterval",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Bid and ask prices for the notation.",
                  "type": "object",
                  "x-property-sort": [
                    "valueUnit",
                    "currency",
                    "market",
                    "quality",
                    "bid",
                    "ask"
                  ],
                  "properties": {
                    "valueUnit": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the valueUnit."
                        }
                      }
                    },
                    "currency": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Main currency of the monetary attributes. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the currency."
                        }
                      }
                    },
                    "market": {
                      "type": "object",
                      "x-property-sort": [
                        "id"
                      ],
                      "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "id32",
                          "x-positive": true,
                          "description": "Identifier of the market."
                        }
                      }
                    },
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                        "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                      ],
                      "enum": [
                        "RLT",
                        "DLY",
                        "EOD"
                      ]
                    },
                    "bid": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "quoteCondition",
                        "tradingVolume",
                        "tradingValue"
                      ],
                      "description": "Most recent bid price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeLatestBidPrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueLatestBidPrice"
                        },
                        "quoteCondition": {
                          "x-pushable": true,
                          "type": "string",
                          "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                          "x-cas-attribute": "quoteConditionLatestBidPrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) solicited.",
                          "x-cas-attribute": "tradingVolumeLatestBidPrice"
                        },
                        "tradingValue": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Monetary equivalent (cash value) of the offer. See attribute `currency` for its unit.",
                          "x-cas-attribute": "tradingValueLatestBidPrice"
                        }
                      }
                    },
                    "ask": {
                      "type": "object",
                      "x-property-sort": [
                        "time",
                        "price",
                        "quoteCondition",
                        "tradingVolume",
                        "tradingValue"
                      ],
                      "description": "Most recent ask price of the trading day.",
                      "properties": {
                        "time": {
                          "x-pushable": true,
                          "type": "string",
                          "format": "datetime",
                          "description": "Date and time.",
                          "x-cas-attribute": "timeLatestAskPrice"
                        },
                        "price": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Price value. See attribute `valueUnit` for its unit.",
                          "x-cas-attribute": "valueLatestAskPrice"
                        },
                        "quoteCondition": {
                          "x-pushable": true,
                          "type": "string",
                          "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                          "x-cas-attribute": "quoteConditionLatestAskPrice"
                        },
                        "tradingVolume": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Number of units (e.g. shares) offered.",
                          "x-cas-attribute": "tradingVolumeLatestAskPrice"
                        },
                        "tradingValue": {
                          "x-pushable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Monetary equivalent (cash value) of the offer. See attribute `currency` for its unit.",
                          "x-cas-attribute": "tradingValueLatestAskPrice"
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/bidAsk/list": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/bidAsk/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Current bid and ask prices (best bid / offer) for a list of notations.",
        "description": "Current bid and ask prices (best bid / offer) for a list of notations.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "id64",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "required": true,
            "maxItems": 100,
            "description": "List of notations."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "DLY",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "EOD",
              "BST"
            ]
          },
          {
            "name": "sameQuality",
            "in": "query",
            "type": "boolean",
            "required": false,
            "default": true,
            "description": "Assure that the prices for all notations are of the same quality."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of bid and ask prices for a list of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "valueUnit",
                      "currency",
                      "market",
                      "quality",
                      "bid",
                      "ask",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "valueUnit": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the valueUnit."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Main currency of the monetary attributes. See endpoint `/basic/valueUnit/currency/main/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the currency."
                          }
                        }
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          }
                        }
                      },
                      "quality": {
                        "type": "string",
                        "description": "Quality of the price.",
                        "x-enum-description": [
                          "Real-time: intraday prices with minimal technical processing delays.",
                          "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                          "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                        ],
                        "enum": [
                          "RLT",
                          "DLY",
                          "EOD"
                        ]
                      },
                      "bid": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "quoteCondition",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "description": "Most recent bid price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeLatestBidPrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueLatestBidPrice"
                          },
                          "quoteCondition": {
                            "type": "string",
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                            "x-cas-attribute": "quoteConditionLatestBidPrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) solicited.",
                            "x-cas-attribute": "tradingVolumeLatestBidPrice"
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the offer. See attribute `currency` for its unit.",
                            "x-cas-attribute": "tradingValueLatestBidPrice"
                          }
                        }
                      },
                      "ask": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "price",
                          "quoteCondition",
                          "tradingVolume",
                          "tradingValue"
                        ],
                        "description": "Most recent ask price of the trading day.",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time.",
                            "x-cas-attribute": "timeLatestAskPrice"
                          },
                          "price": {
                            "type": "number",
                            "format": "real",
                            "description": "Price value. See attribute `valueUnit` for its unit.",
                            "x-cas-attribute": "valueLatestAskPrice"
                          },
                          "quoteCondition": {
                            "type": "string",
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                            "x-cas-attribute": "quoteConditionLatestAskPrice"
                          },
                          "tradingVolume": {
                            "type": "number",
                            "format": "real",
                            "description": "Number of units (e.g. shares) offered.",
                            "x-cas-attribute": "tradingVolumeLatestAskPrice"
                          },
                          "tradingValue": {
                            "type": "number",
                            "format": "real",
                            "description": "Monetary equivalent (cash value) of the offer. See attribute `currency` for its unit.",
                            "x-cas-attribute": "tradingValueLatestAskPrice"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "x-property-sort": [
                          "code",
                          "identifier",
                          "encryptedDetails"
                        ],
                        "description": "Error status for the requested identifier",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code of the error condition.",
                            "x-enum-description": [
                              "No error.",
                              "The provided identifier does not refer to a valid notation.",
                              "Not entitled to see data for the notation in the requested quality."
                            ],
                            "enum": [
                              "none",
                              "parameter",
                              "entitlement"
                            ]
                          },
                          "identifier": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Provided identifier."
                          },
                          "encryptedDetails": {
                            "type": "string",
                            "description": "Base64-encoded internal details about the error."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/orderbook/aggregated/get": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/orderbook/aggregated/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Orderbook aggregated by price.",
        "description": "Orderbook aggregated by price.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "RLT",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "BST"
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Orderbook.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "asks",
                    "bids"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "asks": {
                      "description": "List of sell orders aggregated by price.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "price",
                          "numberOrders",
                          "volume",
                          "time"
                        ],
                        "properties": {
                          "type": {
                            "description": "Order type.",
                            "type": "number",
                            "format": "int32",
                            "x-enum-description": [
                              "The order has a fixed price.",
                              "The order has no price and should be traded to market price.",
                              "The order represents a quote, which cannot execute against other orders."
                            ],
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          },
                          "price": {
                            "description": "Price value. The value is 0 if the attribute `type` is 1 (market order). See attribute `valueUnit` in endpoint `/prices/get` for the unit of the price value\".",
                            "type": "number",
                            "format": "real"
                          },
                          "numberOrders": {
                            "description": "Number of orders for the price level.",
                            "type": "number",
                            "format": "int32"
                          },
                          "volume": {
                            "description": "Summarized volume for the price level.",
                            "type": "number",
                            "format": "int32"
                          },
                          "time": {
                            "description": "Date and time of the latest change.",
                            "type": "string",
                            "format": "datetime"
                          }
                        }
                      }
                    },
                    "bids": {
                      "description": "List of buy orders aggregated by price.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "type",
                          "price",
                          "numberOrders",
                          "volume",
                          "time"
                        ],
                        "properties": {
                          "type": {
                            "description": "Order type.",
                            "type": "number",
                            "format": "int32",
                            "x-enum-description": [
                              "The order has a fixed price.",
                              "The order has no price and should be traded to market price.",
                              "The order represents a quote, which cannot execute against other orders."
                            ],
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          },
                          "price": {
                            "description": "Price value. The value is 0 if the attribute `type` is 1 (market order). See attribute `valueUnit` in endpoint `/prices/get` for the unit of the price value\".",
                            "type": "number",
                            "format": "real"
                          },
                          "numberOrders": {
                            "description": "Number of orders for the price level.",
                            "type": "number",
                            "format": "int32"
                          },
                          "volume": {
                            "description": "Summarized volume for the price level.",
                            "type": "number",
                            "format": "int32"
                          },
                          "time": {
                            "description": "Date and time of the latest change.",
                            "type": "string",
                            "format": "datetime"
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/orderbook/full/get": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/orderbook/full/get",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Full orderbook",
        "description": "Full orderbook",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "format": "id64",
            "x-positive": true,
            "required": true,
            "description": "Identifier of the notation."
          },
          {
            "name": "quality",
            "in": "query",
            "type": "string",
            "description": "Quality of the price.",
            "required": false,
            "default": "RLT",
            "x-enum-description": [
              "Real-time: intraday prices with minimal technical processing delays.",
              "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
              "Best: choose the price quality with the least delay, as entitled for the client."
            ],
            "enum": [
              "RLT",
              "DLY",
              "BST"
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Orderbook.",
                  "type": "object",
                  "x-property-sort": [
                    "quality",
                    "asks",
                    "bids"
                  ],
                  "properties": {
                    "quality": {
                      "type": "string",
                      "description": "Quality of the price.",
                      "x-enum-description": [
                        "Real-time: intraday prices with minimal technical processing delays.",
                        "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes."
                      ],
                      "enum": [
                        "RLT",
                        "DLY"
                      ]
                    },
                    "asks": {
                      "description": "Ask entries of the full orderbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "time",
                          "type",
                          "price",
                          "quoteCondition",
                          "volume",
                          "marketMaker"
                        ],
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the order. Possible values depend on the values delivered by the supplier of the price information.",
                            "type": "string",
                            "format": "id64",
                            "x-positive": true
                          },
                          "time": {
                            "description": "Date and time of the latest change.",
                            "type": "string",
                            "format": "datetime"
                          },
                          "type": {
                            "description": "Order type.",
                            "type": "number",
                            "format": "int32",
                            "x-enum-description": [
                              "The order has a fixed price.",
                              "The order has no price and should be traded at market price.",
                              "The order represents a quote, which cannot execute against other orders."
                            ],
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          },
                          "price": {
                            "description": "Price value. The value is 0 if the attribute `type` is 1 (market order). See attribute `valueUnit` in endpoint `/prices/get` for the unit of the price value\".",
                            "type": "number",
                            "format": "real"
                          },
                          "quoteCondition": {
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                            "type": "string"
                          },
                          "volume": {
                            "description": "Volume of the order.",
                            "type": "number",
                            "format": "int32"
                          },
                          "marketMaker": {
                            "description": "Code of the market maker.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bids": {
                      "description": "Bid entries of the full orderbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "time",
                          "type",
                          "price",
                          "quoteCondition",
                          "volume",
                          "marketMaker"
                        ],
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the order. Possible values depend on the values delivered by the supplier of the price information.",
                            "type": "string",
                            "format": "id64",
                            "x-positive": true
                          },
                          "time": {
                            "description": "Date and time of the latest change.",
                            "type": "string",
                            "format": "datetime"
                          },
                          "type": {
                            "description": "Order type.",
                            "type": "number",
                            "format": "int32",
                            "x-enum-description": [
                              "The order has a fixed price.",
                              "The order has no price and should be traded at market price.",
                              "The order represents a quote, which cannot execute against other orders."
                            ],
                            "enum": [
                              0,
                              1,
                              2
                            ]
                          },
                          "price": {
                            "description": "Price value. The value is 0 if the attribute `type` is 1 (market order). See attribute `valueUnit` in endpoint `/prices/get` for the unit of the price value\".",
                            "type": "number",
                            "format": "real"
                          },
                          "quoteCondition": {
                            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
                            "type": "string"
                          },
                          "volume": {
                            "description": "Volume of the order.",
                            "type": "number",
                            "format": "int32"
                          },
                          "marketMaker": {
                            "description": "Code of the market maker.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/tradingSchedule/event/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "post/prices/tradingSchedule/event/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": true,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Sequence of market-related events.",
        "description": "Sequence of market-related events like the opening time or closing time of a market of a specific notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "id",
                    "filter"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id64",
                      "x-positive": true,
                      "description": "Identifier of the notation."
                    },
                    "filter": {
                      "type": "object",
                      "x-property-sort": [
                        "types",
                        "range"
                      ],
                      "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                      "properties": {
                        "types": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true
                          },
                          "minItems": 1,
                          "description": "List of trading schedule event types to return. See endpoint `/prices/tradingSchedule/event/type/list` for valid values."
                        },
                        "range": {
                          "type": "object",
                          "format": "timeRange",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The starting point of the time range (inclusive)."
                            },
                            "end": {
                              "type": "string",
                              "format": "datetime",
                              "description": "The ending point of the time range (exclusive)."
                            }
                          },
                          "x-property-sort": [
                            "start",
                            "end"
                          ],
                          "required": [
                            "start",
                            "end"
                          ],
                          "description": "Date and time range for the time series. A valid time range is between 1900-01-01 and 24 hours and 5 minutes into the future."
                        }
                      },
                      "required": [
                        "types",
                        "range"
                      ]
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the cursor-based pagination strategy.",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "cursor",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of trading schedule events for a notation.",
                  "type": "object",
                  "x-property-sort": [
                    "range",
                    "events"
                  ],
                  "properties": {
                    "range": {
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The starting point of the time range (inclusive)."
                        },
                        "end": {
                          "type": "string",
                          "format": "datetime",
                          "description": "The ending point of the time range (exclusive)."
                        }
                      },
                      "x-property-sort": [
                        "start",
                        "end"
                      ],
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned trading schedule events."
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-property-sort": [
                          "time",
                          "type"
                        ],
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time of the event."
                          },
                          "type": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "code"
                            ],
                            "description": "Trading schedule event type.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the event type."
                              },
                              "code": {
                                "type": "string",
                                "description": "Code of the event type."
                              }
                            }
                          }
                        }
                      },
                      "description": "List of trading schedule events."
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prices/tradingSchedule/event/type/list": {
      "get": {
        "tags": [
          "prices"
        ],
        "operationId": "get/prices/tradingSchedule/event/type/list",
        "x-supportsOffsetBasedPaging": false,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Trading schedule event types.",
        "description": "Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of trading schedule event types.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "code",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "x-positive": true,
                        "description": "Identifier of the type."
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the type."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the type in english language."
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    }
                  },
                  "x-property-sort": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/instrument/search/basic": {
      "get": {
        "tags": [
          "instrument"
        ],
        "operationId": "get/instrument/search/basic",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Basic search for instruments.",
        "description": "Search for instruments whose ISIN, specified NSINs, or name match the search value according to a tolerant full-text match algorithm. Better matching results appear in the response before less relevant matches.",
        "parameters": [
          {
            "name": "searchValue",
            "in": "query",
            "type": "string",
            "minLength": 3,
            "exclusiveMinimum": false,
            "maxLength": 200,
            "exclusiveMaximum": false,
            "pattern": "^[ -!#-&(-+--/0-:=?-Za-z\\w\"]*$",
            "required": true,
            "description": "The search value of the instruments searching for. It may be enclosed in double quotes (\"). No escaping is provided, therefore it is impossible to specify a search string containing double quotes. Relevance of word starts is indicated by a phrase starting with a space character, such as \" daimler\"."
          },
          {
            "name": "nsins",
            "in": "query",
            "description": "A set of NSIN kinds to consider in the search. If the parameter is absent or the value is empty, all valid NSIN kinds are searched.",
            "type": "array",
            "items": {
              "type": "string",
              "x-enum-description": [
                "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                "The SEDOL or IDII for the instrument; see entity class \"SEDOL or IDII\" for details."
              ],
              "enum": [
                "wkn",
                "valor",
                "cusip",
                "sedol"
              ]
            },
            "collectionFormat": "csv",
            "uniqueItems": true
          },
          {
            "name": "assetClass",
            "in": "query",
            "type": "string",
            "description": "A parameter to limit the output to a particular asset class.",
            "x-enum-description": [
              "An index is an instrument representing a statistical measure of changes in a group of data points. An index has a well-defined calculation method. An index may have index constituents, selected according to a well-defined set of rules.",
              "A stock, also known as stock certificate or share, represents the partitioned capital stock of a company. The capital stock of a company constitutes the equity stake of its owners.",
              "A fund is a supply of capital belonging to numerous investors that is used to collectively purchase securities while each investor retains ownership and control of his or her own shares.",
              "An exchange traded fund (ETF) is a security that tracks an index, a commodity or a basket of assets like an index fund, but trades like a stock on an exchange. ETFs experience price changes throughout the day as they are bought and sold.",
              "A debt instrument is an interest-bearing or interest-earning financial instrument, which is generally used for long-term debt financing and investment.",
              "An investment product is a securitized derivatives product which allows the investor to participate in the performance of the underlying financial instrument.",
              "A leveraged product is a securitized derivatives product which allows the investor to participate with a leverage in the performance of the underlying financial instrument.",
              "A currency cross rate is an exchange rate between two main currencies.",
              "A commodity is a marketable item produced to satisfy market requirements. Economic commodities comprise both goods and services.",
              "An option is a derivatives contract that represents a contract sold by one party (the option writer) to another party (the option holder). The contract offers the buyer the right, but not the obligation, to buy (call) or sell (put) a particular underlying asset at an agreed price (the strike price) on a specific exercise date (European-style option) or during a period of time up to that exercise date (American-style option).",
              "A future is a derivatives contract that represents a contractual agreement to buy or sell a particular underlying asset at a pre-determined price on a specific date in the future. A future contract details the quality and quantity of the underlying asset. Some future contracts may require a physical delivery of the asset, whereas others are settled in cash. In contrast to a forward (traded over-the-counter (OTC)), a future is a standardized derivative traded on a futures exchange.",
              "An interest rate is the rate at which interest is paid by borrowers for the use of money borrowed from a lender. Specifically, the interest rate is a percentage of the principal."
            ],
            "enum": [
              "index",
              "stock",
              "fund",
              "etf",
              "debt",
              "investmentProduct",
              "leveragedProduct",
              "currency",
              "commodity",
              "option",
              "future",
              "interestRate"
            ]
          },
          {
            "name": "onlyActive",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "If true, restricts the result to active instruments.",
            "default": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of instruments.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "name",
                      "isin",
                      "nsin",
                      "fsym",
                      "assetClass",
                      "type"
                    ],
                    "description": "The data member contains a list of the matching instruments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the instrument."
                      },
                      "name": {
                        "type": "string",
                        "description": "Asset class-unspecific name in English."
                      },
                      "isin": {
                        "type": "string",
                        "format": "isin",
                        "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument."
                      },
                      "nsin": {
                        "type": "object",
                        "x-property-sort": [
                          "wkn",
                          "valor",
                          "cusip",
                          "sedol"
                        ],
                        "description": "NSIN data of the instrument.",
                        "properties": {
                          "wkn": {
                            "type": "string",
                            "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                          },
                          "valor": {
                            "type": "string",
                            "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                          },
                          "cusip": {
                            "type": "string",
                            "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                          },
                          "sedol": {
                            "type": "string",
                            "description": "The SEDOL or IDII for the instrument."
                          }
                        }
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "security"
                        ],
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier"
                            ],
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                              }
                            }
                          }
                        }
                      },
                      "assetClass": {
                        "type": "string",
                        "description": "Name of the asset class of the instrument. Possible values are listed in the enumeration in the parameter description."
                      },
                      "type": {
                        "description": "Instrument type as defined by FactSet Digital Solutions. Instrument categories are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-property-sort": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "number",
                              "format": "id32",
                              "x-positive": true,
                              "description": "Identifier of the category."
                            },
                            "name": {
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/search/basic": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/search/basic",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Basic search for notations.",
        "description": "Search for a notation whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered. Better matching results appear in the response before less relevant matches. If the parameter popularity is set to true, the popularity of the notation is the primary sort criterion. Popularity is affected mostly by the request frequency of the notation.",
        "parameters": [
          {
            "name": "searchValue",
            "in": "query",
            "type": "string",
            "minLength": 3,
            "exclusiveMinimum": false,
            "maxLength": 200,
            "exclusiveMaximum": false,
            "pattern": "^[ -!#-&(-+--/0-:=?-Za-z\\w\"]*$",
            "required": true,
            "description": "Full-text search string. It may be enclosed in double quotes (\"). No escaping is provided, therefore it is impossible to specify a search string containing double quotes. Relevance of word starts is indicated by a phrase starting with a space character, such as \" daimler\"."
          },
          {
            "name": "nsins",
            "in": "query",
            "description": "A set of NSIN kinds to consider in the search. If the parameter is absent or the value is empty, all valid NSIN kinds are searched.",
            "type": "array",
            "items": {
              "type": "string",
              "x-enum-description": [
                "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                "The SEDOL or IDII for the notation; see entity class \"SEDOL or IDII\" for details."
              ],
              "enum": [
                "wkn",
                "valor",
                "cusip",
                "sedol"
              ]
            },
            "collectionFormat": "csv",
            "uniqueItems": true
          },
          {
            "name": "assetClass",
            "in": "query",
            "type": "string",
            "description": "A parameter to limit the output to a particular asset class.",
            "x-enum-description": [
              "An index is an instrument representing a statistical measure of changes in a group of data points. An index has a well-defined calculation method. An index may have index constituents, selected according to a well-defined set of rules.",
              "A stock, also known as stock certificate or share, represents the partitioned capital stock of a company. The capital stock of a company constitutes the equity stake of its owners.",
              "A fund is a supply of capital belonging to numerous investors that is used to collectively purchase securities while each investor retains ownership and control of his or her own shares.",
              "An exchange traded fund (ETF) is a security that tracks an index, a commodity or a basket of assets like an index fund, but trades like a stock on an exchange. ETFs experience price changes throughout the day as they are bought and sold.",
              "A debt instrument is an interest-bearing or interest-earning financial instrument, which is generally used for long-term debt financing and investment.",
              "An investment product is a securitized derivatives product which allows the investor to participate in the performance of the underlying financial instrument.",
              "A leveraged product is a securitized derivatives product which allows the investor to participate with a leverage in the performance of the underlying financial instrument.",
              "A currency cross rate is an exchange rate between two main currencies.",
              "A commodity is a marketable item produced to satisfy market requirements. Economic commodities comprise both goods and services.",
              "An option is a derivatives contract that represents a contract sold by one party (the option writer) to another party (the option holder). The contract offers the buyer the right, but not the obligation, to buy (call) or sell (put) a particular underlying asset at an agreed price (the strike price) on a specific exercise date (European-style option) or during a period of time up to that exercise date (American-style option).",
              "A future is a derivatives contract that represents a contractual agreement to buy or sell a particular underlying asset at a pre-determined price on a specific date in the future. A future contract details the quality and quantity of the underlying asset. Some future contracts may require a physical delivery of the asset, whereas others are settled in cash. In contrast to a forward (traded over-the-counter (OTC)), a future is a standardized derivative traded on a futures exchange.",
              "An interest rate is the rate at which interest is paid by borrowers for the use of money borrowed from a lender. Specifically, the interest rate is a percentage of the principal."
            ],
            "enum": [
              "index",
              "stock",
              "fund",
              "etf",
              "debt",
              "investmentProduct",
              "leveragedProduct",
              "currency",
              "commodity",
              "option",
              "future",
              "interestRate"
            ]
          },
          {
            "name": "onlyActive",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "If true, restricts the result to active notations.",
            "default": true
          },
          {
            "name": "popularity",
            "in": "query",
            "type": "boolean",
            "required": false,
            "default": false,
            "description": "If true, the results are sorted by descending popularity."
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "symbol",
                      "nsin",
                      "price",
                      "instrument"
                    ],
                    "description": "The data member contains a list of the matching notations.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of the notation."
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market."
                      },
                      "nsin": {
                        "type": "object",
                        "x-property-sort": [
                          "sedol"
                        ],
                        "description": "NSIN data of the notation.",
                        "properties": {
                          "sedol": {
                            "type": "string",
                            "description": "The SEDOL or IDII for the notation."
                          }
                        }
                      },
                      "price": {
                        "type": "object",
                        "x-property-sort": [
                          "value",
                          "time"
                        ],
                        "description": "Most recent trade or price of the trading day. See attribute `valueUnit` for its unit.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "Value of the latest price."
                          },
                          "time": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date and time of the most recent bid price of the trading day."
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "isin",
                          "nsin",
                          "assetClass",
                          "type"
                        ],
                        "description": "Instrument data of the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument of the notation."
                          },
                          "name": {
                            "type": "string",
                            "description": "Asset class-unspecific name in English."
                          },
                          "isin": {
                            "type": "string",
                            "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument."
                          },
                          "nsin": {
                            "type": "object",
                            "x-property-sort": [
                              "wkn",
                              "valor",
                              "cusip"
                            ],
                            "description": "NSIN data of the instrument.",
                            "properties": {
                              "wkn": {
                                "type": "string",
                                "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                              },
                              "valor": {
                                "type": "string",
                                "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                              },
                              "cusip": {
                                "type": "string",
                                "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                              }
                            }
                          },
                          "assetClass": {
                            "type": "string",
                            "description": "Name of the asset class of the instrument. Possible values are listed in the enumeration in the parameter description."
                          },
                          "type": {
                            "description": "Instrument type as defined by FactSet Digital Solutions. Instrument categories are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the category."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the category."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/searchByText": {
      "post": {
        "tags": [
          "notation"
        ],
        "operationId": "post/notation/searchByText",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 3,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Text-based search for notations.",
        "description": "Text-based search for notations in selected identifier and name attributes according to a tolerant full-text match algorithm. The results satisfy all selected filters; sorting by various attributes is possible. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered.     \n The result is limited to 10000 notations. All identifiers used as parameters must be valid and entitled.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-property-sort": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "x-property-sort": [
                    "text",
                    "validation",
                    "assetClasses",
                    "market",
                    "tradingValue"
                  ],
                  "description": "The data member contains the request's primary data.",
                  "properties": {
                    "text": {
                      "description": "Text-related parameters.",
                      "type": "object",
                      "x-property-sort": [
                        "attributes",
                        "value"
                      ],
                      "properties": {
                        "attributes": {
                          "description": "List of attributes to be searched in. The value `allEntitled` cannot appear with any other value.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "x-enum-description": [
                              "All entitled attributes are searched in.",
                              "International Securities Identification Number of the instrument.",
                              "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                              "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                              "The SEDOL or IDII for the notation; see entity class \"SEDOL or IDII\" for details.",
                              "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                              "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.",
                              "Long name of the instrument.",
                              "Short name of the instrument."
                            ],
                            "enum": [
                              "allEntitled",
                              "isin",
                              "wkn",
                              "valor",
                              "sedol",
                              "cusip",
                              "symbol",
                              "longName",
                              "shortName"
                            ]
                          },
                          "uniqueItems": true,
                          "maxItems": 7,
                          "default": "allEntitled"
                        },
                        "value": {
                          "type": "string",
                          "minLength": 2,
                          "exclusiveMinimum": false,
                          "maxLength": 50,
                          "exclusiveMaximum": false,
                          "pattern": "^[ -+--/0-:=?@\\p{L}]*$",
                          "description": "Full-text search string. It may be enclosed in double quotes (\"). No escaping is provided, therefore it is impossible to specify a search string containing double quotes. Relevance of word starts is indicated by a phrase starting with a space character, such as \" daimler\". If only two characters are submitted, the search is executed as an exact search."
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "validation": {
                      "description": "Validation parameters.",
                      "type": "object",
                      "x-property-sort": [
                        "onlyActive",
                        "prices",
                        "valueUnit",
                        "market"
                      ],
                      "properties": {
                        "onlyActive": {
                          "description": "If `true`, only active notations will be returned. The term \"active\" reflects the fact that notations and related data is not being deleted immediately after becoming irrelevant (e.g. because the source does not provide a price anymore), but remains in general retrievable for up to 6 months.",
                          "type": "boolean",
                          "default": true
                        },
                        "prices": {
                          "description": "Price-related parameters.",
                          "type": "object",
                          "x-property-sort": [
                            "quality",
                            "latest",
                            "previous"
                          ],
                          "properties": {
                            "quality": {
                              "type": "string",
                              "description": "Quality of the price.",
                              "default": "EOD",
                              "x-enum-description": [
                                "Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes.",
                                "End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days."
                              ],
                              "enum": [
                                "DLY",
                                "EOD"
                              ]
                            },
                            "latest": {
                              "description": "Parameters related to the presence and age of the most recent trade price.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price (even an outdated one) is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the most recent trade price.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            },
                            "previous": {
                              "description": "Parameters related to the presence and age of a trade price from a preceding trading day.",
                              "type": "object",
                              "x-property-sort": [
                                "availableOnly",
                                "minimumDate"
                              ],
                              "properties": {
                                "availableOnly": {
                                  "description": "If `true`, only notations for which a trade price from a preceding trading day is available will be returned.",
                                  "type": "boolean"
                                },
                                "minimumDate": {
                                  "description": "Earliest admissible date of the trade price from a preceding trading day.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          }
                        },
                        "valueUnit": {
                          "description": "Value unit-related parameters. See endpoint `/basic/valueUnit/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Value unit selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the value units a notation may have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the value units a notation may not have.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of value unit identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "market": {
                          "description": "Market-related notation selection. See endpoint `/basic/market/list` for valid values.",
                          "type": "object",
                          "x-property-sort": [
                            "selection",
                            "priority"
                          ],
                          "properties": {
                            "selection": {
                              "description": "Market selection.",
                              "type": "object",
                              "x-property-sort": [
                                "restrict",
                                "exclude"
                              ],
                              "x-atMostOne": true,
                              "properties": {
                                "restrict": {
                                  "description": "Specifies the markets from which a notation may originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                },
                                "exclude": {
                                  "description": "Specifies the markets from which a notation may not originate.",
                                  "type": "object",
                                  "x-property-sort": [
                                    "ids"
                                  ],
                                  "properties": {
                                    "ids": {
                                      "description": "Set of market identifiers.",
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "id32",
                                        "x-positive": true
                                      },
                                      "uniqueItems": true,
                                      "maxItems": 100
                                    }
                                  }
                                }
                              }
                            },
                            "priority": {
                              "description": "Sequence of markets specifying the priority order of the markets for the selection of one notation per instrument. If for a given instrument with two matching notations, A and B, the market of notation A precedes the market of notation B in this list or if the market of notation B is not in this list, A is selected. If neither of the markets is in this list, the notation with the highest trading volume, averaged over one month, is selected.        \n The list does not restrict the request to only those markets (use the parameter `market.selection` for that purpose).",
                              "type": "object",
                              "x-property-sort": [
                                "ids"
                              ],
                              "properties": {
                                "ids": {
                                  "description": "List of market identifiers.",
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "format": "id32",
                                    "x-positive": true
                                  },
                                  "uniqueItems": true,
                                  "maxItems": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assetClasses": {
                      "description": "Asset class restriction.",
                      "type": "object",
                      "x-property-sort": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "description": "Set of asset class identifiers. See endpoint `/basic/assetClass/list` for valid values.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "maximum": 12,
                            "exclusiveMaximum": false
                          },
                          "uniqueItems": true,
                          "maxItems": 100
                        }
                      }
                    },
                    "market": {
                      "description": "Market-related notation sorting.",
                      "type": "object",
                      "x-property-sort": [
                        "order"
                      ],
                      "properties": {
                        "order": {
                          "description": "Sequence of market identifiers specifying the first-order sort criterion for the resulting notation list; if the market of notation A precedes the market of notation B in this list, A precedes B in the result. Notations whose market is not in this list sort last. The second-order sorting of the result is given by the attribute `meta.sort`.     \n The list does not restrict the request to only those markets (use the parameter `market.selection` for that purpose) and does not specify the priority order of the markets for selecting one notation per instrument (use the parameter `market.priority` for that purpose).",
                          "type": "object",
                          "x-property-sort": [
                            "ids"
                          ],
                          "properties": {
                            "ids": {
                              "description": "List of market identifiers. See endpoint `/basic/market/list` for valid values.",
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true
                              },
                              "uniqueItems": true,
                              "maxItems": 100
                            }
                          }
                        }
                      }
                    },
                    "tradingValue": {
                      "description": "Parameter restricting the result to notations whose trading value is in a given range. The trading value is the sum of the cash flow for all transactions of a notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price.",
                      "type": "object",
                      "x-property-sort": [
                        "average"
                      ],
                      "properties": {
                        "average": {
                          "description": "Arithmetic mean of the trading value for different time ranges.",
                          "type": "object",
                          "x-property-sort": [
                            "days30"
                          ],
                          "properties": {
                            "days30": {
                              "description": "Value range for the time range 30 trading days.",
                              "type": "object",
                              "format": "realRange",
                              "properties": {
                                "minimum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The minimum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the minimum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                },
                                "maximum": {
                                  "type": "object",
                                  "x-property-sort": [
                                    "value",
                                    "inclusive"
                                  ],
                                  "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "real",
                                      "description": "The maximum value."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Indicates whether the maximum value is included in the range or not.",
                                      "default": true
                                    }
                                  },
                                  "required": [
                                    "value"
                                  ],
                                  "x-allowNullValue": true
                                }
                              },
                              "x-property-sort": [
                                "minimum",
                                "maximum"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the request.",
                  "properties": {
                    "attributes": {
                      "$ref": "#/definitions/AttributesMember"
                    },
                    "language": {
                      "$ref": "#/definitions/LanguageMember"
                    },
                    "sort": {
                      "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 3 (possibly prefixed) attribute name(s) is allowed.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "instrument.name.default.long",
                          "-instrument.name.default.long",
                          "instrument.name.default.short",
                          "-instrument.name.default.short",
                          "tradingValue.average.days30",
                          "-tradingValue.average.days30"
                        ]
                      },
                      "maxItems": 3,
                      "uniqueItems": true,
                      "default": [
                        "instrument.name.default.long"
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "description": "Pagination attributes for the offset-based pagination strategy.",
                      "properties": {
                        "offset": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "default": 0,
                          "description": "Non-negative number of entries to skip, or 0 (default)."
                        },
                        "limit": {
                          "type": "number",
                          "format": "int32",
                          "minimum": 0,
                          "exclusiveMinimum": false,
                          "maximum": 500,
                          "exclusiveMaximum": false,
                          "default": 20,
                          "description": "Non-negative maximum number of entries to return."
                        }
                      },
                      "x-property-sort": [
                        "offset",
                        "limit"
                      ]
                    }
                  },
                  "x-property-sort": [
                    "attributes",
                    "language",
                    "sort",
                    "pagination"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "List of matching and selected notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "valueUnit",
                      "market",
                      "symbol",
                      "nsin",
                      "fsym",
                      "instrument",
                      "tradingValue"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of a notation."
                      },
                      "valueUnit": {
                        "description": "Value unit of the notation such as a main or fractional currency for equities, a percentage for debt instruments, or points for indices. See endpoint `/basic/valueUnit/list` for possible values.",
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "code"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the value unit."
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units."
                          }
                        }
                      },
                      "market": {
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market."
                      },
                      "nsin": {
                        "type": "object",
                        "x-property-sort": [
                          "sedol"
                        ],
                        "description": "NSIN data of the notation.",
                        "properties": {
                          "sedol": {
                            "type": "string",
                            "description": "The SEDOL or IDII for the notation."
                          }
                        }
                      },
                      "fsym": {
                        "type": "object",
                        "x-property-sort": [
                          "listing",
                          "regional"
                        ],
                        "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "listing": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerExchange",
                              "isPrimary"
                            ],
                            "description": "Listing-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a notation. The format is six alpha numeric characters, excluding vowels, with an L suffix (XXXXXX-L)."
                              },
                              "tickerExchange": {
                                "type": "string",
                                "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`)."
                              }
                            }
                          },
                          "regional": {
                            "type": "object",
                            "x-property-sort": [
                              "permanentIdentifier",
                              "tickerRegion",
                              "isPrimary"
                            ],
                            "description": "Regional-level identifiers.",
                            "properties": {
                              "permanentIdentifier": {
                                "type": "string",
                                "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha numeric characters, excluding vowels, with an R suffix (XXXXXX-R)."
                              },
                              "tickerRegion": {
                                "type": "string",
                                "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE)."
                              },
                              "isPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`)."
                              }
                            }
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "isin",
                          "nsin",
                          "fsym",
                          "assetClass",
                          "type"
                        ],
                        "description": "Instrument data of the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          },
                          "name": {
                            "description": "Instrument names.",
                            "type": "object",
                            "x-property-sort": [
                              "default"
                            ],
                            "properties": {
                              "default": {
                                "description": "Default instrument names.",
                                "type": "object",
                                "x-property-sort": [
                                  "long",
                                  "short"
                                ],
                                "properties": {
                                  "long": {
                                    "x-sortable": true,
                                    "x-default-sort-attribute": true,
                                    "x-default-sort-direction": 1,
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Long name."
                                  },
                                  "short": {
                                    "x-sortable": true,
                                    "type": "string",
                                    "format": "localizedString",
                                    "description": "Short name."
                                  }
                                }
                              }
                            }
                          },
                          "isin": {
                            "type": "string",
                            "description": "International Securities Identification Number of the instrument."
                          },
                          "nsin": {
                            "type": "object",
                            "x-property-sort": [
                              "wkn",
                              "valor",
                              "cusip"
                            ],
                            "description": "NSIN data of the instrument.",
                            "properties": {
                              "wkn": {
                                "type": "string",
                                "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                              },
                              "valor": {
                                "type": "string",
                                "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                              },
                              "cusip": {
                                "type": "string",
                                "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                              }
                            }
                          },
                          "fsym": {
                            "type": "object",
                            "x-property-sort": [
                              "security"
                            ],
                            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                            "properties": {
                              "security": {
                                "type": "object",
                                "x-property-sort": [
                                  "permanentIdentifier"
                                ],
                                "description": "Security-level identifier.",
                                "properties": {
                                  "permanentIdentifier": {
                                    "type": "string",
                                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S)."
                                  }
                                }
                              }
                            }
                          },
                          "assetClass": {
                            "type": "object",
                            "x-property-sort": [
                              "id",
                              "name"
                            ],
                            "description": "Asset class of the instrument. See endpoint `/basic/assetClass/list` for possible values.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "format": "id32",
                                "x-positive": true,
                                "description": "Identifier of the asset class."
                              },
                              "name": {
                                "type": "string",
                                "description": "English name of the asset class."
                              }
                            }
                          },
                          "type": {
                            "description": "Instrument type as defined by FactSet Digital Solutions. Instrument categories are arranged in a hierarchy, with level 1 representing the most coarse granularity. See endpoint `/category/listBySystem` for category systems 18 for possible values.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the category."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the category."
                                }
                              }
                            }
                          }
                        }
                      },
                      "tradingValue": {
                        "description": "Sum of the cash flow for all transactions of a notation over a certain time range. The cash flow of a transaction is its volume multiplied by its trade price. See attribute `valueUnit` for its unit.       \nThe result list may contain notations with different value units, making sorting by trading value non-sensical; see parameter `valueUnit.selection`.",
                        "type": "object",
                        "x-property-sort": [
                          "average"
                        ],
                        "properties": {
                          "average": {
                            "description": "Arithmetic mean of the trading value for a given time range.",
                            "type": "object",
                            "x-property-sort": [
                              "days30"
                            ],
                            "properties": {
                              "days30": {
                                "x-sortable": true,
                                "type": "number",
                                "format": "real",
                                "description": "30 trading days."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notation/searchByTextRankedByVolume": {
      "get": {
        "tags": [
          "notation"
        ],
        "operationId": "get/notation/searchByTextRankedByVolume",
        "x-supportsOffsetBasedPaging": true,
        "x-supportsOffsetBasedPagingWithoutTotal": false,
        "x-supportsCursorBasedPaging": false,
        "x-supportsCursorBasedPagingWithoutTotal": false,
        "x-supportsPush": false,
        "x-requiresUser": false,
        "x-requiresInternalClient": false,
        "x-disallowUser": false,
        "x-no-merge": false,
        "x-maxSortParameterCount": 10,
        "x-supportsPermissionDeniedResponse": false,
        "summary": "Basic search for notations.",
        "description": "Search for notations whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered.",
        "parameters": [
          {
            "name": "searchValue",
            "in": "query",
            "type": "string",
            "minLength": 3,
            "exclusiveMinimum": false,
            "maxLength": 100,
            "exclusiveMaximum": false,
            "pattern": "^[ -!#-&(-+--/0-:=?-Za-z]*$",
            "required": true,
            "description": "Full-text search string. It may be enclosed in double quotes (\"). No escaping is provided, therefore it is impossible to specify a search string containing double quotes. Relevance of word starts is indicated by a phrase starting with a space character, such as \" daimler\"."
          },
          {
            "name": "idMarkets",
            "in": "query",
            "description": "List of market identifiers. Limits the results to the given markets. For possible values, see endpoint `/basic/market/list`.",
            "type": "array",
            "items": {
              "type": "number",
              "format": "id32",
              "x-positive": true
            },
            "collectionFormat": "csv",
            "uniqueItems": true,
            "maxItems": 100
          },
          {
            "name": "nsins",
            "in": "query",
            "description": "A set of NSIN kinds to consider in the search. If the parameter is absent or the value is empty, all valid NSIN kinds are searched.",
            "type": "array",
            "items": {
              "type": "string",
              "x-enum-description": [
                "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                "The SEDOL or IDII for the notation; see entity class \"SEDOL or IDII\" for details."
              ],
              "enum": [
                "wkn",
                "valor",
                "cusip",
                "sedol"
              ]
            },
            "collectionFormat": "csv",
            "uniqueItems": true
          },
          {
            "name": "assetClass",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "x-enum-description": [
                "An index is an instrument representing a statistical measure of changes in a group of data points. An index has a well-defined calculation method. An index may have index constituents, selected according to a well-defined set of rules.",
                "A stock, also known as stock certificate or share, represents the partitioned capital stock of a company. The capital stock of a company constitutes the equity stake of its owners.",
                "A fund is a supply of capital belonging to numerous investors that is used to collectively purchase securities while each investor retains ownership and control of his or her own shares.",
                "An exchange traded fund (ETF) is a security that tracks an index, a commodity or a basket of assets like an index fund, but trades like a stock on an exchange. ETFs experience price changes throughout the day as they are bought and sold.",
                "A debt instrument is an interest-bearing or interest-earning financial instrument, which is generally used for long-term debt financing and investment.",
                "An investment product is a securitized derivatives product which allows the investor to participate in the performance of the underlying financial instrument.",
                "A leveraged product is a securitized derivatives product which allows the investor to participate with a leverage in the performance of the underlying financial instrument.",
                "A currency cross rate is an exchange rate between two main currencies.",
                "A commodity is a marketable item produced to satisfy market requirements. Economic commodities comprise both goods and services.",
                "An option is a derivatives contract that represents a contract sold by one party (the option writer) to another party (the option holder). The contract offers the buyer the right, but not the obligation, to buy (call) or sell (put) a particular underlying asset at an agreed price (the strike price) on a specific exercise date (European-style option) or during a period of time up to that exercise date (American-style option).",
                "A future is a derivatives contract that represents a contractual agreement to buy or sell a particular underlying asset at a pre-determined price on a specific date in the future. A future contract details the quality and quantity of the underlying asset. Some future contracts may require a physical delivery of the asset, whereas others are settled in cash. In contrast to a forward (traded over-the-counter (OTC)), a future is a standardized derivative traded on a futures exchange.",
                "An interest rate is the rate at which interest is paid by borrowers for the use of money borrowed from a lender. Specifically, the interest rate is a percentage of the principal."
              ],
              "enum": [
                "index",
                "stock",
                "fund",
                "etf",
                "debt",
                "investmentProduct",
                "leveragedProduct",
                "currency",
                "commodity",
                "option",
                "future",
                "interestRate"
              ]
            },
            "collectionFormat": "csv",
            "description": "Limits the results to a particular asset class."
          },
          {
            "name": "onlyActive",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "If true, restricts the result to active notations.",
            "default": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "exclusiveMaximum": false
            },
            "uniqueItems": true,
            "maxItems": 50,
            "collectionFormat": "csv",
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "_language",
            "in": "query",
            "type": "string",
            "format": "isoLanguage",
            "description": "ISO 639-1 code of the language.",
            "maxLength": 2,
            "minLength": 2,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "default": 0,
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": false,
            "maximum": 500,
            "exclusiveMaximum": false,
            "default": 20,
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Set of basic data for a list of matching notations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-property-sort": [
                      "id",
                      "market",
                      "symbol",
                      "nsin",
                      "instrument"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "x-positive": true,
                        "description": "Identifier of a notation."
                      },
                      "market": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name"
                        ],
                        "description": "Market of the notation. See endpoint `/basic/market/list` for possible values.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "id32",
                            "x-positive": true,
                            "description": "Identifier of the market."
                          },
                          "name": {
                            "type": "string",
                            "format": "localizedString",
                            "description": "Name of the market."
                          }
                        }
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market."
                      },
                      "nsin": {
                        "type": "object",
                        "x-property-sort": [
                          "sedol"
                        ],
                        "description": "NSIN data of the notation.",
                        "properties": {
                          "sedol": {
                            "type": "string",
                            "description": "The SEDOL or IDII for the notation."
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "x-property-sort": [
                          "id",
                          "name",
                          "isin",
                          "nsin",
                          "assetClass",
                          "type"
                        ],
                        "description": "Instrument data of the notation.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "id64",
                            "x-positive": true,
                            "description": "Identifier of the instrument."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the instrument."
                          },
                          "isin": {
                            "type": "string",
                            "description": "International Securities Identification Number of the instrument."
                          },
                          "nsin": {
                            "type": "object",
                            "x-property-sort": [
                              "wkn",
                              "valor",
                              "cusip"
                            ],
                            "description": "NSIN data of the instrument.",
                            "properties": {
                              "wkn": {
                                "type": "string",
                                "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument."
                              },
                              "valor": {
                                "type": "string",
                                "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument."
                              },
                              "cusip": {
                                "type": "string",
                                "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument."
                              }
                            }
                          },
                          "assetClass": {
                            "type": "string",
                            "description": "Name of the asset class of the instrument. Possible values are listed in the enumeration in the parameter description."
                          },
                          "type": {
                            "description": "Instrument type as defined by FactSet Digital Solutions. Instrument categories are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-property-sort": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "format": "id32",
                                  "x-positive": true,
                                  "description": "Identifier of the category."
                                },
                                "name": {
                                  "type": "string",
                                  "format": "localizedString",
                                  "description": "Name of the category."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-partial": true
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/definitions/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/definitions/PartialOutputObject"
                    }
                  },
                  "x-property-sort": [
                    "status",
                    "pagination",
                    "partial"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Quotes API For Digital Portals",
    "description": "The quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.\n\nThe API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.\n\nThe Digital Portal use case is focused on high-performance applications that are\n\n* serving millions of end-users,\n* accessible by client browsers via the internet,\n* supporting subscriptions for streamed updates out-of-the-box,\n* typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers,\n* integrated into complex infrastructures such as existing frontend frameworks, authentication services.\n\nAll APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.\n\nSee the Time Series API for Digital Portals for direct access to price histories, and the News API for Digital Portals for searching and fetching related news.",
    "version": "2"
  },
  "x-interface-version": 1,
  "x-documenter-version": "5.38.1",
  "x-api-version": "3.1.0",
  "tags": [
    {
      "name": "basic",
      "description": "basic endpoints"
    },
    {
      "name": "category",
      "description": "category endpoints"
    },
    {
      "name": "instrument",
      "description": "instrument endpoints"
    },
    {
      "name": "notation",
      "description": "notation endpoints"
    },
    {
      "name": "prices",
      "description": "prices endpoints"
    }
  ],
  "responses": {
    "ErrorResponse": {
      "description": "Generic error response for all errors (400 ... 599 error codes)",
      "schema": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/definitions/ErrorMetaObject"
          },
          "errors": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMetaObject": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusObject"
        }
      }
    },
    "ErrorObject": {
      "type": "array",
      "description": "The errors member contains additional information about a failed request.",
      "items": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "A human-readable, unstructured explanation specific to this occurrence of the failure."
          },
          "encryptedDetails": {
            "type": "string",
            "description": "Base64-encoded, internal details about the error, in addition to \"details\"."
          },
          "type": {
            "type": "number",
            "format": "int32",
            "description": "Internal error type of the Foundation API protocol."
          },
          "attribute": {
            "type": "array",
            "description": "For a validation error, a reference to the request parameter that failed validation; otherwise, an empty array.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Element of the path denoting the request parameter."
                },
                "index": {
                  "type": "number",
                  "format": "int32",
                  "description": "If the attribute \"name\" designates an array, index of the array element; otherwise the special value -1."
                }
              },
              "x-property-sort": [
                "name",
                "index"
              ]
            }
          }
        },
        "x-property-sort": [
          "detail",
          "encryptedDetails",
          "type",
          "attribute"
        ]
      }
    },
    "AttributesMember": {
      "type": "array",
      "description": "Limit the attributes returned in the response to the specified set.",
      "items": {
        "type": "string",
        "maxLength": 100,
        "exclusiveMaximum": false
      },
      "maxItems": 50,
      "uniqueItems": true
    },
    "LanguageMember": {
      "type": "string",
      "format": "isoLanguage",
      "description": "ISO 639-1 code of the language.",
      "maxLength": 2,
      "minLength": 2,
      "exclusiveMinimum": false,
      "exclusiveMaximum": false
    },
    "StatusObject": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "format": "int32",
          "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1)."
        }
      },
      "description": "The status member contains the status code of the response.",
      "required": [
        "code"
      ]
    },
    "CursorBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of `total` is estimated."
        },
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal",
        "next",
        "previous"
      ]
    },
    "CursorBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
      "properties": {
        "next": {
          "type": "string",
          "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`."
        },
        "previous": {
          "type": "string",
          "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`."
        }
      },
      "required": [
        "next",
        "previous"
      ],
      "x-property-sort": [
        "next",
        "previous"
      ]
    },
    "OffsetBasedPaginationOutputObject": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy.",
      "properties": {
        "total": {
          "type": "number",
          "format": "int32",
          "description": "Total number of entries in the result set."
        },
        "isEstimatedTotal": {
          "type": "boolean",
          "description": "Flag indicating that the value of \"total\" is estimated."
        }
      },
      "required": [
        "total",
        "isEstimatedTotal"
      ],
      "x-property-sort": [
        "total",
        "isEstimatedTotal"
      ]
    },
    "OffsetBasedPaginationOutputObjectWithoutTotal": {
      "type": "object",
      "description": "Pagination attributes for the offset-based pagination strategy; a total element count is not supported.",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "Flag indicating that a subsequent request with the same parameters, except that the parameter `pagination.offset` is incremented by `pagination.limit`, would yield additional results."
        }
      },
      "required": [
        "hasNext"
      ],
      "x-property-sort": [
        "hasNext"
      ]
    },
    "PartialOutputObject": {
      "type": "object",
      "properties": {
        "isPartial": {
          "type": "boolean",
          "description": "Flag indicating that the response is a possibly incomplete array or an object containing a possibly incomplete array, due to hitting a processing time limit. If `true`, some matching results might be missing from the array, or elements for matching results might be incorrectly included (for example, when priority sorting would have removed the element). Depending on the use case, such a response may be unsuitable."
        }
      },
      "description": "Object denoting that the endpoint response is possibly incomplete.",
      "required": [
        "isPartial"
      ],
      "x-property-sort": [
        "isPartial"
      ]
    }
  },
  "basePath": "/wealth/v1",
  "securityDefinitions": {
    "FactSetApiKey": {
      "type": "basic"
    },
    "FactSetOAuth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.factset.com/as/token.oauth2",
      "scopes": {}
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ]
}